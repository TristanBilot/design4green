{"version":3,"file":"ej2-treegrid.umd.min.js","sources":["../src/treegrid/utils.js","../src/treegrid/actions/crud-actions.js","../src/treegrid/models/column.js","../src/treegrid/models/filter-settings.js","../src/treegrid/models/textwrap-settings.js","../src/treegrid/actions/logger.js","../src/treegrid/base/constant.js","../src/treegrid/actions/clipboard.js","../src/treegrid/actions/selection.js","../src/treegrid/actions/print.js","../src/treegrid/models/search-settings.js","../src/treegrid/models/selection-settings.js","../src/treegrid/renderer/render.js","../src/treegrid/base/data.js","../src/treegrid/enum.js","../src/treegrid/models/page-settings.js","../src/treegrid/models/summary.js","../src/treegrid/models/edit-settings.js","../src/treegrid/models/sort-settings.js","../src/treegrid/models/infinite-scroll-settings.js","../src/treegrid/base/treegrid.js","../src/treegrid/actions/reorder.js","../src/treegrid/actions/resize.js","../src/treegrid/actions/rowdragdrop.js","../src/treegrid/models/rowdrop-settings.js","../src/treegrid/renderer/virtual-row-model-generator.js","../src/treegrid/actions/filter.js","../src/treegrid/actions/excel-export.js","../src/treegrid/actions/pdf-export.js","../src/treegrid/actions/page.js","../src/treegrid/actions/toolbar.js","../src/treegrid/actions/summary.js","../src/treegrid/actions/sort.js","../src/treegrid/actions/column-menu.js","../src/treegrid/actions/context-menu.js","../src/treegrid/actions/batch-edit.js","../src/treegrid/actions/edit.js","../src/treegrid/actions/command-column.js","../src/treegrid/actions/detail-row.js","../src/treegrid/renderer/virtual-tree-content-render.js","../src/treegrid/actions/virtual-scroll.js","../src/treegrid/actions/freeze-column.js","../src/treegrid/actions/column-chooser.js","../src/treegrid/actions/infinite-scroll.js"],"sourcesContent":["import { getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, ODataAdaptor, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { WebApiAdaptor, WebMethodAdaptor, CacheAdaptor } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Specifies whether remote data binding\n */\nexport function isRemoteData(parent) {\n    if (parent.dataSource instanceof DataManager) {\n        var adaptor = parent.dataSource.adaptor;\n        return (adaptor instanceof ODataAdaptor ||\n            (adaptor instanceof WebApiAdaptor) || (adaptor instanceof WebMethodAdaptor) ||\n            (adaptor instanceof CacheAdaptor) || adaptor instanceof UrlAdaptor);\n    }\n    return false;\n}\n/**\n * @param {TreeGrid | IGrid} parent - Tree Grid or Grid instance\n * @returns {boolean} - Returns whether custom binding\n */\nexport function isCountRequired(parent) {\n    if (parent.dataSource && 'result' in parent.dataSource) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns whether checkbox column is enabled\n */\nexport function isCheckboxcolumn(parent) {\n    for (var i = 0; i < parent.columns.length; i++) {\n        if (parent.columns[i].showCheckbox) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns whether filtering and searching done\n */\nexport function isFilterChildHierarchy(parent) {\n    if ((!isNullOrUndefined(parent.grid.searchSettings.key) && parent.grid.searchSettings.key !== '' &&\n        (parent.searchSettings.hierarchyMode === 'Child' || parent.searchSettings.hierarchyMode === 'None')) ||\n        (parent.allowFiltering && parent.grid.filterSettings.columns.length &&\n            (parent.filterSettings.hierarchyMode === 'Child' || parent.filterSettings.hierarchyMode === 'None'))) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {Object} records - Define records for which parent records has to be found\n * @hidden\n * @returns {Object} - Returns parent records collection\n */\nexport function findParentRecords(records) {\n    var datas = [];\n    var recordsLength = Object.keys(records).length;\n    for (var i = 0, len = recordsLength; i < len; i++) {\n        var hasChild = getObject('hasChildRecords', records[i]);\n        if (hasChild) {\n            datas.push(records[i]);\n        }\n    }\n    return datas;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns the expand status of record\n * @param {ITreeData} record - Define the record for which expand status has be found\n * @param {ITreeData[]} parents - Parent Data collection\n * @hidden\n */\nexport function getExpandStatus(parent, record, parents) {\n    var parentRecord = isNullOrUndefined(record.parentItem) ? null :\n        getParentData(parent, record.parentItem.uniqueID);\n    var childParent;\n    if (parentRecord != null) {\n        if (parent.initialRender && !isNullOrUndefined(parentRecord[parent.expandStateMapping])\n            && !parentRecord[parent.expandStateMapping]) {\n            parentRecord.expanded = false;\n            return false;\n        }\n        else if (parentRecord.expanded === false) {\n            return false;\n        }\n        else if (parentRecord.parentItem) {\n            childParent = getParentData(parent, parentRecord.parentItem.uniqueID);\n            if (childParent && parent.initialRender && !isNullOrUndefined(childParent[parent.expandStateMapping])\n                && !childParent[parent.expandStateMapping]) {\n                childParent.expanded = false;\n                return false;\n            }\n            if (childParent && childParent.expanded === false) {\n                return false;\n            }\n            else if (childParent) {\n                return getExpandStatus(parent, childParent, parents);\n            }\n            return true;\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        return true;\n    }\n}\n/**\n * @param {ITreeData} records - Define the record for which child records has to be found\n * @returns {Object[]} - Returns child records collection\n * @hidden\n */\nexport function findChildrenRecords(records) {\n    var datas = [];\n    if (isNullOrUndefined(records) || (!records.hasChildRecords && !isNullOrUndefined(records.childRecords)\n        && !records.childRecords.length)) {\n        return [];\n    }\n    if (!isNullOrUndefined(records.childRecords)) {\n        var childRecords = records.childRecords;\n        for (var i = 0, len = Object.keys(childRecords).length; i < len; i++) {\n            datas.push(childRecords[i]);\n            if (childRecords[i].hasChildRecords || (!isNullOrUndefined(childRecords[i].childRecords) &&\n                childRecords[i].childRecords.length)) {\n                datas = datas.concat(findChildrenRecords(childRecords[i]));\n            }\n        }\n    }\n    return datas;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns whether local data binding\n */\nexport function isOffline(parent) {\n    if (isRemoteData(parent)) {\n        var dm = parent.dataSource;\n        return !isNullOrUndefined(dm.ready);\n    }\n    return true;\n}\n/**\n * @param {Object[]} array - Defines the array to be cloned\n * @returns {Object[]} - Returns cloned array collection\n */\nexport function extendArray(array) {\n    var objArr = [];\n    var obj;\n    var keys;\n    for (var i = 0; array && i < array.length; i++) {\n        keys = Object.keys(array[i]);\n        obj = {};\n        for (var j = 0; j < keys.length; j++) {\n            obj[keys[j]] = array[i][keys[j]];\n        }\n        objArr.push(obj);\n    }\n    return objArr;\n}\n/**\n * @param {ITreeData} value - Defined the dirty data to be cleaned\n * @returns {ITreeData} - Returns cleaned original data\n */\nexport function getPlainData(value) {\n    delete value.hasChildRecords;\n    delete value.childRecords;\n    delete value.index;\n    delete value.parentItem;\n    delete value.level;\n    delete value.taskData;\n    delete value.uniqueID;\n    return value;\n}\n/**\n * @param {TreeGrid} parent - TreeGrid instance\n * @param {string} value - IdMapping field name\n * @param {boolean} requireFilter - Specified whether treegrid data is filtered\n * @returns {ITreeData} - Returns IdMapping matched record\n */\nexport function getParentData(parent, value, requireFilter) {\n    if (requireFilter) {\n        var idFilter = 'uniqueIDFilterCollection';\n        return parent[idFilter][value];\n    }\n    else {\n        var id = 'uniqueIDCollection';\n        return parent[id][value];\n    }\n}\n/**\n * @param {HTMLTableRowElement} el - Row element\n * @returns {boolean} - Returns whether hidden\n */\nexport function isHidden(el) {\n    var style = window.getComputedStyle(el);\n    return ((style.display === 'none') || (style.visibility === 'hidden'));\n}\n","import { isNullOrUndefined, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { extendArray, getPlainData, getParentData } from '../utils';\n/**\n * Performs CRUD update to Tree Grid data source\n *\n * @param {{value: ITreeData, action: string }} details - Gets modified record value and CRUD action type\n * @param {TreeGrid} details.value - Gets modified record value\n * @param {string} details.action - CRUD action type\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Denotes whether Self Referential data binding\n * @param {number} addRowIndex - New add row index\n * @param {number} selectedIndex - Selected Row index\n * @param {string} columnName - Column field name\n * @param {ITreeData} addRowRecord - Newly added record\n * @returns {void}\n */\nexport function editAction(details, control, isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord) {\n    var value = details.value;\n    var action = details.action;\n    var changedRecords = 'changedRecords';\n    var i;\n    var j;\n    var addedRecords = 'addedRecords';\n    var batchChanges;\n    var key = control.grid.getPrimaryKeyFieldNames()[0];\n    var treeData = control.dataSource instanceof DataManager ?\n        control.dataSource.dataSource.json : control.dataSource;\n    var modifiedData = [];\n    var originalData = value;\n    var isSkip = false;\n    if (control.editSettings.mode === 'Batch') {\n        batchChanges = control.grid.editModule.getBatchChanges();\n    }\n    if (action === 'add' || (action === 'batchsave' && (control.editSettings.mode === 'Batch'\n        && batchChanges[addedRecords].length))) {\n        var addAct = addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord);\n        value = addAct.value;\n        isSkip = addAct.isSkip;\n    }\n    if (value instanceof Array) {\n        modifiedData = extendArray(value);\n    }\n    else {\n        modifiedData.push(extend({}, value));\n    }\n    if (!isSkip && (action !== 'add' ||\n        (control.editSettings.newRowPosition !== 'Top' && control.editSettings.newRowPosition !== 'Bottom'))) {\n        for (var k = 0; k < modifiedData.length; k++) {\n            if (typeof (modifiedData[k][key]) === 'object') {\n                modifiedData[k] = modifiedData[k][key];\n            }\n            var keys = modifiedData[k].taskData ? Object.keys(modifiedData[k].taskData) :\n                Object.keys(modifiedData[k]);\n            i = treeData.length;\n            var _loop_1 = function () {\n                if (treeData[i][key] === modifiedData[k][key]) {\n                    if (action === 'delete') {\n                        var currentData_1 = treeData[i];\n                        treeData.splice(i, 1);\n                        if (isSelfReference) {\n                            if (!isNullOrUndefined(currentData_1[control.parentIdMapping])) {\n                                var parentData = control.flatData.filter(function (e) {\n                                    return e[control.idMapping] === currentData_1[control.parentIdMapping];\n                                })[0];\n                                var childRecords = parentData ? parentData[control.childMapping] : [];\n                                for (var p = childRecords.length - 1; p >= 0; p--) {\n                                    if (childRecords[p][control.idMapping] === currentData_1[control.idMapping]) {\n                                        parentData['childRecords'].splice(p, 1);\n                                        childRecords.splice(p, 1);\n                                        if (!childRecords.length) {\n                                            parentData.hasChildRecords = false;\n                                            updateParentRow(key, parentData, action, control, isSelfReference);\n                                        }\n                                        break;\n                                    }\n                                }\n                            }\n                            return \"break\";\n                        }\n                    }\n                    else {\n                        if (action === 'edit') {\n                            for (j = 0; j < keys.length; j++) {\n                                if (Object.prototype.hasOwnProperty.call(treeData[i], keys[j]) && ((control.editSettings.mode !== 'Cell'\n                                    || (!isNullOrUndefined(batchChanges) && batchChanges[changedRecords].length === 0))\n                                    || keys[j] === columnName)) {\n                                    var editedData = getParentData(control, modifiedData[k].uniqueID);\n                                    treeData[i][keys[j]] = modifiedData[k][keys[j]];\n                                    if (editedData && editedData.taskData) {\n                                        editedData.taskData[keys[j]] = editedData[keys[j]] = treeData[i][keys[j]];\n                                    }\n                                }\n                            }\n                        }\n                        else if (action === 'add' || action === 'batchsave') {\n                            var index = void 0;\n                            if (control.editSettings.newRowPosition === 'Child') {\n                                if (isSelfReference) {\n                                    originalData.taskData[control.parentIdMapping] = treeData[i][control.idMapping];\n                                    treeData.splice(i + 1, 0, originalData.taskData);\n                                }\n                                else {\n                                    if (!Object.prototype.hasOwnProperty.call(treeData[i], control.childMapping)) {\n                                        treeData[i][control.childMapping] = [];\n                                    }\n                                    treeData[i][control.childMapping].push(originalData.taskData);\n                                    updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (control.editSettings.newRowPosition === 'Below') {\n                                treeData.splice(i + 1, 0, originalData.taskData);\n                                if (!isNullOrUndefined(originalData.parentItem)) {\n                                    updateParentRow(key, treeData[i + 1], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (!addRowIndex) {\n                                index = 0;\n                                treeData.splice(index, 0, originalData.taskData);\n                            }\n                            else if (control.editSettings.newRowPosition === 'Above') {\n                                treeData.splice(i, 0, originalData.taskData);\n                                if (!isNullOrUndefined(originalData.parentItem)) {\n                                    updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                                }\n                            }\n                        }\n                        return \"break\";\n                    }\n                }\n                else if (!isNullOrUndefined(treeData[i][control.childMapping])) {\n                    if (removeChildRecords(treeData[i][control.childMapping], modifiedData[k], action, key, control, isSelfReference, originalData, columnName)) {\n                        updateParentRow(key, treeData[i], action, control, isSelfReference);\n                    }\n                }\n            };\n            while (i-- && i >= 0) {\n                var state_1 = _loop_1();\n                if (state_1 === \"break\")\n                    break;\n            }\n        }\n    }\n}\n/**\n * Performs Add action to Tree Grid data source\n *\n * @param {{value: ITreeData, action: string }} details - Gets modified record value and CRUD action type\n * @param {TreeGrid} details.value - Gets modified record value\n * @param {string} details.action - CRUD action type\n * @param {Object[]} treeData - Tree Grid data source\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Denotes whether Self Referential data binding\n * @param {number} addRowIndex - New add row index\n * @param {number} selectedIndex - Selected Row index\n * @param {ITreeData} addRowRecord - Newly added record\n * @returns {void}\n */\nexport function addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord) {\n    var value;\n    var isSkip = false;\n    var currentViewRecords = control.grid.getCurrentViewRecords();\n    value = extend({}, details.value);\n    value = getPlainData(value);\n    switch (control.editSettings.newRowPosition) {\n        case 'Top':\n            treeData.unshift(value);\n            isSkip = true;\n            break;\n        case 'Bottom':\n            treeData.push(value);\n            isSkip = true;\n            break;\n        case 'Above':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                value = extend({}, currentViewRecords[addRowIndex + 1]);\n                value = getPlainData(value);\n            }\n            break;\n        case 'Below':\n        case 'Child':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n                var currentdata = currentViewRecords[addRowIndex];\n                if (!isNullOrUndefined(currentdata) && currentdata[primaryKeys] === details.value[primaryKeys] || selectedIndex !== -1) {\n                    value = extend({}, currentdata);\n                }\n                else {\n                    value = extend({}, details.value);\n                }\n                value = getPlainData(value);\n                var internalProperty = 'internalProperties';\n                control.editModule[internalProperty].taskData = value;\n            }\n            if (selectedIndex === -1) {\n                treeData.unshift(value);\n                isSkip = true;\n            }\n    }\n    return { value: value, isSkip: isSkip };\n}\n/**\n * @param {ITreeData[]} childRecords - Child Records collection\n * @param {Object} modifiedData - Modified data in crud action\n * @param {string} action - crud action type\n * @param {string} key - Primary key field name\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Specified whether Self Referential data binding\n * @param {ITreeData} originalData - Non updated data from data source, of edited data\n * @param {string} columnName - column field name\n * @returns {boolean} Returns whether child records exists\n */\nexport function removeChildRecords(childRecords, modifiedData, action, key, control, isSelfReference, originalData, columnName) {\n    var isChildAll = false;\n    var j = childRecords.length;\n    while (j-- && j >= 0) {\n        if (childRecords[j][key] === modifiedData[key] ||\n            (isSelfReference && childRecords[j][control.parentIdMapping] === modifiedData[control.idMapping])) {\n            if (action === 'edit') {\n                var keys = Object.keys(modifiedData);\n                var editedData = getParentData(control, modifiedData.uniqueID);\n                for (var i = 0; i < keys.length; i++) {\n                    if (Object.prototype.hasOwnProperty.call(childRecords[j], keys[i]) && (control.editSettings.mode !== 'Cell' || keys[i] === columnName)) {\n                        editedData[keys[i]] = editedData.taskData[keys[i]] = childRecords[j][keys[i]] = modifiedData[keys[i]];\n                        if (control.grid.editSettings.mode === 'Normal' && control.editSettings.mode === 'Cell') {\n                            var editModule = 'editModule';\n                            control.grid.editModule[editModule].editRowIndex = modifiedData.index;\n                            control.grid.editModule[editModule].updateCurrentViewData(modifiedData);\n                        }\n                    }\n                }\n                break;\n            }\n            else if (action === 'add' || action === 'batchsave') {\n                if (control.editSettings.newRowPosition === 'Child') {\n                    if (isSelfReference) {\n                        originalData[control.parentIdMapping] = childRecords[j][control.idMapping];\n                        childRecords.splice(j + 1, 0, originalData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                    else {\n                        if (!Object.prototype.hasOwnProperty.call(childRecords[j], control.childMapping)) {\n                            childRecords[j][control.childMapping] = [];\n                        }\n                        childRecords[j][control.childMapping].push(originalData.taskData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Above') {\n                    childRecords.splice(j, 0, originalData.taskData);\n                    if (!isNullOrUndefined(originalData.parentItem)) {\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Below') {\n                    childRecords.splice(j + 1, 0, originalData.taskData);\n                    if (!isNullOrUndefined(originalData.parentItem)) {\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                }\n            }\n            else {\n                childRecords.splice(j, 1);\n                if (!childRecords.length) {\n                    isChildAll = true;\n                }\n            }\n        }\n        else if (!isNullOrUndefined(childRecords[j][control.childMapping])) {\n            if (removeChildRecords(childRecords[j][control.childMapping], modifiedData, action, key, control, isSelfReference, originalData, columnName)) {\n                updateParentRow(key, childRecords[j], action, control, isSelfReference);\n            }\n        }\n    }\n    return isChildAll;\n}\n/**\n * @param {string} key - Primary key field name\n * @param {ITreeData} record - Parent Record which has to be updated\n * @param {string} action - CRUD action type\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Specified whether self referential data binding\n * @param {ITreeData} child - Specifies child record\n * @returns {void}\n */\nexport function updateParentRow(key, record, action, control, isSelfReference, child) {\n    if ((control.editSettings.newRowPosition === 'Above' || control.editSettings.newRowPosition === 'Below')\n        && ((action === 'add' || action === 'batchsave')) && !isNullOrUndefined(child.parentItem)) {\n        var parentData = getParentData(control, child.parentItem.uniqueID);\n        parentData.childRecords.push(child);\n    }\n    else {\n        var currentRecords = control.grid.getCurrentViewRecords();\n        var index_1;\n        currentRecords.map(function (e, i) { if (e[key] === record[key]) {\n            index_1 = i;\n            return;\n        } });\n        if (!isNullOrUndefined(index_1)) {\n            record = currentRecords[index_1];\n        }\n        if (control.enableVirtualization && isNullOrUndefined(record) && !isNullOrUndefined(child)) {\n            record = getValue('uniqueIDCollection.' + child.parentUniqueID, control);\n        }\n        if (!isSelfReference && !isNullOrUndefined(record.childRecords) && record.childRecords.length) {\n            record.hasChildRecords = true;\n        }\n        else {\n            record.hasChildRecords = false;\n        }\n        if (action === 'add' || action === 'batchsave') {\n            record.expanded = true;\n            record.hasChildRecords = true;\n            if (control.sortSettings.columns.length && isNullOrUndefined(child)) {\n                child = currentRecords.filter(function (e) {\n                    if (e.parentUniqueID === record.uniqueID) {\n                        return e;\n                    }\n                    else {\n                        return null;\n                    }\n                });\n            }\n            var childRecords = child ? child instanceof Array ? child[0] : child : currentRecords[index_1 + 1];\n            if (control.editSettings.newRowPosition !== 'Below') {\n                if (!Object.prototype.hasOwnProperty.call(record, 'childRecords')) {\n                    record.childRecords = [];\n                }\n                else {\n                    if (!isNullOrUndefined(child) && record[key] !== child[key]) {\n                        record.childRecords.push(child);\n                    }\n                }\n                if (record.childRecords.indexOf(childRecords) === -1 && record[key] !== child[key]) {\n                    record.childRecords.unshift(childRecords);\n                }\n                if (isSelfReference) {\n                    if (!Object.prototype.hasOwnProperty.call(record, control.childMapping)) {\n                        record[control.childMapping] = [];\n                    }\n                    if (record[control.childMapping].indexOf(childRecords) === -1 && record[key] !== child[key]) {\n                        record[control.childMapping].unshift(childRecords);\n                    }\n                }\n            }\n        }\n        var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n        var data = control.grid.dataSource instanceof DataManager ?\n            control.grid.dataSource.dataSource.json : control.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            if (data[i][primaryKeys] === record[primaryKeys]) {\n                data[i] = record;\n                break;\n            }\n        }\n        control.grid.setRowData(key, record);\n        var row = control.getRowByIndex(index_1);\n        if (control.editSettings.mode === 'Batch') {\n            row = control.getRows()[control.grid.getRowIndexByPrimaryKey(record[key])];\n        }\n        var movableRow = void 0;\n        if (control.frozenRows || control.getFrozenColumns()) {\n            movableRow = control.getMovableRowByIndex(index_1);\n        }\n        if (!control.enableVirtualization && !isNullOrUndefined(row) || !isNullOrUndefined(movableRow)) {\n            var index_2 = control.treeColumnIndex;\n            if (control.allowRowDragAndDrop && control.enableImmutableMode) {\n                index_2 = index_2 + 1;\n            }\n            control.renderModule.cellRender({\n                data: record, cell: row.cells[index_2] ? row.cells[index_2]\n                    : movableRow.cells[index_2 - control.getFrozenColumns()],\n                column: control.grid.getColumns()[control.treeColumnIndex],\n                requestType: action\n            });\n        }\n    }\n}\n","import { merge } from '@syncfusion/ej2-base';\n/**\n * Represents TreeGrid `Column` model class.\n */\nvar Column = /** @class */ (function () {\n    function Column(options) {\n        /**\n         * If `allowEditing` set to false, then it disables editing of a particular column.\n         * By default all columns are editable.\n         *\n         * @default true\n         */\n        this.allowEditing = true;\n        /**\n         * Defines the `IEditCell` object to customize default edit cell.\n         *\n         * @default {}\n         */\n        this.edit = {};\n        /**\n         * If `disableHtmlEncode` is set to true, it encodes the HTML of the header and content cells.\n         *\n         * @default true\n         */\n        this.disableHtmlEncode = true;\n        /**\n         * If `allowReordering` set to false, then it disables reorder of a particular column.\n         * By default all columns can be reorder.\n         *\n         * @default true\n         */\n        this.allowReordering = true;\n        /**\n         * If `showColumnMenu` set to false, then it disable the column menu of a particular column.\n         * By default column menu will show for all columns\n         *\n         * @default true\n         */\n        this.showColumnMenu = true;\n        /**\n         * If `allowFiltering` set to false, then it disables filtering option and filter bar element of a particular column.\n         * By default all columns are filterable.\n         *\n         * @default true\n         */\n        this.allowFiltering = true;\n        /**\n         * If `allowSorting` set to false, then it disables sorting option of a particular column.\n         * By default all columns are sortable.\n         *\n         * @default true\n         */\n        this.allowSorting = true;\n        /**\n         * If `allowResizing` is set to false, it disables resize option of a particular column.\n         * By default all the columns can be resized.\n         *\n         * @default true\n         */\n        this.allowResizing = true;\n        /**\n         *  It is used to customize the default filter options for a specific columns.\n         * * type -  Specifies the filter type as menu.\n         * * ui - to render custom component for specific column it has following functions.\n         * * ui.create – It is used for creating custom components.\n         * * ui.read -  It is used for read the value from the component.\n         * * ui.write - It is used to apply component model as dynamically.\n         *\n         *  @default null\n         */\n        this.filter = {};\n        merge(this, options);\n    }\n    return Column;\n}());\nexport { Column };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Collection, Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Represents the Tree Grid predicate for the filter column.\n */\nvar Predicate = /** @class */ (function (_super) {\n    __extends(Predicate, _super);\n    function Predicate() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"value\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"matchCase\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"predicate\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualFilterValue\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualOperator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ejpredicate\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"uid\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"isForeignKey\", void 0);\n    return Predicate;\n}(ChildProperty));\nexport { Predicate };\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property('Parent')\n    ], FilterSettings.prototype, \"hierarchyMode\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the textwrap behavior of the TreeGrid.\n */\nvar TextWrapSettings = /** @class */ (function (_super) {\n    __extends(TextWrapSettings, _super);\n    function TextWrapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Both')\n    ], TextWrapSettings.prototype, \"wrapMode\", void 0);\n    return TextWrapSettings;\n}(ChildProperty));\nexport { TextWrapSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Logger as GridLogger, Grid, detailLists } from '@syncfusion/ej2-grids';\n/**\n * Logger module for TreeGrid\n *\n * @hidden\n */\nvar DOC_URL = 'https://ej2.syncfusion.com/documentation/treegrid';\nvar BASE_DOC_URL = 'https://ej2.syncfusion.com/documentation';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nvar WARNING = '[EJ2TreeGrid.Warning]';\nvar ERROR = '[EJ2TreeGrid.Error]';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nvar INFO = '[EJ2TreeGrid.Info]';\nvar IsRowDDEnabled = false;\nvar Logger = /** @class */ (function (_super) {\n    __extends(Logger, _super);\n    function Logger(parent) {\n        var _this = this;\n        Grid.Inject(GridLogger);\n        _this = _super.call(this, parent) || this;\n        return _this;\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns Logger module name\n     */\n    Logger.prototype.getModuleName = function () {\n        return 'logger';\n    };\n    Logger.prototype.log = function (types, args) {\n        if (!(types instanceof Array)) {\n            types = [types];\n        }\n        var type = types;\n        for (var i = 0; i < type.length; i++) {\n            var item = detailLists[type[i]];\n            var cOp = item.check(args, this.parent);\n            if (cOp.success) {\n                var message = item.generateMessage(args, this.parent, cOp.options);\n                message = message.replace('EJ2Grid', 'EJ2TreeGrid').replace('* Hierarchy Grid', '').replace('* Grouping', '');\n                if (IsRowDDEnabled && type[i] === 'primary_column_missing') {\n                    message = message.replace('Editing', 'Row DragAndDrop');\n                    IsRowDDEnabled = false;\n                }\n                var index = message.indexOf('https');\n                var gridurl = message.substring(index);\n                if (type[i] === 'module_missing') {\n                    message = message.replace(gridurl, DOC_URL + '/modules');\n                }\n                else if (type[i] === 'primary_column_missing' || type[i] === 'selection_key_missing') {\n                    message = message.replace(gridurl, BASE_DOC_URL + '/api/treegrid/column/#isprimarykey');\n                }\n                else if (type[i] === 'grid_remote_edit') {\n                    message = message.replace(gridurl, DOC_URL + '/edit');\n                }\n                else if (type[i] === 'virtual_height') {\n                    message = message.replace(gridurl, DOC_URL + '/virtual');\n                }\n                else if (type[i] === 'check_datasource_columns') {\n                    message = message.replace(gridurl, DOC_URL + '/columns');\n                }\n                else if (type[i] === 'locale_missing') {\n                    message = message.replace(gridurl, DOC_URL + '/global-local/#localization');\n                }\n                if (type[i] === 'datasource_syntax_mismatch') {\n                    if (!isNullOrUndefined(this.treeGridObj) && !isNullOrUndefined(this.treeGridObj.dataStateChange)) {\n                        // eslint-disable-next-line no-console\n                        console[item.logType](message);\n                    }\n                }\n                else {\n                    // eslint-disable-next-line no-console\n                    console[item.logType](message);\n                }\n            }\n        }\n    };\n    Logger.prototype.treeLog = function (types, args, treeGrid) {\n        this.treeGridObj = treeGrid;\n        if (!(types instanceof Array)) {\n            types = [types];\n        }\n        var type = types;\n        if (treeGrid.allowRowDragAndDrop && !treeGrid.columns.filter(function (column) { return column.isPrimaryKey; }).length) {\n            IsRowDDEnabled = true;\n            this.log('primary_column_missing', args);\n        }\n        for (var i = 0; i < type.length; i++) {\n            var item = treeGridDetails[type[i]];\n            var cOp = item.check(args, treeGrid);\n            if (cOp.success) {\n                var message = item.generateMessage(args, treeGrid, cOp.options);\n                // eslint-disable-next-line no-console\n                console[item.logType](message);\n            }\n        }\n    };\n    return Logger;\n}(GridLogger));\nexport { Logger };\nexport var treeGridDetails = {\n    // eslint-disable-next-line camelcase\n    mapping_fields_missing: {\n        type: 'mapping_fields_missing',\n        logType: 'error',\n        check: function (args, parent) {\n            var opt = { success: false };\n            if ((isNullOrUndefined(parent.idMapping) && isNullOrUndefined(parent.childMapping)\n                && isNullOrUndefined(parent.parentIdMapping)) ||\n                (!isNullOrUndefined(parent.idMapping) && isNullOrUndefined(parent.parentIdMapping)) ||\n                (isNullOrUndefined(parent.idMapping) && !isNullOrUndefined(parent.parentIdMapping))) {\n                opt = { success: true };\n            }\n            return opt;\n        },\n        generateMessage: function () {\n            return ERROR + ':' + ' MAPPING FIELDS MISSING \\n' + 'One of the following fields is missing. It is ' +\n                'required for the hierarchical relationship of records in TreeGrid:\\n' +\n                '* childMapping\\n' + '* idMapping\\n' + '* parentIdMapping\\n' +\n                'Refer to the following documentation links for more details.\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#childmapping\") + '\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#idmapping\") + '\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#$parentidmapping\");\n        }\n    }\n};\n","/**\n *  @hidden\n */\nexport var load = 'load';\n/** @hidden */\nexport var rowDataBound = 'rowDataBound';\n/** @hidden */\nexport var dataBound = 'dataBound';\n/** @hidden */\nexport var queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport var beforeDataBound = 'beforeDataBound';\n/** @hidden */\nexport var actionBegin = 'actionBegin';\n/** @hidden */\nexport var dataStateChange = 'dataStateChange';\n/** @hidden */\nexport var actionComplete = 'actionComplete';\n/** @hidden */\nexport var rowSelecting = 'rowSelecting';\n/** @hidden */\nexport var rowSelected = 'rowSelected';\n/** @hidden */\nexport var checkboxChange = 'checkboxChange';\n/** @hidden */\nexport var rowDeselected = 'rowDeselected';\n/** @hidden */\nexport var toolbarClick = 'toolbarClick';\n/** @hidden */\nexport var beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport var beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport var resizeStop = 'resizeStop';\n/** @hidden */\nexport var expanded = 'expanded';\n/** @hidden */\nexport var expanding = 'expanding';\n/** @hidden */\nexport var collapsed = 'collapsed';\n/** @hidden */\nexport var collapsing = 'collapsing';\n/** @hidden */\nexport var remoteExpand = 'remoteExpand';\n/** @hidden */\nexport var localPagedExpandCollapse = 'localPagedExpandCollapse';\n/** @hidden */\nexport var pagingActions = 'pagingActions';\n/** @hidden */\nexport var printGridInit = 'printGrid-Init';\n/** @hidden */\nexport var contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport var contextMenuClick = 'contextMenuClick';\n/** @hidden */\nexport var beforeCopy = 'beforeCopy';\n/** @hidden */\nexport var beforePaste = 'beforePaste';\n/** @hidden */\nexport var savePreviousRowPosition = 'savePreviousRowPosition';\n/** @hidden */\nexport var crudAction = 'crudAction';\n/** @hidden */\nexport var beginEdit = 'beginEdit';\n/** @hidden */\nexport var beginAdd = 'beginAdd';\n/** @hidden */\nexport var recordDoubleClick = 'recordDoubleClick';\n/** @hidden */\nexport var cellSave = 'cellSave';\n/** @hidden */\nexport var cellSaved = 'cellSaved';\n/** @hidden */\nexport var cellEdit = 'cellEdit';\n/** @hidden */\nexport var batchDelete = 'batchDelete';\n/** @hidden */\nexport var batchCancel = 'batchCancel';\n/** @hidden */\nexport var batchAdd = 'batchAdd';\n/** @hidden */\nexport var beforeBatchDelete = 'beforeBatchDelete';\n/** @hidden */\nexport var beforeBatchAdd = 'beforeBatchAdd';\n/** @hidden */\nexport var beforeBatchSave = 'beforeBatchSave';\n/** @hidden */\nexport var batchSave = 'batchSave';\n/** @hidden */\nexport var keyPressed = 'key-pressed';\n/** @hidden */\nexport var updateData = 'update-data';\n/** @hidden */\nexport var doubleTap = 'double-tap';\n/** @hidden */\nexport var virtualColumnIndex = 'virtualColumnIndex';\n/** @hidden */\nexport var virtualActionArgs = 'virtual-action-args';\n/** @hidden */\nexport var destroy = 'destroy';\n/** @hidden */\nexport var dataListener = 'data-listener';\n/** @hidden */\nexport var indexModifier = 'index-modifier';\n/** @hidden */\nexport var beforeStartEdit = 'edit-form';\n/** @hidden */\nexport var beforeBatchCancel = 'before-batch-cancel';\n/** @hidden */\nexport var batchEditFormRendered = 'batcheditform-rendered';\n/** @hidden */\nexport var detailDataBound = 'detailDataBound';\n/** @hidden */\nexport var rowDrag = 'rowDrag';\n/** @hidden */\nexport var rowDragStartHelper = 'rowDragStartHelper';\n/** @hidden */\nexport var rowDrop = 'rowDrop';\n/** @hidden */\nexport var rowDragStart = 'rowDragStart';\n/** @hidden */\nexport var rowsAdd = 'rows-add';\n/** @hidden */\nexport var rowsRemove = 'rows-remove';\n/** @hidden */\nexport var rowdraging = 'row-draging';\n/** @hidden */\nexport var rowDropped = 'row-dropped';\n/** @hidden */\nexport var autoCol = 'auto-col';\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { Clipboard as GridClipboard } from '@syncfusion/ej2-grids';\n/**\n * The `Clipboard` module is used to handle clipboard copy action.\n *\n * @hidden\n */\nvar TreeClipboard = /** @class */ (function (_super) {\n    __extends(TreeClipboard, _super);\n    function TreeClipboard(parent) {\n        var _this = _super.call(this, parent.grid) || this;\n        _this.treeCopyContent = '';\n        _this.copiedUniqueIdCollection = [];\n        _this.treeGridParent = parent;\n        return _this;\n    }\n    TreeClipboard.prototype.setCopyData = function (withHeader) {\n        var copyContent = 'copyContent';\n        var getCopyData = 'getCopyData';\n        var isSelect = 'isSelect';\n        var uniqueID = 'uniqueID';\n        var currentRecords = this.treeGridParent.getCurrentViewRecords();\n        if (window.getSelection().toString() === '') {\n            this.clipBoardTextArea.value = this[copyContent] = '';\n            var rows = this.treeGridParent.grid.getRows();\n            if (this.treeGridParent.selectionSettings.mode !== 'Cell') {\n                var selectedIndexes = this.treeGridParent.getSelectedRowIndexes().sort(function (a, b) {\n                    return a - b;\n                });\n                for (var i = 0; i < selectedIndexes.length; i++) {\n                    if (i > 0) {\n                        this.treeCopyContent += '\\n';\n                    }\n                    if (!rows[selectedIndexes[i]].classList.contains('e-summaryrow')) {\n                        var cells = [].slice.call(rows[selectedIndexes[i]].querySelectorAll('.e-rowcell'));\n                        var uniqueid = this.treeGridParent.getSelectedRecords()[i][uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            if (this.treeGridParent.copyHierarchyMode === 'Parent' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.parentContentData(currentRecords, selectedIndexes[i], rows, withHeader, i);\n                            }\n                            this[getCopyData](cells, false, '\\t', withHeader);\n                            this.treeCopyContent += this[copyContent];\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[copyContent] = '';\n                            if (this.treeGridParent.copyHierarchyMode === 'Child' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.childContentData(currentRecords, selectedIndexes[i], rows, withHeader);\n                            }\n                        }\n                    }\n                }\n                if (withHeader) {\n                    var headerTextArray = [];\n                    for (var i = 0; i < this.treeGridParent.getVisibleColumns().length; i++) {\n                        headerTextArray[i] = this.treeGridParent.getVisibleColumns()[i].headerText;\n                    }\n                    this[getCopyData](headerTextArray, false, '\\t', withHeader);\n                    this.treeCopyContent = this[copyContent] + '\\n' + this.treeCopyContent;\n                }\n                var args = {\n                    data: this.treeCopyContent,\n                    cancel: false\n                };\n                this.treeGridParent.trigger(events.beforeCopy, args);\n                if (args.cancel) {\n                    return;\n                }\n                this.clipBoardTextArea.value = this[copyContent] = args.data;\n                if (!Browser.userAgent.match(/ipad|ipod|iphone/i)) {\n                    this.clipBoardTextArea.select();\n                }\n                else {\n                    this.clipBoardTextArea.setSelectionRange(0, this.clipBoardTextArea.value.length);\n                }\n                this[isSelect] = true;\n                this.copiedUniqueIdCollection = [];\n                this.treeCopyContent = '';\n            }\n            else {\n                _super.prototype.setCopyData.call(this, withHeader);\n            }\n        }\n    };\n    TreeClipboard.prototype.parentContentData = function (currentRecords, selectedIndex, rows, withHeader, index) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var parentItem = 'parentItem';\n        var uniqueID = 'uniqueID';\n        var level = 'level';\n        if (!isNullOrUndefined(currentRecords[selectedIndex][parentItem])) {\n            var treeLevel = currentRecords[selectedIndex][parentItem][level];\n            for (var i = 0; i < treeLevel + 1; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(currentRecords[selectedIndex][parentItem]) &&\n                        currentRecords[j][uniqueID] === currentRecords[selectedIndex][parentItem][uniqueID]) {\n                        selectedIndex = j;\n                        var cells = [].slice.call(rows[selectedIndex].querySelectorAll('.e-rowcell'));\n                        var uniqueid = currentRecords[j][uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            this[getCopyData](cells, false, '\\t', withHeader);\n                            if (index > 0) {\n                                this.treeCopyContent = this.treeCopyContent + this[copyContent] + '\\n';\n                            }\n                            else {\n                                this.treeCopyContent = this[copyContent] + '\\n' + this.treeCopyContent;\n                            }\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[copyContent] = '';\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    TreeClipboard.prototype.copy = function (withHeader) {\n        _super.prototype.copy.call(this, withHeader);\n    };\n    TreeClipboard.prototype.paste = function (data, rowIndex, colIndex) {\n        _super.prototype.paste.call(this, data, rowIndex, colIndex);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns clipboard module name\n     */\n    TreeClipboard.prototype.getModuleName = function () {\n        return 'clipboard';\n    };\n    /**\n     * To destroy the clipboard\n     *\n     * @returns {void}\n     * @hidden\n     */\n    TreeClipboard.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n    };\n    TreeClipboard.prototype.childContentData = function (currentRecords, selectedIndex, rows, withHeader) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var childRecords = 'childRecords';\n        var hasChildRecords = 'hasChildRecords';\n        var uniqueID = 'uniqueID';\n        if (currentRecords[selectedIndex][hasChildRecords]) {\n            var childData = currentRecords[selectedIndex][childRecords];\n            for (var i = 0; i < childData.length; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(childData[i][uniqueID]) && currentRecords[j][uniqueID] === childData[i][uniqueID]) {\n                        if ((!isNullOrUndefined(rows[j])) && !rows[j].classList.contains('e-summaryrow')) {\n                            var cells = [].slice.call(rows[j].querySelectorAll('.e-rowcell'));\n                            var uniqueid = currentRecords[j][uniqueID];\n                            if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                                this[getCopyData](cells, false, '\\t', withHeader);\n                                this.treeCopyContent += ('\\n' + this[copyContent]);\n                                this[copyContent] = '';\n                                this.copiedUniqueIdCollection.push(uniqueid);\n                                this.childContentData(currentRecords, j, rows, withHeader);\n                            }\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    return TreeClipboard;\n}(GridClipboard));\nexport { TreeClipboard };\n","import { isNullOrUndefined, removeClass } from '@syncfusion/ej2-base';\nimport { createCheckBox } from '@syncfusion/ej2-buttons';\nimport { parentsUntil, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { getParentData, isRemoteData, isCheckboxcolumn, findChildrenRecords } from '../utils';\n/**\n * TreeGrid Selection module\n *\n * @hidden\n */\nvar Selection = /** @class */ (function () {\n    /**\n     * Constructor for Selection module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Selection(parent) {\n        this.parent = parent;\n        this.selectedItems = [];\n        this.selectedIndexes = [];\n        this.filteredList = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Selection module name\n     */\n    Selection.prototype.getModuleName = function () {\n        return 'selection';\n    };\n    Selection.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.headerCheckbox, this);\n        this.parent.on('columnCheckbox', this.columnCheckbox, this);\n        this.parent.on('updateGridActions', this.updateGridActions, this);\n        this.parent.grid.on('colgroup-refresh', this.headerCheckbox, this);\n        this.parent.on('checkboxSelection', this.checkboxSelection, this);\n    };\n    Selection.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.headerCheckbox);\n        this.parent.off('columnCheckbox', this.columnCheckbox);\n        this.parent.grid.off('colgroup-refresh', this.headerCheckbox);\n        this.parent.off('checkboxSelection', this.checkboxSelection);\n        this.parent.off('updateGridActions', this.updateGridActions);\n    };\n    /**\n     * To destroy the Selection\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Selection.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Selection.prototype.checkboxSelection = function (args) {\n        var target = getObject('target', args);\n        var checkWrap = parentsUntil(target, 'e-checkbox-wrapper');\n        var checkBox;\n        if (checkWrap && checkWrap.querySelectorAll('.e-treecheckselect').length > 0) {\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            var rowIndex = [];\n            rowIndex.push(target.closest('tr').rowIndex);\n            this.selectCheckboxes(rowIndex);\n            this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'), target.closest('tr'));\n        }\n        else if (checkWrap && checkWrap.querySelectorAll('.e-treeselectall').length > 0 && this.parent.autoCheckHierarchy) {\n            var checkBoxvalue = !checkWrap.querySelector('.e-frame').classList.contains('e-check')\n                && !checkWrap.querySelector('.e-frame').classList.contains('e-stop');\n            this.headerSelection(checkBoxvalue);\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            this.triggerChkChangeEvent(checkBox, checkBoxvalue, target.closest('tr'));\n        }\n    };\n    Selection.prototype.triggerChkChangeEvent = function (checkBox, checkState, rowElement) {\n        var data = this.parent.getCurrentViewRecords()[rowElement.rowIndex];\n        var args = { checked: checkState, target: checkBox, rowElement: rowElement,\n            rowData: checkBox.classList.contains('e-treeselectall')\n                ? this.parent.getCheckedRecords() : data };\n        this.parent.trigger(events.checkboxChange, args);\n    };\n    Selection.prototype.getCheckboxcolumnIndex = function () {\n        var mappingUid;\n        var columnIndex;\n        var columns = (this.parent.columns);\n        for (var col = 0; col < columns.length; col++) {\n            if (columns[col].showCheckbox) {\n                mappingUid = this.parent.columns[col].uid;\n            }\n        }\n        var headerCelllength = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv').length;\n        for (var j = 0; j < headerCelllength; j++) {\n            var headercell = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[j];\n            if (headercell.getAttribute('e-mappinguid') === mappingUid) {\n                columnIndex = j;\n            }\n        }\n        return columnIndex;\n    };\n    Selection.prototype.headerCheckbox = function () {\n        this.columnIndex = this.getCheckboxcolumnIndex();\n        if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length === 0) {\n            var headerElement = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[this.columnIndex];\n            var value = false;\n            var rowChkBox = this.parent.createElement('input', { className: 'e-treeselectall', attrs: { 'type': 'checkbox' } });\n            var checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n            checkWrap.classList.add('e-hierarchycheckbox');\n            checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n            if (!isNullOrUndefined(headerElement)) {\n                headerElement.insertBefore(checkWrap, headerElement.firstChild);\n            }\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n        else if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length > 0) {\n            var checkWrap = this.parent.getHeaderContent().querySelectorAll('.e-checkbox-wrapper')[0];\n            var checkBoxvalue = checkWrap.querySelector('.e-frame').classList.contains('e-check');\n            if (this.parent.autoCheckHierarchy && checkBoxvalue) {\n                this.headerSelection(checkBoxvalue);\n            }\n        }\n    };\n    Selection.prototype.renderColumnCheckbox = function (args) {\n        var rowChkBox = this.parent.createElement('input', { className: 'e-treecheckselect', attrs: { 'type': 'checkbox' } });\n        var data = args.data;\n        args.cell.classList.add('e-treegridcheckbox');\n        args.cell.setAttribute('aria-label', 'checkbox');\n        var value = (isNullOrUndefined(data.checkboxState) || data.checkboxState === 'uncheck') ? false : true;\n        var checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n        checkWrap.classList.add('e-hierarchycheckbox');\n        if (this.parent.allowTextWrap) {\n            checkWrap.querySelector('.e-frame').style.width = '18px';\n        }\n        if (data.checkboxState === 'indeterminate') {\n            var checkbox = checkWrap.querySelectorAll('.e-frame')[0];\n            removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            checkWrap.querySelector('.e-frame').classList.add('e-stop');\n        }\n        checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n        return checkWrap;\n    };\n    Selection.prototype.columnCheckbox = function (container) {\n        var checkWrap = this.renderColumnCheckbox(container);\n        var containerELe = container.cell.querySelector('.e-treecolumn-container');\n        if (!isNullOrUndefined(containerELe)) {\n            if (!container.cell.querySelector('.e-hierarchycheckbox')) {\n                containerELe.insertBefore(checkWrap, containerELe.querySelectorAll('.e-treecell')[0]);\n            }\n        }\n        else {\n            var spanEle = this.parent.createElement('span', { className: 'e-treecheckbox' });\n            var data = container.cell.innerHTML;\n            container.cell.innerHTML = '';\n            spanEle.innerHTML = data;\n            var divEle = this.parent.createElement('div', { className: 'e-treecheckbox-container' });\n            divEle.appendChild(checkWrap);\n            divEle.appendChild(spanEle);\n            container.cell.appendChild(divEle);\n        }\n    };\n    Selection.prototype.selectCheckboxes = function (rowIndexes) {\n        for (var i = 0; i < rowIndexes.length; i++) {\n            var record = this.parent.getCurrentViewRecords()[rowIndexes[i]];\n            var flatRecord = getParentData(this.parent, record.uniqueID);\n            record = flatRecord;\n            var checkboxState = (record.checkboxState === 'uncheck') ? 'check' : 'uncheck';\n            record.checkboxState = checkboxState;\n            var keys = Object.keys(record);\n            for (var j = 0; j < keys.length; j++) {\n                if (Object.prototype.hasOwnProperty.call(flatRecord, keys[j])) {\n                    flatRecord[keys[j]] = record[keys[j]];\n                }\n            }\n            this.traverSelection(record, checkboxState, false);\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.traverSelection = function (record, checkboxState, ischildItem) {\n        var length = 0;\n        this.updateSelectedItems(record, checkboxState);\n        if (!ischildItem && record.parentItem && this.parent.autoCheckHierarchy) {\n            this.updateParentSelection(record.parentItem);\n        }\n        if (record.childRecords && this.parent.autoCheckHierarchy) {\n            var childRecords = record.childRecords;\n            if (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n                childRecords = this.getFilteredChildRecords(childRecords);\n            }\n            length = childRecords.length;\n            for (var count = 0; count < length; count++) {\n                if (!childRecords[count].isSummaryRow) {\n                    if (childRecords[count].hasChildRecords) {\n                        this.traverSelection(childRecords[count], checkboxState, true);\n                    }\n                    else {\n                        this.updateSelectedItems(childRecords[count], checkboxState);\n                    }\n                }\n            }\n        }\n    };\n    Selection.prototype.getFilteredChildRecords = function (childRecords) {\n        var _this = this;\n        var filteredChildRecords = childRecords.filter(function (e) {\n            return _this.parent.filterModule.filteredResult.indexOf(e) > -1;\n        });\n        return filteredChildRecords;\n    };\n    Selection.prototype.updateParentSelection = function (parentRecord) {\n        var length = 0;\n        var childRecords = [];\n        var record = getParentData(this.parent, parentRecord.uniqueID);\n        if (record && record.childRecords) {\n            childRecords = record.childRecords;\n        }\n        if (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n            childRecords = this.getFilteredChildRecords(childRecords);\n        }\n        length = childRecords && childRecords.length;\n        var indeter = 0;\n        var checkChildRecords = 0;\n        if (!isNullOrUndefined(record)) {\n            for (var i = 0; i < childRecords.length; i++) {\n                var currentRecord = getParentData(this.parent, childRecords[i].uniqueID);\n                var checkBoxRecord = currentRecord;\n                if (!isNullOrUndefined(checkBoxRecord)) {\n                    if (checkBoxRecord.checkboxState === 'indeterminate') {\n                        indeter++;\n                    }\n                    else if (checkBoxRecord.checkboxState === 'check') {\n                        checkChildRecords++;\n                    }\n                }\n            }\n            if (indeter > 0 || (checkChildRecords > 0 && checkChildRecords !== length)) {\n                record.checkboxState = 'indeterminate';\n            }\n            else if (checkChildRecords === 0 && indeter === 0) {\n                record.checkboxState = 'uncheck';\n            }\n            else {\n                record.checkboxState = 'check';\n            }\n            this.updateSelectedItems(record, record.checkboxState);\n            if (record.parentItem) {\n                this.updateParentSelection(record.parentItem);\n            }\n        }\n    };\n    Selection.prototype.headerSelection = function (checkAll) {\n        var _this = this;\n        var index = -1;\n        var length = 0;\n        if (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0) {\n            var filterResult = this.parent.filterModule.filteredResult;\n            if (this.filteredList.length === 0) {\n                this.filteredList = filterResult;\n            }\n            else {\n                if (this.filteredList !== filterResult) {\n                    this.filteredList = filterResult;\n                }\n            }\n        }\n        if (this.filteredList.length > 0) {\n            if (!this.parent.filterSettings.columns.length && this.filteredList.length) {\n                this.filteredList = [];\n            }\n        }\n        var data = (!isNullOrUndefined(this.parent.filterModule) &&\n            (this.filteredList.length > 0)) ? this.filteredList :\n            this.parent.flatData;\n        data = isRemoteData(this.parent) ? this.parent.getCurrentViewRecords() : data;\n        if (!isNullOrUndefined(checkAll)) {\n            for (var i = 0; i < data.length; i++) {\n                if (checkAll) {\n                    if (data[i].checkboxState === 'check') {\n                        continue;\n                    }\n                    data[i].checkboxState = 'check';\n                    this.updateSelectedItems(data[i], data[i].checkboxState);\n                }\n                else {\n                    index = this.selectedItems.indexOf(data[i]);\n                    if (index > -1) {\n                        data[i].checkboxState = 'uncheck';\n                        this.updateSelectedItems(data[i], data[i].checkboxState);\n                        if (this.parent.autoCheckHierarchy) {\n                            this.updateParentSelection(data[i]);\n                        }\n                    }\n                }\n            }\n        }\n        if (checkAll === false && this.parent.enableVirtualization) {\n            this.selectedItems = [];\n            this.selectedIndexes = [];\n            data.filter(function (rec) {\n                rec.checkboxState = 'uncheck';\n                _this.updateSelectedItems(rec, rec.checkboxState);\n            });\n        }\n        length = this.selectedItems.length;\n        var checkbox = this.parent.getHeaderContent().querySelectorAll('.e-frame')[0];\n        if (length > 0 && data.length > 0) {\n            if (length !== data.length && !checkAll) {\n                removeClass([checkbox], ['e-check']);\n                checkbox.classList.add('e-stop');\n            }\n            else {\n                removeClass([checkbox], ['e-stop']);\n                checkbox.classList.add('e-check');\n            }\n        }\n        else {\n            removeClass([checkbox], ['e-check', 'e-stop']);\n        }\n    };\n    Selection.prototype.updateSelectedItems = function (currentRecord, checkState) {\n        var record = this.parent.getCurrentViewRecords().filter(function (e) {\n            return e.uniqueID === currentRecord.uniqueID;\n        });\n        var checkedRecord;\n        var recordIndex = this.parent.getCurrentViewRecords().indexOf(record[0]);\n        var checkboxRecord = getParentData(this.parent, currentRecord.uniqueID);\n        var checkbox;\n        if (recordIndex > -1) {\n            var tr = this.parent.getRows()[recordIndex];\n            var movableTr = void 0;\n            if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                movableTr = this.parent.getMovableDataRows()[recordIndex];\n            }\n            checkbox = tr.querySelectorAll('.e-frame')[0] ? tr.querySelectorAll('.e-frame')[0]\n                : movableTr.querySelectorAll('.e-frame')[0];\n            if (!isNullOrUndefined(checkbox)) {\n                removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            }\n        }\n        checkedRecord = checkboxRecord;\n        if (isNullOrUndefined(checkedRecord)) {\n            checkedRecord = currentRecord;\n        }\n        checkedRecord.checkboxState = checkState;\n        if (checkState === 'check' && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            if (recordIndex !== -1 && this.selectedIndexes.indexOf(recordIndex) === -1) {\n                this.selectedIndexes.push(recordIndex);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (recordIndex !== -1 &&\n                (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && this.parent.enableVirtualization && ((!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length === 0)) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && isNullOrUndefined(this.parent.filterModule)) {\n                this.selectedItems.push(checkedRecord);\n            }\n        }\n        else if ((checkState === 'uncheck' || checkState === 'indeterminate') && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            var index = this.selectedItems.indexOf(checkedRecord);\n            if (index !== -1) {\n                this.selectedItems.splice(index, 1);\n            }\n            if (this.selectedIndexes.indexOf(recordIndex) !== -1) {\n                var checkedIndex = this.selectedIndexes.indexOf(recordIndex);\n                this.selectedIndexes.splice(checkedIndex, 1);\n            }\n        }\n        var checkBoxclass = checkState === 'indeterminate' ? 'e-stop' : 'e-' + checkState;\n        if (recordIndex > -1) {\n            if (!isNullOrUndefined(checkbox)) {\n                checkbox.classList.add(checkBoxclass);\n            }\n        }\n    };\n    Selection.prototype.updateGridActions = function (args) {\n        var _this = this;\n        var requestType = args.requestType;\n        var childData;\n        var childLength;\n        if (isCheckboxcolumn(this.parent)) {\n            if (this.parent.autoCheckHierarchy) {\n                if ((requestType === 'sorting' || requestType === 'paging')) {\n                    var rows = this.parent.grid.getRows();\n                    childData = this.parent.getCurrentViewRecords();\n                    childLength = childData.length;\n                    this.selectedIndexes = [];\n                    for (var i = 0; i < childLength; i++) {\n                        if (!rows[i].classList.contains('e-summaryrow')) {\n                            this.updateSelectedItems(childData[i], childData[i].checkboxState);\n                        }\n                    }\n                }\n                else if (requestType === 'delete' || args.action === 'add') {\n                    var updatedData = [];\n                    if (requestType === 'delete') {\n                        updatedData = args.data;\n                    }\n                    else {\n                        updatedData.push(args.data);\n                    }\n                    for (var i = 0; i < updatedData.length; i++) {\n                        if (requestType === 'delete') {\n                            var index = this.parent.flatData.indexOf(updatedData[i]);\n                            var checkedIndex = this.selectedIndexes.indexOf(index);\n                            this.selectedIndexes.splice(checkedIndex, 1);\n                            this.updateSelectedItems(updatedData[i], 'uncheck');\n                        }\n                        if (!isNullOrUndefined(updatedData[i].parentItem)) {\n                            this.updateParentSelection(updatedData[i].parentItem);\n                        }\n                    }\n                }\n                else if (args.requestType === 'add' && this.parent.autoCheckHierarchy) {\n                    args.data.checkboxState = 'uncheck';\n                }\n                else if (requestType === 'filtering' || requestType === 'searching' || requestType === 'refresh'\n                    && !isRemoteData(this.parent)) {\n                    this.selectedItems = [];\n                    this.selectedIndexes = [];\n                    childData = (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0) ?\n                        this.parent.getCurrentViewRecords() : this.parent.flatData;\n                    childData.forEach(function (record) {\n                        if (_this.parent.enableVirtualization) {\n                            if (record.hasChildRecords) {\n                                _this.updateParentSelection(record);\n                            }\n                            else {\n                                _this.updateSelectedItems(record, record.checkboxState);\n                            }\n                            var child = findChildrenRecords(record);\n                            child = _this.getFilteredChildRecords(child);\n                            for (var i = 0; i < child.length; i++) {\n                                if (child[i].hasChildRecords) {\n                                    _this.updateParentSelection(child[i]);\n                                }\n                                else if (!(child[i].hasChildRecords) && !isNullOrUndefined(child[i])) {\n                                    _this.updateSelectedItems(child[i], child[i].checkboxState);\n                                }\n                            }\n                        }\n                        else {\n                            if (record.hasChildRecords) {\n                                _this.updateParentSelection(record);\n                            }\n                            else {\n                                _this.updateSelectedItems(record, record.checkboxState);\n                            }\n                        }\n                    });\n                    this.headerSelection();\n                }\n            }\n        }\n    };\n    Selection.prototype.getCheckedrecords = function () {\n        return this.selectedItems;\n    };\n    Selection.prototype.getCheckedRowIndexes = function () {\n        return this.selectedIndexes;\n    };\n    return Selection;\n}());\nexport { Selection };\n","import * as events from '../base/constant';\nimport { Grid, getObject, Print as GridPrint } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Print module\n *\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Print module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Print(parent) {\n        this.parent = parent;\n        Grid.Inject(GridPrint);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Print module name\n     */\n    Print.prototype.getModuleName = function () {\n        return 'print';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Print.prototype.addEventListener = function () {\n        this.parent.grid.on(events.printGridInit, this.printTreeGrid, this);\n    };\n    Print.prototype.removeEventListener = function () {\n        this.parent.grid.off(events.printGridInit, this.printTreeGrid);\n    };\n    Print.prototype.printTreeGrid = function (printGrid) {\n        var grid = getObject('printgrid', printGrid);\n        var gridElement = getObject('element', printGrid);\n        grid.addEventListener(events.queryCellInfo, this.parent.grid.queryCellInfo);\n        grid.addEventListener(events.rowDataBound, this.parent.grid.rowDataBound);\n        grid.addEventListener(events.beforeDataBound, this.parent.grid.beforeDataBound);\n        addClass([gridElement], 'e-treegrid');\n    };\n    Print.prototype.print = function () {\n        this.parent.grid.print();\n    };\n    /**\n     * To destroy the Print\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Print.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property('contains')\n    ], SearchSettings.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"hierarchyMode\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the selection behavior of the TreeGrid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        Property('Default')\n    ], SelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n    __decorate([\n        Property(true)\n    ], SelectionSettings.prototype, \"enableToggle\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n","import { getObject, appendChildren } from '@syncfusion/ej2-grids';\nimport { templateCompiler, extend } from '@syncfusion/ej2-grids';\nimport { addClass, createElement, isNullOrUndefined, getValue } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isRemoteData, isOffline, getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * TreeGrid render module\n *\n * @hidden\n */\nvar Render = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Render(parent) {\n        this.parent = parent;\n        this.templateResult = null;\n        this.parent.grid.on('template-result', this.columnTemplateResult, this);\n        this.parent.grid.on('reactTemplateRender', this.reactTemplateRender, this);\n    }\n    /**\n     * Updated row elements for TreeGrid\n     *\n     * @param {RowDataBoundEventArgs} args - Row details before its bound to DOM\n     * @returns {void}\n     */\n    Render.prototype.RowModifier = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var data = args.data;\n        var parentData = data.parentItem;\n        if (!isNullOrUndefined(data.parentItem) && !isFilterChildHierarchy(this.parent) &&\n            (!(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root')) ||\n                (isRemoteData(this.parent) && !isOffline(this.parent)))) {\n            var collapsed = (this.parent.initialRender && (!(isNullOrUndefined(parentData[this.parent.expandStateMapping]) ||\n                parentData[this.parent.expandStateMapping]) || this.parent.enableCollapseAll)) ||\n                !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n            if (collapsed) {\n                args.row.style.display = 'none';\n            }\n        }\n        if (isRemoteData(this.parent) && !isOffline(this.parent)) {\n            var proxy_1 = this.parent;\n            var parentrec = this.parent.getCurrentViewRecords().filter(function (rec) {\n                return getValue(proxy_1.idMapping, rec) === getValue(proxy_1.parentIdMapping, data);\n            });\n            if (parentrec.length > 0) {\n                var display = parentrec[0].expanded ? 'table-row' : 'none';\n                args.row.setAttribute('style', 'display: ' + display + ';');\n            }\n        }\n        //addClass([args.row], 'e-gridrowindex' + index + 'level' + (<ITreeData>args.data).level);\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.row], 'e-summaryrow');\n        }\n        if (args.row.querySelector('.e-treegridexpand')) {\n            args.row.setAttribute('aria-expanded', 'true');\n        }\n        else if (args.row.querySelector('.e-treegridcollapse')) {\n            args.row.setAttribute('aria-expanded', 'false');\n        }\n        if (this.parent.enableCollapseAll && this.parent.initialRender) {\n            if (!isNullOrUndefined(data.parentItem)) {\n                args.row.style.display = 'none';\n            }\n        }\n        this.parent.trigger(events.rowDataBound, args);\n    };\n    /**\n     * cell renderer for tree column index cell\n     *\n     * @param {QueryCellInfoEventArgs} args - Cell detail before its bound to DOM\n     * @returns {void}\n     */\n    Render.prototype.cellRender = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var grid = this.parent.grid;\n        var data = args.data;\n        var index;\n        var ispadfilter = isNullOrUndefined(data.filterLevel);\n        var pad = ispadfilter ? data.level : data.filterLevel;\n        var totalIconsWidth = 0;\n        var cellElement;\n        var column = this.parent.getColumnByUid(args.column.uid);\n        var summaryRow = data.isSummaryRow;\n        var frozenColumns = this.parent.getFrozenColumns();\n        if (!isNullOrUndefined(data.parentItem)) {\n            index = data.parentItem.index;\n        }\n        else {\n            index = data.index;\n        }\n        var columnIndex;\n        var getVirtualColIndexByUid = 'getVirtualColIndexByUid';\n        if (this.parent.enableColumnVirtualization && !this.parent.initialRender) {\n            columnIndex = this.parent[getVirtualColIndexByUid](args.column.uid);\n        }\n        else {\n            columnIndex = grid.getColumnIndexByUid(args.column.uid);\n        }\n        if (columnIndex === this.parent.treeColumnIndex && (args.requestType === 'add' || args.requestType\n            === 'rowDragAndDrop' || args.requestType === 'delete' || isNullOrUndefined(args.cell.querySelector('.e-treecell')))) {\n            var container = createElement('div', { className: 'e-treecolumn-container' });\n            var emptyExpandIcon = createElement('span', {\n                className: 'e-icons e-none',\n                styles: 'width: 10px; display: inline-block'\n            });\n            for (var n = 0; n < pad; n++) {\n                totalIconsWidth += 10;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            var iconRequired = !isNullOrUndefined(data.hasFilteredChildRecords)\n                ? data.hasFilteredChildRecords : data.hasChildRecords;\n            if (iconRequired && !isNullOrUndefined(data.childRecords)) {\n                iconRequired = !(data.childRecords.length === 0);\n            }\n            if (iconRequired) {\n                addClass([args.cell], 'e-treerowcell');\n                var expandIcon = createElement('span', { className: 'e-icons' });\n                var expand = void 0;\n                if (this.parent.initialRender) {\n                    expand = data.expanded &&\n                        (isNullOrUndefined(data[this.parent.expandStateMapping]) || data[this.parent.expandStateMapping]) &&\n                        !this.parent.enableCollapseAll;\n                }\n                else {\n                    expand = !(!data.expanded || !getExpandStatus(this.parent, data, this.parent.grid.getCurrentViewRecords()));\n                }\n                addClass([expandIcon], (expand) ? 'e-treegridexpand' : 'e-treegridcollapse');\n                totalIconsWidth += 18;\n                container.appendChild(expandIcon);\n                emptyExpandIcon.style.width = '7px';\n                totalIconsWidth += 7;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            else if (pad || !pad && !data.level) {\n                // icons width\n                totalIconsWidth += 20;\n                container.appendChild(emptyExpandIcon.cloneNode());\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            //should add below code when paging funcitonality implemented\n            // if (data.hasChildRecords) {\n            //     addClass([expandIcon], data.expanded ? 'e-treegridexpand' : 'e-treegridcollapse');\n            // }\n            cellElement = createElement('span', { className: 'e-treecell' });\n            if (this.parent.allowTextWrap) {\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            this.updateTreeCell(args, cellElement);\n            container.appendChild(cellElement);\n            args.cell.appendChild(container);\n        }\n        else if (this.templateResult) {\n            this.templateResult = null;\n        }\n        var freeze = (grid.getFrozenLeftColumnsCount() > 0 || grid.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (!freeze) {\n            if (frozenColumns > this.parent.treeColumnIndex && frozenColumns > 0 &&\n                grid.getColumnIndexByUid(args.column.uid) === frozenColumns) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n            else if (frozenColumns < this.parent.treeColumnIndex && frozenColumns > 0 &&\n                (grid.getColumnIndexByUid(args.column.uid) === frozenColumns\n                    || grid.getColumnIndexByUid(args.column.uid) === frozenColumns - 1)) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n            else if (frozenColumns === this.parent.treeColumnIndex && frozenColumns > 0 &&\n                grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex - 1) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n        }\n        else {\n            var freezerightColumns = grid.getFrozenRightColumns();\n            var freezeLeftColumns = grid.getFrozenLeftColumns();\n            var movableColumns = grid.getMovableColumns();\n            if ((freezerightColumns.length > 0) && freezerightColumns[0].field === args.column.field) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n            else if ((freezeLeftColumns.length > 0) && freezeLeftColumns[0].field === args.column.field) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n            else if ((movableColumns.length > 0) && movableColumns[0].field === args.column.field) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n        }\n        if (!isNullOrUndefined(column) && column.showCheckbox) {\n            this.parent.notify('columnCheckbox', args);\n            if (this.parent.allowTextWrap) {\n                var checkboxElement = args.cell.querySelectorAll('.e-frame')[0];\n                var width = parseInt(checkboxElement.style.width, 16);\n                totalIconsWidth += width;\n                totalIconsWidth += 10;\n                if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n                    cellElement = args.cell.querySelector('.e-treecell');\n                }\n                else {\n                    cellElement = args.cell.querySelector('.e-treecheckbox');\n                }\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n        }\n        if (summaryRow) {\n            addClass([args.cell], 'e-summarycell');\n            var summaryData = getObject(args.column.field, args.data);\n            if (args.cell.querySelector('.e-treecell') != null) {\n                args.cell.querySelector('.e-treecell').innerHTML = summaryData;\n            }\n            else {\n                args.cell.innerHTML = summaryData;\n            }\n        }\n        if (isNullOrUndefined(this.parent.rowTemplate)) {\n            this.parent.trigger(events.queryCellInfo, args);\n        }\n    };\n    Render.prototype.updateTreeCell = function (args, cellElement) {\n        var columnModel = getValue('columnModel', this.parent);\n        var treeColumn = columnModel[this.parent.treeColumnIndex];\n        var templateFn = 'templateFn';\n        var colindex = args.column.index;\n        if (isNullOrUndefined(treeColumn.field)) {\n            args.cell.setAttribute('aria-colindex', colindex + '');\n        }\n        if (treeColumn.field === args.column.field && !isNullOrUndefined(treeColumn.template)) {\n            args.column.template = treeColumn.template;\n            args.column[templateFn] = templateCompiler(args.column.template);\n            args.cell.classList.add('e-templatecell');\n        }\n        var textContent = args.cell.querySelector('.e-treecell') != null ?\n            args.cell.querySelector('.e-treecell').innerHTML : args.cell.innerHTML;\n        if (typeof (args.column.template) === 'object' && this.templateResult) {\n            appendChildren(cellElement, this.templateResult);\n            this.templateResult = null;\n            args.cell.innerHTML = '';\n        }\n        else if (args.cell.classList.contains('e-templatecell')) {\n            var len = args.cell.children.length;\n            var tempID = this.parent.element.id + args.column.uid;\n            if (treeColumn.field === args.column.field && !isNullOrUndefined(treeColumn.template)) {\n                var portals = 'portals';\n                var renderReactTemplates = 'renderReactTemplates';\n                if (this.parent.isReact && typeof (args.column.template) !== 'string') {\n                    args.column[templateFn](args.data, this.parent, 'template', tempID, null, null, cellElement);\n                    if (isNullOrUndefined(this.parent.grid[portals])) {\n                        this.parent.grid[portals] = this.parent[portals];\n                    }\n                    this.parent.notify('renderReactTemplate', this.parent[portals]);\n                    this.parent[renderReactTemplates]();\n                }\n                else {\n                    var str = 'isStringTemplate';\n                    var result = args.column[templateFn](extend({ 'index': '' }, args.data), this.parent, 'template', tempID, this.parent[str]);\n                    appendChildren(cellElement, result);\n                }\n                delete args.column.template;\n                delete args.column[templateFn];\n                args.cell.innerHTML = '';\n            }\n            else {\n                for (var i = 0; i < len; len = args.cell.children.length) {\n                    cellElement.appendChild(args.cell.children[i]);\n                }\n            }\n        }\n        else {\n            cellElement.innerHTML = textContent;\n            args.cell.innerHTML = '';\n        }\n    };\n    Render.prototype.columnTemplateResult = function (args) {\n        this.templateResult = args.template;\n    };\n    Render.prototype.reactTemplateRender = function (args) {\n        var renderReactTemplates = 'renderReactTemplates';\n        var portals = 'portals';\n        this.parent[portals] = args;\n        this.parent.notify('renderReactTemplate', this.parent[portals]);\n        this.parent[renderReactTemplates]();\n    };\n    Render.prototype.destroy = function () {\n        this.parent.grid.off('template-result', this.columnTemplateResult);\n        this.parent.grid.off('reactTemplateRender', this.reactTemplateRender);\n    };\n    return Render;\n}());\nexport { Render };\n","import { extend, isNullOrUndefined, setValue, getValue, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { DataManager, Query, DataUtil } from '@syncfusion/ej2-data';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { getObject, getUid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, isCountRequired, getExpandStatus } from '../utils';\nimport * as events from './constant';\n/**\n * Internal dataoperations for tree grid\n *\n * @hidden\n */\nvar DataManipulation = /** @class */ (function () {\n    function DataManipulation(grid) {\n        this.addedRecords = 'addedRecords';\n        this.parent = grid;\n        this.parentItems = [];\n        this.taskIds = [];\n        this.hierarchyData = [];\n        this.storedIndex = -1;\n        this.sortedData = [];\n        this.isSortAction = false;\n        this.addEventListener();\n        this.dataResults = {};\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n    }\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.addEventListener = function () {\n        this.parent.on('updateRemoteLevel', this.updateParentRemoteData, this);\n        this.parent.grid.on('sorting-begin', this.beginSorting, this);\n        this.parent.on('updateAction', this.updateData, this);\n        this.parent.on(events.remoteExpand, this.collectExpandingRecs, this);\n        this.parent.on('dataProcessor', this.dataProcessor, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.remoteExpand, this.collectExpandingRecs);\n        this.parent.off('updateRemoteLevel', this.updateParentRemoteData);\n        this.parent.off('updateAction', this.updateData);\n        this.parent.off('dataProcessor', this.dataProcessor);\n        this.parent.grid.off('sorting-begin', this.beginSorting);\n    };\n    /**\n     * To destroy the dataModule\n     *\n     * @returns {void}\n     * @hidden\n     */\n    DataManipulation.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {boolean} -Returns whether remote data binding\n     */\n    DataManipulation.prototype.isRemote = function () {\n        if (!(this.parent.dataSource instanceof DataManager)) {\n            return false;\n        }\n        return true;\n        // let gridData:  DataManager = <DataManager>this.parent.dataSource;\n        // return gridData.dataSource.offline !== true && gridData.dataSource.url !== undefined;\n    };\n    /**\n     * Function to manipulate datasource\n     *\n     * @param {Object} data - Provide tree grid datasource to convert to flat data\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.convertToFlatData = function (data) {\n        var _this = this;\n        this.parent.flatData = (Object.keys(data).length === 0 && !(this.parent.dataSource instanceof DataManager) ?\n            this.parent.dataSource : []);\n        this.parent.parentData = [];\n        if ((isRemoteData(this.parent) && !isOffline(this.parent)) && data instanceof DataManager && !(data instanceof Array)) {\n            var dm = this.parent.dataSource;\n            if (this.parent.parentIdMapping) {\n                this.parent.query = isNullOrUndefined(this.parent.query) ?\n                    new Query() : this.parent.query;\n                if (this.parent.parentIdMapping) {\n                    var filterKey = this.parent.query.params.filter(function (param) { return param.key === 'IdMapping'; });\n                    if (this.parent.initialRender && !filterKey.length) {\n                        this.parent.query.where(this.parent.parentIdMapping, 'equal', null);\n                        this.parent.query.addParams('IdMapping', this.parent.idMapping);\n                    }\n                }\n                if (!this.parent.hasChildMapping) {\n                    var qry = this.parent.query.clone();\n                    qry.queries = [];\n                    qry = qry.select([this.parent.parentIdMapping]);\n                    qry.isCountRequired = true;\n                    dm.executeQuery(qry).then(function (e) {\n                        _this.parentItems = DataUtil.distinct(e.result, _this.parent.parentIdMapping, false);\n                        var req = getObject('dataSource.requests', _this.parent).filter(function (e) {\n                            return e.httpRequest.statusText !== 'OK';\n                        }).length;\n                        if (req === 0) {\n                            setValue('grid.contentModule.isLoaded', true, _this.parent);\n                            if (!isNullOrUndefined(_this.zerothLevelData)) {\n                                setValue('cancel', false, _this.zerothLevelData);\n                                getValue('grid.renderModule', _this.parent).dataManagerSuccess(_this.zerothLevelData);\n                                _this.zerothLevelData = null;\n                            }\n                            _this.parent.grid.hideSpinner();\n                        }\n                    });\n                }\n            }\n        }\n        else if (data instanceof Array) {\n            this.convertJSONData(data);\n        }\n    };\n    DataManipulation.prototype.convertJSONData = function (data) {\n        this.hierarchyData = [];\n        this.taskIds = [];\n        if (!this.parent.idMapping) {\n            this.hierarchyData = data;\n        }\n        else {\n            for (var i = 0; i < Object.keys(data).length; i++) {\n                var tempData = data[i];\n                this.hierarchyData.push(extend({}, tempData));\n                if (!isNullOrUndefined(tempData[this.parent.idMapping])) {\n                    this.taskIds.push(tempData[this.parent.idMapping]);\n                }\n            }\n        }\n        if (this.isSelfReference) {\n            var selfData = [];\n            var mappingData = new DataManager(this.hierarchyData).executeLocal(new Query()\n                .group(this.parent.parentIdMapping));\n            for (var i = 0; i < mappingData.length; i++) {\n                var groupData = mappingData[i];\n                var index = this.taskIds.indexOf(groupData.key);\n                if (!isNullOrUndefined(groupData.key)) {\n                    if (index > -1) {\n                        var childData = (groupData.items);\n                        this.hierarchyData[index][this.parent.childMapping] = childData;\n                        continue;\n                    }\n                }\n                selfData.push.apply(selfData, groupData.items);\n            }\n            this.hierarchyData = this.selfReferenceUpdate(selfData);\n        }\n        if (!Object.keys(this.hierarchyData).length) {\n            var isGantt = 'isGantt';\n            var referenceData = !(this.parent.dataSource instanceof DataManager) && this.parent[isGantt];\n            this.parent.flatData = referenceData ? (this.parent.dataSource) : [];\n        }\n        else {\n            this.createRecords(this.hierarchyData);\n        }\n        this.storedIndex = -1;\n    };\n    // private crudActions(): void {\n    //   if (this.parent.dataSource instanceof DataManager && (this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n    //     let oldUpdate: Function = this.parent.dataSource.adaptor.update;\n    //     this.parent.dataSource.adaptor.update =\n    //         function (dm: DataManager, keyField: string, value: Object, tableName?: string, query?: Query, original?: Object): Object {\n    //                value = getPlainData(value);\n    //                return oldUpdate.apply(this, [dm, keyField, value, tableName, query, original]);\n    //              }\n    //   }\n    // }\n    DataManipulation.prototype.selfReferenceUpdate = function (selfData) {\n        var result = [];\n        while (this.hierarchyData.length > 0 && selfData.length > 0) {\n            var index = selfData.indexOf(this.hierarchyData[0]);\n            if (index === -1) {\n                this.hierarchyData.shift();\n            }\n            else {\n                result.push(this.hierarchyData.shift());\n                selfData.splice(index, 1);\n            }\n        }\n        return result;\n    };\n    /**\n     * Function to update the zeroth level parent records in remote binding\n     *\n     * @param {BeforeDataBoundArgs} args - contains data before its bounds to tree grid\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.updateParentRemoteData = function (args) {\n        var records = args.result;\n        if (!this.parent.hasChildMapping && !this.parentItems.length &&\n            (!this.parent.loadChildOnDemand)) {\n            this.zerothLevelData = args;\n            setValue('cancel', true, args);\n        }\n        else {\n            if (!this.parent.loadChildOnDemand) {\n                for (var rec = 0; rec < records.length; rec++) {\n                    if (isCountRequired(this.parent) && records[rec].hasChildRecords && this.parent.initialRender) {\n                        records[rec].expanded = false;\n                    }\n                    if (isNullOrUndefined(records[rec].index)) {\n                        records[rec].taskData = extend({}, records[rec]);\n                        records[rec].uniqueID = getUid(this.parent.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + records[rec].uniqueID, records[rec], this.parent);\n                        records[rec].level = 0;\n                        records[rec].index = Math.ceil(Math.random() * 1000);\n                        if ((records[rec][this.parent.hasChildMapping] ||\n                            this.parentItems.indexOf(records[rec][this.parent.idMapping]) !== -1)) {\n                            records[rec].hasChildRecords = true;\n                        }\n                        records[rec].checkboxState = 'uncheck';\n                    }\n                }\n            }\n            else {\n                if (!isNullOrUndefined(records)) {\n                    this.convertToFlatData(records);\n                }\n            }\n        }\n        args.result = this.parent.loadChildOnDemand ? this.parent.flatData : records;\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * Function to manipulate datasource\n     *\n     * @param {{record: ITreeData, rows: HTMLTableRowElement[], parentRow: HTMLTableRowElement}} rowDetails - Row details for which child rows has to be fetched\n     * @param {ITreeData} rowDetails.record - current expanding record\n     * @param {HTMLTableRowElement[]} rowDetails.rows - Expanding Row element\n     * @param {HTMLTableRowElement} rowDetails.parentRow  - Curent expanding row element\n     * @param {boolean} isChild - Specified whether current record is already a child record\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.collectExpandingRecs = function (rowDetails, isChild) {\n        var gridRows = this.parent.getRows();\n        if (this.parent.rowTemplate) {\n            var rows = this.parent.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var childRecord;\n        if (rowDetails.rows.length > 0) {\n            if (!isChild) {\n                rowDetails.record.expanded = true;\n            }\n            for (var i = 0; i < rowDetails.rows.length; i++) {\n                rowDetails.rows[i].style.display = 'table-row';\n                if (this.parent.loadChildOnDemand) {\n                    var targetEle = rowDetails.rows[i].getElementsByClassName('e-treegridcollapse')[0];\n                    childRecord = this.parent.rowTemplate ? this.parent.grid.getCurrentViewRecords()[rowDetails.rows[i].rowIndex] :\n                        this.parent.grid.getRowObjectFromUID(rowDetails.rows[i].getAttribute('data-Uid')).data;\n                    if (!isNullOrUndefined(targetEle) && childRecord.expanded) {\n                        addClass([targetEle], 'e-treegridexpand');\n                        removeClass([targetEle], 'e-treegridcollapse');\n                    }\n                    var childRows = [];\n                    childRows = gridRows.filter(function (r) {\n                        return r.querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1));\n                    });\n                    if (childRows.length && childRecord.expanded) {\n                        this.collectExpandingRecs({ record: childRecord, rows: childRows, parentRow: rowDetails.parentRow }, true);\n                    }\n                }\n                var expandingTd = rowDetails.rows[i].querySelector('.e-detailrowcollapse');\n                if (!isNullOrUndefined(expandingTd)) {\n                    this.parent.grid.detailRowModule.expand(expandingTd);\n                }\n            }\n        }\n        else {\n            this.fetchRemoteChildData({ record: rowDetails.record, rows: rowDetails.rows, parentRow: rowDetails.parentRow });\n        }\n    };\n    DataManipulation.prototype.fetchRemoteChildData = function (rowDetails) {\n        var _this = this;\n        var args = { row: rowDetails.parentRow, data: rowDetails.record };\n        var dm = this.parent.dataSource;\n        var qry = this.parent.grid.getDataModule().generateQuery();\n        var clonequries = qry.queries.filter(function (e) { return e.fn !== 'onPage' && e.fn !== 'onWhere'; });\n        qry.queries = clonequries;\n        qry.isCountRequired = true;\n        qry.where(this.parent.parentIdMapping, 'equal', rowDetails.record[this.parent.idMapping]);\n        showSpinner(this.parent.element);\n        dm.executeQuery(qry).then(function (e) {\n            var datas = _this.parent.grid.currentViewData.slice();\n            var inx = datas.indexOf(rowDetails.record);\n            if (inx === -1) {\n                _this.parent.grid.getRowsObject().forEach(function (rows) {\n                    if (rows.data.uniqueID === rowDetails.record.uniqueID) {\n                        inx = rows.index;\n                    }\n                });\n            }\n            var haveChild = getObject('actual.nextLevel', e);\n            var result = e.result;\n            rowDetails.record.childRecords = result;\n            for (var r = 0; r < result.length; r++) {\n                result[r].taskData = extend({}, result[r]);\n                result[r].level = rowDetails.record.level + 1;\n                result[r].index = Math.ceil(Math.random() * 1000);\n                var parentData = extend({}, rowDetails.record);\n                delete parentData.childRecords;\n                result[r].parentItem = parentData;\n                result[r].parentUniqueID = rowDetails.record.uniqueID;\n                result[r].uniqueID = getUid(_this.parent.element.id + '_data_');\n                result[r].checkboxState = 'uncheck';\n                setValue('uniqueIDCollection.' + result[r].uniqueID, result[r], _this.parent);\n                // delete result[r].parentItem.childRecords;\n                if ((result[r][_this.parent.hasChildMapping] || _this.parentItems.indexOf(result[r][_this.parent.idMapping]) !== -1)\n                    && !(haveChild && !haveChild[r])) {\n                    result[r].hasChildRecords = true;\n                    result[r].expanded = false;\n                }\n                datas.splice(inx + r + 1, 0, result[r]);\n            }\n            setValue('result', datas, e);\n            setValue('action', 'beforecontentrender', e);\n            _this.parent.trigger(events.actionComplete, e);\n            hideSpinner(_this.parent.element);\n            if (_this.parent.grid.aggregates.length > 0 && !_this.parent.enableVirtualization) {\n                var gridQuery = getObject('query', e);\n                var result_1 = 'result';\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', _this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(gridQuery)) {\n                    var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    e[result_1] = _this.parent.summaryModule.calculateSummaryValue(summaryQuery, e[result_1], true);\n                }\n            }\n            e.count = _this.parent.grid.pageSettings.totalRecordsCount;\n            var virtualArgs = {};\n            if (_this.parent.enableVirtualization) {\n                _this.remoteVirtualAction(virtualArgs);\n            }\n            var notifyArgs = { index: inx, childData: result };\n            if (_this.parent.enableInfiniteScrolling) {\n                _this.parent.notify('infinite-remote-expand', notifyArgs);\n            }\n            else {\n                getValue('grid.renderModule', _this.parent).dataManagerSuccess(e, virtualArgs);\n            }\n            _this.parent.trigger(events.expanded, args);\n        });\n    };\n    DataManipulation.prototype.remoteVirtualAction = function (virtualArgs) {\n        virtualArgs.requestType = 'refresh';\n        setValue('isExpandCollapse', true, virtualArgs);\n        var contentModule = getValue('grid.contentModule', this.parent);\n        var currentInfo = getValue('currentInfo', contentModule);\n        var prevInfo = getValue('prevInfo', contentModule);\n        if (currentInfo.loadNext && this.parent.grid.pageSettings.currentPage === currentInfo.nextInfo.page) {\n            this.parent.grid.pageSettings.currentPage = prevInfo.page;\n        }\n    };\n    DataManipulation.prototype.beginSorting = function () {\n        this.isSortAction = true;\n    };\n    DataManipulation.prototype.createRecords = function (data, parentRecords) {\n        var treeGridData = [];\n        for (var i = 0, len = Object.keys(data).length; i < len; i++) {\n            var currentData = extend({}, data[i]);\n            currentData.taskData = data[i];\n            var level = 0;\n            this.storedIndex++;\n            if (!Object.prototype.hasOwnProperty.call(currentData, 'index')) {\n                currentData.index = this.storedIndex;\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping]) ||\n                (currentData[this.parent.hasChildMapping] && isCountRequired(this.parent))) {\n                currentData.hasChildRecords = true;\n                if (this.parent.enableCollapseAll || !isNullOrUndefined(this.parent.dataStateChange)\n                    && isNullOrUndefined(currentData[this.parent.childMapping])) {\n                    currentData.expanded = false;\n                }\n                else {\n                    currentData.expanded = !isNullOrUndefined(currentData[this.parent.expandStateMapping])\n                        ? currentData[this.parent.expandStateMapping] : true;\n                }\n            }\n            if (!Object.prototype.hasOwnProperty.call(currentData, 'index')) {\n                currentData.index = currentData.hasChildRecords ? this.storedIndex : this.storedIndex;\n            }\n            if (this.isSelfReference && isNullOrUndefined(currentData[this.parent.parentIdMapping])) {\n                this.parent.parentData.push(currentData);\n            }\n            currentData.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + currentData.uniqueID, currentData, this.parent);\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                if (this.isSelfReference) {\n                    delete parentData.taskData[this.parent.childMapping];\n                }\n                currentData.parentItem = parentData;\n                currentData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n            }\n            if (!Object.prototype.hasOwnProperty.call(currentData, 'level')) {\n                currentData.level = level;\n            }\n            currentData.checkboxState = 'uncheck';\n            if (isNullOrUndefined(currentData[this.parent.parentIdMapping]) || currentData.parentItem) {\n                this.parent.flatData.push(currentData);\n            }\n            if (!this.isSelfReference && currentData.level === 0) {\n                this.parent.parentData.push(currentData);\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping] && currentData[this.parent.childMapping].length)) {\n                var record = this.createRecords(currentData[this.parent.childMapping], currentData);\n                currentData.childRecords = record;\n            }\n            treeGridData.push(currentData);\n        }\n        return treeGridData;\n    };\n    /**\n     * Function to perform filtering/sorting action for local data\n     *\n     * @param {BeforeDataBoundArgs} args - data details to be processed before binding to grid\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.dataProcessor = function (args) {\n        var isExport = getObject('isExport', args);\n        var expresults = getObject('expresults', args);\n        var exportType = getObject('exportType', args);\n        var isPrinting = getObject('isPrinting', args);\n        var dataObj;\n        var actionArgs = getObject('actionArgs', args);\n        var requestType = getObject('requestType', args);\n        var actionData = getObject('data', args);\n        var action = getObject('action', args);\n        var actionAddArgs = actionArgs;\n        var primaryKeyColumnName = this.parent.getPrimaryKeyFieldNames()[0];\n        var dataValue = getObject('data', actionAddArgs);\n        if ((!isNullOrUndefined(actionAddArgs)) && (!isNullOrUndefined(actionAddArgs.action)) && (actionAddArgs.action === 'add')\n            && (!isNullOrUndefined(actionAddArgs.data)) && isNullOrUndefined(actionAddArgs.data[primaryKeyColumnName])) {\n            actionAddArgs.data[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n            dataValue.taskData[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n        }\n        if ((!isNullOrUndefined(actionArgs) && Object.keys(actionArgs).length) || requestType === 'save') {\n            requestType = requestType ? requestType : actionArgs.requestType;\n            actionData = actionData ? actionData : getObject('data', actionArgs);\n            action = action ? action : getObject('action', actionArgs);\n            if (this.parent.editSettings.mode === 'Batch') {\n                this.batchChanges = this.parent.grid.editModule.getBatchChanges();\n            }\n            if (this.parent.isLocalData) {\n                this.updateAction(actionData, action, requestType);\n            }\n        }\n        if (isExport && !isNullOrUndefined(expresults)) {\n            dataObj = expresults;\n        }\n        else {\n            dataObj = isCountRequired(this.parent) ? getValue('result', this.parent.grid.dataSource)\n                : this.parent.grid.dataSource;\n        }\n        var results = dataObj instanceof DataManager ? dataObj.dataSource.json : dataObj;\n        var count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var qry = new Query();\n        var gridQuery = getObject('query', args);\n        var filterQuery;\n        var searchQuery;\n        if (!isNullOrUndefined(gridQuery)) {\n            filterQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            searchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n        }\n        if ((this.parent.grid.allowFiltering && this.parent.grid.filterSettings.columns.length) ||\n            (this.parent.grid.searchSettings.key.length > 0) || (!isNullOrUndefined(gridQuery) &&\n            (filterQuery.length || searchQuery.length) && this.parent.isLocalData)) {\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = new Query();\n                gridQuery = getValue('grid.renderModule.data', this.parent).filterQuery(gridQuery);\n                gridQuery = getValue('grid.renderModule.data', this.parent).searchQuery(gridQuery);\n            }\n            var fltrQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            var srchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n            qry.queries = fltrQuery.concat(srchQuery);\n            var filteredData = new DataManager(results).executeLocal(qry);\n            this.parent.notify('updateFilterRecs', { data: filteredData });\n            results = this.dataResults.result;\n            this.dataResults.result = null;\n            if (this.parent.grid.aggregates.length > 0) {\n                var query = getObject('query', args);\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(query)) {\n                    var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, results, true);\n                }\n            }\n        }\n        if (this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var gridQuery_1 = getObject('query', args);\n            if (isNullOrUndefined(gridQuery_1)) {\n                gridQuery_1 = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n            }\n            var summaryQuery = gridQuery_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        if (this.parent.grid.sortSettings.columns.length > 0 || this.isSortAction) {\n            this.isSortAction = false;\n            var parentData = this.parent.parentData;\n            var query = getObject('query', args);\n            var srtQry = new Query();\n            for (var srt = this.parent.grid.sortSettings.columns.length - 1; srt >= 0; srt--) {\n                var col = this.parent.grid.getColumnByField(this.parent.grid.sortSettings.columns[srt].field);\n                var compFun = col.sortComparer && isOffline(this.parent) ?\n                    col.sortComparer.bind(col) :\n                    this.parent.grid.sortSettings.columns[srt].direction;\n                srtQry.sortBy(this.parent.grid.sortSettings.columns[srt].field, compFun);\n            }\n            var modifiedData = new DataManager(parentData).executeLocal(srtQry);\n            var sortArgs = { modifiedData: modifiedData, filteredData: results, srtQry: srtQry };\n            this.parent.notify('createSort', sortArgs);\n            results = sortArgs.modifiedData;\n            this.dataResults.result = null;\n            this.sortedData = results;\n            this.parent.notify('updateModel', {});\n            if (this.parent.grid.aggregates.length > 0 && !isNullOrUndefined(query)) {\n                var isSort = false;\n                var query_1 = getObject('query', args);\n                var summaryQuery = query_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.sortedData, isSort);\n            }\n        }\n        count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var temp = this.paging(results, count, isExport, isPrinting, exportType, args);\n        results = temp.result;\n        count = temp.count;\n        args.result = results;\n        args.count = count;\n        this.parent.notify('updateResults', args);\n    };\n    DataManipulation.prototype.paging = function (results, count, isExport, isPrinting, exportType, args) {\n        if (this.parent.allowPaging && (!isExport || exportType === 'CurrentPage')\n            && (!isPrinting || this.parent.printMode === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count });\n            results = this.dataResults.result;\n            count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n                : this.dataResults.count;\n        }\n        else if ((this.parent.enableVirtualization || this.parent.enableInfiniteScrolling) && (!isExport || exportType === 'CurrentPage')\n            && getValue('requestType', args) !== 'save') {\n            var actArgs = this.parent.enableInfiniteScrolling ? args : getValue('actionArgs', args);\n            this.parent.notify(events.pagingActions, { result: results, count: count, actionArgs: actArgs });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        var isPdfExport = 'isPdfExport';\n        var isCollapsedStatePersist = 'isCollapsedStatePersist';\n        if ((isPrinting === true || (args[isPdfExport] && (isNullOrUndefined(args[isCollapsedStatePersist])\n            || args[isCollapsedStatePersist]))) && this.parent.printMode === 'AllPages') {\n            var actualResults = [];\n            for (var i = 0; i < results.length; i++) {\n                var expandStatus = getExpandStatus(this.parent, results[i], this.parent.parentData);\n                if (expandStatus) {\n                    actualResults.push(results[i]);\n                }\n            }\n            results = actualResults;\n            count = results.length;\n        }\n        var value = { result: results, count: count };\n        return value;\n    };\n    DataManipulation.prototype.updateData = function (dataResult) {\n        this.dataResults = dataResult;\n    };\n    DataManipulation.prototype.updateAction = function (actionData, action, requestType) {\n        if ((requestType === 'delete' || requestType === 'save')) {\n            this.parent.notify(events.crudAction, { value: actionData, action: action || requestType });\n        }\n        if (requestType === 'batchsave' && this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify(events.batchSave, {});\n        }\n    };\n    return DataManipulation;\n}());\nexport { DataManipulation };\n","/**\n * Defines Predefined toolbar items.\n *\n * @hidden\n */\nexport var ToolbarItem;\n(function (ToolbarItem) {\n    ToolbarItem[ToolbarItem[\"Add\"] = 0] = \"Add\";\n    ToolbarItem[ToolbarItem[\"Edit\"] = 1] = \"Edit\";\n    ToolbarItem[ToolbarItem[\"Update\"] = 2] = \"Update\";\n    ToolbarItem[ToolbarItem[\"Delete\"] = 3] = \"Delete\";\n    ToolbarItem[ToolbarItem[\"Cancel\"] = 4] = \"Cancel\";\n    ToolbarItem[ToolbarItem[\"Search\"] = 5] = \"Search\";\n    ToolbarItem[ToolbarItem[\"ExpandAll\"] = 6] = \"ExpandAll\";\n    ToolbarItem[ToolbarItem[\"CollapseAll\"] = 7] = \"CollapseAll\";\n    ToolbarItem[ToolbarItem[\"ExcelExport\"] = 8] = \"ExcelExport\";\n    ToolbarItem[ToolbarItem[\"PdfExport\"] = 9] = \"PdfExport\";\n    ToolbarItem[ToolbarItem[\"CsvExport\"] = 10] = \"CsvExport\";\n    ToolbarItem[ToolbarItem[\"Print\"] = 11] = \"Print\";\n    ToolbarItem[ToolbarItem[\"RowIndent\"] = 12] = \"RowIndent\";\n    ToolbarItem[ToolbarItem[\"RowOutdent\"] = 13] = \"RowOutdent\";\n})(ToolbarItem || (ToolbarItem = {}));\n/**\n * Defines predefined contextmenu items.\n *\n * @hidden\n */\nexport var ContextMenuItems;\n(function (ContextMenuItems) {\n    ContextMenuItems[ContextMenuItems[\"AutoFit\"] = 0] = \"AutoFit\";\n    ContextMenuItems[ContextMenuItems[\"AutoFitAll\"] = 1] = \"AutoFitAll\";\n    ContextMenuItems[ContextMenuItems[\"SortAscending\"] = 2] = \"SortAscending\";\n    ContextMenuItems[ContextMenuItems[\"SortDescending\"] = 3] = \"SortDescending\";\n    ContextMenuItems[ContextMenuItems[\"Edit\"] = 4] = \"Edit\";\n    ContextMenuItems[ContextMenuItems[\"Delete\"] = 5] = \"Delete\";\n    ContextMenuItems[ContextMenuItems[\"Save\"] = 6] = \"Save\";\n    ContextMenuItems[ContextMenuItems[\"Cancel\"] = 7] = \"Cancel\";\n    ContextMenuItems[ContextMenuItems[\"PdfExport\"] = 8] = \"PdfExport\";\n    ContextMenuItems[ContextMenuItems[\"ExcelExport\"] = 9] = \"ExcelExport\";\n    ContextMenuItems[ContextMenuItems[\"CsvExport\"] = 10] = \"CsvExport\";\n    ContextMenuItems[ContextMenuItems[\"FirstPage\"] = 11] = \"FirstPage\";\n    ContextMenuItems[ContextMenuItems[\"PrevPage\"] = 12] = \"PrevPage\";\n    ContextMenuItems[ContextMenuItems[\"LastPage\"] = 13] = \"LastPage\";\n    ContextMenuItems[ContextMenuItems[\"NextPage\"] = 14] = \"NextPage\";\n    ContextMenuItems[ContextMenuItems[\"AddRow\"] = 15] = \"AddRow\";\n})(ContextMenuItems || (ContextMenuItems = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the paging behavior of the TreeGrid.\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(12)\n    ], PageSettings.prototype, \"pageSize\", void 0);\n    __decorate([\n        Property(8)\n    ], PageSettings.prototype, \"pageCount\", void 0);\n    __decorate([\n        Property(1)\n    ], PageSettings.prototype, \"currentPage\", void 0);\n    __decorate([\n        Property()\n    ], PageSettings.prototype, \"totalRecordsCount\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"enableQueryString\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"pageSizes\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('All')\n    ], PageSettings.prototype, \"pageSizeMode\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, getEnumValue, compile } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\nimport { CellType } from '@syncfusion/ej2-grids';\n/**\n * Configures the TreeGrid's aggregate column.\n */\nvar AggregateColumn = /** @class */ (function (_super) {\n    __extends(AggregateColumn, _super);\n    function AggregateColumn() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.intl = new Internationalization();\n        _this.templateFn = {};\n        return _this;\n    }\n    /**\n     * Custom format function\n     *\n     * @hidden\n     * @param {string} cultureName - culture name to format\n     * @returns {void}\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    AggregateColumn.prototype.setFormatter = function (cultureName) {\n        if (this.format && (this.format.skeleton || this.format.format)) {\n            this.formatFn = this.getFormatFunction(this.format);\n        }\n    };\n    /**\n     * @param {NumberFormatOptions | DateFormatOptions} format - formatting options for number and date values\n     * @hidden\n     * @returns {Function} - return formatter function\n     */\n    AggregateColumn.prototype.getFormatFunction = function (format) {\n        if (format.type) {\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    };\n    /**\n     * @hidden\n     * @returns {Function} - Returns formatter function\n     */\n    AggregateColumn.prototype.getFormatter = function () {\n        return this.formatFn;\n    };\n    /**\n     * @param {Object} helper - Specified the helper\n     * @hidden\n     * @returns {void}\n     */\n    AggregateColumn.prototype.setTemplate = function (helper) {\n        if (helper === void 0) { helper = {}; }\n        if (this.footerTemplate !== undefined) {\n            this.templateFn[getEnumValue(CellType, CellType.Summary)] = { fn: compile(this.footerTemplate, helper),\n                property: 'footerTemplate' };\n        }\n    };\n    /**\n     * @param {CellType} type - specifies the cell type\n     * @returns {Object} returns the object\n     * @hidden\n     */\n    AggregateColumn.prototype.getTemplate = function (type) {\n        return this.templateFn[getEnumValue(CellType, type)];\n    };\n    /**\n     * @param {Object} prop - updates aggregate properties without change detection\n     * @hidden\n     * @returns {void}\n     */\n    AggregateColumn.prototype.setPropertiesSilent = function (prop) {\n        this.setProperties(prop, true);\n    };\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"format\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"columnName\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"customAggregate\", void 0);\n    return AggregateColumn;\n}(ChildProperty));\nexport { AggregateColumn };\nvar AggregateRow = /** @class */ (function (_super) {\n    __extends(AggregateRow, _super);\n    function AggregateRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], AggregateColumn)\n    ], AggregateRow.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], AggregateRow.prototype, \"showChildSummary\", void 0);\n    return AggregateRow;\n}(ChildProperty));\nexport { AggregateRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Configures the edit behavior of the TreeGrid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Cell')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property({})\n    ], EditSettings.prototype, \"dialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowNextRowEdit\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property, Collection } from '@syncfusion/ej2-base';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of TreeGrid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the infinite scroll behavior of Tree Grid.\n */\nvar InfiniteScrollSettings = /** @class */ (function (_super) {\n    __extends(InfiniteScrollSettings, _super);\n    function InfiniteScrollSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], InfiniteScrollSettings.prototype, \"enableCache\", void 0);\n    __decorate([\n        Property(3)\n    ], InfiniteScrollSettings.prototype, \"maxBlocks\", void 0);\n    __decorate([\n        Property(3)\n    ], InfiniteScrollSettings.prototype, \"initialBlocks\", void 0);\n    return InfiniteScrollSettings;\n}(ChildProperty));\nexport { InfiniteScrollSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, addClass, createElement, EventHandler, isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { removeClass, Complex, Collection, getValue } from '@syncfusion/ej2-base';\nimport { Event, Property, NotifyPropertyChanges, setValue, KeyboardEvents, L10n } from '@syncfusion/ej2-base';\nimport { Column } from '../models/column';\nimport { RowDropSettings, getUid } from '@syncfusion/ej2-grids';\nimport { FilterSettings } from '../models/filter-settings';\nimport { TextWrapSettings } from '../models/textwrap-settings';\nimport { Logger as TreeLogger } from '../actions/logger';\nimport { TreeClipboard } from '../actions/clipboard';\nimport { Selection as TreeGridSelection } from '../actions/selection';\nimport { Print } from '../actions/print';\nimport * as events from '../base/constant';\nimport { SearchSettings } from '../models/search-settings';\nimport { SelectionSettings } from '../models/selection-settings';\nimport { getActualProperties, getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, RemoteSaveAdaptor, JsonAdaptor, Deferred } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { isRemoteData, isOffline, extendArray, isCountRequired, findChildrenRecords } from '../utils';\nimport { Grid, Logger } from '@syncfusion/ej2-grids';\nimport { Render } from '../renderer/render';\nimport { DataManipulation } from './data';\nimport { iterateArrayOrObject } from '@syncfusion/ej2-grids';\nimport { ToolbarItem, ContextMenuItems } from '../enum';\nimport { PageSettings } from '../models/page-settings';\nimport { AggregateRow } from '../models/summary';\nimport { EditSettings } from '../models/edit-settings';\nimport { SortSettings } from '../models/sort-settings';\nimport { isHidden } from '../utils';\nimport { editAction } from '../actions/crud-actions';\nimport { InfiniteScrollSettings } from '../models/infinite-scroll-settings';\n/**\n * Represents the TreeGrid component.\n * ```html\n * <div id='treegrid'></div>\n * <script>\n *  var treegridObj = new TreeGrid({ allowPaging: true });\n *  treegridObj.appendTo('#treegrid');\n * </script>\n * ```\n */\nvar TreeGrid = /** @class */ (function (_super) {\n    __extends(TreeGrid, _super);\n    function TreeGrid(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.dataResults = {};\n        _this.uniqueIDCollection = {};\n        _this.uniqueIDFilterCollection = {};\n        _this.changedRecords = 'changedRecords';\n        _this.deletedRecords = 'deletedRecords';\n        _this.addedRecords = 'addedRecords';\n        _this.objectEqualityChecker = function (old, current) {\n            if (old) {\n                var keys = Object.keys(old);\n                var isEqual = true;\n                var excludeKeys = ['Children', 'childRecords', 'taskData', 'uniqueID', 'parentItem', 'parentUniqueID', 'index'];\n                for (var i = 0; i < keys.length; i++) {\n                    if (old[keys[i]] !== current[keys[i]] && excludeKeys.indexOf(keys[i]) === -1) {\n                        var isDate = old[keys[i]] instanceof Date && current[keys[i]] instanceof Date;\n                        if (!isDate || (old[keys[i]].getTime() !== current[keys[i]].getTime())) {\n                            isEqual = false;\n                            break;\n                        }\n                    }\n                }\n                return isEqual;\n            }\n            else {\n                return false;\n            }\n        };\n        TreeGrid_1.Inject(TreeGridSelection);\n        setValue('mergePersistData', _this.mergePersistTreeGridData, _this);\n        var logger = 'Logger';\n        if (!isNullOrUndefined(_this.injectedModules[logger])) {\n            Grid.Inject(Logger);\n        }\n        _this.grid = new Grid();\n        return _this;\n    }\n    TreeGrid_1 = TreeGrid;\n    /**\n     * Export TreeGrid data to Excel file(.xlsx).\n     *\n     * @param  {ExcelExportProperties | TreeGridExcelExportProperties} excelExportProperties - Defines the export properties of the Tree Grid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<any>} - Returns promise object of export action\n     */\n    /* eslint-disable */\n    TreeGrid.prototype.excelExport = function (excelExportProperties, isMultipleExport, workbook, isBlob) {\n        /* eslint-enable */\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n    };\n    /**\n     * Export TreeGrid data to CSV file.\n     *\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<any>} - Returns promise object of export action\n     */\n    /* eslint-disable */\n    TreeGrid.prototype.csvExport = function (excelExportProperties, isMultipleExport, workbook, isBlob) {\n        /* eslint-enable */\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n    };\n    /**\n     * Export TreeGrid data to PDF document.\n     *\n     * @param {PdfExportProperties | TreeGridPdfExportProperties} pdfExportProperties - Defines the export properties of the Tree Grid.\n     * @param {boolean} isMultipleExport - Define to enable multiple export.\n     * @param {Object} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<any>} - Returns promise object of export action\n     */\n    TreeGrid.prototype.pdfExport = function (pdfExportProperties, isMultipleExport, pdfDoc, isBlob) {\n        return this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns TreeGrid module name\n     */\n    TreeGrid.prototype.getModuleName = function () {\n        return 'treegrid';\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     *\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.preRender = function () {\n        this.TreeGridLocale();\n        this.initProperties();\n        this.defaultLocale = {\n            Above: 'Above',\n            Below: 'Below',\n            Child: 'Child',\n            AddRow: 'Add Row',\n            ExpandAll: 'Expand All',\n            CollapseAll: 'Collapse All',\n            RowIndent: 'Indent',\n            RowOutdent: 'Outdent'\n        };\n        this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n        if (this.isSelfReference && isNullOrUndefined(this.childMapping)) {\n            this.childMapping = 'Children';\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     *\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @returns {void}\n     */\n    TreeGrid.prototype.sortByColumn = function (columnName, direction, isMultiSort) {\n        this.sortModule.sortColumn(columnName, direction, isMultiSort);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.clearSorting = function () {\n        if (this.sortModule) {\n            this.sortModule.clearSorting();\n        }\n    };\n    /**\n     * Remove sorted column by field name.\n     *\n     * @param {string} field - Defines the column field name to remove sort.\n     * @returns {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeSortColumn = function (field) {\n        this.sortModule.removeSortColumn(field);\n    };\n    /**\n     * Searches TreeGrid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./#searchsettings/).\n     *\n     * @param  {string} searchString - Defines the key.\n     * @returns {void}\n     */\n    TreeGrid.prototype.search = function (searchString) {\n        this.grid.search(searchString);\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     *\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @returns {void}\n     *\n     *\n     *\n     */\n    TreeGrid.prototype.autoFitColumns = function (fieldNames) {\n        this.resizeModule.autoFitColumns(fieldNames);\n        this.updateColumnModel();\n    };\n    /**\n     * Changes the TreeGrid column positions by field names.\n     *\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @returns {void}\n     */\n    TreeGrid.prototype.reorderColumns = function (fromFName, toFName) {\n        this.grid.reorderColumns(fromFName, toFName);\n    };\n    TreeGrid.prototype.TreeGridLocale = function () {\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        var locale = L10n.locale;\n        var localeObject = {};\n        setValue(this.locale, {}, localeObject);\n        var gridLocale;\n        gridLocale = {};\n        gridLocale = getObject(this.locale, locale);\n        var treeGridLocale;\n        treeGridLocale = {};\n        treeGridLocale = getObject(this.getModuleName(), gridLocale);\n        setValue('grid', treeGridLocale, getObject(this.locale, localeObject));\n        L10n.load(localeObject);\n    };\n    /**\n     * By default, prints all the pages of the TreeGrid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./#printmode).\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.print = function () {\n        this.printModule.print();\n    };\n    TreeGrid.prototype.treeGridkeyActionHandler = function (e) {\n        if (this.allowKeyboard) {\n            var target = void 0;\n            var parentTarget = void 0;\n            var column = void 0;\n            var row = void 0;\n            var summaryElement = void 0;\n            switch (e.action) {\n                case 'ctrlDownArrow':\n                    this.expandAll();\n                    break;\n                case 'ctrlUpArrow':\n                    this.collapseAll();\n                    break;\n                case 'ctrlShiftUpArrow':\n                    target = e.target;\n                    column = target.closest('.e-rowcell');\n                    row = column.closest('tr');\n                    if (row !== null && row !== undefined) {\n                        this.expandCollapseRequest(row.querySelector('.e-treegridexpand'));\n                    }\n                    break;\n                case 'ctrlShiftDownArrow':\n                    target = e.target;\n                    column = target.closest('.e-rowcell');\n                    row = column.closest('tr');\n                    if (row !== null && row !== undefined) {\n                        this.expandCollapseRequest(row.querySelector('.e-treegridcollapse'));\n                    }\n                    break;\n                case 'downArrow':\n                    if (!this.enableVirtualization) {\n                        parentTarget = e.target.parentElement;\n                        summaryElement = this.findnextRowElement(parentTarget);\n                        if (summaryElement !== null) {\n                            var rowIndex = summaryElement.rowIndex;\n                            this.selectRow(rowIndex);\n                            var cellIndex = e.target.cellIndex;\n                            var row_1 = summaryElement.children[cellIndex];\n                            addClass([row_1], 'e-focused');\n                            addClass([row_1], 'e-focus');\n                        }\n                        else {\n                            this.clearSelection();\n                        }\n                    }\n                    break;\n                case 'upArrow':\n                    if (!this.enableVirtualization) {\n                        parentTarget = e.target.parentElement;\n                        summaryElement = this.findPreviousRowElement(parentTarget);\n                        if (summaryElement !== null) {\n                            var rIndex = summaryElement.rowIndex;\n                            this.selectRow(rIndex);\n                            var cIndex = e.target.cellIndex;\n                            var rows = summaryElement.children[cIndex];\n                            addClass([rows], 'e-focused');\n                            addClass([rows], 'e-focus');\n                        }\n                        else {\n                            this.clearSelection();\n                        }\n                    }\n            }\n        }\n    };\n    // Get Proper Row Element from the summary\n    TreeGrid.prototype.findnextRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.nextElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findnextRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    // Get Proper Row Element from the summary\n    TreeGrid.prototype.findPreviousRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.previousElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findPreviousRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    TreeGrid.prototype.initProperties = function () {\n        this.defaultLocale = {};\n        this.flatData = [];\n        this.parentData = [];\n        this.columnModel = [];\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n        this.keyConfigs = {\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlShiftUpArrow: 'ctrl+shift+uparrow',\n            ctrlShiftDownArrow: 'ctrl+shift+downarrow',\n            downArrow: 'downArrow',\n            upArrow: 'upArrow'\n        };\n        this.isLocalData = (!(this.dataSource instanceof DataManager) || this.dataSource.dataSource.offline\n            || (!isNullOrUndefined(this.dataSource.ready)) || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n        this.isSelfReference = !isNullOrUndefined(this.parentIdMapping);\n    };\n    /**\n     * Binding events to the element while component creation.\n     *\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.wireEvents = function () {\n        EventHandler.add(this.grid.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.treeGridkeyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     *\n     * @returns {ModuleDeclaration[]} - Returns TreeGrid modules collection\n     * @hidden\n     */\n    TreeGrid.prototype.requiredModules = function () {\n        var modules = [];\n        var splitFrozenCount = 'splitFrozenCount';\n        this.grid[splitFrozenCount](this.getGridColumns(this.columns));\n        if (this.isDestroyed) {\n            return modules;\n        }\n        modules.push({\n            member: 'filter', args: [this, this.filterSettings]\n        });\n        if (!isNullOrUndefined(this.toolbar)) {\n            modules.push({\n                member: 'toolbar',\n                args: [this]\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this]\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings]\n            });\n        }\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this]\n            });\n        }\n        if (this.aggregates.length > 0) {\n            modules.push({\n                member: 'summary', args: [this]\n            });\n        }\n        modules.push({\n            member: 'resize', args: [this]\n        });\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport', args: [this]\n            });\n        }\n        if (this.frozenColumns || this.frozenRows || this.getFrozenColumns() ||\n            this.grid.getFrozenLeftColumnsCount() || this.grid.getFrozenRightColumnsCount()) {\n            modules.push({\n                member: 'freeze', args: [this]\n            });\n        }\n        if (this.detailTemplate) {\n            modules.push({\n                member: 'detailRow', args: [this]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport', args: [this]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu', args: [this]\n            });\n        }\n        if (this.showColumnChooser) {\n            modules.push({\n                member: 'ColumnChooser', args: [this]\n            });\n        }\n        this.extendRequiredModules(modules);\n        return modules;\n    };\n    TreeGrid.prototype.extendRequiredModules = function (modules) {\n        if (this.allowRowDragAndDrop) {\n            modules.push({\n                member: 'rowDragAndDrop',\n                args: [this]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this]\n            });\n        }\n        if (this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this]\n            });\n        }\n        if (this.allowSelection) {\n            modules.push({\n                member: 'selection',\n                args: [this]\n            });\n        }\n        if (this.enableVirtualization) {\n            modules.push({\n                member: 'virtualScroll',\n                args: [this]\n            });\n        }\n        if (this.enableInfiniteScrolling) {\n            modules.push({\n                member: 'infiniteScroll',\n                args: [this]\n            });\n        }\n        modules.push({\n            member: 'logger',\n            args: [this.grid]\n        });\n    };\n    TreeGrid.prototype.isCommandColumn = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     *\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.unwireEvents = function () {\n        if (this.grid && this.grid.element) {\n            EventHandler.remove(this.grid.element, 'click', this.mouseClickHandler);\n        }\n    };\n    /**\n     * Logs tree grid error message on console\n     *\n     * @param {string | string[]} types - Tree Grid error type\n     * @param {object} args - Error details\n     * @hidden\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.log = function (types, args) {\n        if (this.loggerModule) {\n            this.loggerModule.treeLog(types, args, this);\n        }\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     *\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.render = function () {\n        var _this = this;\n        if (this.isReact) {\n            this.grid.isReact = true;\n            this.grid.portals = [];\n        }\n        createSpinner({ target: this.element }, this.createElement);\n        this.log(['mapping_fields_missing']);\n        this.renderModule = new Render(this);\n        this.dataModule = new DataManipulation(this);\n        this.printModule = new Print(this);\n        this.trigger(events.load);\n        this.autoGenerateColumns();\n        this.initialRender = true;\n        if (!isNullOrUndefined(this.dataSource)) {\n            this.convertTreeData(this.dataSource);\n        }\n        this.loadGrid();\n        if (this.element.classList.contains('e-treegrid') && this.rowDropSettings.targetID) {\n            this.grid.rowDropSettings.targetID += '_gridcontrol';\n        }\n        this.addListener();\n        var gridContainer = createElement('div', { id: this.element.id + '_gridcontrol' });\n        addClass([this.element], 'e-treegrid');\n        if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n            this.element.style.height = this.height;\n        }\n        if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n            this.element.style.width = this.width;\n        }\n        this.element.appendChild(gridContainer);\n        var gridRequiredModules = this.grid.requiredModules;\n        this.grid.requiredModules = function () {\n            var modules = [];\n            modules = gridRequiredModules.apply(this);\n            for (var i = 0; i < modules.length; i++) {\n                if (modules[i].member === 'virtualscroll') {\n                    modules[i].member = 'treeVirtualScroll';\n                }\n            }\n            return modules;\n        };\n        this.grid.appendTo(gridContainer);\n        this.wireEvents();\n        this.renderComplete();\n        var destroyTemplate = 'destroyTemplate';\n        var destroyTemplateFn = this.grid[destroyTemplate];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.grid[destroyTemplate] = function (args, index) {\n            destroyTemplateFn.apply(_this.grid);\n            var portals = 'portals';\n            if (!(_this.isReact && isNullOrUndefined(_this[portals]))) {\n                _this.clearTemplate(args, index);\n            }\n        };\n    };\n    TreeGrid.prototype.afterGridRender = function () {\n        if (!isNullOrUndefined(this.grid.clipboardModule)) {\n            this.grid.clipboardModule.destroy();\n        }\n        this.clipboardModule = this.grid.clipboardModule = new TreeClipboard(this);\n    };\n    TreeGrid.prototype.convertTreeData = function (data) {\n        var _this = this;\n        if (isCountRequired(this)) {\n            data = getValue('result', data);\n        }\n        if (data instanceof Array && data.length > 0 && Object.prototype.hasOwnProperty.call(data[0], 'level')) {\n            this.flatData = data;\n            this.flatData.filter(function (e) {\n                setValue('uniqueIDCollection.' + e.uniqueID, e, _this);\n                if (e.level === 0) {\n                    _this.parentData.push(e);\n                }\n            });\n        }\n        else {\n            if (isCountRequired(this)) {\n                var griddata = getValue('result', this.dataSource);\n                this.dataModule.convertToFlatData(griddata);\n            }\n            else {\n                this.dataModule.convertToFlatData(data);\n            }\n        }\n    };\n    // private getGridData(): Object {\n    //   if (isRemoteData(this)) {\n    //     return this.dataSource;\n    //   } else if (this.isLocalData && this.dataSource instanceof DataManager) {\n    //     this.dataSource.dataSource.json = this.flatData;\n    //     return this.dataSource;\n    //   }\n    //   return this.flatData;\n    // }\n    TreeGrid.prototype.bindGridProperties = function () {\n        this.bindedDataSource();\n        this.grid.enableRtl = this.enableRtl;\n        this.grid.allowKeyboard = this.allowKeyboard;\n        this.grid.columns = this.getGridColumns(this.columns);\n        this.grid.allowExcelExport = this.allowExcelExport;\n        this.grid.allowPdfExport = this.allowPdfExport;\n        this.grid.query = this.query;\n        this.grid.columnQueryMode = this.columnQueryMode;\n        this.grid.allowPaging = this.allowPaging;\n        this.grid.pageSettings = getActualProperties(this.pageSettings);\n        this.grid.pagerTemplate = this.pagerTemplate;\n        this.grid.showColumnMenu = this.showColumnMenu;\n        this.grid.allowSorting = this.allowSorting;\n        this.grid.allowFiltering = this.allowFiltering;\n        this.grid.enableVirtualization = this.enableVirtualization;\n        this.grid.enableColumnVirtualization = this.enableColumnVirtualization;\n        this.grid.enableInfiniteScrolling = this.enableInfiniteScrolling;\n        this.grid.infiniteScrollSettings = this.infiniteScrollSettings;\n        this.grid.width = this.width;\n        this.grid.height = this.height;\n        this.grid.enableAltRow = this.enableAltRow;\n        this.grid.allowReordering = this.allowReordering;\n        this.grid.allowTextWrap = this.allowTextWrap;\n        this.grid.allowResizing = this.allowResizing;\n        this.grid.enableHover = this.enableHover;\n        this.grid.enableAutoFill = this.enableAutoFill;\n        this.grid.enableImmutableMode = this.enableImmutableMode;\n        this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n        this.grid.rowDropSettings = getActualProperties(this.rowDropSettings);\n        this.grid.rowHeight = this.rowHeight;\n        this.grid.gridLines = this.gridLines;\n        this.grid.allowSelection = this.allowSelection;\n        this.grid.toolbar = getActualProperties(this.getGridToolbar());\n        this.grid.toolbarTemplate = this.toolbarTemplate;\n        this.grid.showColumnChooser = this.showColumnChooser;\n        this.grid.filterSettings = getActualProperties(this.filterSettings);\n        this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n        this.grid.sortSettings = getActualProperties(this.sortSettings);\n        this.grid.searchSettings = getActualProperties(this.searchSettings);\n        this.grid.aggregates = getActualProperties(this.aggregates);\n        this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n        this.grid.printMode = getActualProperties(this.printMode);\n        this.grid.locale = getActualProperties(this.locale);\n        this.grid.selectedRowIndex = this.selectedRowIndex;\n        this.grid.contextMenuItems = getActualProperties(this.getContextMenu());\n        this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n        this.grid.editSettings = this.getGridEditSettings();\n        this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n        this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n        this.grid.frozenRows = this.frozenRows;\n        this.grid.frozenColumns = this.frozenColumns;\n        this.grid.clipMode = getActualProperties(this.clipMode);\n        var templateInstance = 'templateDotnetInstance';\n        this.grid[templateInstance] = this[templateInstance];\n        var isJsComponent = 'isJsComponent';\n        this.grid[isJsComponent] = true;\n    };\n    TreeGrid.prototype.triggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    TreeGrid.prototype.bindGridEvents = function () {\n        var _this = this;\n        this.grid.rowSelecting = function (args) {\n            if (!isNullOrUndefined(args.target) && (args.target.classList.contains('e-treegridexpand')\n                || args.target.classList.contains('e-treegridcollapse') || args.target.classList.contains('e-summarycell'))) {\n                args.cancel = true;\n                return;\n            }\n            _this.trigger(events.rowSelecting, args);\n        };\n        this.grid.rowSelected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            _this.notify(events.rowSelected, args);\n            _this.trigger(events.rowSelected, args);\n        };\n        this.grid.rowDeselected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            _this.trigger(events.rowDeselected, args);\n        };\n        this.grid.resizeStop = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.resizeStop, args);\n        };\n        this.grid.excelQueryCellInfo = function (args) {\n            _this.notify('excelCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfQueryCellInfo = function (args) {\n            _this.notify('pdfCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.checkBoxChange = function (args) {\n            _this.trigger(events.checkboxChange, args);\n        };\n        this.grid.pdfExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.pdfHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.dataSourceChanged = this.triggerEvents.bind(this);\n        this.grid.recordDoubleClick = this.triggerEvents.bind(this);\n        this.grid.rowDeselecting = this.triggerEvents.bind(this);\n        this.grid.cellDeselected = this.triggerEvents.bind(this);\n        this.grid.cellDeselecting = this.triggerEvents.bind(this);\n        this.grid.columnMenuOpen = this.triggerEvents.bind(this);\n        this.grid.columnMenuClick = this.triggerEvents.bind(this);\n        this.grid.cellSelected = this.triggerEvents.bind(this);\n        this.grid.headerCellInfo = this.triggerEvents.bind(this);\n        this.grid.resizeStart = this.triggerEvents.bind(this);\n        this.grid.resizing = this.triggerEvents.bind(this);\n        this.grid.columnDrag = this.triggerEvents.bind(this);\n        this.grid.columnDragStart = this.triggerEvents.bind(this);\n        this.grid.columnDrop = this.triggerEvents.bind(this);\n        this.grid.beforePrint = this.triggerEvents.bind(this);\n        this.grid.beforeCopy = this.triggerEvents.bind(this);\n        this.grid.beforePaste = function (args) {\n            var rows = _this.getRows();\n            var rowIndex = 'rowIndex';\n            while (rows[args[rowIndex]].classList.contains('e-summaryrow')) {\n                args[rowIndex]++;\n            }\n            _this.trigger(events.beforePaste, args);\n        };\n        this.grid.load = function () {\n            _this.grid.on('initial-end', _this.afterGridRender, _this);\n            if (!isNullOrUndefined(_this.loggerModule)) {\n                var loggerModule = 'loggerModule';\n                _this.loggerModule = _this.grid[loggerModule] = new TreeLogger(_this.grid);\n            }\n        };\n        this.grid.printComplete = this.triggerEvents.bind(this);\n        this.grid.actionFailure = this.triggerEvents.bind(this);\n        this.extendedGridDataBoundEvent();\n        this.extendedGridEvents();\n        this.extendedGridActionEvents();\n        this.extendedGridEditEvents();\n        this.bindGridDragEvents();\n        this.bindCallBackEvents();\n    };\n    TreeGrid.prototype.lastRowBorder = function (visiblerow, isAddBorder) {\n        for (var j = 0; j < visiblerow.cells.length; j++) {\n            if (isAddBorder) {\n                addClass([visiblerow.cells[j]], 'e-lastrowcell');\n            }\n            else {\n                removeClass([visiblerow.cells[j]], 'e-lastrowcell');\n            }\n        }\n    };\n    TreeGrid.prototype.isPixelHeight = function () {\n        if (this.height !== 'auto' && this.height.toString().indexOf('%') === -1) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    TreeGrid.prototype.extendedGridDataBoundEvent = function () {\n        var _this = this;\n        this.grid.dataBound = function (args) {\n            _this.updateRowTemplate();\n            _this.updateColumnModel();\n            _this.updateAltRow(_this.getRows());\n            _this.notify('dataBoundArg', args);\n            if (isRemoteData(_this) && !isOffline(_this) && !_this.hasChildMapping) {\n                var req = getObject('dataSource.requests', _this).filter(function (e) {\n                    return e.httpRequest.statusText !== 'OK';\n                }).length;\n                setValue('grid.contentModule.isLoaded', !(req > 0), _this);\n            }\n            if (_this.isPixelHeight() && _this.initialRender) {\n                var rows = _this.getContentTable().rows;\n                var totalRows = [].slice.call(rows);\n                for (var i = totalRows.length - 1; i > 0; i--) {\n                    if (!isHidden(totalRows[i])) {\n                        if (totalRows[i].nextElementSibling) {\n                            _this.lastRowBorder(totalRows[i], true);\n                        }\n                        break;\n                    }\n                }\n            }\n            _this.trigger(events.dataBound, args);\n            _this.initialRender = false;\n        };\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        var treeGrid = this;\n        this.grid.beforeDataBound = function (args) {\n            var dataSource = 'dataSource';\n            var requestType = getObject('action', args);\n            if (((isRemoteData(treeGrid) && !isOffline(treeGrid)) || isCountRequired(this)) && requestType !== 'edit') {\n                treeGrid.notify('updateRemoteLevel', args);\n                args = (treeGrid.dataResults);\n            }\n            else if (treeGrid.flatData.length === 0 && isOffline(treeGrid) && treeGrid.dataSource instanceof DataManager) {\n                var dm = treeGrid.dataSource;\n                treeGrid.dataModule.convertToFlatData(dm.dataSource.json);\n                args.result = treeGrid.grid.dataSource[dataSource].json = treeGrid.flatData;\n            }\n            if (!isRemoteData(treeGrid) && !isCountRequired(this) && !isNullOrUndefined(treeGrid.dataSource)) {\n                if (this.isPrinting) {\n                    setValue('isPrinting', true, args);\n                }\n                treeGrid.notify('dataProcessor', args);\n                //args = treeGrid.dataModule.dataProcessor(args);\n            }\n            extend(args, treeGrid.dataResults);\n            if (treeGrid.enableImmutableMode) {\n                args.result = args.result.slice();\n            }\n            if (treeGrid.initialRender) {\n                this.contentModule.objectEqualityChecker = treeGrid.objectEqualityChecker;\n            }\n            // treeGrid.notify(events.beforeDataBound, args);\n            if (!this.isPrinting) {\n                var callBackPromise_1 = new Deferred();\n                treeGrid.trigger(events.beforeDataBound, args, function (beforeDataBoundArgs) {\n                    callBackPromise_1.resolve(beforeDataBoundArgs);\n                });\n                return callBackPromise_1;\n            }\n        };\n        this.grid.log = function (type, args) {\n            if (_this.loggerModule) {\n                _this.loggerModule.log(type, args);\n            }\n        };\n    };\n    TreeGrid.prototype.bindCallBackEvents = function () {\n        var _this = this;\n        this.grid.toolbarClick = function (args) {\n            if ((args.item.id === _this.grid.element.id + '_excelexport' && _this.allowExcelExport === false) ||\n                (args.item.id === _this.grid.element.id + '_pdfexport' && _this.allowPdfExport === false) ||\n                (args.item.id === _this.grid.element.id + '_csvexport' && _this.allowExcelExport === false)) {\n                return;\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.toolbarClick, args, function (toolbarargs) {\n                if (!toolbarargs.cancel) {\n                    _this.notify(events.toolbarClick, args);\n                }\n                callBackPromise.resolve(toolbarargs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSelecting = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(getObject('name', args), args, function (cellselectingArgs) {\n                callBackPromise.resolve(cellselectingArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.beginEdit = function (args) {\n            if (!isNullOrUndefined(args.row) && args.row.classList.contains('e-summaryrow')) {\n                args.cancel = true;\n                return;\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.beginEdit, args, function (begineditArgs) {\n                callBackPromise.resolve(begineditArgs);\n            });\n            return callBackPromise;\n        };\n    };\n    TreeGrid.prototype.extendedGridEditEvents = function () {\n        var _this = this;\n        this.grid.dataStateChange = function (args) {\n            if (_this.isExpandRefresh) {\n                _this.isExpandRefresh = false;\n                _this.grid.dataSource = { result: _this.flatData, count: getValue('count', _this.grid.dataSource) };\n            }\n            else {\n                _this.trigger(events.dataStateChange, args);\n            }\n        };\n        this.grid.cellSave = function (args) {\n            if (_this.grid.isContextMenuOpen()) {\n                var contextitems = _this.grid.contextMenuModule.contextMenu.element.getElementsByClassName('e-selected')[0];\n                if ((isNullOrUndefined(contextitems) || contextitems.id !== _this.element.id + '_gridcontrol_cmenu_Save')) {\n                    args.cancel = true;\n                }\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.cellSave, args, function (cellsaveArgs) {\n                if (!cellsaveArgs.cancel) {\n                    _this.notify(events.cellSave, cellsaveArgs);\n                }\n                callBackPromise.resolve(cellsaveArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSaved = function (args) {\n            _this.trigger(events.cellSaved, args);\n            _this.notify(events.cellSaved, args);\n        };\n        this.grid.cellEdit = function (args) {\n            var prom = 'promise';\n            var promise = new Deferred();\n            args[prom] = promise;\n            _this.notify(events.cellEdit, args);\n            return promise;\n        };\n        this.grid.batchAdd = function (args) {\n            _this.trigger(events.batchAdd, args);\n            _this.notify(events.batchAdd, args);\n        };\n        this.grid.beforeBatchSave = function (args) {\n            _this.trigger(events.beforeBatchSave, args);\n            _this.notify(events.beforeBatchSave, args);\n        };\n        this.grid.beforeBatchAdd = function (args) {\n            _this.trigger(events.beforeBatchAdd, args);\n            _this.notify(events.beforeBatchAdd, args);\n        };\n        this.grid.batchDelete = function (args) {\n            _this.trigger(events.batchDelete, args);\n            _this.notify(events.batchDelete, args);\n        };\n        this.grid.beforeBatchDelete = function (args) {\n            _this.trigger(events.beforeBatchDelete, args);\n            _this.notify(events.beforeBatchDelete, args);\n        };\n        this.grid.batchCancel = function (args) {\n            if (_this.editSettings.mode !== 'Cell') {\n                _this.trigger(events.batchCancel, args);\n            }\n            _this.notify(events.batchCancel, args);\n        };\n    };\n    TreeGrid.prototype.updateRowTemplate = function () {\n        this.treeColumnRowTemplate();\n    };\n    TreeGrid.prototype.bindedDataSource = function () {\n        var dataSource = 'dataSource';\n        var isDataAvailable = 'isDataAvailable';\n        var adaptor = 'adaptor';\n        var ready = 'ready';\n        if (this.dataSource && isCountRequired(this)) {\n            var data = this.flatData;\n            var datacount = getValue('count', this.dataSource);\n            this.grid.dataSource = { result: data, count: datacount };\n        }\n        else {\n            this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n                this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        }\n        if (this.dataSource instanceof DataManager && (this.dataSource.dataSource.offline || this.dataSource.ready)) {\n            this.grid.dataSource[dataSource].json = extendArray(this.dataSource[dataSource].json);\n            this.grid.dataSource[ready] = this.dataSource.ready;\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            var proxy_1 = this;\n            if (!isNullOrUndefined(this.grid.dataSource[ready])) {\n                this.grid.dataSource[ready].then(function (e) {\n                    var dm = proxy_1.grid.dataSource;\n                    dm[dataSource].offline = true;\n                    dm[isDataAvailable] = true;\n                    dm[dataSource].json = e.result;\n                    dm[adaptor] = new JsonAdaptor();\n                });\n            }\n        }\n    };\n    TreeGrid.prototype.extendedGridActionEvents = function () {\n        var _this = this;\n        this.grid.actionBegin = function (args) {\n            if (args.requestType === 'sorting' && args.target && args.target.parentElement &&\n                args.target.parentElement.classList.contains('e-hierarchycheckbox')) {\n                args.cancel = true;\n            }\n            var requestType = getObject('requestType', args);\n            if (requestType === 'reorder') {\n                _this.notify('getColumnIndex', {});\n            }\n            _this.notify('actionBegin', { editAction: args });\n            if (!isRemoteData(_this) && !isNullOrUndefined(_this.filterModule) && !isCountRequired(_this)\n                && (_this.grid.filterSettings.columns.length === 0 || _this.grid.searchSettings.key.length === 0)) {\n                _this.notify('clearFilters', { flatData: _this.grid.dataSource });\n                _this.grid.setProperties({ dataSource: _this.dataResults.result }, true);\n                if (isNullOrUndefined(_this.grid['changedProperties'].dataSource)) {\n                    _this.grid.renderModule.data.dataManager = _this.grid.dataSource instanceof DataManager ? _this.grid.dataSource :\n                        (isNullOrUndefined(_this.grid.dataSource) ? new DataManager() : new DataManager(_this.grid.dataSource));\n                }\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.actionBegin, args, function (actionArgs) {\n                if (!actionArgs.cancel) {\n                    _this.notify(events.beginEdit, actionArgs);\n                }\n                callBackPromise.resolve(actionArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.actionComplete = function (args) {\n            _this.notify('actioncomplete', args);\n            _this.updateColumnModel();\n            _this.updateTreeGridModel();\n            if (args.requestType === 'reorder') {\n                _this.notify('setColumnIndex', {});\n            }\n            _this.notify('actionComplete', { editAction: args });\n            if (args.requestType === 'add' && (_this.editSettings.newRowPosition !== 'Top' && _this.editSettings.newRowPosition !== 'Bottom')) {\n                _this.notify(events.beginAdd, args);\n            }\n            if (args.requestType === 'batchsave') {\n                _this.notify(events.batchSave, args);\n            }\n            _this.notify('updateGridActions', args);\n            if (args.requestType === 'save' && _this.aggregates.map(function (ag) { return ag.showChildSummary === true; }).length) {\n                _this.grid.refresh();\n            }\n            _this.trigger(events.actionComplete, args);\n        };\n    };\n    TreeGrid.prototype.extendedGridEvents = function () {\n        var _this = this;\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        var treeGrid = this;\n        this.grid.recordDoubleClick = function (args) {\n            _this.trigger(events.recordDoubleClick, args);\n            _this.notify(events.recordDoubleClick, args);\n        };\n        this.grid.detailDataBound = function (args) {\n            _this.notify('detaildataBound', args);\n            _this.trigger(events.detailDataBound, args);\n        };\n        this.grid.rowDataBound = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.RowModifier(args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.cellRender(args);\n        };\n        this.grid.contextMenuClick = function (args) {\n            _this.notify(events.contextMenuClick, args);\n            _this.trigger(events.contextMenuClick, args);\n        };\n        this.grid.contextMenuOpen = function (args) {\n            _this.notify(events.contextMenuOpen, args);\n            _this.trigger(events.contextMenuOpen, args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            _this.renderModule.cellRender(args);\n        };\n    };\n    TreeGrid.prototype.bindGridDragEvents = function () {\n        var _this = this;\n        this.grid.rowDragStartHelper = function (args) {\n            _this.trigger(events.rowDragStartHelper, args);\n        };\n        this.grid.rowDragStart = function (args) {\n            _this.trigger(events.rowDragStart, args);\n        };\n        this.grid.rowDrag = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            _this.notify(events.rowdraging, args);\n            _this.trigger(events.rowDrag, args);\n        };\n        this.grid.rowDrop = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            _this.notify(events.rowDropped, args);\n            args.cancel = true;\n        };\n    };\n    /**\n     * Renders TreeGrid component\n     *\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.loadGrid = function () {\n        this.bindGridProperties();\n        this.bindGridEvents();\n        setValue('registeredTemplate', this.registeredTemplate, this.grid);\n        var ref = 'viewContainerRef';\n        setValue('viewContainerRef', this[ref], this.grid);\n    };\n    /**\n     * AutoGenerate TreeGrid columns from first record\n     *\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.autoGenerateColumns = function () {\n        if (!this.columns.length && (!this.dataModule.isRemote() && Object.keys(this.dataSource).length)) {\n            this.columns = [];\n            // if (this.dataSource instanceof DataManager) {\n            //   record = (<DataManager>this.dataSource).dataSource.json[0];\n            // } else {\n            var record = this.dataSource[0];\n            // }\n            var keys = Object.keys(record);\n            for (var i = 0; i < keys.length; i++) {\n                if ([this.childMapping, this.parentIdMapping].indexOf(keys[i]) === -1) {\n                    this.columns.push(keys[i]);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.getGridEditSettings = function () {\n        var edit = {};\n        var guid = 'guid';\n        edit.allowAdding = this.editSettings.allowAdding;\n        edit.allowEditing = this.editSettings.allowEditing;\n        edit.allowDeleting = this.editSettings.allowDeleting;\n        edit.newRowPosition = this.editSettings.newRowPosition === 'Bottom' ? 'Bottom' : 'Top';\n        edit.allowEditOnDblClick = this.editSettings.allowEditOnDblClick;\n        edit.showConfirmDialog = this.editSettings.showConfirmDialog;\n        edit.template = this.editSettings.template;\n        edit.showDeleteConfirmDialog = this.editSettings.showDeleteConfirmDialog;\n        edit.allowNextRowEdit = this.editSettings.allowNextRowEdit;\n        edit[guid] = this.editSettings[guid];\n        edit.dialog = this.editSettings.dialog;\n        switch (this.editSettings.mode) {\n            case 'Dialog':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Batch':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Row':\n                edit.mode = 'Normal';\n                break;\n            case 'Cell':\n                edit.mode = 'Normal';\n                edit.showConfirmDialog = false;\n                break;\n        }\n        return edit;\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     *\n     * @hidden\n     * @returns {Object[]} - returns context menu items\n     */\n    TreeGrid.prototype.getContextMenu = function () {\n        if (this.contextMenuItems) {\n            var items = [];\n            for (var i = 0; i < this.contextMenuItems.length; i++) {\n                switch (this.contextMenuItems[i]) {\n                    case 'AddRow':\n                    case ContextMenuItems.AddRow:\n                        items.push({ text: this.l10n.getConstant('AddRow'),\n                            target: '.e-content', id: this.element.id + '_gridcontrol_cmenu_AddRow',\n                            items: [{ text: this.l10n.getConstant('Above'), id: 'Above' }, { text: this.l10n.getConstant('Below'), id: 'Below' }, { text: this.l10n.getConstant('Child'), id: 'Child' }] });\n                        break;\n                    default:\n                        items.push(this.contextMenuItems[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     *\n     * @hidden\n     * @returns {Object[]} - Returns toolbar items\n     */\n    TreeGrid.prototype.getGridToolbar = function () {\n        if (this.toolbar) {\n            var items = [];\n            var tooltipText = void 0;\n            for (var i = 0; i < this.toolbar.length; i++) {\n                switch (this.toolbar[i]) {\n                    case 'Search':\n                    case ToolbarItem.Search:\n                        items.push('Search');\n                        break;\n                    case 'Print':\n                    case ToolbarItem.Print:\n                        items.push('Print');\n                        break;\n                    case 'ExpandAll':\n                    case ToolbarItem.ExpandAll:\n                        tooltipText = this.l10n.getConstant('ExpandAll');\n                        items.push({ text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-expand', id: this.element.id + '_gridcontrol_expandall' });\n                        break;\n                    case 'CollapseAll':\n                    case ToolbarItem.CollapseAll:\n                        tooltipText = this.l10n.getConstant('CollapseAll');\n                        items.push({ text: tooltipText,\n                            tooltipText: tooltipText, prefixIcon: 'e-collapse', id: this.element.id + '_gridcontrol_collapseall'\n                        });\n                        break;\n                    case 'Indent':\n                    case ToolbarItem.RowIndent:\n                        tooltipText = this.l10n.getConstant('RowIndent');\n                        items.push({\n                            text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-indent', id: this.element.id + '_gridcontrol_indent'\n                        });\n                        break;\n                    case 'Outdent':\n                    case ToolbarItem.RowOutdent:\n                        tooltipText = this.l10n.getConstant('RowOutdent');\n                        items.push({\n                            text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-outdent', id: this.element.id + '_gridcontrol_outdent'\n                        });\n                        break;\n                    default:\n                        items.push(this.toolbar[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    TreeGrid.prototype.getGridColumns = function (columns, isEmptyColumnModel, index) {\n        if (isEmptyColumnModel === void 0) { isEmptyColumnModel = true; }\n        if (index === void 0) { index = 0; }\n        var column = columns;\n        var stackedColumn = 'columns';\n        if (isEmptyColumnModel) {\n            this.columnModel = [];\n        }\n        var treeGridColumn;\n        var gridColumn;\n        index = index === 0 ? -1 : index;\n        var gridColumnCollection = [];\n        for (var i = 0; i < column.length; i++) {\n            index = index + 1;\n            var treeColumn = this.grid.getColumnByUid(column[i].uid);\n            gridColumn = treeColumn ? treeColumn : {};\n            treeGridColumn = {};\n            if (typeof this.columns[i] === 'string') {\n                gridColumn.field = treeGridColumn.field = this.columns[i];\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(column[i]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    if (index === this.treeColumnIndex && prop === 'template') {\n                        treeGridColumn[prop] = column[i][prop];\n                    }\n                    else if (prop === 'columns' && !isNullOrUndefined(column[i][prop])) {\n                        gridColumn[prop] = this.getGridColumns(column[i][prop], false, index);\n                        treeGridColumn[prop] = column[i][prop];\n                    }\n                    else {\n                        gridColumn[prop] = treeGridColumn[prop] = column[i][prop];\n                    }\n                }\n            }\n            if (!treeGridColumn[stackedColumn]) {\n                this.columnModel.push(new Column(treeGridColumn));\n            }\n            gridColumnCollection.push(gridColumn);\n        }\n        return gridColumnCollection;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     *\n     * @param {TreeGridModel} newProp - properties details which has to be modified\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.onPropertyChanged = function (newProp) {\n        var properties = Object.keys(newProp);\n        var requireRefresh = false;\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'columns':\n                    this.grid.columns = this.getGridColumns(this.columns);\n                    break;\n                case 'treeColumnIndex':\n                    this.grid.refreshColumns();\n                    break;\n                case 'allowPaging':\n                    this.grid.allowPaging = this.allowPaging;\n                    break;\n                case 'pageSettings':\n                    this.grid.pageSettings = getActualProperties(this.pageSettings);\n                    requireRefresh = true;\n                    break;\n                case 'enableVirtualization':\n                    this.grid.enableVirtualization = this.enableVirtualization;\n                    break;\n                case 'enableColumnVirtualization':\n                    this.grid.enableColumnVirtualization = this.enableColumnVirtualization;\n                    break;\n                case 'toolbar':\n                    this.grid.toolbar = this.getGridToolbar();\n                    break;\n                case 'allowSelection':\n                    this.grid.allowSelection = this.allowSelection;\n                    break;\n                case 'selectionSettings':\n                    this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n                    break;\n                case 'allowSorting':\n                    this.grid.allowSorting = this.allowSorting;\n                    break;\n                case 'allowMultiSorting':\n                    this.grid.allowMultiSorting = this.allowMultiSorting;\n                    break;\n                case 'sortSettings':\n                    this.grid.sortSettings = getActualProperties(this.sortSettings);\n                    break;\n                case 'searchSettings':\n                    this.grid.searchSettings = getActualProperties(this.searchSettings);\n                    break;\n                case 'allowFiltering':\n                    this.grid.allowFiltering = this.allowFiltering;\n                    break;\n                case 'filterSettings':\n                    if (!this.initialRender) {\n                        this.grid.filterSettings = getActualProperties(this.filterSettings);\n                    }\n                    break;\n                case 'showColumnMenu':\n                    this.grid.showColumnMenu = this.showColumnMenu;\n                    break;\n                case 'allowRowDragAndDrop':\n                    this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n                    break;\n                case 'aggregates':\n                    this.grid.aggregates = getActualProperties(this.aggregates);\n                    break;\n                case 'enableInfiniteScrolling':\n                    this.grid.enableInfiniteScrolling = this.enableInfiniteScrolling;\n                    break;\n                case 'dataSource':\n                    this.isLocalData = (!(this.dataSource instanceof DataManager) || (!isNullOrUndefined(this.dataSource.ready))\n                        || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n                    this.convertTreeData(this.dataSource);\n                    if (this.isLocalData) {\n                        if (isCountRequired(this)) {\n                            var count = getValue('count', this.dataSource);\n                            this.grid.dataSource = { result: this.flatData, count: count };\n                        }\n                        else {\n                            var data = this.dataSource;\n                            this.grid.dataSource = !(data instanceof DataManager) ?\n                                this.flatData : new DataManager(data.dataSource, data.defaultQuery, data.adaptor);\n                        }\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.isDataSourceChanged = true;\n                        }\n                    }\n                    else {\n                        this.bindedDataSource();\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.removeEventListener();\n                            this.grid.contentModule.eventListener('on');\n                            this.grid.contentModule.renderTable();\n                        }\n                    }\n                    break;\n                case 'query':\n                    this.grid.query = this.query;\n                    break;\n                case 'enableCollapseAll':\n                    if (newProp[prop]) {\n                        this.collapseAll();\n                    }\n                    else {\n                        this.expandAll();\n                    }\n                    break;\n                case 'expandStateMapping':\n                    this.grid.refresh();\n                    break;\n                case 'gridLines':\n                    this.grid.gridLines = this.gridLines;\n                    break;\n                case 'rowTemplate':\n                    this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n                    break;\n                case 'frozenRows':\n                    this.grid.frozenRows = this.frozenRows;\n                    break;\n                case 'frozenColumns':\n                    this.grid.frozenColumns = this.frozenColumns;\n                    break;\n                case 'rowHeight':\n                    this.grid.rowHeight = this.rowHeight;\n                    break;\n                case 'height':\n                    if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                        this.element.style.height = this.height;\n                    }\n                    this.grid.height = this.height;\n                    break;\n                case 'width':\n                    if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                        this.element.style.width = this.width;\n                    }\n                    this.grid.width = this.width;\n                    break;\n                case 'locale':\n                    this.grid.locale = this.locale;\n                    break;\n                case 'selectedRowIndex':\n                    this.grid.selectedRowIndex = this.selectedRowIndex;\n                    break;\n                case 'enableAltRow':\n                    this.grid.enableAltRow = this.enableAltRow;\n                    break;\n                case 'enableHover':\n                    this.grid.enableHover = this.enableHover;\n                    break;\n                case 'enableAutoFill':\n                    this.grid.enableAutoFill = this.enableAutoFill;\n                    break;\n                case 'enableImmutableMode':\n                    this.grid.enableImmutableMode = this.enableImmutableMode;\n                    break;\n                case 'allowExcelExport':\n                    this.grid.allowExcelExport = this.allowExcelExport;\n                    break;\n                case 'allowPdfExport':\n                    this.grid.allowPdfExport = this.allowPdfExport;\n                    break;\n                case 'enableRtl':\n                    this.grid.enableRtl = this.enableRtl;\n                    break;\n                case 'allowReordering':\n                    this.grid.allowReordering = this.allowReordering;\n                    break;\n                case 'allowResizing':\n                    this.grid.allowResizing = this.allowResizing;\n                    break;\n                case 'textWrapSettings':\n                    this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n                    break;\n                case 'allowTextWrap':\n                    this.grid.allowTextWrap = getActualProperties(this.allowTextWrap);\n                    this.grid.refresh();\n                    break;\n                case 'contextMenuItems':\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'showColumnChooser':\n                    this.grid.showColumnChooser = this.showColumnChooser;\n                    break;\n                case 'detailTemplate':\n                    this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n                    break;\n                case 'columnMenuItems':\n                    this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n                    break;\n                case 'editSettings':\n                    if (this.grid.isEdit && this.grid.editSettings.mode === 'Normal' && newProp[prop].mode &&\n                        (newProp[prop].mode === 'Cell' || newProp[prop].mode === 'Row')) {\n                        this.grid.closeEdit();\n                    }\n                    this.grid.editSettings = this.getGridEditSettings();\n                    break;\n            }\n            if (requireRefresh) {\n                this.grid.refresh();\n            }\n        }\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     *\n     * @method destroy\n     * @returns {void}\n     */\n    TreeGrid.prototype.destroy = function () {\n        var treeGridElement = this.element;\n        if (!treeGridElement) {\n            return;\n        }\n        var hasTreeGridChild = treeGridElement.querySelector('.' + 'e-gridheader') &&\n            treeGridElement.querySelector('.' + 'e-gridcontent') ? true : false;\n        if (hasTreeGridChild) {\n            this.unwireEvents();\n        }\n        this.removeListener();\n        if (hasTreeGridChild) {\n            _super.prototype.destroy.call(this);\n        }\n        if (this.grid) {\n            this.grid.destroy();\n        }\n        if (this.dataModule) {\n            this.dataModule.destroy();\n        }\n        var modules = ['dataModule', 'sortModule', 'renderModule', 'filterModule', 'printModule', 'clipboardModule',\n            'excelExportModule', 'pdfExportModule', 'toolbarModule', 'summaryModule', 'reorderModule', 'resizeModule',\n            'pagerModule', 'keyboardModule', 'columnMenuModule', 'contextMenuModule', 'editModule', 'virtualScrollModule',\n            'selectionModule', 'detailRow', 'rowDragAndDropModule', 'freezeModule'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[i]]) {\n                this[modules[i]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        this.grid = null;\n    };\n    /**\n     * Update the TreeGrid model\n     *\n     * @method dataBind\n     * @returns {void}\n     * @private\n     */\n    TreeGrid.prototype.dataBind = function () {\n        if (isNullOrUndefined(this.grid)) {\n            return;\n        }\n        if (!isNullOrUndefined(this.rowDropSettings.targetID) &&\n            isNullOrUndefined(document.getElementById(this.grid.rowDropSettings.targetID))) {\n            document.getElementById(this.rowDropSettings.targetID).id = this.grid.rowDropSettings.targetID;\n            this.rowDropSettings.targetID = this.grid.rowDropSettings.targetID;\n        }\n        _super.prototype.dataBind.call(this);\n        this.grid.dataBind();\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     *\n     * @returns {string} - Returns persist properties details\n     * @hidden\n     */\n    TreeGrid.prototype.getPersistData = function () {\n        var keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'columns', 'searchSettings', 'selectedRowIndex', 'treeColumnIndex'];\n        var ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'pageSizeMode', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent', 'hierarchyMode'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: []\n        };\n        var ignoreOnColumn = ['filter', 'edit', 'filterBarTemplate', 'headerTemplate', 'template',\n            'commandTemplate', 'commands', 'dataSource'];\n        for (var i = 0; i < keyEntity.length; i++) {\n            var currentObject = this[keyEntity[i]];\n            for (var k = 0, val = ignoreOnPersist[keyEntity[i]]; (!isNullOrUndefined(val) && k < val.length); k++) {\n                var objVal = val[k];\n                delete currentObject[objVal];\n            }\n        }\n        this.ignoreInArrays(ignoreOnColumn, this.columns);\n        return this.addOnPersist(keyEntity);\n    };\n    TreeGrid.prototype.ignoreInArrays = function (ignoreOnColumn, columns) {\n        for (var i = 0; i < columns.length; i++) {\n            if (columns[i].columns) {\n                this.ignoreInColumn(ignoreOnColumn, columns[i]);\n                this.ignoreInArrays(ignoreOnColumn, columns[i].columns);\n            }\n            else {\n                this.ignoreInColumn(ignoreOnColumn, columns[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.ignoreInColumn = function (ignoreOnColumn, column) {\n        for (var i = 0; i < ignoreOnColumn.length; i++) {\n            delete column[ignoreOnColumn[i]];\n            column.filter = {};\n        }\n    };\n    TreeGrid.prototype.mouseClickHandler = function (e) {\n        if (!isNullOrUndefined(e.touches)) {\n            return;\n        }\n        var target = e.target;\n        if ((target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && (!this.isEditCollapse && !this.grid.isEdit)) {\n            this.expandCollapseRequest(target);\n        }\n        this.isEditCollapse = false;\n        this.notify('checkboxSelection', { target: target });\n    };\n    /**\n     * Returns TreeGrid rows\n     *\n     * @returns {HTMLTableRowElement[]} - Returns row elements collection\n     */\n    TreeGrid.prototype.getRows = function () {\n        return this.grid.getRows();\n    };\n    /**\n     * Gets the pager of the TreeGrid.\n     *\n     * @returns {Element} - Returns pager element\n     */\n    TreeGrid.prototype.getPager = function () {\n        return this.grid.getPager(); //get element from pager\n    };\n    /**\n     * Adds a new record to the TreeGrid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     *\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added.\n     * @param {RowPosition} position - Defines the new row position to be added.\n     * @returns {void}\n     */\n    TreeGrid.prototype.addRecord = function (data, index, position) {\n        if (this.editModule) {\n            var isAddedRowByMethod = 'isAddedRowByMethod';\n            this.editModule[isAddedRowByMethod] = true;\n            this.editModule.addRecord(data, index, position);\n        }\n    };\n    /**\n     * Cancels edited state.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.closeEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.closeEdit();\n        }\n    };\n    /**\n     * Saves the cell that is currently edited. It does not save the value to the DataSource.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.saveCell = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.saveCell();\n        }\n    };\n    /**\n     * To update the specified cell by given value without changing into edited state.\n     *\n     * @param {number} rowIndex Defines the row index.\n     * @param {string} field Defines the column field.\n     * @param {string | number | boolean | Date} value - Defines the value to be changed.\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateCell = function (rowIndex, field, value) {\n        if (this.grid.editModule) {\n            this.grid.editModule.updateCell(rowIndex, field, value);\n        }\n    };\n    /**\n     * To update the specified row by given values without changing into edited state.\n     *\n     * @param {number} index Defines the row index.\n     * @param {Object} data Defines the data object to be updated.\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateRow = function (index, data) {\n        if (this.grid.editModule) {\n            if (!isNullOrUndefined(index)) {\n                var griddata = this.grid.getCurrentViewRecords()[index];\n                extend(griddata, data);\n                this.grid.editModule.updateRow(index, griddata);\n            }\n            else {\n                this.grid.editModule.updateRow(index, data);\n            }\n        }\n    };\n    /**\n     * Delete a record with Given options. If fieldName and data is not given then TreeGrid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     *\n     * @param {string} fieldName - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     * @returns {void}\n     */\n    TreeGrid.prototype.deleteRecord = function (fieldName, data) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRecord(fieldName, data);\n        }\n    };\n    /**\n     * To edit any particular row by TR element.\n     *\n     * @param {HTMLTableRowElement} row - Defines the table row to be edited.\n     * @returns {void}\n     */\n    TreeGrid.prototype.startEdit = function (row) {\n        if (this.grid.editModule) {\n            this.grid.editModule.startEdit(row);\n        }\n    };\n    /**\n     * To edit any particular cell using row index and cell index.\n     *\n     * @param {number} rowIndex - Defines row index to edit a particular cell.\n     * @param {string} field - Defines the field name of the column to perform cell edit.\n     * @returns {void}\n     */\n    TreeGrid.prototype.editCell = function (rowIndex, field) {\n        if (this.editModule) {\n            this.editModule.editCell(rowIndex, field);\n        }\n    };\n    /**\n     * Enables or disables ToolBar items.\n     *\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @returns {void}\n     */\n    TreeGrid.prototype.enableToolbarItems = function (items, isEnable) {\n        if (this.grid.toolbarModule) {\n            this.grid.toolbarModule.enableItems(items, isEnable);\n        }\n    };\n    /**\n     * If TreeGrid is in editable state, you can save a record by invoking endEdit.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.endEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.endEdit();\n        }\n    };\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     *\n     * @param {number} x - Defines the X axis.\n     * @param {number} y - Defines the Y axis.\n     * @returns {void}\n     */\n    TreeGrid.prototype.openColumnChooser = function (x, y) {\n        if (this.columnChooserModule) {\n            this.columnChooserModule.openColumnChooser(x, y);\n        }\n    };\n    /**\n     * Delete any visible row by TR element.\n     *\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     * @returns {void}\n     */\n    TreeGrid.prototype.deleteRow = function (tr) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRow(tr);\n        }\n    };\n    /**\n     * Get the names of the primary key columns of the TreeGrid.\n     *\n     * @returns {string[]} - Returns primary key collection\n     */\n    TreeGrid.prototype.getPrimaryKeyFieldNames = function () {\n        return this.grid.getPrimaryKeyFieldNames();\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     * @returns {void}\n     */\n    TreeGrid.prototype.setCellValue = function (key, field, value) {\n        this.grid.setCellValue(key, field, value);\n        var rowIndex = this.grid.getRowIndexByPrimaryKey(key);\n        var record = this.getCurrentViewRecords()[rowIndex];\n        if (!isNullOrUndefined(record)) {\n            editAction({ value: record, action: 'edit' }, this, this.isSelfReference, record.index, this.grid.selectedRowIndex, field);\n        }\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *\n     *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     *  @param {Object} rowData - To update new data for the particular row.\n     * @returns {void}\n     */\n    TreeGrid.prototype.setRowData = function (key, rowData) {\n        var currentRecords = this.getCurrentViewRecords();\n        var primaryKey = this.grid.getPrimaryKeyFieldNames()[0];\n        var level = 0;\n        var record = {};\n        currentRecords.some(function (value) {\n            if (value[primaryKey] === key) {\n                record = value;\n                return true;\n            }\n            else {\n                return false;\n            }\n        });\n        level = record.level;\n        rowData.level = level;\n        rowData.index = record.index;\n        rowData.childRecords = record.childRecords;\n        rowData.taskData = record.taskData;\n        rowData.uniqueID = record.uniqueID;\n        rowData.parentItem = record.parentItem;\n        rowData.checkboxState = record.checkboxState;\n        rowData.hasChildRecords = record.hasChildRecords;\n        rowData.parentUniqueID = record.parentUniqueID;\n        rowData.expanded = record.expanded;\n        this.grid.setRowData(key, rowData);\n    };\n    /**\n     * Navigates to the specified target page.\n     *\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @returns {void}\n     */\n    TreeGrid.prototype.goToPage = function (pageNo) {\n        if (this.grid.pagerModule) {\n            this.grid.pagerModule.goToPage(pageNo);\n        }\n    };\n    /**\n     * Defines the text of external message.\n     *\n     * @param  {string} message - Defines the message to update.\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateExternalMessage = function (message) {\n        if (this.pagerModule) {\n            this.grid.pagerModule.updateExternalMessage(message);\n        }\n    };\n    /**\n     * Gets a cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @returns {Element} - Returns cell element in grid content\n     */\n    TreeGrid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a Column by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {Column} - Returns tree grid column\n     */\n    TreeGrid.prototype.getColumnByField = function (field) {\n        return iterateArrayOrObject(this.columnModel, function (item) {\n            if (item.field === field) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets a column by UID.\n     *\n     * @param  {string} uid - Specifies the column UID.\n     * @returns {Column} - Returns tree grid column\n     */\n    TreeGrid.prototype.getColumnByUid = function (uid) {\n        var Columns = this.initialRender ? this.grid.columns : this.columns;\n        return iterateArrayOrObject(Columns, function (item) {\n            if (item.uid === uid) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets the collection of column fields.\n     *\n     * @returns {string[]} - Returns column field name as collection\n     */\n    TreeGrid.prototype.getColumnFieldNames = function () {\n        return this.grid.getColumnFieldNames();\n    };\n    /**\n     * Gets the footer div of the TreeGrid.\n     *\n     * @returns {Element} - Returns footer content div element\n     */\n    TreeGrid.prototype.getFooterContent = function () {\n        return this.grid.getFooterContent();\n    };\n    /**\n     * Gets the footer table element of the TreeGrid.\n     *\n     * @returns {Element} - Returns footer content table element\n     */\n    TreeGrid.prototype.getFooterContentTable = function () {\n        return this.grid.getFooterContentTable();\n    };\n    /**\n     * Shows a column by its column name.\n     *\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @returns {void}\n     */\n    TreeGrid.prototype.showColumns = function (keys, showBy) {\n        this.grid.showColumns(keys, showBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Hides a column by column name.\n     *\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @returns {void}\n     */\n    TreeGrid.prototype.hideColumns = function (keys, hideBy) {\n        this.grid.hideColumns(keys, hideBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Gets a column header by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {Element} - Returns column header element\n     */\n    TreeGrid.prototype.getColumnHeaderByField = function (field) {\n        return this.grid.getColumnHeaderByField(field);\n    };\n    /**\n     * Gets a column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} - Returns column header element\n     */\n    TreeGrid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a column header by UID.\n     *\n     * @param {string} uid - Specifies the column uid.\n     * @returns {Element} - Returns column header element\n     */\n    TreeGrid.prototype.getColumnHeaderByUid = function (uid) {\n        return this.grid.getColumnHeaderByUid(uid);\n    };\n    /**\n     * Gets a column index by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {number} - Returns column index\n     */\n    TreeGrid.prototype.getColumnIndexByField = function (field) {\n        return this.grid.getColumnIndexByField(field);\n    };\n    TreeGrid.prototype.getVirtualColIndexByUid = function (uid) {\n        var columnModel = 'columnModel';\n        var index = iterateArrayOrObject(this.grid[columnModel], function (item, index) {\n            if (item.uid === uid) {\n                return index;\n            }\n            return undefined;\n        })[0];\n        return !isNullOrUndefined(index) ? index : -1;\n    };\n    /**\n     * Gets a column index by UID.\n     *\n     * @param  {string} uid - Specifies the column UID.\n     * @returns {number} - Returns column index\n     */\n    TreeGrid.prototype.getColumnIndexByUid = function (uid) {\n        return this.grid.getColumnIndexByUid(uid);\n    };\n    /**\n     * Gets the columns from the TreeGrid.\n     *\n     * @param {boolean} isRefresh - Defined whether to update DOM\n     * @returns {Column[]} - Returns treegrid columns collection\n     */\n    TreeGrid.prototype.getColumns = function (isRefresh) {\n        this.updateColumnModel(this.grid.getColumns(isRefresh));\n        return this.columnModel;\n    };\n    TreeGrid.prototype.updateColumnModel = function (column) {\n        var temp;\n        var field;\n        var gridColumns = isNullOrUndefined(column) ? this.grid.getColumns() : column;\n        if (this.treeColumnIndex !== -1 && this.columnModel[this.treeColumnIndex] &&\n            !isNullOrUndefined(this.columnModel[this.treeColumnIndex].template)) {\n            temp = this.columnModel[this.treeColumnIndex].template;\n            field = this.columnModel[this.treeColumnIndex].field;\n        }\n        var stackedHeader = false;\n        var gridColumn;\n        if (!this.enableColumnVirtualization || (this.enableColumnVirtualization && this.columnModel.length === gridColumns.length)) {\n            this.columnModel = [];\n            for (var i = 0; i < gridColumns.length; i++) {\n                gridColumn = {};\n                for (var _i = 0, _a = Object.keys(gridColumns[i]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    gridColumn[prop] = gridColumns[i][prop];\n                }\n                this.columnModel.push(new Column(gridColumn));\n                if (field === this.columnModel[i].field && (!isNullOrUndefined(temp) && temp !== '')) {\n                    this.columnModel[i].template = temp;\n                }\n            }\n        }\n        var merge = 'deepMerge';\n        this[merge] = ['columns']; // Workaround for blazor updateModel\n        if (this.grid.columns.length !== this.columnModel.length) {\n            stackedHeader = true;\n        }\n        if (!stackedHeader) {\n            this.setProperties({ columns: this.columnModel }, true);\n        }\n        this[merge] = undefined; // Workaround for blazor updateModel\n        return this.columnModel;\n    };\n    /**\n     * Gets the content div of the TreeGrid.\n     *\n     * @returns {Element} - Return tree grid content element\n     */\n    TreeGrid.prototype.getContent = function () {\n        return this.grid.getContent();\n    };\n    TreeGrid.prototype.mergePersistTreeGridData = function () {\n        var persist1 = 'mergePersistGridData';\n        this.grid[persist1].apply(this);\n    };\n    TreeGrid.prototype.mergeColumns = function (storedColumn, columns) {\n        var persist2 = 'mergeColumns';\n        this.grid[persist2].apply(this, [storedColumn, columns]);\n    };\n    TreeGrid.prototype.updateTreeGridModel = function () {\n        this.setProperties({ filterSettings: getObject('properties', this.grid.filterSettings) }, true);\n        this.setProperties({ pageSettings: getObject('properties', this.grid.pageSettings) }, true);\n        this.setProperties({ searchSettings: getObject('properties', this.grid.searchSettings) }, true);\n        this.setProperties({ sortSettings: getObject('properties', this.grid.sortSettings) }, true);\n    };\n    /**\n     * Gets the content table of the TreeGrid.\n     *\n     * @returns {Element} - Returns content table element\n     */\n    TreeGrid.prototype.getContentTable = function () {\n        return this.grid.getContentTable();\n    };\n    /**\n     * Gets all the TreeGrid's data rows.\n     *\n     * @returns {Element[]} - Returns row elements\n     */\n    TreeGrid.prototype.getDataRows = function () {\n        var dRows = [];\n        var rows = this.grid.getDataRows();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (!rows[i].classList.contains('e-summaryrow')) {\n                dRows.push(rows[i]);\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Get current visible data of TreeGrid.\n     *\n     * @returns {Object[]} - Returns current view records\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCurrentViewRecords = function () {\n        return this.grid.currentViewData;\n    };\n    /**\n     * Gets the added, edited,and deleted data before bulk save to the DataSource in batch mode.\n     *\n     * @returns {Object} - Returns batch changes\n     */\n    TreeGrid.prototype.getBatchChanges = function () {\n        return this.grid.editModule.getBatchChanges();\n    };\n    /**\n     * Gets the header div of the TreeGrid.\n     *\n     * @returns {Element} - Returns Header content element\n     */\n    TreeGrid.prototype.getHeaderContent = function () {\n        return this.grid.getHeaderContent();\n    };\n    /**\n     * Gets the header table element of the TreeGrid.\n     *\n     * @returns {Element} - Return header table element\n     */\n    TreeGrid.prototype.getHeaderTable = function () {\n        return this.grid.getHeaderTable();\n    };\n    /**\n     * Gets a row by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} - Returns row element\n     */\n    TreeGrid.prototype.getRowByIndex = function (index) {\n        return this.grid.getRowByIndex(index);\n    };\n    /**\n     * Get a row information based on cell\n     *\n     * @param {Element | EventTarget} target - Target row element\n     * @returns {RowInfo} - Returns row information in a JSON object\n     */\n    TreeGrid.prototype.getRowInfo = function (target) {\n        return this.grid.getRowInfo(target);\n    };\n    /**\n     * Gets UID by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {string} - Returns unique id based on column field name given\n     */\n    TreeGrid.prototype.getUidByColumnField = function (field) {\n        return this.grid.getUidByColumnField(field);\n    };\n    /**\n     * Gets the visible columns from the TreeGrid.\n     *\n     * @returns {Column[]} - Returns visible columns collection\n     */\n    TreeGrid.prototype.getVisibleColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * By default, TreeGrid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.showSpinner = function () {\n        showSpinner(this.element);\n    };\n    /**\n     * Manually shown spinner needs to hide by `hideSpinnner`.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.hideSpinner = function () {\n        hideSpinner(this.element);\n    };\n    /**\n     * Refreshes the TreeGrid header and content.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.refresh = function () {\n        this.uniqueIDCollection = {};\n        this.convertTreeData(this.dataSource);\n        if (!isCountRequired(this)) {\n            this.grid.dataSource = !(this.dataSource instanceof DataManager) ? this.flatData :\n                new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        }\n        this.grid.refresh();\n    };\n    /**\n     * Get the records of checked rows.\n     *\n     * @returns {Object[]} - Returns records that has been checked\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCheckedRecords = function () {\n        return this.selectionModule.getCheckedrecords();\n    };\n    /**\n     * Get the visible records corresponding to rows visually displayed.\n     *\n     * @returns {Object[]} - Returns visible records based on collapse state of rows\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getVisibleRecords = function () {\n        var visibleRecords = [];\n        var currentViewRecords = this.getCurrentViewRecords();\n        if (!this.allowPaging) {\n            for (var i = 0; i < currentViewRecords.length; i++) {\n                visibleRecords.push(currentViewRecords[i]);\n                if (!currentViewRecords[i].expanded) {\n                    i += findChildrenRecords(currentViewRecords[i]).length;\n                }\n            }\n        }\n        else {\n            visibleRecords = currentViewRecords;\n        }\n        return visibleRecords;\n    };\n    /**\n     * Get the indexes of checked rows.\n     *\n     * @returns {number[]} - Returns checked row indexes\n     */\n    TreeGrid.prototype.getCheckedRowIndexes = function () {\n        return this.selectionModule.getCheckedRowIndexes();\n    };\n    /**\n     * Checked the checkboxes using rowIndexes.\n     *\n     * @param {number[]} indexes - row indexes\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectCheckboxes = function (indexes) {\n        this.selectionModule.selectCheckboxes(indexes);\n    };\n    /**\n     * Refreshes the TreeGrid column changes.\n     *\n     * @param {boolean} refreshUI - Defined whether to refresh the DOM\n     * @returns {void}\n     */\n    TreeGrid.prototype.refreshColumns = function (refreshUI) {\n        if (isNullOrUndefined(refreshUI) || refreshUI) {\n            this.grid.columns = this.getGridColumns(this.columns);\n            this.grid.refreshColumns();\n        }\n        else {\n            this.grid.setProperties({ columns: this.getGridColumns(this.columns) }, true);\n        }\n    };\n    /**\n     * Refreshes the TreeGrid header.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.refreshHeader = function () {\n        this.grid.refreshHeader();\n    };\n    /**\n     * Expands or collapse child records\n     *\n     * @param {HTMLElement} target - Expand collapse icon cell as target element\n     * @returns {void}\n     * @hidden\n     */\n    TreeGrid.prototype.expandCollapseRequest = function (target) {\n        if (this.editSettings.mode === 'Batch') {\n            var obj = 'dialogObj';\n            var showDialog = 'showDialog';\n            if (this.getBatchChanges()[this.changedRecords].length ||\n                this.getBatchChanges()[this.deletedRecords].length || this.getBatchChanges()[this.addedRecords].length) {\n                var dialogObj = this.grid.editModule[obj];\n                this.grid.editModule[showDialog]('CancelEdit', dialogObj);\n                this.targetElement = target;\n                return;\n            }\n        }\n        if (this.rowTemplate) {\n            var rowInfo = target.closest('.e-treerowcell').parentElement;\n            var record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo, record);\n            }\n            else {\n                this.expandRow(rowInfo, record);\n            }\n        }\n        else {\n            var rowInfo = this.grid.getRowInfo(target);\n            var record = rowInfo.rowData;\n            if (this.enableImmutableMode) {\n                record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            }\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo.row, record);\n            }\n            else {\n                this.expandRow(rowInfo.row, record);\n            }\n        }\n    };\n    /**\n     * Expands child rows\n     *\n     * @param {HTMLTableRowElement} row - Expands the given row\n     * @param {Object} record - Expands the given record\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        if (!isNullOrUndefined(row) && row.cells[0].classList.contains('e-lastrowcell')) {\n            this.lastRowBorder(row, false);\n        }\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.expanding, args, function (expandingArgs) {\n            if (!expandingArgs.cancel) {\n                _this.expandCollapse('expand', row, record);\n                var children = 'Children';\n                if (!(isRemoteData(_this) && !isOffline(_this)) && (!isCountRequired(_this) || !isNullOrUndefined(record[children]))) {\n                    var collapseArgs = { data: record, row: row };\n                    _this.setHeightForFrozenContent();\n                    _this.trigger(events.expanded, collapseArgs);\n                }\n            }\n        });\n    };\n    TreeGrid.prototype.setHeightForFrozenContent = function () {\n        var freeze = (this.grid.getFrozenLeftColumnsCount() > 0 || this.grid.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (this.grid.getFrozenColumns() > 0 || freeze) {\n            this.grid.contentModule.refreshScrollOffset();\n        }\n    };\n    TreeGrid.prototype.getCollapseExpandRecords = function (row, record) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && this.isExpandAll && isNullOrUndefined(record) &&\n            !isRemoteData(this)) {\n            record = this.flatData.filter(function (e) {\n                return e.hasChildRecords;\n            });\n        }\n        else if (isNullOrUndefined(record)) {\n            record = this.grid.getCurrentViewRecords()[row.rowIndex];\n        }\n        return record;\n    };\n    /**\n     * Collapses child rows\n     *\n     * @param {HTMLTableRowElement} row - Collapse the given row\n     * @param {Object} record - Collapse the given record\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.collapsing, args, function (collapsingArgs) {\n            if (!collapsingArgs.cancel) {\n                _this.expandCollapse('collapse', row, record);\n                var collapseArgs = { data: record, row: row };\n                if (!isRemoteData(_this)) {\n                    _this.setHeightForFrozenContent();\n                    _this.trigger(events.collapsed, collapseArgs);\n                    if (_this.enableInfiniteScrolling) {\n                        var scrollHeight = _this.grid.getContent().firstElementChild.scrollHeight;\n                        var scrollTop = _this.grid.getContent().firstElementChild.scrollTop;\n                        if ((scrollHeight - scrollTop) < _this.grid.getRowHeight() + +_this.height) {\n                            _this.grid.getContent().firstElementChild.scrollBy(0, _this.grid.getRowHeight());\n                        }\n                    }\n                }\n            }\n        });\n    };\n    /**\n     * Expands the records at specific hierarchical level\n     *\n     * @param {number} level - Expands the parent rows at given level\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var rec = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = true;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.expandRow(null, rec);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var row = getObject('rows', rec);\n            var record = getObject('records', rec);\n            for (var i = 0; i < record.length; i++) {\n                if (record[i].parentItem !== undefined) {\n                    var pindex = this.flatData[record[i].parentItem.index].index;\n                    if (this.flatData[pindex].expanded === false) {\n                        record.push(this.flatData[pindex]);\n                        this.flatData[pindex].expanded = true;\n                    }\n                }\n                this.expandRow(row[i], record[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.getRecordDetails = function (level) {\n        var rows = this.getRows().filter(function (e) {\n            return (e.className.indexOf('level' + level) !== -1\n                && (e.querySelector('.e-treegridcollapse') || e.querySelector('.e-treegridexpand')));\n        });\n        var records = this.getCurrentViewRecords().filter(function (e) {\n            return e.level === level && e.hasChildRecords;\n        });\n        var obj = { records: records, rows: rows };\n        return obj;\n    };\n    /**\n     * Collapses the records at specific hierarchical level\n     *\n     * @param {number} level - Define the parent row level which needs to be collapsed\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var record = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = false;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.collapseRow(null, record);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var rows = getObject('rows', rec);\n            var records = getObject('records', rec);\n            for (var i = 0; i < records.length; i++) {\n                this.collapseRow(rows[i], records[i]);\n            }\n        }\n        if (!this.grid.contentModule.isDataSourceChanged && this.enableVirtualization && this.getRows()\n            && this.parentData.length === this.getRows().length) {\n            var endIndex = 'endIndex';\n            this.grid.contentModule.startIndex = -1;\n            this.grid.contentModule[endIndex] = -1;\n        }\n    };\n    /**\n     * Expands All the rows\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandAll = function () {\n        this.expandCollapseAll('expand');\n    };\n    /**\n     * Collapses All the rows\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseAll = function () {\n        this.expandCollapseAll('collapse');\n    };\n    TreeGrid.prototype.expandCollapseAll = function (action) {\n        var rows = this.getRows().filter(function (e) {\n            return e.querySelector('.e-treegrid' + (action === 'expand' ? 'collapse' : 'expand'));\n        });\n        if (!rows.length && this.getRows().length) {\n            rows.push(this.getRows()[0]);\n        }\n        this.isExpandAll = true;\n        this.isCollapseAll = true;\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            this.flatData.filter(function (e) {\n                if (e.hasChildRecords) {\n                    e.expanded = action === 'collapse' ? false : true;\n                }\n            });\n            if (rows.length) {\n                if (action === 'collapse') {\n                    this.collapseRow(rows[0]);\n                }\n                else {\n                    this.expandRow(rows[0]);\n                }\n            }\n            else if (this.allowPaging) {\n                var isExpandCollapseall = this.enableCollapseAll;\n                this.setProperties({ enableCollapseAll: true }, true);\n                this.grid.pagerModule.goToPage(1);\n                this.setProperties({ enableCollapseAll: isExpandCollapseall }, true);\n            }\n        }\n        else {\n            for (var i = 0; i < rows.length; i++) {\n                if (action === 'collapse') {\n                    this.collapseRow(rows[i]);\n                }\n                else {\n                    this.expandRow(rows[i]);\n                }\n            }\n        }\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n    };\n    TreeGrid.prototype.expandCollapse = function (action, row, record, isChild) {\n        var expandingArgs = { row: row, data: record, childData: [], requestType: action };\n        var childRecords = this.getCurrentViewRecords().filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        var targetEle;\n        if (!isRemoteData(this) && action === 'expand' && this.isSelfReference && isCountRequired(this) && !childRecords.length) {\n            this.updateChildOnDemand(expandingArgs);\n        }\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var rowIndex;\n        if (isNullOrUndefined(row)) {\n            rowIndex = this.getCurrentViewRecords().indexOf(record);\n            row = gridRows[rowIndex];\n        }\n        else {\n            rowIndex = +row.getAttribute('aria-rowindex');\n        }\n        if (!isNullOrUndefined(row)) {\n            row.setAttribute('aria-expanded', action === 'expand' ? 'true' : 'false');\n        }\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)\n            && !isCountRequired(this)) {\n            this.notify(events.localPagedExpandCollapse, { action: action, row: row, record: record });\n        }\n        else {\n            var displayAction = void 0;\n            if (action === 'expand') {\n                displayAction = 'table-row';\n                if (!isChild) {\n                    record.expanded = true;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                if (!isNullOrUndefined(row)) {\n                    targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                }\n                if (isChild && !isNullOrUndefined(record[this.expandStateMapping]) &&\n                    record[this.expandStateMapping] && isNullOrUndefined(targetEle)) {\n                    targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                }\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                if (!targetEle.classList.contains('e-treegridexpand')) {\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n                removeClass([targetEle], 'e-treegridcollapse');\n            }\n            else {\n                displayAction = 'none';\n                if (!isChild || isCountRequired(this)) {\n                    record.expanded = false;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                if (!isNullOrUndefined(row)) {\n                    targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                }\n                if (isChild && !isNullOrUndefined(record[this.expandStateMapping]) &&\n                    !record[this.expandStateMapping] && isNullOrUndefined(targetEle)) {\n                    targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                }\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                if (!targetEle.classList.contains('e-treegridcollapse')) {\n                    addClass([targetEle], 'e-treegridcollapse');\n                }\n                removeClass([targetEle], 'e-treegridexpand');\n            }\n            var detailrows = gridRows.filter(function (r) {\n                return r.classList.contains('e-griddetailrowindex' + record.index + 'level' + (record.level + 1));\n            });\n            if (isRemoteData(this) && !isOffline(this)) {\n                this.remoteExpand(action, row, record);\n            }\n            else {\n                if ((!isCountRequired(this) || childRecords.length) || action === 'collapse') {\n                    this.localExpand(action, row, record);\n                }\n            }\n            if (this.isPixelHeight() && !row.cells[0].classList.contains('e-lastrowcell')) {\n                var totalRows = this.getRows();\n                var rows = this.getContentTable().rows;\n                totalRows = [].slice.call(rows);\n                for (var i = totalRows.length - 1; i > 0; i--) {\n                    if (!isHidden(totalRows[i])) {\n                        var table = this.getContentTable();\n                        var sHeight = table.scrollHeight;\n                        var clientHeight = this.getContent().clientHeight;\n                        this.lastRowBorder(totalRows[i], sHeight <= clientHeight);\n                        break;\n                    }\n                }\n            }\n            this.notify('rowExpandCollapse', { detailrows: detailrows, action: displayAction, record: record, row: row });\n            this.updateAltRow(gridRows);\n        }\n    };\n    TreeGrid.prototype.updateChildOnDemand = function (expandingArgs) {\n        var _this = this;\n        var deff = new Deferred();\n        var childDataBind = 'childDataBind';\n        expandingArgs[childDataBind] = deff.resolve;\n        var record = expandingArgs.data;\n        this.trigger(events.dataStateChange, expandingArgs);\n        deff.promise.then(function () {\n            if (expandingArgs.childData.length) {\n                var currentData = (_this.flatData);\n                var index = 0;\n                for (var i = 0; i < currentData.length; i++) {\n                    if (currentData[i].taskData === record.taskData) {\n                        index = i;\n                        break;\n                    }\n                }\n                var data_1 = getValue('result', _this.dataSource);\n                var childData = extendArray(expandingArgs.childData);\n                var length_1 = record[_this.childMapping] ? record[_this.childMapping].length > childData.length ?\n                    record[_this.childMapping].length : childData.length : childData.length;\n                for (var i = 0; i < length_1; i++) {\n                    if (record[_this.childMapping]) {\n                        data_1.filter(function (e, i) {\n                            if (e[_this.parentIdMapping] === record[_this.idMapping]) {\n                                data_1.splice(i, 1);\n                            }\n                        });\n                    }\n                    if (childData[i]) {\n                        childData[i].level = record.level + 1;\n                        childData[i].index = Math.ceil(Math.random() * 1000);\n                        childData[i].parentItem = extend({}, record);\n                        childData[i].taskData = extend({}, childData[i]);\n                        delete childData[i].parentItem.childRecords;\n                        delete childData[i].taskData.parentItem;\n                        childData[i].parentUniqueID = record.uniqueID;\n                        childData[i].uniqueID = getUid(_this.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + childData[i].uniqueID, childData[i], _this);\n                        if (!isNullOrUndefined(childData[i][_this.childMapping]) ||\n                            (childData[i][_this.hasChildMapping] && isCountRequired(_this))) {\n                            childData[i].hasChildRecords = true;\n                        }\n                        currentData.splice(index + 1 + i, record[_this.childMapping] && record[_this.childMapping][i] ? 1 : 0, childData[i]);\n                    }\n                    else {\n                        currentData.splice(index + 1 + i, 1);\n                    }\n                }\n                currentData[index][_this.childMapping] = childData;\n                currentData[index].childRecords = childData;\n                currentData[index].expanded = true;\n                setValue('uniqueIDCollection.' + currentData[index].uniqueID, currentData[index], _this);\n                for (var j = 0; j < expandingArgs.childData.length; j++) {\n                    data_1.push(expandingArgs.childData[j]);\n                }\n            }\n            _this.isExpandRefresh = true;\n            _this.grid.refresh();\n            _this.setHeightForFrozenContent();\n            _this.trigger(events.expanded, expandingArgs);\n        });\n    };\n    TreeGrid.prototype.remoteExpand = function (action, row, record) {\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_1 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_1);\n        }\n        var args = { data: record, row: row };\n        var rows = [];\n        rows = gridRows.filter(function (r) {\n            return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        if (action === 'expand') {\n            this.notify(events.remoteExpand, { record: record, rows: rows, parentRow: row });\n            var args_1 = { row: row, data: record };\n            if (rows.length > 0) {\n                this.setHeightForFrozenContent();\n                this.trigger(events.expanded, args_1);\n            }\n        }\n        else {\n            this.collapseRemoteChild({ record: record, rows: rows });\n            this.setHeightForFrozenContent();\n            this.trigger(events.collapsed, args);\n        }\n    };\n    TreeGrid.prototype.localExpand = function (action, row, record) {\n        var rows;\n        var childRecords = this.getCurrentViewRecords().filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        if (this.isPixelHeight() && row.cells[0].classList.contains('e-lastrowcell')) {\n            this.lastRowBorder(row, false);\n        }\n        var movableRows;\n        var freezeRightRows;\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_2 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_2);\n        }\n        var displayAction = (action === 'expand') ? 'table-row' : 'none';\n        var primaryKeyField = this.getPrimaryKeyFieldNames()[0];\n        if (this.enableImmutableMode && !this.allowPaging) {\n            rows = [];\n            for (var i = 0; i < childRecords.length; i++) {\n                var rowIndex = this.grid.getRowIndexByPrimaryKey(childRecords[i][primaryKeyField]);\n                rows.push(this.getRows()[rowIndex]);\n            }\n        }\n        else {\n            rows = gridRows.filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        var freeze = (this.grid.getFrozenLeftColumnsCount() > 0 || this.grid.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (this.frozenRows || this.frozenColumns || this.getFrozenColumns() || freeze) {\n            movableRows = this.getMovableRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        if (freeze) {\n            freezeRightRows = this.getFrozenRightRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        for (var i = 0; i < rows.length; i++) {\n            if (!isNullOrUndefined(rows[i])) {\n                rows[i].style.display = displayAction;\n            }\n            if (!isNullOrUndefined(movableRows)) {\n                movableRows[i].style.display = displayAction;\n            }\n            if (!isNullOrUndefined(freezeRightRows)) {\n                freezeRightRows[i].style.display = displayAction;\n            }\n            this.notify('childRowExpand', { row: rows[i] });\n            if (!isNullOrUndefined(childRecords[i].childRecords) && (action !== 'expand' ||\n                isNullOrUndefined(childRecords[i].expanded) || childRecords[i].expanded)) {\n                this.expandCollapse(action, rows[i], childRecords[i], true);\n                if (this.frozenColumns <= this.treeColumnIndex && !isNullOrUndefined(movableRows)) {\n                    this.expandCollapse(action, movableRows[i], childRecords[i], true);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.updateAltRow = function (rows) {\n        if (this.enableAltRow && !this.rowTemplate) {\n            var visibleRowCount = 0;\n            for (var i = 0; rows && i < rows.length; i++) {\n                var gridRow = rows[i];\n                if (gridRow.style.display !== 'none') {\n                    if (gridRow.classList.contains('e-altrow')) {\n                        removeClass([gridRow], 'e-altrow');\n                    }\n                    if (visibleRowCount % 2 !== 0 && !gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        addClass([gridRow], 'e-altrow');\n                    }\n                    if (!gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        visibleRowCount++;\n                    }\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.treeColumnRowTemplate = function () {\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            rows = [].slice.call(rows);\n            for (var i = 0; i < rows.length; i++) {\n                var rcell = this.grid.getContentTable().rows[i].cells[this.treeColumnIndex];\n                var row = rows[i];\n                var rowData = this.grid.getRowsObject()[i].data;\n                var arg = { data: rowData, row: row, cell: rcell, column: this.getColumns()[this.treeColumnIndex] };\n                this.renderModule.cellRender(arg);\n            }\n        }\n    };\n    TreeGrid.prototype.collapseRemoteChild = function (rowDetails, isChild) {\n        if (!isChild) {\n            rowDetails.record.expanded = false;\n        }\n        var rows = rowDetails.rows;\n        var row;\n        var childRecord;\n        var movablerows = [];\n        var rightrows = [];\n        var freeze = (this.getFrozenLeftColumnsCount() > 0 || this.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (freeze) {\n            movablerows = this.getMovableRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + rowDetails.record.index + 'level' + (rowDetails.record.level + 1));\n            });\n            rightrows = this.getFrozenRightRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + rowDetails.record.index + 'level' + (rowDetails.record.level + 1));\n            });\n        }\n        for (var i = 0; i < rows.length; i++) {\n            rows[i].style.display = 'none';\n            row = rows[i];\n            var collapsingTd = rows[i].querySelector('.e-detailrowexpand');\n            if (!isNullOrUndefined(collapsingTd)) {\n                this.grid.detailRowModule.collapse(collapsingTd);\n            }\n            if (freeze) {\n                movablerows[i].style.display = 'none';\n                rightrows[i].style.display = 'none';\n                if (!rows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                    if (movablerows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                        row = movablerows[i];\n                    }\n                    else if (rightrows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                        row = rightrows[i];\n                    }\n                }\n            }\n            if (row.querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                var expandElement = row.querySelector('.e-treecolumn-container .e-treegridexpand');\n                childRecord = this.rowTemplate ? this.grid.getCurrentViewRecords()[rows[i].rowIndex] :\n                    this.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n                if (!isNullOrUndefined(expandElement) && childRecord.expanded) {\n                    removeClass([expandElement], 'e-treegridexpand');\n                    addClass([expandElement], 'e-treegridcollapse');\n                }\n                var cRow = [];\n                var eRows = this.getRows();\n                for (var i_1 = 0; i_1 < eRows.length; i_1++) {\n                    if (eRows[i_1].querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1))) {\n                        cRow.push(eRows[i_1]);\n                    }\n                }\n                if (cRow.length && childRecord.expanded) {\n                    this.collapseRemoteChild({ record: childRecord, rows: cRow }, true);\n                }\n            }\n        }\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.addListener = function () {\n        this.on('updateResults', this.updateResultModel, this);\n        this.grid.on('initial-end', this.afterGridRender, this);\n    };\n    TreeGrid.prototype.updateResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off('updateResults', this.updateResultModel);\n        this.grid.off('initial-end', this.afterGridRender);\n    };\n    /**\n     * Filters TreeGrid row by column name with the given options.\n     *\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, the TreeGrid filters the records with exact match. if false, it filters\n     * case insensitive records (uppercase and lowercase letters are treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent is set to true,\n     * then filter ignores diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for filter column.\n     * @returns {void}\n     */\n    TreeGrid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        this.grid.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    };\n    /**\n     * Clears all the filtered rows of the TreeGrid.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.clearFiltering = function () {\n        this.grid.clearFiltering();\n    };\n    /**\n     * Removes filtered column by field name.\n     *\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @returns {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        this.grid.removeFilteredColsByField(field, isClearFilterBar);\n    };\n    /**\n     * Selects a row by given index.\n     *\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectRow = function (index, isToggle) {\n        this.grid.selectRow(index, isToggle);\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     *\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectRows = function (rowIndexes) {\n        this.grid.selectRows(rowIndexes);\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.clearSelection = function () {\n        this.grid.clearSelection();\n    };\n    /**\n     * Copy the selected rows or cells data into clipboard.\n     *\n     * @param {boolean} withHeader - Specifies whether the column header text needs to be copied along with rows or cells.\n     * @returns {void}\n     */\n    TreeGrid.prototype.copy = function (withHeader) {\n        this.clipboardModule.copy(withHeader);\n    };\n    /**\n     * Paste data from clipboard to selected cells.\n     *\n     * @param {boolean} data - Specifies the date for paste.\n     * @param {boolean} rowIndex - Specifies the row index.\n     * @param {boolean} colIndex - Specifies the column index.\n     * @returns {void}\n     */\n    TreeGrid.prototype.paste = function (data, rowIndex, colIndex) {\n        this.clipboardModule.paste(data, rowIndex, colIndex);\n    };\n    /**\n     * Selects a cell by the given index.\n     *\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectCell = function (cellIndex, isToggle) {\n        this.grid.selectCell(cellIndex, isToggle);\n    };\n    /**\n     * Gets the collection of selected rows.\n     *\n     * @returns {Element[]} - Returns selected row elements collection\n     */\n    TreeGrid.prototype.getSelectedRows = function () {\n        return this.grid.getSelectedRows();\n    };\n    /**\n     * Gets a movable table cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @returns {Element} - Returns movable cell element from the indexes passed\n     */\n    TreeGrid.prototype.getMovableCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getMovableCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets all the TreeGrid's movable table data rows.\n     *\n     * @returns {Element[]} - Returns element collection of movable rows\n     */\n    TreeGrid.prototype.getMovableDataRows = function () {\n        return this.grid.getMovableDataRows();\n    };\n    /**\n     * Gets a movable tables row by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} - Returns movable row based on index passed\n     */\n    TreeGrid.prototype.getMovableRowByIndex = function (index) {\n        return this.grid.getMovableRowByIndex(index);\n    };\n    /**\n     * Gets the TreeGrid's movable content rows from frozen treegrid.\n     *\n     * @returns {Element[]}: Returns movable row element\n     */\n    TreeGrid.prototype.getMovableRows = function () {\n        return this.grid.getMovableRows();\n    };\n    /**\n     * Gets a frozen right tables row element by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} returns the element\n     */\n    TreeGrid.prototype.getFrozenRightRowByIndex = function (index) {\n        return this.grid.getFrozenRightRowByIndex(index);\n    };\n    /**\n     * Gets the Tree Grid's frozen right content rows from frozen Tree Grid.\n     *\n     * @returns {Element[]} returns the element\n     */\n    TreeGrid.prototype.getFrozenRightRows = function () {\n        return this.grid.getFrozenRightRows();\n    };\n    /**\n     * Gets all the Tree Grid's frozen right table data rows.\n     *\n     * @returns {Element[]} Returns the Element\n     */\n    TreeGrid.prototype.getFrozenRightDataRows = function () {\n        return this.grid.getFrozenRightDataRows();\n    };\n    /**\n     * Gets a frozen right table cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @returns {Element} Returns the Element\n     */\n    TreeGrid.prototype.getFrozenRightCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getFrozenRightCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a frozen left column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} Returns the Element\n     */\n    TreeGrid.prototype.getFrozenLeftColumnHeaderByIndex = function (index) {\n        return this.grid.getFrozenLeftColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a frozen right column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} Returns the Element\n     */\n    TreeGrid.prototype.getFrozenRightColumnHeaderByIndex = function (index) {\n        return this.grid.getFrozenRightColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a movable column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} Returns the Element\n     */\n    TreeGrid.prototype.getMovableColumnHeaderByIndex = function (index) {\n        return this.grid.getMovableColumnHeaderByIndex(index);\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the movable column count\n     */\n    TreeGrid.prototype.getMovableColumnsCount = function () {\n        return this.grid.getMovableColumnsCount();\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the Frozen Left column\n     */\n    TreeGrid.prototype.getFrozenLeftColumnsCount = function () {\n        return this.grid.getFrozenLeftColumnsCount();\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the Frozen Right column count\n     */\n    TreeGrid.prototype.getFrozenRightColumnsCount = function () {\n        return this.grid.getFrozenRightColumnsCount();\n    };\n    /**\n     * @hidden\n     * @returns {Column[]} Returns the column\n     */\n    TreeGrid.prototype.getFrozenLeftColumns = function () {\n        this.updateColumnModel(this.grid.getFrozenLeftColumns());\n        return this.columnModel;\n    };\n    /**\n     * @hidden\n     * @returns {Column[]} Returns the column\n     */\n    TreeGrid.prototype.getFrozenRightColumns = function () {\n        this.updateColumnModel(this.grid.getFrozenRightColumns());\n        return this.columnModel;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the visible movable count\n     */\n    TreeGrid.prototype.getVisibleMovableCount = function () {\n        return this.grid.getVisibleMovableCount();\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the visible Frozen Right count\n     */\n    TreeGrid.prototype.getVisibleFrozenRightCount = function () {\n        return this.grid.getVisibleFrozenRightCount();\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the visible Frozen left count\n     */\n    TreeGrid.prototype.getVisibleFrozenLeftCount = function () {\n        return this.grid.getVisibleFrozenLeftCount();\n    };\n    /**\n     * @hidden\n     * @returns {Column[]} Returns the column\n     */\n    TreeGrid.prototype.getMovableColumns = function () {\n        this.updateColumnModel(this.grid.getMovableColumns());\n        return this.columnModel;\n    };\n    /**\n     * Gets the number of frozen column in tree grid\n     *\n     * @hidden\n     * @returns {number} - Returns frozen column count\n     */\n    TreeGrid.prototype.getFrozenColumns = function () {\n        return this.getFrozenCount(this.columns, 0) + this.frozenColumns;\n    };\n    TreeGrid.prototype.getFrozenCount = function (cols, cnt) {\n        for (var j = 0, len = cols.length; j < len; j++) {\n            if (cols[j].columns) {\n                cnt = this.getFrozenCount(cols[j].columns, cnt);\n            }\n            else {\n                if (cols[j].isFrozen) {\n                    cnt++;\n                }\n            }\n        }\n        return cnt;\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     *\n     * @returns {number[]} - Returns selected rows index collection\n     */\n    TreeGrid.prototype.getSelectedRowIndexes = function () {\n        return this.grid.getSelectedRowIndexes();\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     *\n     * @returns {ISelectedCell[]} - Returns selected cell's index details\n     */\n    TreeGrid.prototype.getSelectedRowCellIndexes = function () {\n        return this.grid.getSelectedRowCellIndexes();\n    };\n    /**\n     * Gets the collection of selected records.\n     *\n     * @isGenericType true\n     * @returns {Object[]} - Returns selected records collection\n     */\n    TreeGrid.prototype.getSelectedRecords = function () {\n        return this.grid.getSelectedRecords();\n    };\n    /**\n     * Gets the data module.\n     *\n     * @returns {{baseModule: Data, treeModule: DataManipulation}}: Returns grid and treegrid data module\n     */\n    TreeGrid.prototype.getDataModule = function () {\n        return { baseModule: this.grid.getDataModule(), treeModule: this.dataModule };\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     *\n     * @param {number[]} fromIndexes - Source indexes of rows\n     * @param {number} toIndex - Destination index of row\n     * @param {string} position - Defines drop position as above or below or child\n     * @returns {void}\n     */\n    TreeGrid.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        this.rowDragAndDropModule.reorderRows(fromIndexes, toIndex, position);\n    };\n    var TreeGrid_1;\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenRows\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenColumns\", void 0);\n    __decorate([\n        Property('Ellipsis')\n    ], TreeGrid.prototype, \"clipMode\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"childMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"hasChildMapping\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"treeColumnIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"idMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"parentIdMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableCollapseAll\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"expandStateMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowRowDragAndDrop\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"query\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"cloneQuery\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], TreeGrid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"loadChildOnDemand\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], TreeGrid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"autoCheckHierarchy\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], TreeGrid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, RowDropSettings)\n    ], TreeGrid.prototype, \"rowDropSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnChooser\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], TreeGrid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], TreeGrid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], TreeGrid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"detailTemplate\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], TreeGrid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], TreeGrid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property('Default')\n    ], TreeGrid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"columnMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"rowTemplate\", void 0);\n    __decorate([\n        Property('Parent')\n    ], TreeGrid.prototype, \"copyHierarchyMode\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableAutoFill\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableImmutableMode\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"width\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableColumnVirtualization\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableInfiniteScrolling\", void 0);\n    __decorate([\n        Complex({}, InfiniteScrollSettings)\n    ], TreeGrid.prototype, \"infiniteScrollSettings\", void 0);\n    __decorate([\n        Property('All')\n    ], TreeGrid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanding\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanded\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSaved\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchCancel\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"detailDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"checkboxChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeCopy\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePaste\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStartHelper\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrop\", void 0);\n    __decorate([\n        Property(-1)\n    ], TreeGrid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeGrid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfExportComplete\", void 0);\n    TreeGrid = TreeGrid_1 = __decorate([\n        NotifyPropertyChanges\n    ], TreeGrid);\n    return TreeGrid;\n}(Component));\nexport { TreeGrid };\n","import { getObject, Grid, Reorder as GridReorder } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Reorder module\n *\n * @hidden\n */\nvar Reorder = /** @class */ (function () {\n    /**\n     * Constructor for Reorder module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Reorder(parent) {\n        Grid.Inject(GridReorder);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Reorder module name\n     */\n    Reorder.prototype.getModuleName = function () {\n        return 'reorder';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Reorder.prototype.addEventListener = function () {\n        this.parent.on('getColumnIndex', this.getTreeColumn, this);\n    };\n    Reorder.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('getColumnIndex', this.getTreeColumn);\n    };\n    /**\n     * To destroy the Reorder\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Reorder.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Reorder.prototype.getTreeColumn = function () {\n        var columnModel = 'columnModel';\n        var treeColumn = this.parent[columnModel][this.parent.treeColumnIndex];\n        var treeIndex;\n        var updatedCols = this.parent.getColumns();\n        for (var f = 0; f < updatedCols.length; f++) {\n            var treeColumnfield = getObject('field', treeColumn);\n            var parentColumnfield = getObject('field', updatedCols[f]);\n            if (treeColumnfield === parentColumnfield) {\n                treeIndex = f;\n                break;\n            }\n        }\n        this.parent.setProperties({ treeColumnIndex: treeIndex }, true);\n    };\n    return Reorder;\n}());\nexport { Reorder };\n","import { Grid, Resize as GridResize } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Resize module\n *\n * @hidden\n */\nvar Resize = /** @class */ (function () {\n    /**\n     * Constructor for Resize module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Resize(parent) {\n        Grid.Inject(GridResize);\n        this.parent = parent;\n    }\n    /**\n     * Resize by field names.\n     *\n     * @param  {string|string[]} fName - Defines the field name.\n     * @returns {void}\n     */\n    Resize.prototype.autoFitColumns = function (fName) {\n        this.parent.grid.autoFitColumns(fName);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Resize module name\n     */\n    Resize.prototype.getModuleName = function () {\n        return 'resize';\n    };\n    /**\n     * Destroys the Resize.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    Resize.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.grid.resizeModule.destroy();\n    };\n    return Resize;\n}());\nexport { Resize };\n","import { Grid, RowDD as GridDragDrop, parentsUntil } from '@syncfusion/ej2-grids';\nimport { getObject, Scroll } from '@syncfusion/ej2-grids';\nimport { closest, isNullOrUndefined, classList, setValue, extend, getValue, removeClass, addClass } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport * as events from '../base/constant';\nimport { editAction } from './crud-actions';\nimport { getParentData, findChildrenRecords, isRemoteData, isOffline, isCountRequired } from '../utils';\n/**\n * TreeGrid RowDragAndDrop module\n *\n * @hidden\n */\nvar RowDD = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function RowDD(parent) {\n        /** @hidden */\n        this.canDrop = true;\n        /** @hidden */\n        this.isDraggedWithChild = false;\n        /** @hidden */\n        this.isaddtoBottom = false;\n        Grid.Inject(GridDragDrop);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    RowDD.prototype.getChildrecordsByParentID = function (id) {\n        var treeGridDataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            treeGridDataSource = this.parent.grid.dataSource.dataSource.json;\n        }\n        else {\n            treeGridDataSource = this.parent.grid.dataSource;\n        }\n        var record = treeGridDataSource.filter(function (e) {\n            return e.uniqueID === id;\n        });\n        return record;\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    RowDD.prototype.addEventListener = function () {\n        this.parent.on(events.rowdraging, this.Rowdraging, this);\n        this.parent.on(events.rowDropped, this.rowDropped, this);\n        this.parent.on(events.rowsAdd, this.rowsAdded, this);\n        this.parent.on(events.rowsRemove, this.rowsRemoved, this);\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     *\n     * @returns {void}\n     * @param {number[]} fromIndexes - source indexes of rows to be re-ordered\n     * @param {number} toIndex - Destination row index\n     * @param {string} position - Drop position as above or below or child\n     */\n    RowDD.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        var tObj = this.parent;\n        if (fromIndexes[0] !== toIndex && ['above', 'below', 'child'].indexOf(position) !== -1) {\n            if (position === 'above') {\n                this.dropPosition = 'topSegment';\n            }\n            if (position === 'below') {\n                this.dropPosition = 'bottomSegment';\n            }\n            if (position === 'child') {\n                this.dropPosition = 'middleSegment';\n            }\n            var data = [];\n            for (var i = 0; i < fromIndexes.length; i++) {\n                data[i] = this.parent.getCurrentViewRecords()[fromIndexes[i]];\n            }\n            var isByMethod = true;\n            var args = {\n                data: data,\n                dropIndex: toIndex\n            };\n            if (!isCountRequired(this.parent)) {\n                this.dropRows(args, isByMethod);\n            }\n            //this.refreshGridDataSource();\n            if (tObj.isLocalData) {\n                tObj.flatData = this.orderToIndex(tObj.flatData);\n            }\n            this.parent.grid.refresh();\n            if (this.parent.enableImmutableMode && this.dropPosition === 'middleSegment') {\n                var index = this.parent.treeColumnIndex + 1;\n                var row = this.parent.getRows()[fromIndexes[0]];\n                var dropData = args.data[0];\n                var totalRecord = [];\n                var rows = [];\n                totalRecord.push(dropData);\n                rows.push(row);\n                var parentUniqueID = 'parentUniqueID';\n                var parentData = getParentData(this.parent, args.data[0][parentUniqueID]);\n                var parentrow = this.parent.getRows()[toIndex];\n                totalRecord.push(parentData);\n                rows.push(parentrow);\n                for (var i = 0; i < totalRecord.length; i++) {\n                    this.parent.renderModule.cellRender({\n                        data: totalRecord[i], cell: rows[i].cells[index],\n                        column: this.parent.grid.getColumns()[this.parent.treeColumnIndex],\n                        requestType: 'rowDragAndDrop'\n                    });\n                }\n            }\n        }\n        else {\n            return;\n        }\n    };\n    RowDD.prototype.orderToIndex = function (currentData) {\n        var _loop_1 = function (i) {\n            currentData[i].index = i;\n            if (!isNullOrUndefined(currentData[i].parentItem)) {\n                var updatedParent = currentData.filter(function (data) {\n                    return data.uniqueID === currentData[i].parentUniqueID;\n                })[0];\n                currentData[i].parentItem.index = updatedParent.index;\n            }\n        };\n        for (var i = 0; i < currentData.length; i++) {\n            _loop_1(i);\n        }\n        return currentData;\n    };\n    RowDD.prototype.rowsAdded = function (e) {\n        var draggedRecord;\n        var dragRecords = e.records;\n        for (var i = e.records.length - 1; i > -1; i--) {\n            draggedRecord = dragRecords[i];\n            if (draggedRecord.parentUniqueID) {\n                var record = dragRecords.filter(function (data) {\n                    return data.uniqueID === draggedRecord.parentUniqueID;\n                });\n                if (record.length) {\n                    var index = record[0].childRecords.indexOf(draggedRecord);\n                    var parentRecord = record[0];\n                    if (index !== -1) {\n                        if (isNullOrUndefined(this.parent.idMapping)) {\n                            parentRecord.childRecords.splice(index, 1);\n                            if (!parentRecord.childRecords.length) {\n                                parentRecord.hasChildRecords = false;\n                                parentRecord.hasFilteredChildRecords = false;\n                            }\n                        }\n                        this.isDraggedWithChild = true;\n                    }\n                }\n            }\n        }\n        if (isNullOrUndefined(this.parent.dataSource) || !this.parent.dataSource.length) {\n            var tObj = this.parent;\n            var draggedRecord_1;\n            var dragRecords_1 = e.records;\n            var dragLength = e.records.length;\n            for (var i = dragLength - 1; i > -1; i--) {\n                draggedRecord_1 = dragRecords_1[i];\n                if (!i && draggedRecord_1.hasChildRecords) {\n                    draggedRecord_1.taskData[this.parent.parentIdMapping] = null;\n                }\n                var recordIndex1 = 0;\n                if (!isNullOrUndefined(tObj.parentIdMapping)) {\n                    tObj.childMapping = null;\n                }\n                if (!isNullOrUndefined(draggedRecord_1.taskData) && !isNullOrUndefined(tObj.childMapping) &&\n                    !Object.prototype.hasOwnProperty.call(draggedRecord_1.taskData, tObj.childMapping)) {\n                    draggedRecord_1.taskData[tObj.childMapping] = [];\n                }\n                if (Object.prototype.hasOwnProperty.call(draggedRecord_1, tObj.childMapping) &&\n                    (draggedRecord_1[tObj.childMapping]).length && !this.isDraggedWithChild &&\n                    !isNullOrUndefined(tObj.parentIdMapping)) {\n                    var childData = (draggedRecord_1[tObj.childMapping]);\n                    for (var j = 0; j < childData.length; j++) {\n                        if (dragRecords_1.indexOf(childData[j]) === -1) {\n                            dragRecords_1.splice(j, 0, childData[j]);\n                            childData[j].taskData = extend({}, childData[j]);\n                            i += 1;\n                        }\n                    }\n                }\n                if (Object.prototype.hasOwnProperty.call(draggedRecord_1, tObj.parentIdMapping) && draggedRecord_1[tObj.parentIdMapping] != null\n                    && !this.isDraggedWithChild) {\n                    draggedRecord_1.taskData[tObj.parentIdMapping] = null;\n                    delete draggedRecord_1.parentItem;\n                    delete draggedRecord_1.parentUniqueID;\n                }\n                if (isNullOrUndefined(tObj.dataSource)) {\n                    tObj.dataSource = [];\n                }\n                tObj.dataSource.splice(recordIndex1, 0, draggedRecord_1.taskData);\n            }\n            tObj.setProperties({ dataSource: tObj.dataSource }, false);\n        }\n        else {\n            for (var i = 0; i < dragRecords.length; i++) {\n                setValue('uniqueIDCollection.' + dragRecords[i].uniqueID, dragRecords[i], this.parent);\n            }\n            var args = { data: e.records, dropIndex: e.toIndex };\n            if (this.parent.dataSource instanceof DataManager) {\n                this.treeGridData = this.parent.dataSource.dataSource.json;\n                this.treeData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                this.treeGridData = this.parent.grid.dataSource;\n                this.treeData = this.parent.dataSource;\n            }\n            if (isNullOrUndefined(this.dropPosition)) {\n                this.dropPosition = 'bottomSegment';\n                args.dropIndex = this.parent.getCurrentViewRecords().length > 1 ? this.parent.getCurrentViewRecords().length - 1 :\n                    args.dropIndex;\n                args.data = args.data.map(function (i) {\n                    if (i.hasChildRecords && isNullOrUndefined(i.parentItem)) {\n                        i.level = 0;\n                        return i;\n                    }\n                    else {\n                        delete i.parentItem;\n                        delete i.parentUniqueID;\n                        i.level = 0;\n                        return i;\n                    }\n                });\n            }\n            this.dropRows(args);\n        }\n    };\n    RowDD.prototype.rowsRemoved = function (e) {\n        for (var i = 0; i < e.records.length; i++) {\n            this.draggedRecord = e.records[i];\n            if (this.draggedRecord.hasChildRecords || this.draggedRecord.parentItem &&\n                this.parent.grid.dataSource.\n                    indexOf(this.getChildrecordsByParentID(this.draggedRecord.parentUniqueID)[0]) !== -1 ||\n                this.draggedRecord.level === 0) {\n                this.deleteDragRow();\n            }\n        }\n    };\n    RowDD.prototype.refreshGridDataSource = function () {\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var proxy = this.parent;\n        var tempDataSource;\n        var idx;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            tempDataSource = proxy.dataSource.dataSource.json;\n        }\n        else {\n            tempDataSource = proxy.dataSource;\n        }\n        // eslint-disable-next-line max-len\n        if (tempDataSource && (!isNullOrUndefined(droppedRecord) && !droppedRecord.parentItem) && !isNullOrUndefined(droppedRecord.taskData)) {\n            for (var i = 0; i < Object.keys(tempDataSource).length; i++) {\n                if (tempDataSource[i][this.parent.childMapping] === droppedRecord.taskData[this.parent.childMapping]) {\n                    idx = i;\n                }\n            }\n            if (this.dropPosition === 'topSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx, 0, draggedRecord.taskData);\n                }\n            }\n            else if (this.dropPosition === 'bottomSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx + 1, 0, draggedRecord.taskData);\n                }\n            }\n        }\n        else if (!this.parent.parentIdMapping && (!isNullOrUndefined(droppedRecord) && droppedRecord.parentItem)) {\n            if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                var record = this.getChildrecordsByParentID(droppedRecord.parentUniqueID)[0];\n                var childRecords = record.childRecords;\n                for (var i = 0; i < childRecords.length; i++) {\n                    droppedRecord.parentItem.taskData[this.parent.childMapping][i] = childRecords[i].taskData;\n                }\n            }\n        }\n        if (this.parent.parentIdMapping) {\n            if (draggedRecord.parentItem) {\n                if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                }\n                else {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                }\n            }\n            else {\n                draggedRecord.taskData[this.parent.parentIdMapping] = null;\n                draggedRecord[this.parent.parentIdMapping] = null;\n            }\n        }\n    };\n    RowDD.prototype.removeFirstrowBorder = function (element) {\n        var canremove = this.dropPosition === 'bottomSegment';\n        if (this.parent.element.getElementsByClassName('e-firstrow-border').length > 0 && element &&\n            (element.rowIndex !== 0 || canremove)) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.removeLastrowBorder = function (element) {\n        var isEmptyRow = element && (element.classList.contains('e-emptyrow') || element.classList.contains('e-columnheader')\n            || element.classList.contains('e-detailrow'));\n        var islastRowIndex = element && !isEmptyRow &&\n            this.parent.getRowByIndex(this.parent.getCurrentViewRecords().length - 1).getAttribute('data-uid') !==\n                element.getAttribute('data-uid');\n        var canremove = islastRowIndex || this.dropPosition === 'topSegment';\n        if (this.parent.element.getElementsByClassName('e-lastrow-border').length > 0 && element && (islastRowIndex || canremove)) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.updateIcon = function (row, index, args) {\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        this.dropPosition = undefined;\n        var rowPositionHeight = 0;\n        this.removeFirstrowBorder(rowEle);\n        this.removeLastrowBorder(rowEle);\n        for (var i = 0; i < args.rows.length; i++) {\n            if (!isNullOrUndefined(rowEle) && rowEle.getAttribute('data-uid') === args.rows[i].getAttribute('data-uid')\n                || !parentsUntil(args.target, 'e-gridcontent')) {\n                this.dropPosition = 'Invalid';\n                this.addErrorElem();\n            }\n        }\n        // To get the corresponding drop position related to mouse position\n        var tObj = this.parent;\n        var rowTop = 0;\n        var roundOff = 0;\n        var toolHeight = tObj.toolbar && tObj.toolbar.length ?\n            document.getElementById(tObj.element.id + '_gridcontrol_toolbarItems').offsetHeight : 0;\n        // tObj.lastRow = tObj.getRowByIndex(tObj.getCurrentViewRecords().length - 1);\n        var positionOffSet = this.getOffset(tObj.element);\n        // let contentHeight1: number = (tObj.element.offsetHeight  - (tObj.getContent() as HTMLElement).offsetHeight) + positionOffSet.top;\n        var contentHeight = tObj.getHeaderContent().offsetHeight + positionOffSet.top + toolHeight;\n        var scrollTop = tObj.getContent().firstElementChild.scrollTop;\n        if (!isNullOrUndefined(rowEle)) {\n            rowPositionHeight = rowEle.offsetTop - scrollTop;\n        }\n        // let scrollTop = (tObj.grid.scrollModule as any).content.scrollTop;\n        rowTop = rowPositionHeight + contentHeight + roundOff;\n        var rowBottom = rowTop + row[0].offsetHeight;\n        var difference = rowBottom - rowTop;\n        var divide = difference / 3;\n        var topRowSegment = rowTop + divide;\n        var middleRowSegment = topRowSegment + divide;\n        var bottomRowSegment = middleRowSegment + divide;\n        var mouseEvent = getObject('originalEvent.event', args);\n        var touchEvent = getObject('originalEvent.event', args);\n        var posy = (mouseEvent.type === 'mousemove') ? mouseEvent.pageY : ((!isNullOrUndefined(touchEvent) &&\n            !isNullOrUndefined(touchEvent.changedTouches)) ? touchEvent.changedTouches[0].pageY : null);\n        var isTopSegment = posy <= topRowSegment;\n        var isMiddleRowSegment = (posy > topRowSegment && posy <= middleRowSegment);\n        var isBottomRowSegment = (posy > middleRowSegment && posy <= bottomRowSegment);\n        if (isTopSegment || isMiddleRowSegment || isBottomRowSegment) {\n            if (isTopSegment && this.dropPosition !== 'Invalid') {\n                this.removeChildBorder();\n                this.dropPosition = 'topSegment';\n                this.removetopOrBottomBorder();\n                this.addFirstrowBorder(rowEle);\n                this.removeErrorElem();\n                this.removeLastrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n            if (isMiddleRowSegment && this.dropPosition !== 'Invalid') {\n                this.removetopOrBottomBorder();\n                var rowElement = [];\n                var element = closest(args.target, 'tr');\n                rowElement = [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse'));\n                if (rowElement.length > 0) {\n                    this.addRemoveClasses(rowElement, true, 'e-childborder');\n                }\n                this.addLastRowborder(rowEle);\n                this.addFirstrowBorder(rowEle);\n                this.dropPosition = 'middleSegment';\n            }\n            if (isBottomRowSegment && this.dropPosition !== 'Invalid') {\n                this.removeErrorElem();\n                this.removetopOrBottomBorder();\n                this.removeChildBorder();\n                this.dropPosition = 'bottomSegment';\n                this.addLastRowborder(rowEle);\n                this.removeFirstrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n        }\n        return this.dropPosition;\n    };\n    RowDD.prototype.removeChildBorder = function () {\n        var borderElem = [];\n        borderElem = [].slice.call(this.parent.element.querySelectorAll('.e-childborder'));\n        if (borderElem.length > 0) {\n            this.addRemoveClasses(borderElem, false, 'e-childborder');\n        }\n    };\n    RowDD.prototype.addFirstrowBorder = function (targetRow) {\n        var node = this.parent.element;\n        var tObj = this.parent;\n        if (targetRow && targetRow.rowIndex === 0 && !targetRow.classList.contains('e-emptyrow')) {\n            var div = this.parent.createElement('div', { className: 'e-firstrow-border' });\n            var gridheaderEle = this.parent.getHeaderContent();\n            var toolbarHeight = 0;\n            if (tObj.toolbar) {\n                toolbarHeight = tObj.toolbarModule.getToolbar().offsetHeight;\n            }\n            var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n            if (multiplegrid) {\n                div.style.top = this.parent.grid.element.getElementsByClassName('e-gridheader')[0].offsetHeight\n                    + toolbarHeight + 'px';\n            }\n            div.style.width = multiplegrid ? node.offsetWidth + 'px' :\n                node.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridheaderEle.querySelectorAll('.e-firstrow-border').length) {\n                gridheaderEle.appendChild(div);\n            }\n        }\n    };\n    RowDD.prototype.addLastRowborder = function (trElement) {\n        var isEmptyRow = trElement && (trElement.classList.contains('e-emptyrow') ||\n            trElement.classList.contains('e-columnheader') || trElement.classList.contains('e-detailrow'));\n        if (trElement && !isEmptyRow && this.parent.getRowByIndex(this.parent.getCurrentViewRecords().length - 1).getAttribute('data-uid') ===\n            trElement.getAttribute('data-uid')) {\n            var bottomborder = this.parent.createElement('div', { className: 'e-lastrow-border' });\n            var gridcontentEle = this.parent.getContent();\n            bottomborder.style.width = this.parent.element.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridcontentEle.querySelectorAll('.e-lastrow-border').length) {\n                gridcontentEle.classList.add('e-treegrid-relative');\n                gridcontentEle.appendChild(bottomborder);\n                bottomborder.style.bottom = this.getScrollWidth() + 'px';\n            }\n        }\n    };\n    RowDD.prototype.getScrollWidth = function () {\n        var scrollElem = this.parent.getContent().firstElementChild;\n        return scrollElem.scrollWidth > scrollElem.offsetWidth ? Scroll.getScrollBarWidth() : 0;\n    };\n    RowDD.prototype.addErrorElem = function () {\n        var dragelem = document.getElementsByClassName('e-cloneproperties')[0];\n        var errorelem = dragelem.querySelectorAll('.e-errorelem').length;\n        if (!errorelem && !this.parent.rowDropSettings.targetID) {\n            var ele = document.createElement('div');\n            classList(ele, ['e-errorcontainer'], []);\n            classList(ele, ['e-icons', 'e-errorelem'], []);\n            var errorVal = dragelem.querySelector('.errorValue');\n            var content = dragelem.querySelector('.e-rowcell').innerHTML;\n            if (errorVal) {\n                content = errorVal.innerHTML;\n                errorVal.parentNode.removeChild(errorVal);\n            }\n            dragelem.querySelector('.e-rowcell').innerHTML = '';\n            var spanContent = document.createElement('span');\n            spanContent.className = 'errorValue';\n            spanContent.style.paddingLeft = '16px';\n            spanContent.innerHTML = content;\n            dragelem.querySelector('.e-rowcell').appendChild(ele);\n            dragelem.querySelector('.e-rowcell').appendChild(spanContent);\n        }\n    };\n    RowDD.prototype.removeErrorElem = function () {\n        var errorelem = document.querySelector('.e-errorelem');\n        if (errorelem) {\n            errorelem.remove();\n        }\n    };\n    RowDD.prototype.topOrBottomBorder = function (target) {\n        var rowElement = [];\n        var element = closest(target, 'tr');\n        rowElement = element ? [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse')) : [];\n        if (rowElement.length) {\n            if (this.dropPosition === 'topSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-droptop');\n                if (this.parent.element.getElementsByClassName('e-lastrow-dragborder').length > 0) {\n                    this.parent.element.getElementsByClassName('e-lastrow-dragborder')[0].remove();\n                }\n            }\n            if (this.dropPosition === 'bottomSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-dropbottom');\n            }\n        }\n    };\n    RowDD.prototype.removetopOrBottomBorder = function () {\n        var border = [];\n        border = [].slice.call(this.parent.element.querySelectorAll('.e-dropbottom, .e-droptop'));\n        if (border.length) {\n            this.addRemoveClasses(border, false, 'e-dropbottom');\n            this.addRemoveClasses(border, false, 'e-droptop');\n        }\n    };\n    RowDD.prototype.addRemoveClasses = function (cells, add, className) {\n        for (var i = 0, len = cells.length; i < len; i++) {\n            if (add) {\n                cells[i].classList.add(className);\n            }\n            else {\n                cells[i].classList.remove(className);\n            }\n        }\n    };\n    RowDD.prototype.getOffset = function (element) {\n        var box = element.getBoundingClientRect();\n        var body = document.body;\n        var docElem = document.documentElement;\n        var scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop;\n        var scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft;\n        var clientTop = docElem.clientTop || body.clientTop || 0;\n        var clientLeft = docElem.clientLeft || body.clientLeft || 0;\n        var top = box.top + scrollTop - clientTop;\n        var left = box.left + scrollLeft - clientLeft;\n        return { top: Math.round(top), left: Math.round(left) };\n    };\n    RowDD.prototype.Rowdraging = function (args) {\n        var tObj = this.parent;\n        var cloneElement = this.parent.element.querySelector('.e-cloneproperties');\n        cloneElement.style.cursor = '';\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        var rowIdx = rowEle ? rowEle.rowIndex : -1;\n        var dragRecords = [];\n        var droppedRecord = tObj.getCurrentViewRecords()[rowIdx];\n        this.removeErrorElem();\n        this.canDrop = true;\n        if (!args.data[0]) {\n            dragRecords.push(args.data);\n        }\n        else {\n            dragRecords = args.data;\n        }\n        if (rowIdx !== -1) {\n            this.ensuredropPosition(dragRecords, droppedRecord);\n        }\n        else {\n            this.canDrop = false;\n            this.addErrorElem();\n        }\n        if (!tObj.rowDropSettings.targetID && this.canDrop) {\n            tObj.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n        }\n        if (tObj.rowDropSettings.targetID) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID) {\n                var srcControl = dropElement.ej2_instances[0];\n                srcControl.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n            }\n        }\n        if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID)) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (!dropElement) {\n                cloneElement.style.cursor = 'default';\n            }\n        }\n    };\n    RowDD.prototype.rowDropped = function (args) {\n        var tObj = this.parent;\n        var parentItem = 'parentItem';\n        if (!tObj.rowDropSettings.targetID) {\n            if (parentsUntil(args.target, 'e-content')) {\n                if (this.parent.element.querySelector('.e-errorelem')) {\n                    this.dropPosition = 'Invalid';\n                }\n                setValue('dropPosition', this.dropPosition, args);\n                args.dropIndex = args.dropIndex === args.fromIndex ? this.getTargetIdx(args.target.parentElement) : args.dropIndex;\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel) {\n                    if (!isCountRequired(this.parent)) {\n                        this.dropRows(args);\n                    }\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                    tObj.grid.refresh();\n                    if (!isNullOrUndefined(tObj.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                        tObj.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                    }\n                }\n            }\n        }\n        else {\n            if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID) || parentsUntil(args.target, 'e-treegrid') &&\n                parentsUntil(args.target, 'e-treegrid').id === tObj.rowDropSettings.targetID || args.target && document.getElementById(tObj.rowDropSettings.targetID)) {\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel && tObj.rowDropSettings.targetID) {\n                    this.dragDropGrid(args);\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                }\n            }\n        }\n        this.removetopOrBottomBorder();\n        this.removeChildBorder();\n        if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-firstrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n        else if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-lastrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n        if (this.parent.enableImmutableMode && !this.parent.allowPaging && !isNullOrUndefined(args.data[0][parentItem])) {\n            var index = this.parent.treeColumnIndex;\n            index = index + 1;\n            var primaryKeyField = this.parent.getPrimaryKeyFieldNames()[0];\n            var rowIndex = this.parent.grid.getRowIndexByPrimaryKey(args.data[0][primaryKeyField]);\n            var row = this.parent.getRows()[rowIndex];\n            var data = args.data[0];\n            if (this.dropPosition === 'middleSegment') {\n                var record = [];\n                var rows = [];\n                record.push(data);\n                rows.push(row);\n                var parentUniqueID = 'parentUniqueID';\n                data = getParentData(this.parent, args.data[0][parentUniqueID]);\n                rowIndex = this.parent.grid.getRowIndexByPrimaryKey(data[primaryKeyField]);\n                var parentrow = this.parent.getRows()[rowIndex];\n                record.push(data);\n                rows.push(parentrow);\n                for (var i = 0; i < record.length; i++) {\n                    this.parent.renderModule.cellRender({\n                        data: record[i], cell: rows[i].cells[index],\n                        column: this.parent.grid.getColumns()[this.parent.treeColumnIndex],\n                        requestType: 'rowDragAndDrop'\n                    });\n                }\n                var targetEle = parentrow.getElementsByClassName('e-treegridcollapse')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridcollapse');\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n            }\n            else {\n                this.parent.renderModule.cellRender({\n                    data: data, cell: row.cells[index],\n                    column: this.parent.grid.getColumns()[this.parent.treeColumnIndex],\n                    requestType: 'rowDragAndDrop'\n                });\n            }\n        }\n    };\n    RowDD.prototype.dragDropGrid = function (args) {\n        var tObj = this.parent;\n        var targetRow = closest(args.target, 'tr');\n        var targetIndex = isNaN(this.getTargetIdx(targetRow)) ? 0 : this.getTargetIdx(targetRow);\n        var dropElement = parentsUntil(args.target, 'e-treegrid');\n        var srcControl;\n        if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID && !isRemoteData(this.parent)\n            && !isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            var records = tObj.getSelectedRecords();\n            var indexes = [];\n            for (var i = 0; i < records.length; i++) {\n                indexes[i] = records[i].index;\n            }\n            var data = srcControl.dataSource;\n            if (this.parent.idMapping != null && (isNullOrUndefined(this.dropPosition) || this.dropPosition === 'bottomSegment' || this.dropPosition === 'Invalid') && !(data.length)) {\n                var actualData = [];\n                for (var i = 0; i < records.length; i++) {\n                    if (records[i].hasChildRecords) {\n                        actualData.push(records[i]);\n                        var child = findChildrenRecords(records[i]);\n                        for (var i_1 = 0; i_1 < child.length; i_1++) {\n                            actualData.push(child[i_1]); // push child records to drop the parent record along with its child records\n                        }\n                    }\n                }\n                if (actualData.length) {\n                    records = actualData;\n                }\n            }\n            tObj.notify(events.rowsRemove, { indexes: indexes, records: records });\n            srcControl.notify(events.rowsAdd, { toIndex: targetIndex, records: records });\n            var srcControlFlatData = srcControl.rowDragAndDropModule.treeGridData;\n            if (!isNullOrUndefined(srcControlFlatData)) {\n                for (var i = 0; i < srcControlFlatData.length; i++) {\n                    srcControlFlatData[i].index = i;\n                    if (!isNullOrUndefined(srcControlFlatData[i].parentItem)) {\n                        var actualIndex = getValue('uniqueIDCollection.' + srcControlFlatData[i].parentUniqueID + '.index', srcControl);\n                        srcControlFlatData[i].parentItem.index = actualIndex;\n                    }\n                }\n            }\n            tObj.grid.refresh();\n            srcControl.grid.refresh();\n            if (srcControl.grid.dataSource.length > 1) {\n                srcControl.grid.refresh();\n                if (!isNullOrUndefined(srcControl.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                    srcControl.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                }\n                if (!isNullOrUndefined(srcControl.getContent().querySelector('.e-lastrow-border'))) {\n                    srcControl.getContent().querySelector('.e-lastrow-border').remove();\n                }\n            }\n        }\n        if (isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            tObj.grid.refresh();\n            srcControl.grid.refresh();\n        }\n    };\n    RowDD.prototype.getTargetIdx = function (targetRow) {\n        return targetRow ? parseInt(targetRow.getAttribute('aria-rowindex'), 10) : 0;\n    };\n    RowDD.prototype.getParentData = function (record) {\n        var parentItem = record.parentItem;\n        if (this.dropPosition === 'bottomSegment') {\n            var selectedRecord = this.parent.getSelectedRecords()[0];\n            this.droppedRecord = getParentData(this.parent, selectedRecord.parentItem.uniqueID);\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var level = this.parent.getSelectedRecords()[0].level;\n            if (level === parentItem.level) {\n                this.droppedRecord = getParentData(this.parent, parentItem.uniqueID);\n            }\n            else {\n                this.getParentData(parentItem);\n            }\n        }\n    };\n    RowDD.prototype.dropRows = function (args, isByMethod) {\n        if (this.dropPosition !== 'Invalid' && !isRemoteData(this.parent)) {\n            var tObj = this.parent;\n            var draggedRecord_2;\n            var droppedRecord = void 0;\n            if (isNullOrUndefined(args.dropIndex)) {\n                var rowIndex = tObj.getSelectedRowIndexes()[0] - 1;\n                var record = tObj.getCurrentViewRecords()[rowIndex];\n                this.getParentData(record);\n            }\n            else {\n                args.dropIndex = args.dropIndex === args.fromIndex ? this.getTargetIdx(args.target.parentElement) : args.dropIndex;\n                this.droppedRecord = tObj.getCurrentViewRecords()[args.dropIndex];\n            }\n            var dragRecords = [];\n            droppedRecord = this.droppedRecord;\n            if (!args.data[0]) {\n                dragRecords.push(args.data);\n            }\n            else {\n                dragRecords = args.data;\n            }\n            var count = 0;\n            var multiplegrid = this.parent.rowDropSettings.targetID;\n            this.isMultipleGrid = multiplegrid;\n            if (!multiplegrid) {\n                this.ensuredropPosition(dragRecords, droppedRecord);\n            }\n            else {\n                this.isaddtoBottom = multiplegrid && this.isDraggedWithChild;\n            }\n            var dragLength = dragRecords.length;\n            if (!isNullOrUndefined(this.parent.idMapping)) {\n                dragRecords.reverse();\n            }\n            var _loop_2 = function (i) {\n                draggedRecord_2 = dragRecords[i];\n                this_1.draggedRecord = draggedRecord_2;\n                if (this_1.dropPosition !== 'Invalid') {\n                    if (!tObj.rowDropSettings.targetID || isByMethod) {\n                        this_1.deleteDragRow();\n                    }\n                    if (this_1.draggedRecord === this_1.droppedRecord) {\n                        var correctIndex = this_1.getTargetIdx(args.target.offsetParent.parentElement);\n                        if (isNaN(correctIndex)) {\n                            correctIndex = this_1.getTargetIdx(args.target.parentElement);\n                        }\n                        args.dropIndex = correctIndex;\n                        droppedRecord = this_1.droppedRecord = this_1.parent.getCurrentViewRecords()[args.dropIndex];\n                    }\n                    if (droppedRecord.parentItem || this_1.dropPosition === 'middleSegment') {\n                        var parentRecords = tObj.parentData;\n                        var newParentIndex = parentRecords.indexOf(this_1.draggedRecord);\n                        if (newParentIndex !== -1) {\n                            parentRecords.splice(newParentIndex, 1);\n                        }\n                    }\n                    var recordIndex1 = this_1.treeGridData.indexOf(droppedRecord);\n                    this_1.dropAtTop(recordIndex1);\n                    if (this_1.dropPosition === 'bottomSegment') {\n                        if (!droppedRecord.hasChildRecords) {\n                            if (this_1.parent.parentIdMapping) {\n                                this_1.treeData.splice(recordIndex1 + 1, 0, this_1.draggedRecord.taskData);\n                            }\n                            this_1.treeGridData.splice(recordIndex1 + 1, 0, this_1.draggedRecord);\n                        }\n                        else {\n                            count = this_1.getChildCount(droppedRecord, 0);\n                            if (this_1.parent.parentIdMapping) {\n                                this_1.treeData.splice(recordIndex1 + count + 1, 0, this_1.draggedRecord.taskData);\n                            }\n                            this_1.treeGridData.splice(recordIndex1 + count + 1, 0, this_1.draggedRecord);\n                        }\n                        if (isNullOrUndefined(droppedRecord.parentItem)) {\n                            delete draggedRecord_2.parentItem;\n                            draggedRecord_2.level = 0;\n                            if (this_1.parent.parentIdMapping) {\n                                draggedRecord_2[this_1.parent.parentIdMapping] = null;\n                            }\n                        }\n                        if (droppedRecord.parentItem) {\n                            var rec = this_1.getChildrecordsByParentID(droppedRecord.parentUniqueID);\n                            var childRecords = rec[0].childRecords;\n                            var droppedRecordIndex = childRecords.indexOf(droppedRecord) + 1;\n                            childRecords.splice(droppedRecordIndex, 0, draggedRecord_2);\n                            draggedRecord_2.parentItem = droppedRecord.parentItem;\n                            draggedRecord_2.parentUniqueID = droppedRecord.parentUniqueID;\n                            if (this_1.parent.parentIdMapping) {\n                                draggedRecord_2[this_1.parent.parentIdMapping] = droppedRecord[this_1.parent.parentIdMapping];\n                                draggedRecord_2.parentItem = droppedRecord.parentItem;\n                                draggedRecord_2.level = droppedRecord.level;\n                            }\n                        }\n                        if (draggedRecord_2.hasChildRecords) {\n                            var level = 1;\n                            this_1.updateChildRecordLevel(draggedRecord_2, level);\n                            this_1.updateChildRecord(draggedRecord_2, recordIndex1 + count + 1);\n                        }\n                    }\n                    this_1.dropMiddle(recordIndex1);\n                }\n                if (isNullOrUndefined(draggedRecord_2.parentItem)) {\n                    var parentRecords = tObj.parentData;\n                    var newParentIndex = parentRecords.indexOf(this_1.droppedRecord);\n                    var nonRepeat_1 = 0;\n                    parentRecords.filter(function (e) {\n                        if (draggedRecord_2.uniqueID === e.uniqueID) {\n                            nonRepeat_1++;\n                        }\n                    });\n                    if (this_1.dropPosition === 'bottomSegment' && nonRepeat_1 === 0) {\n                        parentRecords.splice(newParentIndex + 1, 0, draggedRecord_2);\n                    }\n                    else if (this_1.dropPosition === 'topSegment' && nonRepeat_1 === 0) {\n                        parentRecords.splice(newParentIndex, 0, draggedRecord_2);\n                    }\n                }\n                tObj.rowDragAndDropModule.refreshGridDataSource();\n            };\n            var this_1 = this;\n            for (var i = 0; i < dragLength; i++) {\n                _loop_2(i);\n            }\n        }\n    };\n    RowDD.prototype.dropMiddle = function (recordIndex) {\n        var tObj = this.parent;\n        var childRecords = findChildrenRecords(this.droppedRecord);\n        var childRecordsLength = (isNullOrUndefined(childRecords) ||\n            childRecords.length === 0) ? recordIndex + 1 :\n            childRecords.length + recordIndex + 1;\n        if (this.dropPosition === 'middleSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(childRecordsLength, 0, this.draggedRecord.taskData);\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            else {\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            this.recordLevel();\n            if (this.draggedRecord.hasChildRecords) {\n                this.updateChildRecord(this.draggedRecord, childRecordsLength);\n            }\n        }\n    };\n    RowDD.prototype.dropAtTop = function (recordIndex1) {\n        var tObj = this.parent;\n        if (this.dropPosition === 'topSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(recordIndex1, 0, this.draggedRecord.taskData);\n            }\n            this.draggedRecord.parentItem = this.treeGridData[recordIndex1].parentItem;\n            this.draggedRecord.parentUniqueID = this.treeGridData[recordIndex1].parentUniqueID;\n            this.draggedRecord.level = this.treeGridData[recordIndex1].level;\n            this.treeGridData.splice(recordIndex1, 0, this.draggedRecord);\n            if (this.draggedRecord.hasChildRecords) {\n                var level = 1;\n                this.updateChildRecord(this.draggedRecord, recordIndex1);\n                this.updateChildRecordLevel(this.draggedRecord, level);\n            }\n            if (this.droppedRecord.parentItem) {\n                var rec = this.getChildrecordsByParentID(this.droppedRecord.parentUniqueID);\n                var childRecords = rec[0].childRecords;\n                var droppedRecordIndex = childRecords.indexOf(this.droppedRecord);\n                childRecords.splice(droppedRecordIndex, 0, this.draggedRecord);\n            }\n        }\n    };\n    RowDD.prototype.recordLevel = function () {\n        var tObj = this.parent;\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var childItem = tObj.childMapping;\n        if (!droppedRecord.hasChildRecords) {\n            droppedRecord.hasChildRecords = true;\n            droppedRecord.hasFilteredChildRecords = true;\n            if (isNullOrUndefined(droppedRecord.childRecords) || droppedRecord.childRecords.length === 0) {\n                droppedRecord.childRecords = [];\n                if (!tObj.parentIdMapping && isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                    droppedRecord.taskData[childItem] = [];\n                }\n            }\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var parentItem = extend({}, droppedRecord);\n            delete parentItem.childRecords;\n            draggedRecord.parentItem = parentItem;\n            draggedRecord.parentUniqueID = droppedRecord.uniqueID;\n            droppedRecord.childRecords.splice(droppedRecord.childRecords.length, 0, draggedRecord);\n            var isSelfReference = 'isSelfReference';\n            if (tObj[isSelfReference]) {\n                droppedRecord[tObj.childMapping] = [];\n                droppedRecord[tObj.childMapping].splice(droppedRecord[tObj.childMapping].length, 0, draggedRecord);\n            }\n            if (!isNullOrUndefined(draggedRecord) && !tObj.parentIdMapping && !isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                droppedRecord.taskData[tObj.childMapping].splice(droppedRecord.childRecords.length, 0, draggedRecord.taskData);\n            }\n            if (!draggedRecord.hasChildRecords) {\n                draggedRecord.level = droppedRecord.level + 1;\n            }\n            else {\n                var level = 1;\n                draggedRecord.level = droppedRecord.level + 1;\n                this.updateChildRecordLevel(draggedRecord, level);\n            }\n            droppedRecord.expanded = true;\n        }\n    };\n    RowDD.prototype.deleteDragRow = function () {\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            this.treeGridData = this.parent.grid.dataSource.dataSource.json;\n            this.treeData = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            this.treeGridData = this.parent.grid.dataSource;\n            this.treeData = this.parent.dataSource;\n        }\n        var deletedRow = getParentData(this.parent, this.draggedRecord.uniqueID);\n        if (!isNullOrUndefined(deletedRow.childRecords) && deletedRow.childRecords.length) {\n            deletedRow.hasChildRecords = true;\n        }\n        this.removeRecords(deletedRow);\n    };\n    RowDD.prototype.updateChildRecord = function (record, count) {\n        var currentRecord;\n        var tObj = this.parent;\n        var length = 0;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = getValue('uniqueIDCollection.' + record.childRecords[i].uniqueID, tObj);\n            count++;\n            tObj.flatData.splice(count, 0, currentRecord);\n            setValue('uniqueIDCollection.' + currentRecord.uniqueID, currentRecord, this.parent);\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(count, 0, currentRecord.taskData);\n            }\n            if (currentRecord.hasChildRecords) {\n                count = this.updateChildRecord(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.updateChildRecordLevel = function (record, level) {\n        var length = 0;\n        var currentRecord;\n        level++;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = getValue('uniqueIDCollection.' + record.childRecords[i].uniqueID, this.parent);\n            var parentData = void 0;\n            if (record.parentItem) {\n                parentData = getParentData(this.parent, record.parentItem.uniqueID);\n            }\n            if (isNullOrUndefined(parentData) && !isNullOrUndefined(record.parentItem)) {\n                parentData = record.parentItem;\n            }\n            currentRecord.level = record.parentItem ? parentData.level + level : record.level + 1;\n            if (currentRecord.hasChildRecords) {\n                level--;\n                level = this.updateChildRecordLevel(currentRecord, level);\n            }\n        }\n        return level;\n    };\n    RowDD.prototype.removeRecords = function (record) {\n        var tObj = this.parent;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        var deletedRow = record;\n        var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n        var flatParentData = this.getChildrecordsByParentID(deletedRow.parentUniqueID)[0];\n        if (deletedRow) {\n            if (deletedRow.parentItem) {\n                var childRecords = flatParentData ? flatParentData.childRecords : [];\n                var childIndex = 0;\n                if (childRecords && childRecords.length > 0) {\n                    childIndex = childRecords.indexOf(deletedRow);\n                    flatParentData.childRecords.splice(childIndex, 1);\n                    if (!this.parent.parentIdMapping) {\n                        editAction({ value: deletedRow, action: 'delete' }, this.parent, isSelfReference, deletedRow.index, deletedRow.index);\n                    }\n                }\n            }\n            if (tObj.parentIdMapping) {\n                if (deletedRow.hasChildRecords && deletedRow.childRecords.length > 0) {\n                    this.removeChildItem(deletedRow);\n                }\n                var idx = void 0;\n                var idz = void 0;\n                var treeGridData = dataSource;\n                for (var i = 0; i < treeGridData.length; i++) {\n                    if (treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idx = i;\n                    }\n                }\n                for (var i = 0; i < this.treeGridData.length; i++) {\n                    if (this.treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idz = i;\n                    }\n                }\n                if (idx !== -1 && !isNullOrUndefined(idx)) {\n                    dataSource.splice(idx, 1);\n                }\n                if (idz !== -1 && !isNullOrUndefined(idz)) {\n                    this.treeGridData.splice(idz, 1);\n                }\n            }\n            var recordIndex = this.treeGridData.indexOf(deletedRow);\n            if (!tObj.parentIdMapping) {\n                var parentIndex = this.parent.parentData.indexOf(deletedRow);\n                if (parentIndex !== -1) {\n                    tObj.parentData.splice(parentIndex, 1);\n                    dataSource.splice(parentIndex, 1);\n                }\n            }\n            if (recordIndex === -1 && !tObj.parentIdMapping) {\n                var primaryKeyField = tObj.getPrimaryKeyFieldNames()[0];\n                for (var j = 0; j < this.treeGridData.length; j++) {\n                    if (this.treeGridData[j][primaryKeyField] === deletedRow[primaryKeyField]) {\n                        recordIndex = j;\n                    }\n                }\n            }\n            if (!tObj.parentIdMapping) {\n                var deletedRecordCount = this.getChildCount(deletedRow, 0);\n                this.treeGridData.splice(recordIndex, deletedRecordCount + 1);\n            }\n            if (deletedRow.parentItem && flatParentData && flatParentData.childRecords && !flatParentData.childRecords.length) {\n                flatParentData.expanded = false;\n                flatParentData.hasChildRecords = false;\n                flatParentData.hasFilteredChildRecords = false;\n            }\n        }\n    };\n    RowDD.prototype.removeChildItem = function (record) {\n        var currentRecord;\n        var idx;\n        var idz;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            if (!isNullOrUndefined(currentRecord.childRecords) && currentRecord.childRecords.length) {\n                currentRecord.hasChildRecords = true;\n            }\n            var treeGridData = void 0;\n            if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n                treeGridData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                treeGridData = this.parent.dataSource;\n            }\n            for (var i_2 = 0; i_2 < treeGridData.length; i_2++) {\n                if (treeGridData[i_2][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idx = i_2;\n                }\n            }\n            for (var i_3 = 0; i_3 < this.treeGridData.length; i_3++) {\n                if (this.treeGridData[i_3][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idz = i_3;\n                    break;\n                }\n            }\n            if (idx !== -1 && !isNullOrUndefined(idx)) {\n                dataSource.splice(idx, 1);\n            }\n            if (idz !== -1 && !isNullOrUndefined(idz)) {\n                this.treeGridData.splice(idz, 1);\n            }\n            if (currentRecord.hasChildRecords) {\n                this.removeChildItem(currentRecord);\n            }\n        }\n    };\n    RowDD.prototype.getChildCount = function (record, count) {\n        var currentRecord;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            if (currentRecord.hasChildRecords) {\n                count = this.getChildCount(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.ensuredropPosition = function (draggedRecords, currentRecord) {\n        var _this = this;\n        draggedRecords.filter(function (e) {\n            if (e.hasChildRecords && !isNullOrUndefined(e.childRecords)) {\n                var valid = e.childRecords.indexOf(currentRecord);\n                if (valid === -1) {\n                    _this.ensuredropPosition(e.childRecords, currentRecord);\n                }\n                else {\n                    _this.dropPosition = 'Invalid';\n                    _this.addErrorElem();\n                    _this.canDrop = false;\n                    return;\n                }\n            }\n        });\n    };\n    RowDD.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    RowDD.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowdraging, this.Rowdraging);\n        this.parent.off(events.rowDropped, this.rowDropped);\n        this.parent.off(events.rowsAdd, this.rowsAdded);\n        this.parent.off(events.rowsRemove, this.rowsRemoved);\n    };\n    /**\n     * hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns RowDragAndDrop module name\n     */\n    RowDD.prototype.getModuleName = function () {\n        return 'rowDragAndDrop';\n    };\n    return RowDD;\n}());\nexport { RowDD };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the row drop settings of the TreeGrid.\n */\nvar RowDropSettings = /** @class */ (function (_super) {\n    __extends(RowDropSettings, _super);\n    function RowDropSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], RowDropSettings.prototype, \"targetID\", void 0);\n    return RowDropSettings;\n}(ChildProperty));\nexport { RowDropSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualRowModelGenerator } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { isCountRequired } from '../utils';\n/**\n * RowModelGenerator is used to generate grid data rows.\n *\n * @hidden\n */\nvar TreeVirtualRowModelGenerator = /** @class */ (function (_super) {\n    __extends(TreeVirtualRowModelGenerator, _super);\n    function TreeVirtualRowModelGenerator(parent) {\n        var _this = _super.call(this, parent) || this;\n        _this.addEventListener();\n        return _this;\n    }\n    TreeVirtualRowModelGenerator.prototype.addEventListener = function () {\n        this.parent.on(events.dataListener, this.getDatas, this);\n    };\n    TreeVirtualRowModelGenerator.prototype.getDatas = function (args) {\n        this.visualData = args.data;\n    };\n    TreeVirtualRowModelGenerator.prototype.getDataInfo = function () {\n        return _super.prototype.getData.call(this);\n    };\n    TreeVirtualRowModelGenerator.prototype.generateRows = function (data, notifyArgs) {\n        var info = this.getDataInfo();\n        if (!isNullOrUndefined(notifyArgs.virtualInfo)) {\n            if (notifyArgs.virtualInfo.direction !== 'right' && notifyArgs.virtualInfo.direction !== 'left') {\n                notifyArgs.virtualInfo.blockIndexes = info.blockIndexes;\n            }\n            else {\n                notifyArgs.virtualInfo.blockIndexes = this.getBlockIndexes(notifyArgs.virtualInfo.page);\n            }\n        }\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            return _super.prototype.generateRows.call(this, data, notifyArgs);\n        }\n        else {\n            if (!isNullOrUndefined(notifyArgs.requestType) && notifyArgs.requestType.toString() === 'collapseAll') {\n                notifyArgs.requestType = 'refresh';\n            }\n            var rows = _super.prototype.generateRows.call(this, data, notifyArgs);\n            for (var r = 0; r < rows.length; r++) {\n                rows[r].index = (this.visualData).indexOf(rows[r].data);\n            }\n            return rows;\n        }\n    };\n    TreeVirtualRowModelGenerator.prototype.checkAndResetCache = function (action) {\n        var clear = ['paging', 'refresh', 'sorting', 'filtering', 'searching', 'reorder',\n            'save', 'delete'].some(function (value) { return action === value; });\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            var model = 'model';\n            var currentPage = this[model].currentPage;\n            if (clear) {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n            }\n            else if (action === 'virtualscroll' && this.cache[currentPage] &&\n                this.cache[currentPage].length > (this.parent.contentModule).getBlockSize()) {\n                delete this.cache[currentPage];\n            }\n        }\n        else {\n            if (clear || action === 'virtualscroll') {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n            }\n        }\n        return clear;\n    };\n    return TreeVirtualRowModelGenerator;\n}(VirtualRowModelGenerator));\nexport { TreeVirtualRowModelGenerator };\n","import { getObject, Filter as GridFilter, Grid } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Filter module will handle filtering action\n *\n * @hidden\n */\nvar Filter = /** @class */ (function () {\n    /**\n     * Constructor for Filter module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Filter(parent) {\n        Grid.Inject(GridFilter);\n        this.parent = parent;\n        this.isHierarchyFilter = false;\n        this.filteredResult = [];\n        this.flatFilteredData = [];\n        this.filteredParentRecs = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Filter module name\n     */\n    Filter.prototype.getModuleName = function () {\n        return 'filter';\n    };\n    /**\n     * To destroy the Filter module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Filter.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Filter.prototype.addEventListener = function () {\n        this.parent.on('updateFilterRecs', this.updatedFilteredRecord, this);\n        this.parent.on('clearFilters', this.clearFilterLevel, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Filter.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateFilterRecs', this.updatedFilteredRecord);\n        this.parent.off('clearFilters', this.clearFilterLevel);\n    };\n    /**\n     * Function to update filtered records\n     *\n     * @param {{data: Object} } dataDetails - Filtered data collection\n     * @param {Object} dataDetails.data - Fliltered data collection\n     * @hidden\n     * @returns {void}\n     */\n    Filter.prototype.updatedFilteredRecord = function (dataDetails) {\n        setValue('uniqueIDFilterCollection', {}, this.parent);\n        this.flatFilteredData = dataDetails.data;\n        this.filteredParentRecs = [];\n        this.filteredResult = [];\n        this.isHierarchyFilter = false;\n        for (var f = 0; f < this.flatFilteredData.length; f++) {\n            var rec = this.flatFilteredData[f];\n            this.addParentRecord(rec);\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n                : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'None') &&\n                (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== ''))) {\n                this.isHierarchyFilter = true;\n            }\n            var ischild = getObject('childRecords', rec);\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                setValue('hasFilteredChildRecords', this.checkChildExsist(rec), rec);\n            }\n            var parent_1 = getObject('parentItem', rec);\n            if (!isNullOrUndefined(parent_1)) {\n                var parRecord = getParentData(this.parent, rec.parentItem.uniqueID, true);\n                //let parRecord: Object = this.flatFilteredData.filter((e: ITreeData) => {\n                //          return e.uniqueID === rec.parentItem.uniqueID; })[0];\n                setValue('hasFilteredChildRecords', true, parRecord);\n                if (parRecord && parRecord.parentItem) {\n                    this.updateParentFilteredRecord(parRecord);\n                }\n            }\n        }\n        if (this.flatFilteredData.length > 0 && this.isHierarchyFilter) {\n            this.updateFilterLevel();\n        }\n        this.parent.notify('updateAction', { result: this.filteredResult });\n    };\n    Filter.prototype.updateParentFilteredRecord = function (record) {\n        var parRecord = getParentData(this.parent, record.parentItem.uniqueID, true);\n        var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n        if (parRecord && Object.prototype.hasOwnProperty.call(uniqueIDValue, parRecord.uniqueID)) {\n            setValue('hasFilteredChildRecords', true, parRecord);\n        }\n        if (parRecord && parRecord.parentItem) {\n            this.updateParentFilteredRecord(parRecord);\n        }\n    };\n    Filter.prototype.addParentRecord = function (record) {\n        var parent = getParentData(this.parent, record.parentUniqueID);\n        //let parent: Object = this.parent.flatData.filter((e: ITreeData) => {return e.uniqueID === record.parentUniqueID; })[0];\n        var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n            : this.parent.searchSettings.hierarchyMode;\n        if (hierarchyMode === 'None' && (this.parent.grid.filterSettings.columns.length !== 0\n            || this.parent.grid.searchSettings.key !== '')) {\n            if (isNullOrUndefined(parent)) {\n                if (this.flatFilteredData.indexOf(record) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                        record.hasFilteredChildRecords = true;\n                    }\n                    return;\n                }\n            }\n            else {\n                this.addParentRecord(parent);\n                if (this.flatFilteredData.indexOf(parent) !== -1 || this.filteredResult.indexOf(parent) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n                else {\n                    if (this.filteredResult.indexOf(record) === -1 && this.flatFilteredData.indexOf(record) !== -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n            }\n        }\n        else {\n            if (!isNullOrUndefined(parent)) {\n                var hierarchyMode_1 = this.parent.grid.searchSettings.key === '' ?\n                    this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n                if (hierarchyMode_1 === 'Child' && (this.parent.grid.filterSettings.columns.length !== 0\n                    || this.parent.grid.searchSettings.key !== '')) {\n                    if (this.flatFilteredData.indexOf(parent) !== -1) {\n                        this.addParentRecord(parent);\n                    }\n                }\n                else {\n                    this.addParentRecord(parent);\n                }\n            }\n            if (this.filteredResult.indexOf(record) === -1) {\n                this.filteredResult.push(record);\n                setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n            }\n        }\n    };\n    Filter.prototype.checkChildExsist = function (records) {\n        var childRec = getObject('childRecords', records);\n        var isExist = false;\n        for (var count = 0; count < childRec.length; count++) {\n            var ischild = childRec[count].childRecords;\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ?\n                this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'Both') && (this.parent.grid.filterSettings.columns.length !== 0\n                || this.parent.grid.searchSettings.key !== ''))) {\n                var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n                if (!Object.prototype.hasOwnProperty.call(uniqueIDValue, childRec[count].uniqueID)) {\n                    this.filteredResult.push(childRec[count]);\n                    setValue('uniqueIDFilterCollection.' + childRec[count].uniqueID, childRec[count], this.parent);\n                    isExist = true;\n                }\n            }\n            if ((hierarchyMode === 'None')\n                && (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== '')) {\n                if (this.flatFilteredData.indexOf(childRec[count]) !== -1) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                isExist = this.checkChildExsist(childRec[count]);\n            }\n            if ((hierarchyMode === 'Child' || hierarchyMode === 'Both') && childRec.length) {\n                isExist = true;\n            }\n        }\n        return isExist;\n    };\n    Filter.prototype.updateFilterLevel = function () {\n        var record = this.filteredResult;\n        var len = this.filteredResult.length;\n        for (var c = 0; c < len; c++) {\n            var parent_2 = getParentData(this.parent, record[c].parentUniqueID);\n            var isPrst = record.indexOf(parent_2) !== -1;\n            if (isPrst) {\n                var parent_3 = getParentData(this.parent, record[c].parentUniqueID, true);\n                record[c].filterLevel = parent_3.filterLevel + 1;\n            }\n            else {\n                record[c].filterLevel = 0;\n                this.filteredParentRecs.push(record[c]);\n            }\n        }\n    };\n    Filter.prototype.clearFilterLevel = function (data) {\n        var count = 0;\n        var flatData = data.flatData;\n        var len = flatData.length;\n        var currentRecord;\n        for (count; count < len; count++) {\n            currentRecord = flatData[count];\n            var fLevel = currentRecord.filterLevel;\n            if (fLevel || fLevel === 0 || !isNullOrUndefined(currentRecord.hasFilteredChildRecords)) {\n                currentRecord.hasFilteredChildRecords = null;\n                currentRecord.filterLevel = null;\n            }\n        }\n        this.filteredResult = [];\n        this.parent.notify('updateResults', { result: flatData, count: flatData.length });\n    };\n    return Filter;\n}());\nexport { Filter };\n","import { getObject, Grid, ExcelExport as GridExcel } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, getParentData, getExpandStatus } from '../utils';\nimport { isNullOrUndefined, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid Excel Export module\n *\n * @hidden\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for Excel Export module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function ExcelExport(parent) {\n        this.isCollapsedStatePersist = false;\n        Grid.Inject(GridExcel);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ExcelExport module name\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'ExcelExport';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ExcelExport.prototype.addEventListener = function () {\n        this.parent.on('updateResults', this.updateExcelResultModel, this);\n        this.parent.on('excelCellInfo', this.excelQueryCellInfo, this);\n        this.parent.grid.on('export-RowDataBound', this.exportRowDataBound, this);\n        this.parent.grid.on('finalPageSetup', this.finalPageSetup, this);\n    };\n    /**\n     * To destroy the Excel Export\n     *\n     * @returns {void}\n     * @hidden\n     */\n    ExcelExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ExcelExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateResults', this.updateExcelResultModel);\n        this.parent.off('excelCellInfo', this.excelQueryCellInfo);\n        this.parent.grid.off('export-RowDataBound', this.exportRowDataBound);\n        this.parent.grid.off('finalPageSetup', this.finalPageSetup);\n    };\n    ExcelExport.prototype.updateExcelResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    ExcelExport.prototype.Map = function (excelExportProperties, \n    /* eslint-disable-next-line */\n    isMultipleExport, workbook, isBlob, isCsv) {\n        var _this = this;\n        var dataSource = this.parent.dataSource;\n        var property = Object();\n        setValue('isCsv', isCsv, property);\n        setValue('cancel', false, property);\n        if (!isNullOrUndefined(excelExportProperties)) {\n            this.isCollapsedStatePersist = excelExportProperties.isCollapsedStatePersist;\n        }\n        return new Promise(function (resolve) {\n            var dm = _this.isLocal() && !(dataSource instanceof DataManager) ? new DataManager(dataSource)\n                : _this.parent.dataSource;\n            var query = new Query();\n            if (!_this.isLocal()) {\n                query = _this.generateQuery(query);\n                setValue('query', query, property);\n            }\n            _this.parent.trigger(event.beforeExcelExport, extend(property, excelExportProperties));\n            if (getObject('cancel', property)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customData = null;\n                if (!isNullOrUndefined(excelExportProperties) && !isNullOrUndefined(excelExportProperties.dataSource)) {\n                    customData = excelExportProperties.dataSource;\n                }\n                excelExportProperties = _this.manipulateExportProperties(excelExportProperties, dataSource, e);\n                return _this.parent.grid.excelExportModule.Map(_this.parent.grid, excelExportProperties, isMultipleExport, workbook, isCsv, isBlob).then(function (book) {\n                    if (customData != null) {\n                        excelExportProperties.dataSource = customData;\n                    }\n                    else {\n                        delete excelExportProperties.dataSource;\n                    }\n                    resolve(book);\n                });\n            });\n        });\n    };\n    ExcelExport.prototype.generateQuery = function (query, property) {\n        if (!isNullOrUndefined(property) && property.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            property.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    ExcelExport.prototype.manipulateExportProperties = function (property, dtSrc, queryResult) {\n        //count not required for this query\n        var args = Object();\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(property) && !isNullOrUndefined(property.exportType)) {\n            setValue('exportType', property.exportType, args);\n        }\n        if (!this.isLocal()) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getObject('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!this.isLocal()) {\n            this.parent.flatData = [];\n        }\n        if (property && property.dataSource && this.isLocal()) {\n            var flatsData = this.parent.flatData;\n            var dataSrc = property.dataSource instanceof DataManager ? property.dataSource.dataSource.json : property.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatsData;\n        }\n        property = isNullOrUndefined(property) ? Object() : property;\n        property.dataSource = new DataManager({ json: dtSrc });\n        return property;\n    };\n    /**\n     * TreeGrid Excel Export cell modifier\n     *\n     * @param {ExcelQueryCellInfoEventArgs} args - current cell details\n     * @hidden\n     * @returns {void}\n     */\n    ExcelExport.prototype.excelQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = args.data;\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.indent = pad;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('excelQueryCellInfo', args);\n    };\n    ExcelExport.prototype.exportRowDataBound = function (excelRow) {\n        if (excelRow.type === 'excel') {\n            var excelrowobj = excelRow.rowObj.data;\n            var filtercolumnlength = this.parent.grid.filterSettings.columns.length;\n            if (excelrowobj.parentItem && getParentData(this.parent, excelrowobj.parentItem.uniqueID, Boolean(filtercolumnlength))) {\n                var rowlength = excelRow.excelRows.length;\n                var rowlevel = excelrowobj.level;\n                var expandedStatus = false;\n                var sublevelState = false;\n                var state = getExpandStatus(this.parent, excelrowobj, this.parent.parentData);\n                if (this.isCollapsedStatePersist && (!state || !this.parent.isLocalData)) {\n                    expandedStatus = true;\n                    sublevelState = excelrowobj.expanded ? false : true;\n                }\n                excelRow.excelRows[rowlength - 1].grouping = { outlineLevel: rowlevel, isCollapsed: sublevelState,\n                    isHidden: expandedStatus };\n            }\n        }\n    };\n    /* eslint-disable-next-line */\n    ExcelExport.prototype.finalPageSetup = function (workbook) {\n        for (var i = 0; i < workbook.worksheets.length; i++) {\n            if (workbook.worksheets[i].rows) {\n                workbook.worksheets[i].pageSetup = { isSummaryRowBelow: false };\n            }\n        }\n    };\n    ExcelExport.prototype.isLocal = function () {\n        return !isRemoteData(this.parent) && isOffline(this.parent);\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n","import { getObject, PdfExport as GridPdf, Grid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid PDF Export module\n *\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for PDF export module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function PdfExport(parent) {\n        Grid.Inject(GridPdf);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} PdfExport module name\n     */\n    PdfExport.prototype.getModuleName = function () {\n        return 'PdfExport';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    PdfExport.prototype.addEventListener = function () {\n        this.parent.on('pdfCellInfo', this.pdfQueryCellInfo, this);\n        this.parent.on('updateResults', this.updatePdfResultModel, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    PdfExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('pdfCellInfo', this.pdfQueryCellInfo);\n        this.parent.off('updateResults', this.updatePdfResultModel);\n    };\n    /**\n     * To destroy the PDF Export\n     *\n     * @returns {void}\n     * @hidden\n     */\n    PdfExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    PdfExport.prototype.updatePdfResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    PdfExport.prototype.Map = function (pdfExportProperties, isMultipleExport, pdfDoc, isBlob) {\n        var _this = this;\n        var dtSrc = this.parent.dataSource;\n        var prop = Object();\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('cancel', false, prop);\n        return new Promise(function (resolve) {\n            var dm = isLocal && !(dtSrc instanceof DataManager) ? new DataManager(dtSrc)\n                : _this.parent.dataSource;\n            var query = new Query();\n            if (!isLocal) {\n                query = _this.generateQuery(query);\n                setValue('query', query, prop);\n            }\n            _this.parent.trigger(event.beforePdfExport, extend(prop, pdfExportProperties));\n            if (getObject('cancel', prop)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customsData = null;\n                if (!isNullOrUndefined(pdfExportProperties) && !isNullOrUndefined(pdfExportProperties.dataSource)) {\n                    customsData = pdfExportProperties.dataSource;\n                }\n                pdfExportProperties = _this.manipulatePdfProperties(pdfExportProperties, dtSrc, e);\n                return _this.parent.grid.pdfExportModule.Map(_this.parent.grid, pdfExportProperties, isMultipleExport, pdfDoc, isBlob).then(function (document) {\n                    if (customsData != null) {\n                        pdfExportProperties.dataSource = customsData;\n                    }\n                    else {\n                        delete pdfExportProperties.dataSource;\n                    }\n                    resolve(document);\n                });\n            });\n        });\n    };\n    PdfExport.prototype.generateQuery = function (query, prop) {\n        if (!isNullOrUndefined(prop) && prop.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            prop.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    PdfExport.prototype.manipulatePdfProperties = function (prop, dtSrc, queryResult) {\n        var args = {};\n        //count not required for this query\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        setValue('isPdfExport', true, args);\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.isCollapsedStatePersist)) {\n            setValue('isCollapsedStatePersist', prop.isCollapsedStatePersist, args);\n        }\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.exportType)) {\n            setValue('exportType', prop.exportType, args);\n        }\n        if (!isLocal) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getValue('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!isLocal) {\n            this.parent.flatData = [];\n        }\n        if (prop && prop.dataSource && isLocal) {\n            var flatDatas = this.parent.flatData;\n            var dataSrc = prop.dataSource instanceof DataManager ? prop.dataSource.dataSource.json : prop.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatDatas;\n        }\n        prop = isNullOrUndefined(prop) ? {} : prop;\n        prop.dataSource = new DataManager({ json: dtSrc });\n        return prop;\n    };\n    /**\n     * TreeGrid PDF Export cell modifier\n     *\n     * @param {PdfQueryCellInfoEventArgs} args - Current cell details\n     * @hidden\n     * @returns {void}\n     */\n    PdfExport.prototype.pdfQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = getObject('data', args);\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.paragraphIndent = pad * 3;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('pdfQueryCellInfo', args);\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { Grid } from '@syncfusion/ej2-grids';\nimport { Page as GridPage } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { DataManager, Query, Predicate } from '@syncfusion/ej2-data';\nimport { getValue, isNullOrUndefined, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * The `Page` module is used to render pager and handle paging action.\n *\n * @hidden\n */\nvar Page = /** @class */ (function () {\n    function Page(parent) {\n        Grid.Inject(GridPage);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Page.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandPagedchilds, this);\n        this.parent.on(events.pagingActions, this.pageAction, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Page.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandPagedchilds);\n        this.parent.off(events.pagingActions, this.pageAction);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Pager module name\n     */\n    Page.prototype.getModuleName = function () {\n        return 'pager';\n    };\n    /**\n     * Refreshes the page count, pager information, and external message.\n     *\n     * @returns {void}\n     */\n    Page.prototype.refresh = function () {\n        this.parent.grid.pagerModule.refresh();\n    };\n    /**\n     * To destroy the pager\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Page.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Navigates to the target page according to the given number.\n     *\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @returns {void}\n     */\n    Page.prototype.goToPage = function (pageNo) {\n        this.parent.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of the external message.\n     *\n     * @param  {string} message - Defines the message to update.\n     * @returns {void}\n     */\n    Page.prototype.updateExternalMessage = function (message) {\n        this.parent.grid.pagerModule.updateExternalMessage(message);\n    };\n    /**\n     * @param {{action: string, row: HTMLTableRowElement, record: ITreeData, args: RowCollapsedEventArgs}} rowDetails - Expand Collapse details arguments\n     * @param {string} rowDetails.action - Expand Collapse action type\n     * @param {HTMLTableRowElement} rowDetails.row - Row element\n     * @param {ITreeData} rowDetails.record - Row object data\n     * @param {RowCollapsedEventArgs} rowDetails.args - Expand Collapse event arguments\n     * @hidden\n     * @returns {void}\n     */\n    Page.prototype.collapseExpandPagedchilds = function (rowDetails) {\n        rowDetails.record.expanded = rowDetails.action === 'collapse' ? false : true;\n        if (this.parent.enableImmutableMode) {\n            var primaryKeyField_1 = this.parent.getPrimaryKeyFieldNames()[0];\n            var record = this.parent.flatData.filter(function (e) {\n                return e[primaryKeyField_1] === rowDetails.record[primaryKeyField_1];\n            });\n            if (record.length) {\n                record[0].expanded = rowDetails.record.expanded;\n            }\n        }\n        var ret = {\n            result: this.parent.flatData,\n            row: rowDetails.row,\n            action: rowDetails.action,\n            record: rowDetails.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret);\n        if (this.parent.enableImmutableMode) {\n            var row = 'row';\n            var action = 'action';\n            var targetEle = void 0;\n            if (ret[action] === 'collapse') {\n                targetEle = ret[row].getElementsByClassName('e-treegridexpand')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridexpand');\n                    addClass([targetEle], 'e-treegridcollapse');\n                }\n            }\n            else if (ret[action] === 'expand') {\n                targetEle = ret[row].getElementsByClassName('e-treegridcollapse')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridcollapse');\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n            }\n        }\n    };\n    Page.prototype.pageRoot = function (pagedResults, temp, result) {\n        var newResults = isNullOrUndefined(result) ? [] : result;\n        var _loop_1 = function (t) {\n            newResults.push(temp[t]);\n            var res = [];\n            if (temp[t].hasChildRecords) {\n                res = pagedResults.filter(function (e) {\n                    return temp[t].uniqueID === e.parentUniqueID;\n                });\n                newResults = this_1.pageRoot(pagedResults, res, newResults);\n            }\n        };\n        var this_1 = this;\n        for (var t = 0; t < temp.length; t++) {\n            _loop_1(t);\n        }\n        return newResults;\n    };\n    Page.prototype.pageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        if (this.parent.pageSettings.pageSizeMode === 'Root') {\n            var temp = [];\n            var propname = (this.parent.grid.filterSettings.columns.length > 0) &&\n                (this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'None') ?\n                'filterLevel' : 'level';\n            var query = new Query().where(propname, 'equal', 0);\n            temp = dm.executeLocal(query);\n            pageingDetails.count = temp.length;\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            temp = dm.executeLocal(query);\n            var newResults = this.pageRoot(pageingDetails.result, temp);\n            pageingDetails.result = newResults;\n        }\n        else {\n            var dm_1 = new DataManager(pageingDetails.result);\n            var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n            var parents_1 = dm_1.executeLocal(new Query().where(expanded));\n            var visualData = void 0;\n            if (isFilterChildHierarchy(this.parent) && ((this.parent.searchSettings.key !== this.parent.grid.searchSettings.key) ||\n                (this.parent.filterSettings.columns.length !== this.parent.grid.filterSettings.columns.length))) {\n                visualData = parents_1;\n            }\n            else {\n                visualData = parents_1.filter(function (e) {\n                    return getExpandStatus(_this.parent, e, parents_1);\n                });\n            }\n            pageingDetails.count = visualData.length;\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (visualData.length < (current * size)) {\n                current = (Math.floor(visualData.length / size)) + ((visualData.length % size) ? 1 : 0);\n                current = current ? current : 1;\n                this.parent.grid.setProperties({ pageSettings: { currentPage: current } }, true);\n            }\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm_1.dataSource.json = visualData;\n            pageingDetails.result = dm_1.executeLocal(query);\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    return Page;\n}());\nexport { Page };\n","import { Grid, Toolbar as tool } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Toolbar Module for TreeGrid\n *\n * @hidden\n */\nvar Toolbar = /** @class */ (function () {\n    function Toolbar(parent) {\n        Grid.Inject(tool);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns Toolbar module name\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'toolbar';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Toolbar.prototype.addEventListener = function () {\n        this.parent.on(events.rowSelected, this.refreshToolbar, this);\n        this.parent.on(events.toolbarClick, this.toolbarClickHandler, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Toolbar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowSelected, this.refreshToolbar);\n        this.parent.off(events.toolbarClick, this.toolbarClickHandler);\n    };\n    Toolbar.prototype.refreshToolbar = function (args) {\n        var tObj = this.parent;\n        if (args.row.rowIndex === 0 || tObj.getSelectedRecords().length > 1) {\n            this.enableItems([tObj.element.id + '_gridcontrol_indent', tObj.element.id + '_gridcontrol_outdent'], false);\n        }\n        else {\n            if (!isNullOrUndefined(tObj.getCurrentViewRecords()[args.row.rowIndex])) {\n                if (!isNullOrUndefined(tObj.getCurrentViewRecords()[args.row.rowIndex]) &&\n                    (tObj.getCurrentViewRecords()[args.row.rowIndex].level >\n                        tObj.getCurrentViewRecords()[args.row.rowIndex - 1].level)) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], false);\n                }\n                else {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level ===\n                    tObj.getCurrentViewRecords()[args.row.rowIndex - 1].level) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level === 0) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_outdent'], false);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level !== 0) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n                }\n            }\n        }\n        if (args.row.rowIndex === 0 && !isNullOrUndefined(args.data.parentItem)) {\n            this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n        }\n    };\n    Toolbar.prototype.toolbarClickHandler = function (args) {\n        var tObj = this.parent;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.grid.editSettings.mode === 'Batch' &&\n            args.item.id === this.parent.grid.element.id + '_update') {\n            args.cancel = true;\n            this.parent.grid.editModule.saveCell();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_expandall') {\n            this.parent.expandAll();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_collapseall') {\n            this.parent.collapseAll();\n        }\n        if (args.item.id === tObj.grid.element.id + '_indent' && tObj.getSelectedRecords().length) {\n            var record = tObj.getCurrentViewRecords()[tObj.getSelectedRowIndexes()[0] - 1];\n            var dropIndex = void 0;\n            if (record.level > tObj.getSelectedRecords()[0].level) {\n                for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                    if (tObj.getCurrentViewRecords()[i].taskData === record.parentItem.taskData) {\n                        dropIndex = i;\n                    }\n                }\n            }\n            else {\n                dropIndex = tObj.getSelectedRowIndexes()[0] - 1;\n            }\n            tObj.reorderRows([tObj.getSelectedRowIndexes()[0]], dropIndex, 'child');\n        }\n        if (args.item.id === tObj.grid.element.id + '_outdent' && tObj.getSelectedRecords().length) {\n            var index = tObj.getSelectedRowIndexes()[0];\n            var dropIndex = void 0;\n            var parentItem = tObj.getSelectedRecords()[0].parentItem;\n            for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                if (tObj.getCurrentViewRecords()[i].taskData === parentItem.taskData) {\n                    dropIndex = i;\n                }\n            }\n            tObj.reorderRows([index], dropIndex, 'below');\n        }\n    };\n    /**\n     * Gets the toolbar of the TreeGrid.\n     *\n     * @returns {Element} - Returns Toolbar element\n     * @hidden\n     */\n    Toolbar.prototype.getToolbar = function () {\n        return this.parent.grid.toolbarModule.getToolbar();\n    };\n    /**\n     * Enables or disables ToolBar items.\n     *\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @returns {void}\n     * @hidden\n     */\n    Toolbar.prototype.enableItems = function (items, isEnable) {\n        this.parent.grid.toolbarModule.enableItems(items, isEnable);\n    };\n    /**\n     * Destroys the ToolBar.\n     *\n     * @method destroy\n     * @returns {void}\n     */\n    Toolbar.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Toolbar;\n}());\nexport { Toolbar };\n","import { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getObject, calculateAggregate, Aggregate as GridAggregate, Grid, appendChildren } from '@syncfusion/ej2-grids';\nimport { findParentRecords } from '../utils';\nimport { isNullOrUndefined, setValue, createElement, extend } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Aggregate module\n *\n * @hidden\n */\nvar Aggregate = /** @class */ (function () {\n    /**\n     * Constructor for Aggregate module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Aggregate(parent) {\n        Grid.Inject(GridAggregate);\n        this.parent = parent;\n        this.flatChildRecords = [];\n        this.summaryQuery = [];\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Summary module name\n     */\n    Aggregate.prototype.getModuleName = function () {\n        return 'summary';\n    };\n    Aggregate.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n    };\n    /**\n     * Function to calculate summary values\n     *\n     * @param {QueryOptions[]} summaryQuery - DataManager query for aggregate operations\n     * @param {Object[]} filteredData - Filtered data collection\n     * @param {boolean} isSort - Specified whether sorting operation performed\n     * @hidden\n     * @returns {Object[]} -  return flat records with summary values\n     */\n    Aggregate.prototype.calculateSummaryValue = function (summaryQuery, filteredData, isSort) {\n        this.summaryQuery = summaryQuery;\n        var parentRecord;\n        var parentDataLength = Object.keys(filteredData).length;\n        var parentData = [];\n        for (var p = 0, len = parentDataLength; p < len; p++) {\n            var summaryRow = getObject('isSummaryRow', filteredData[p]);\n            if (!summaryRow) {\n                parentData.push(filteredData[p]);\n            }\n        }\n        var parentRecords = findParentRecords(parentData);\n        var flatRecords = parentData.slice();\n        var summaryLength = Object.keys(this.parent.aggregates).length;\n        var dataLength = Object.keys(parentRecords).length;\n        var childRecordsLength;\n        var columns = this.parent.getColumns();\n        if (this.parent.aggregates.filter(function (x) { return x.showChildSummary; }).length) {\n            for (var i = 0, len = dataLength; i < len; i++) {\n                parentRecord = parentRecords[i];\n                childRecordsLength = this.getChildRecordsLength(parentRecord, flatRecords);\n                if (childRecordsLength) {\n                    var _loop_1 = function (summaryRowIndex, len_1) {\n                        var item = void 0;\n                        item = {};\n                        for (var i_1 = 0; i_1 < columns.length; i_1++) {\n                            var field = (isNullOrUndefined(getObject('field', columns[i_1]))) ?\n                                columns[i_1] : getObject('field', (columns[i_1]));\n                            item[field] = null;\n                        }\n                        item = this_1.createSummaryItem(item, this_1.parent.aggregates[summaryRowIndex - 1]);\n                        if (this_1.parent.aggregates[summaryRowIndex - 1].showChildSummary) {\n                            var idx_1;\n                            flatRecords.map(function (e, i) {\n                                if (e.uniqueID === parentRecord.uniqueID) {\n                                    idx_1 = i;\n                                    return;\n                                }\n                            });\n                            var currentIndex = idx_1 + childRecordsLength + summaryRowIndex;\n                            var summaryParent = extend({}, parentRecord);\n                            delete summaryParent.childRecords;\n                            delete summaryParent[this_1.parent.childMapping];\n                            setValue('parentItem', summaryParent, item);\n                            var level = getObject('level', summaryParent);\n                            setValue('level', level + 1, item);\n                            setValue('isSummaryRow', true, item);\n                            setValue('parentUniqueID', summaryParent.uniqueID, item);\n                            if (isSort) {\n                                var childRecords = getObject('childRecords', parentRecord);\n                                if (childRecords.length) {\n                                    childRecords.push(item);\n                                }\n                            }\n                            flatRecords.splice(currentIndex, 0, item);\n                        }\n                        else {\n                            return \"continue\";\n                        }\n                    };\n                    var this_1 = this;\n                    for (var summaryRowIndex = 1, len_1 = summaryLength; summaryRowIndex <= len_1; summaryRowIndex++) {\n                        _loop_1(summaryRowIndex, len_1);\n                    }\n                    this.flatChildRecords = [];\n                }\n            }\n        }\n        else {\n            var items = {};\n            for (var columnIndex = 0, length_1 = columns.length; columnIndex < length_1; columnIndex++) {\n                var fields = isNullOrUndefined(getObject('field', columns[columnIndex])) ?\n                    columns[columnIndex] : getObject('field', columns[columnIndex]);\n                items[fields] = null;\n            }\n            for (var summaryRowIndex = 1, length_2 = summaryLength; summaryRowIndex <= length_2; summaryRowIndex++) {\n                this.createSummaryItem(items, this.parent.aggregates[summaryRowIndex - 1]);\n            }\n        }\n        return flatRecords;\n    };\n    Aggregate.prototype.getChildRecordsLength = function (parentData, flatData) {\n        var recordLength = Object.keys(flatData).length;\n        var record;\n        for (var i = 0, len = recordLength; i < len; i++) {\n            record = flatData[i];\n            var parent_1 = isNullOrUndefined(record.parentItem) ? null :\n                flatData.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n            if (parentData === parent_1) {\n                this.flatChildRecords.push(record);\n                var hasChild = getObject('hasChildRecords', record);\n                if (hasChild) {\n                    this.getChildRecordsLength(record, flatData);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return this.flatChildRecords.length;\n    };\n    Aggregate.prototype.createSummaryItem = function (itemData, summary) {\n        var summaryColumnLength = Object.keys(summary.columns).length;\n        for (var i = 0, len = summaryColumnLength; i < len; i++) {\n            var displayColumn = isNullOrUndefined(summary.columns[i].columnName) ? summary.columns[i].field :\n                summary.columns[i].columnName;\n            var keys = Object.keys(itemData);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if (key === displayColumn) {\n                    if (this.flatChildRecords.length) {\n                        itemData[key] = this.getSummaryValues(summary.columns[i], this.flatChildRecords);\n                    }\n                    else if (this.parent.isLocalData) {\n                        var data = this.parent.dataSource instanceof DataManager ? this.parent.dataSource.dataSource.json\n                            : this.parent.flatData;\n                        itemData[key] = this.getSummaryValues(summary.columns[i], data);\n                    }\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return itemData;\n    };\n    Aggregate.prototype.getSummaryValues = function (summaryColumn, summaryData) {\n        var qry = new Query();\n        var single = {};\n        var helper = {};\n        var type = !isNullOrUndefined(summaryColumn.field) ?\n            this.parent.getColumnByField(summaryColumn.field).type : undefined;\n        summaryColumn.setPropertiesSilent({ format: this.getFormatFromType(summaryColumn.format, type) });\n        summaryColumn.setFormatter(this.parent.grid.locale);\n        var formatFn = summaryColumn.getFormatter() || (function () { return function (a) { return a; }; })();\n        summaryColumn.setTemplate(helper);\n        var tempObj = summaryColumn.getTemplate(2);\n        qry.queries = this.summaryQuery;\n        qry.requiresCount();\n        var sumData = new DataManager(summaryData).executeLocal(qry);\n        var types = summaryColumn.type;\n        var summaryKey;\n        types = [summaryColumn.type];\n        for (var i = 0; i < types.length; i++) {\n            summaryKey = types[i];\n            var key = summaryColumn.field + ' - ' + types[i].toLowerCase();\n            var val = types[i] !== 'Custom' ? getObject('aggregates', sumData) :\n                calculateAggregate(types[i], sumData, summaryColumn, this.parent);\n            var disp = summaryColumn.columnName;\n            var value_1 = types[i] !== 'Custom' ? val[key] : val;\n            single[disp] = single[disp] || {};\n            single[disp][key] = value_1;\n            single[disp][types[i]] = !isNullOrUndefined(val) ? formatFn(value_1) : ' ';\n        }\n        helper.format = summaryColumn.getFormatter();\n        var cellElement = createElement('td', {\n            className: 'e-summary'\n        });\n        if (this.parent.isReact) {\n            var renderReactTemplates = 'renderReactTemplates';\n            tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property, '', null, null, cellElement);\n            this.parent[renderReactTemplates]();\n        }\n        else {\n            appendChildren(cellElement, tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property));\n        }\n        var value = single[summaryColumn.columnName][summaryKey];\n        var summaryValue;\n        if (cellElement.innerHTML.indexOf(value) === -1) {\n            summaryValue = cellElement.innerHTML + value;\n            return summaryValue;\n        }\n        else {\n            return cellElement.innerHTML;\n        }\n    };\n    Aggregate.prototype.getFormatFromType = function (summaryformat, type) {\n        if (isNullOrUndefined(type) || typeof summaryformat !== 'string') {\n            return summaryformat;\n        }\n        var obj;\n        switch (type) {\n            case 'number':\n                obj = { format: summaryformat };\n                break;\n            case 'datetime':\n                obj = { type: 'dateTime', skeleton: summaryformat };\n                break;\n            case 'date':\n                obj = { type: type, skeleton: summaryformat };\n                break;\n        }\n        return obj;\n    };\n    /**\n     * To destroy the Aggregate module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Aggregate.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Aggregate;\n}());\nexport { Aggregate };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { Sort as GridSort, Grid, getActualProperties } from '@syncfusion/ej2-grids';\nimport { getParentData } from '../utils';\n/**\n * Internal dataoperations for TreeGrid\n *\n * @hidden\n */\nvar Sort = /** @class */ (function () {\n    function Sort(grid) {\n        Grid.Inject(GridSort);\n        this.parent = grid;\n        this.taskIds = [];\n        this.flatSortedData = [];\n        this.storedIndex = -1;\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Sort module name\n     */\n    Sort.prototype.getModuleName = function () {\n        return 'sort';\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.addEventListener = function () {\n        this.parent.on('updateModel', this.updateModel, this);\n        this.parent.on('createSort', this.createdSortedRecords, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Sort.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateModel', this.updateModel);\n        this.parent.off('createSort', this.createdSortedRecords);\n    };\n    Sort.prototype.createdSortedRecords = function (sortParams) {\n        var data = sortParams.modifiedData;\n        var srtQry = sortParams.srtQry;\n        this.iterateSort(data, srtQry);\n        this.storedIndex = -1;\n        sortParams.modifiedData = this.flatSortedData;\n        this.flatSortedData = [];\n    };\n    Sort.prototype.iterateSort = function (data, srtQry) {\n        for (var d = 0; d < data.length; d++) {\n            if (this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key !== '') {\n                if (!isNullOrUndefined(getParentData(this.parent, data[d].uniqueID, true))) {\n                    this.storedIndex++;\n                    this.flatSortedData[this.storedIndex] = data[d];\n                }\n            }\n            else {\n                this.storedIndex++;\n                this.flatSortedData[this.storedIndex] = data[d];\n            }\n            if (data[d].hasChildRecords) {\n                var childSort = (new DataManager(data[d].childRecords).executeLocal(srtQry));\n                this.iterateSort(childSort, srtQry);\n            }\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     *\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @returns {void}\n     */\n    Sort.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        this.parent.grid.sortColumn(columnName, direction, isMultiSort);\n    };\n    Sort.prototype.removeSortColumn = function (field) {\n        this.parent.grid.removeSortColumn(field);\n    };\n    /**\n     * The function used to update sortSettings of TreeGrid.\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Sort.prototype.updateModel = function () {\n        this.parent.setProperties({ sortSettings: getActualProperties(this.parent.grid.sortSettings) }, true);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     *\n     * @returns {void}\n     */\n    Sort.prototype.clearSorting = function () {\n        this.parent.grid.clearSorting();\n        this.updateModel();\n    };\n    /**\n     * Destroys the Sorting of TreeGrid.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    Sort.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Sort;\n}());\nexport { Sort };\n","import { Grid, ColumnMenu as GridColumnMenu } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnMenu module\n *\n * @hidden\n */\nvar ColumnMenu = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function ColumnMenu(parent) {\n        Grid.Inject(GridColumnMenu);\n        this.parent = parent;\n    }\n    ColumnMenu.prototype.getColumnMenu = function () {\n        return this.parent.grid.columnMenuModule.getColumnMenu();\n    };\n    ColumnMenu.prototype.destroy = function () {\n        //this.parent.grid.columnMenuModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ColumnMenu module name\n     */\n    ColumnMenu.prototype.getModuleName = function () {\n        return 'columnMenu';\n    };\n    return ColumnMenu;\n}());\nexport { ColumnMenu };\n","import { Grid, ContextMenu as cmenu } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, select } from '@syncfusion/ej2-base';\n/**\n * ContextMenu Module for TreeGrid\n *\n * @hidden\n */\nvar ContextMenu = /** @class */ (function () {\n    function ContextMenu(parent) {\n        Grid.Inject(cmenu);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ContextMenu.prototype.addEventListener = function () {\n        this.parent.on('contextMenuOpen', this.contextMenuOpen, this);\n        this.parent.on('contextMenuClick', this.contextMenuClick, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('contextMenuOpen', this.contextMenuOpen);\n        this.parent.off('contextMenuClick', this.contextMenuClick);\n    };\n    ContextMenu.prototype.contextMenuOpen = function (args) {\n        var addRow = select('#' + this.parent.element.id + '_gridcontrol_cmenu_AddRow', args.element);\n        var editRecord = select('#' + this.parent.element.id + '_gridcontrol_cmenu_Edit', args.element);\n        if (addRow) {\n            if (this.parent.grid.editSettings.allowAdding === false) {\n                addRow.style.display = 'none';\n            }\n            else {\n                addRow.style.display = 'block';\n            }\n        }\n        if ((this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch')\n            && !(isNullOrUndefined(editRecord)) && !(editRecord.classList.contains('e-menu-hide'))) {\n            editRecord.style.display = 'none';\n        }\n    };\n    ContextMenu.prototype.contextMenuClick = function (args) {\n        if (args.item.id === 'Above' || args.item.id === 'Below' || args.item.id === 'Child') {\n            this.parent.notify('savePreviousRowPosition', args);\n            this.parent.setProperties({ editSettings: { newRowPosition: args.item.id } }, true);\n            this.parent.addRecord();\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ContextMenu module name\n     */\n    ContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    /**\n     * Destroys the ContextMenu.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    ContextMenu.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Gets the context menu element from the TreeGrid.\n     *\n     * @returns {Element} Return Context Menu root element.\n     */\n    ContextMenu.prototype.getContextMenu = function () {\n        return this.parent.grid.contextMenuModule.getContextMenu();\n    };\n    return ContextMenu;\n}());\nexport { ContextMenu };\n","import { isNullOrUndefined, extend, setValue, getValue, merge } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, extendArray } from '../utils';\nimport { getUid } from '@syncfusion/ej2-grids';\nimport { updateParentRow, editAction } from './crud-actions';\n/**\n * `BatchEdit` module is used to handle batch editing actions.\n *\n * @hidden\n */\nvar BatchEdit = /** @class */ (function () {\n    function BatchEdit(parent) {\n        this.batchChildCount = 0;\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.batchAddedRecords = [];\n        this.batchDeletedRecords = [];\n        this.batchAddRowRecord = [];\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.batchRecords = [];\n        this.currentViewRecords = [];\n        this.isAdd = false;\n        this.addEventListener();\n    }\n    BatchEdit.prototype.addEventListener = function () {\n        this.parent.on(events.cellSaved, this.cellSaved, this);\n        this.parent.on(events.batchAdd, this.batchAdd, this);\n        this.parent.on(events.beforeBatchAdd, this.beforeBatchAdd, this);\n        this.parent.on(events.batchSave, this.batchSave, this);\n        this.parent.on(events.beforeBatchDelete, this.beforeBatchDelete, this);\n        this.parent.on(events.beforeBatchSave, this.beforeBatchSave, this);\n        this.parent.on('batchPageAction', this.batchPageAction, this);\n        this.parent.on('batchCancelAction', this.batchCancelAction, this);\n        this.parent.grid.on('immutable-batch-cancel', this.immutableBatchAction, this);\n        this.parent.grid.on('next-cell-index', this.nextCellIndex, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    BatchEdit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.cellSaved, this.cellSaved);\n        this.parent.off(events.batchAdd, this.batchAdd);\n        this.parent.off(events.batchSave, this.batchSave);\n        this.parent.off(events.beforeBatchAdd, this.beforeBatchAdd);\n        this.parent.off(events.beforeBatchDelete, this.beforeBatchDelete);\n        this.parent.off(events.beforeBatchSave, this.beforeBatchSave);\n        this.parent.off('batchPageAction', this.batchPageAction);\n        this.parent.off('batchCancelAction', this.batchCancelAction);\n        this.parent.grid.off('immutable-batch-cancel', this.immutableBatchAction);\n        this.parent.grid.off('next-cell-index', this.nextCellIndex);\n    };\n    /**\n     * To destroy the editModule\n     *\n     * @returns {void}\n     * @hidden\n     */\n    BatchEdit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {Object[]} Returns modified records in batch editing.\n     */\n    BatchEdit.prototype.getBatchRecords = function () {\n        return this.batchRecords;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns index of newly add row\n     */\n    BatchEdit.prototype.getAddRowIndex = function () {\n        return this.addRowIndex;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns selected row index\n     */\n    BatchEdit.prototype.getSelectedIndex = function () {\n        return this.selectedIndex;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns newly added child count\n     */\n    BatchEdit.prototype.getBatchChildCount = function () {\n        return this.batchChildCount;\n    };\n    BatchEdit.prototype.batchPageAction = function () {\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var index;\n        if (!isNullOrUndefined(this.batchAddedRecords) && this.batchAddedRecords.length) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[primaryKey]; }).indexOf(this.batchAddedRecords[i][primaryKey]);\n                data.splice(index, 1);\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.batchDeletedRecords = this.currentViewRecords = [];\n    };\n    BatchEdit.prototype.cellSaved = function (args) {\n        var actualCellIndex = args.cell.cellIndex;\n        var frozenCols = this.parent.frozenColumns || this.parent.getFrozenColumns();\n        if (frozenCols && args.columnObject.index > frozenCols) {\n            actualCellIndex = actualCellIndex + frozenCols;\n        }\n        var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n            this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (freeze) {\n            var colCount = this.parent.getFrozenLeftColumnsCount() + actualCellIndex;\n            if (colCount === this.parent.treeColumnIndex) {\n                this.parent.renderModule.cellRender({ data: args.rowData, cell: args.cell,\n                    column: this.parent.grid.getColumnByIndex(args.cell.cellIndex)\n                });\n            }\n        }\n        else if (actualCellIndex === this.parent.treeColumnIndex) {\n            this.parent.renderModule.cellRender({ data: args.rowData, cell: args.cell,\n                column: this.parent.grid.getColumnByIndex(args.cell.cellIndex)\n            });\n        }\n        if (this.isAdd && this.parent.editSettings.mode === 'Batch' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var added = void 0;\n            var level = 'level';\n            var primaryKey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var currentDataIndex = void 0;\n            var indexvalue = void 0;\n            var parentItem = 'parentItem';\n            var uniqueID = 'uniqueID';\n            var parentRecord = this.selectedIndex > -1 ? this.batchRecords[this.addRowIndex][parentItem] : null;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentIdMapping = void 0;\n            var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Top' || this.selectedIndex === -1 ? 0 :\n                this.parent.editSettings.newRowPosition === 'Above' ? this.addRowIndex\n                    : this.addRowIndex + 1;\n            rowObjectIndex = this.getActualRowObjectIndex(rowObjectIndex);\n            if (this.newBatchRowAdded) {\n                if (this.batchRecords.length) {\n                    idMapping = this.batchRecords[this.addRowIndex][this.parent.idMapping];\n                    parentIdMapping = this.batchRecords[this.addRowIndex][this.parent.parentIdMapping];\n                    if (this.batchRecords[this.addRowIndex][parentItem]) {\n                        parentUniqueID = this.batchRecords[this.addRowIndex][parentItem][uniqueID];\n                    }\n                }\n                this.batchAddedRecords = extendArray(this.batchAddedRecords);\n                this.batchAddRowRecord = extendArray(this.batchAddRowRecord);\n                this.batchAddRowRecord.push(this.batchRecords[this.addRowIndex]);\n                added = this.parent.grid.getRowsObject()[rowObjectIndex].changes;\n                added.uniqueID = getUid(this.parent.element.id + '_data_');\n                setValue('uniqueIDCollection.' + added.uniqueID, added, this.parent);\n                if (!Object.prototype.hasOwnProperty.call(added, 'level')) {\n                    this.batchIndex = this.selectedIndex === -1 ? 0 : this.batchIndex;\n                    if (this.parent.editSettings.newRowPosition === 'Child') {\n                        added.primaryParent = parentRecord;\n                        if (this.selectedIndex > -1) {\n                            added.parentItem = extend({}, this.batchRecords[this.addRowIndex]);\n                            added.parentUniqueID = added.parentItem.uniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                            added.level = added.parentItem.level + 1;\n                            added.index = this.batchIndex;\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                            if (this.isSelfReference) {\n                                added[this.parent.parentIdMapping] = idMapping;\n                            }\n                            updateParentRow(primaryKey_1, added.parentItem, 'add', this.parent, this.isSelfReference, added);\n                        }\n                    }\n                    else if ((this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below')\n                        && !isNullOrUndefined(this.batchRecords[this.addRowIndex])) {\n                        added.level = this.batchRecords[this.addRowIndex][level];\n                        if (added.level && this.selectedIndex > -1) {\n                            added.parentItem = parentRecord;\n                            added.parentUniqueID = parentUniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                        }\n                        added.index = this.parent.editSettings.newRowPosition === 'Below' ? this.batchIndex : this.batchIndex - 1;\n                        if (this.parent.editSettings.newRowPosition === 'Below' && this.selectedIndex > -1) {\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                        }\n                        if (this.parent.editSettings.newRowPosition === 'Above' && this.selectedIndex > -1) {\n                            var record = this.batchRecords[this.addRowIndex];\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                        }\n                        if (this.isSelfReference) {\n                            added[this.parent.parentIdMapping] = parentIdMapping;\n                        }\n                    }\n                    added.index = added.index === -1 ? 0 : added.index;\n                    added.hasChildRecords = false;\n                    added.childRecords = [];\n                    this.batchRecords.splice(added.index, 0, added);\n                    this.currentViewRecords.splice(added.index, 0, added);\n                    if (currentDataIndex) {\n                        indexvalue = currentDataIndex;\n                    }\n                    else {\n                        indexvalue = added.index;\n                    }\n                    if (this.parent.editSettings.newRowPosition !== 'Above') {\n                        indexvalue = added.index === 0 ? indexvalue : indexvalue + 1;\n                    }\n                    data.splice(indexvalue, 0, added);\n                    this.batchAddedRecords.push(added);\n                }\n                this.parent.grid.getRowsObject()[rowObjectIndex].data = added;\n                this.newBatchRowAdded = false;\n            }\n            if (this.parent.frozenColumns || this.parent.getFrozenColumns()\n                && this.parent.grid.getRowsObject()[rowObjectIndex].edit === 'add') {\n                merge(this.currentViewRecords[rowObjectIndex], this.parent.grid.getRowsObject()[rowObjectIndex].changes);\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchAdd = function (e) {\n        var isTabLastRow = 'isTabLastRow';\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.editModule[isTabLastRow]) {\n            e.cancel = true;\n            this.parent.editModule[isTabLastRow] = false;\n            return;\n        }\n        this.selectedIndex = this.parent.grid.selectedRowIndex;\n        this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n        this.addRowRecord = this.parent.getSelectedRecords()[0];\n    };\n    BatchEdit.prototype.batchAdd = function (e) {\n        if (this.parent.editSettings.newRowPosition !== 'Bottom') {\n            this.isAdd = true;\n            this.newBatchRowAdded = true;\n            var actualIndex = 0;\n            if (!this.batchRecords.length) {\n                this.batchAddedRecords = [];\n                this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n                this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top') {\n                var records = this.parent.grid.getCurrentViewRecords();\n                if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                    records = this.batchRecords;\n                }\n                this.updateChildCount(records);\n                this.parent.notify(events.beginAdd, {});\n                this.batchChildCount = 0;\n            }\n            this.updateRowIndex();\n            // update focus module, need to refix this once grid source modified.\n            var focusModule = getValue('focusModule', this.parent.grid);\n            var table = this.parent.getContentTable();\n            if (this.parent.getBatchChanges()[this.deletedRecords].length && this.parent.editSettings.newRowPosition === 'Above') {\n                actualIndex = e.row.rowIndex;\n                focusModule.getContent().matrix.matrix = this.matrix;\n            }\n            else {\n                actualIndex = table.getElementsByClassName('e-batchrow')[0].rowIndex;\n                // if (this.parent.frozenRows || this.parent.frozenColumns) {\n                //   actualIndex = this.batchIndex;\n                // }\n            }\n            focusModule.getContent().matrix.current = [actualIndex, focusModule.getContent().matrix.current[1]];\n        }\n    };\n    BatchEdit.prototype.beforeBatchDelete = function (args) {\n        if (!this.batchRecords.length) {\n            this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        }\n        var focusModule = getValue('focusModule', this.parent.grid);\n        this.matrix = focusModule.getContent().matrix.matrix;\n        var row = [];\n        var records = [];\n        var primarykey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var data;\n        var childs;\n        var uid;\n        if (!isNullOrUndefined(args.row) && this.parent.getSelectedRows().indexOf(args.row) === -1) {\n            data = args.rowData;\n            childs = findChildrenRecords(data);\n            uid = args.row.getAttribute('data-uid');\n        }\n        else {\n            data = this.parent.grid.getSelectedRecords()[this.parent.grid.getSelectedRecords().length - 1];\n            childs = findChildrenRecords(data);\n            uid = this.parent.getSelectedRows()[0].getAttribute('data-uid');\n        }\n        var parentRowIndex = parseInt(this.parent.grid.getRowElementByUID(uid).getAttribute('aria-rowindex'), 10);\n        if (childs.length) {\n            var totalCount = parentRowIndex + childs.length;\n            var firstChildIndex = parentRowIndex + 1;\n            for (var i = firstChildIndex; i <= totalCount; i++) {\n                row.push(this.parent.grid.getDataRows()[i]);\n                if (this.parent.frozenRows || this.parent.frozenColumns || this.parent.getFrozenColumns()) {\n                    row.push(this.parent.grid.getMovableRows()[i]);\n                }\n            }\n        }\n        if (!isNullOrUndefined(data.parentItem)) {\n            var parentItem = getParentData(this.parent, data.parentItem.uniqueID);\n            if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                var childIndex = parentItem.childRecords.indexOf(data);\n                parentItem.childRecords.splice(childIndex, 1);\n            }\n            this.batchDeletedRecords = extendArray(this.batchDeletedRecords);\n            this.batchDeletedRecords.push(data);\n        }\n        childs.push(data);\n        records = childs;\n        for (var i = 0; i < records.length; i++) {\n            var indexvalue = this.batchRecords.map(function (e) { return e[primarykey]; }).indexOf(records[i][primarykey]);\n            if (indexvalue !== -1) {\n                this.batchRecords.splice(indexvalue, 1);\n            }\n        }\n        for (var i = 0; i < row.length; i++) {\n            if (!isNullOrUndefined(row[i])) {\n                this.parent.grid.selectionModule.selectedRecords.push(row[i]);\n            }\n        }\n    };\n    BatchEdit.prototype.updateRowIndex = function () {\n        var rows = this.parent.grid.getDataRows();\n        for (var i = 0; i < rows.length; i++) {\n            rows[i].setAttribute('aria-rowindex', i.toString());\n        }\n        var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n            this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns || freeze) {\n            var mRows = this.parent.grid.getMovableDataRows();\n            var freezeRightRows = this.parent.grid.getFrozenRightDataRows();\n            for (var i = 0; i < mRows.length; i++) {\n                mRows[i].setAttribute('aria-rowindex', i.toString());\n                if (freeze) {\n                    freezeRightRows[i].setAttribute('aria-rowindex', i.toString());\n                }\n            }\n        }\n    };\n    BatchEdit.prototype.updateChildCount = function (records) {\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var addedRecords = 'addedRecords';\n        var parentItem = this.parent.editSettings.newRowPosition === 'Child' ? 'primaryParent' : 'parentItem';\n        for (var i = 0; i < this.parent.getBatchChanges()[addedRecords].length; i++) {\n            if (!isNullOrUndefined(this.parent.getBatchChanges()[addedRecords][i][parentItem])) {\n                if (this.parent.getBatchChanges()[addedRecords][i][parentItem][primaryKey] === records[this.addRowIndex][primaryKey]) {\n                    this.batchChildCount = this.batchChildCount + 1;\n                }\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchSave = function (e) {\n        var changeRecords = 'changedRecords';\n        var deleterecords = 'deletedRecords';\n        var changedRecords = e.batchChanges[changeRecords];\n        if (e.batchChanges[changeRecords].length) {\n            var columnName = void 0;\n            for (var i = 0; i < changedRecords.length; i++) {\n                editAction({ value: changedRecords[i], action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName);\n            }\n        }\n        if (e.batchChanges[deleterecords].length) {\n            var deletedRecords = e.batchChanges[deleterecords];\n            var record = deletedRecords;\n            for (var i = 0; i < record.length; i++) {\n                this.deleteUniqueID(record[i].uniqueID);\n                var childs = findChildrenRecords(record[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                e.batchChanges[deleterecords] = e.batchChanges[deleterecords].concat(childs);\n            }\n        }\n        this.isAdd = false;\n    };\n    BatchEdit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    BatchEdit.prototype.batchCancelAction = function () {\n        var targetElement = 'targetElement';\n        var index;\n        var parentItem = 'parentItem';\n        var indexvalue = 'index';\n        var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n        var childRecords = 'childRecords';\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        if (!isNullOrUndefined(this.parent[targetElement])) {\n            var row = this.parent[targetElement].closest('tr');\n            this.parent.collapseRow(row);\n            this.parent[targetElement] = null;\n        }\n        if (!isNullOrUndefined(this.batchAddedRecords)) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[primaryKey]; }).indexOf(this.batchAddedRecords[i][primaryKey]);\n                data.splice(index, 1);\n                if (this.parent.editSettings.newRowPosition === 'Child') {\n                    index = currentViewRecords.map(function (e) { return e[primaryKey]; })\n                        .indexOf(this.batchAddedRecords[i][parentItem] ? this.batchAddedRecords[i][parentItem][primaryKey]\n                        : this.batchAddedRecords[i][primaryKey]);\n                    if (!isNullOrUndefined(currentViewRecords[index])) {\n                        var children = currentViewRecords[index][childRecords];\n                        for (var j = 0; children && j < children.length; j++) {\n                            if (children[j][primaryKey] === this.batchAddedRecords[i][primaryKey]) {\n                                currentViewRecords[index][childRecords].splice(j, 1);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (!isNullOrUndefined(this.batchDeletedRecords)) {\n            for (var i = 0; i < this.batchDeletedRecords.length; i++) {\n                if (!isNullOrUndefined(this.batchDeletedRecords[i][parentItem])) {\n                    index = currentViewRecords.map(function (e) { return e[primaryKey]; })\n                        .indexOf(this.batchDeletedRecords[i][parentItem][primaryKey]);\n                    var positionIndex = this.batchDeletedRecords[i][indexvalue] === 0 ? this.batchDeletedRecords[i][indexvalue] :\n                        this.batchDeletedRecords[i][indexvalue] - 1;\n                    if (!isNullOrUndefined(currentViewRecords[index])) {\n                        currentViewRecords[index][childRecords].splice(positionIndex, 0, this.batchDeletedRecords[i]);\n                    }\n                }\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.currentViewRecords = [];\n        this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchIndex = 0;\n        this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchDeletedRecords = [];\n        this.parent.grid.renderModule.refresh();\n    };\n    BatchEdit.prototype.batchSave = function (args) {\n        if (this.parent.editSettings.mode === 'Batch') {\n            var i = void 0;\n            var batchChanges = Object.hasOwnProperty.call(args, 'updatedRecords') ? args.updatedRecords : this.parent.getBatchChanges();\n            var deletedRecords = 'deletedRecords';\n            var addedRecords = 'addedRecords';\n            var index = 'index';\n            var uniqueID = 'uniqueID';\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n            var primarykey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var level = 'level';\n            var addRecords = batchChanges[addedRecords];\n            var parentItem = 'parentItem';\n            var selectedIndex = void 0;\n            var addRowIndex = void 0;\n            var columnName = void 0;\n            var addRowRecord = void 0;\n            var childRecords = 'childRecords';\n            if (addRecords.length > 1 && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                addRecords.reverse();\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Bottom' && !Object.hasOwnProperty.call(args, 'updatedRecords')) {\n                data.splice(data.length - addRecords.length, addRecords.length);\n                if (!this.parent.allowPaging && data.length !== currentViewRecords.length) {\n                    if (currentViewRecords.length > addRecords.length) {\n                        currentViewRecords.splice(currentViewRecords.length - addRecords.length, addRecords.length);\n                    }\n                }\n                else {\n                    var totalRecords = extendArray(data);\n                    if (totalRecords.length) {\n                        var startIndex = totalRecords.map(function (e) { return e[primarykey_1]; })\n                            .indexOf(currentViewRecords[0][primarykey_1]);\n                        var endIndex = startIndex + this.parent.grid.pageSettings.pageSize;\n                        currentViewRecords = totalRecords.splice(startIndex, endIndex);\n                    }\n                }\n            }\n            if (this.batchAddRowRecord.length === 0) {\n                this.batchAddRowRecord.push(this.parent.flatData[args.index]);\n            }\n            for (i = 0; i < addRecords.length; i++) {\n                var taskData = extend({}, addRecords[i]);\n                delete taskData.parentItem;\n                delete taskData.uniqueID;\n                delete taskData.index;\n                delete taskData.level;\n                delete taskData.hasChildRecords;\n                delete taskData.childRecords;\n                delete taskData.parentUniqueID;\n                if (!isNullOrUndefined(taskData.primaryParent)) {\n                    delete taskData.primaryParent;\n                }\n                addRecords[i].taskData = taskData;\n                addRowRecord = this.batchAddRowRecord[i];\n                if (isNullOrUndefined(addRowRecord)) {\n                    addRowRecord = this.batchAddRowRecord[i - 1];\n                }\n                if (this.isSelfReference) {\n                    if (!isNullOrUndefined(addRecords[i].parentItem)) {\n                        updateParentRow(primarykey_1, addRecords[i].parentItem, 'add', this.parent, this.isSelfReference, addRecords[i]);\n                    }\n                }\n                if (!isNullOrUndefined(addRowRecord)) {\n                    addRowIndex = addRowRecord.index;\n                }\n                if (this.parent.editSettings.newRowPosition !== 'Top' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    if (isNullOrUndefined(addRecords[i].parentItem) && this.selectedIndex === -1) {\n                        selectedIndex = -1;\n                        addRowRecord = null;\n                    }\n                }\n                editAction({ value: addRecords[i], action: 'add' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                selectedIndex = null;\n                if (this.parent.editSettings.newRowPosition === 'Child' && !isNullOrUndefined(addRecords[i][parentItem])) {\n                    var indexValue = currentViewRecords.map(function (e) { return e[primarykey_1]; })\n                        .indexOf(addRecords[i][parentItem][primarykey_1]);\n                    var children = currentViewRecords[indexValue][childRecords];\n                    for (var j = 0; j < children.length; j++) {\n                        if (children[j][primarykey_1] === addRecords[i][primarykey_1]) {\n                            currentViewRecords[indexValue][childRecords].splice(j, 1);\n                        }\n                    }\n                }\n            }\n            if (batchChanges[deletedRecords].length) {\n                for (i = 0; i < batchChanges[deletedRecords].length; i++) {\n                    editAction({ value: batchChanges[deletedRecords][i], action: 'delete' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                }\n            }\n            this.parent.parentData = [];\n            for (var i_1 = 0; i_1 < data.length; i_1++) {\n                data[i_1][index] = i_1;\n                setValue('uniqueIDCollection.' + data[i_1][uniqueID] + '.index', i_1, this.parent);\n                if (!data[i_1][level]) {\n                    this.parent.parentData.push(data[i_1]);\n                }\n            }\n        }\n        this.batchAddRowRecord = this.batchAddedRecords = this.batchRecords = this.batchDeletedRecords = this.currentViewRecords = [];\n    };\n    BatchEdit.prototype.getActualRowObjectIndex = function (index) {\n        var rows = this.parent.grid.getDataRows();\n        if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n            && this.selectedIndex > -1) {\n            if (!isNullOrUndefined(this.batchRecords[this.addRowIndex]) && this.batchRecords[this.addRowIndex].expanded) {\n                if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                    if (this.parent.editSettings.newRowPosition !== 'Child') {\n                        var batchChildCount = this.getBatchChildCount();\n                        index = index + batchChildCount;\n                    }\n                }\n                else {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                }\n            }\n            if (index >= rows.length) {\n                index = rows.length - 1;\n            }\n            this.updateChildCount(this.parent.grid.getCurrentViewRecords());\n            if (this.batchChildCount) {\n                index += this.batchChildCount;\n            }\n            this.batchChildCount = 0;\n        }\n        return index;\n    };\n    BatchEdit.prototype.immutableBatchAction = function (e) {\n        e.args.cancel = true;\n        var changes = this.parent.grid.getBatchChanges();\n        var addedRecords = [];\n        var index = 'index';\n        if (Object.keys(changes).length) {\n            addedRecords = changes.addedRecords;\n        }\n        for (var i = 0; i < addedRecords.length; i++) {\n            e.rows.splice(addedRecords[i][index], 1);\n        }\n    };\n    BatchEdit.prototype.nextCellIndex = function (args) {\n        var index = 'index';\n        var rowIndex = 'rowIndex';\n        args[index] = this.parent.getSelectedRows()[0][rowIndex];\n    };\n    return BatchEdit;\n}());\nexport { BatchEdit };\n","import { Grid, Edit as GridEdit, getUid, getObject, resetRowIndex } from '@syncfusion/ej2-grids';\nimport { parentsUntil } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass, addClass, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, RemoteSaveAdaptor } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, isCountRequired, isRemoteData } from '../utils';\nimport { editAction, updateParentRow } from './crud-actions';\nimport { BatchEdit } from './batch-edit';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\nvar Edit = /** @class */ (function () {\n    /**\n     * Constructor for Edit module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Edit(parent) {\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.prevAriaRowIndex = '-1';\n        this.isAddedRowByMethod = false;\n        Grid.Inject(GridEdit);\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.previousNewRowPosition = null;\n        this.internalProperties = {};\n        this.batchEditModule = new BatchEdit(this.parent);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Edit module name\n     */\n    Edit.prototype.getModuleName = function () {\n        return 'edit';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.addEventListener = function () {\n        this.parent.on(events.crudAction, this.crudAction, this);\n        this.parent.on(events.beginEdit, this.beginEdit, this);\n        this.parent.on(events.beginAdd, this.beginAdd, this);\n        this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n        this.parent.on(events.cellSave, this.cellSave, this);\n        this.parent.on(events.batchCancel, this.batchCancel, this);\n        this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n        this.parent.grid.on('batchedit-form', this.lastCellTab, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n        this.parent.on(events.cellEdit, this.cellEdit, this);\n        this.parent.on('actionBegin', this.editActionEvents, this);\n        this.parent.on('actionComplete', this.editActionEvents, this);\n        this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n        this.parent.grid.on('dblclick', this.gridDblClick, this);\n        this.parent.grid.on('recordAdded', this.customCellSave, this);\n        this.parent.on('savePreviousRowPosition', this.savePreviousRowPosition, this);\n        // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n        this.parent.grid.on(events.beforeStartEdit, this.beforeStartEdit, this);\n        this.parent.grid.on(events.beforeBatchCancel, this.beforeBatchCancel, this);\n        this.parent.grid.on('reset-edit-props', this.resetIsOnBatch, this);\n        this.parent.grid.on('get-row-position', this.getRowPosition, this);\n    };\n    Edit.prototype.gridDblClick = function (e) {\n        this.doubleClickTarget = e.target;\n    };\n    Edit.prototype.getRowPosition = function (addArgs) {\n        addArgs.newRowPosition = this.parent.editSettings.newRowPosition;\n        addArgs.addRowIndex = this.addRowIndex;\n        addArgs.ariaRowIndex = +this.prevAriaRowIndex;\n    };\n    Edit.prototype.beforeStartEdit = function (args) {\n        this.parent.trigger(events.actionBegin, args);\n    };\n    Edit.prototype.beforeBatchCancel = function (args) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            this.parent.trigger(events.actionComplete, args);\n        }\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.crudAction, this.crudAction);\n        this.parent.off(events.beginEdit, this.beginEdit);\n        this.parent.off(events.beginAdd, this.beginAdd);\n        this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n        this.parent.off(events.batchCancel, this.batchCancel);\n        this.parent.grid.off(events.keyPressed, this.keyPressed);\n        this.parent.grid.off('batchedit-form', this.lastCellTab);\n        this.parent.grid.off('content-ready', this.contentready);\n        this.parent.off(events.cellEdit, this.cellEdit);\n        this.parent.off('actionBegin', this.editActionEvents);\n        this.parent.off('actionComplete', this.editActionEvents);\n        this.parent.grid.off('recordAdded', this.customCellSave);\n        this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n        this.parent.off('savePreviousRowPosition', this.savePreviousRowPosition);\n        this.parent.grid.off(events.beforeStartEdit, this.beforeStartEdit);\n        this.parent.grid.off(events.beforeBatchCancel, this.beforeBatchCancel);\n        this.parent.grid.off('dblclick', this.gridDblClick);\n        this.parent.grid.off('reset-edit-props', this.resetIsOnBatch);\n        this.parent.grid.off('get-row-position', this.getRowPosition);\n        //this.parent.grid.off('click', this.gridSingleClick);\n    };\n    /**\n     * To destroy the editModule\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Edit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @param {Column[]} cols - Column property Collection\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.applyFormValidation = function (cols) {\n        this.parent.grid.editModule.applyFormValidation(cols);\n    };\n    Edit.prototype.editActionEvents = function (args) {\n        var eventArgs = getObject('editAction', args);\n        var eventName = getObject('name', eventArgs);\n        var treeObj = this.parent;\n        var adaptor = treeObj.dataSource.adaptor;\n        if ((isRemoteData(treeObj) || adaptor instanceof RemoteSaveAdaptor) &&\n            (eventArgs.requestType === 'save' && eventArgs.action === 'add') &&\n            (treeObj.editSettings.newRowPosition === 'Child' || treeObj.editSettings.newRowPosition === 'Below'\n                || treeObj.editSettings.newRowPosition === 'Above')) {\n            if (eventName === 'actionBegin') {\n                var rowIndex = isNullOrUndefined(eventArgs.row) || !Object.keys(eventArgs.row).length ? this.selectedIndex :\n                    eventArgs.row.rowIndex - 1;\n                var keyData = (!isNullOrUndefined(rowIndex) && rowIndex !== -1) ?\n                    treeObj.getCurrentViewRecords()[rowIndex][treeObj.getPrimaryKeyFieldNames()[0]] : -1;\n                treeObj.grid.query.addParams('relationalKey', keyData);\n            }\n            else if (eventName === 'actionComplete') {\n                var paramsLength = treeObj.grid.query.params.length;\n                for (var i = 0; i < paramsLength; i++) {\n                    if (treeObj.grid.query.params[i].key === 'relationalKey') {\n                        treeObj.grid.query.params.splice(i);\n                    }\n                }\n            }\n        }\n        if (this.parent.enableInfiniteScrolling && eventName === 'actionComplete') {\n            this.infiniteAddAction(eventArgs);\n        }\n        if (this.parent.editSettings.mode === 'Batch' && eventArgs.requestType === 'paging') {\n            this.parent.notify('batchPageAction', {});\n        }\n    };\n    Edit.prototype.infiniteAddAction = function (args) {\n        if ((args.requestType === 'save' && args.action === 'add') || args.requestType === 'delete') {\n            if (this.parent.editSettings.newRowPosition !== 'Top' && this.selectedIndex !== -1\n                && (args.requestType === 'save' && args.action === 'add')) {\n                var rowObjects = this.parent.grid.getRowsObject();\n                var newRowObject = rowObjects.splice(0, 1)[0];\n                var newRowObjectIndex = this.addRowIndex;\n                var currentData = this.parent.getCurrentViewRecords();\n                if (this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n                    newRowObjectIndex += findChildrenRecords(currentData[newRowObjectIndex + 1]).length;\n                }\n                newRowObjectIndex = this.parent.editSettings.newRowPosition === 'Below' ? newRowObjectIndex + 1 : newRowObjectIndex;\n                rowObjects.splice(newRowObjectIndex, 0, newRowObject);\n                var newRecord = currentData.splice(0, 1)[0];\n                currentData.splice(newRowObjectIndex, 0, newRecord);\n                this.updateInfiniteCurrentViewData(newRecord, this.addRowIndex);\n            }\n            var movableRows = this.parent.grid.getMovableRows();\n            var movableRowsObject = this.parent.grid.getMovableRowsObject();\n            var isCache = this.parent.infiniteScrollSettings.enableCache;\n            if (!isCache) {\n                resetRowIndex(this.parent.grid, this.parent.grid.getRowsObject(), this.parent.grid.getRows(), 0);\n                this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            }\n            if (!isCache && this.parent.getFrozenColumns() > 0) {\n                resetRowIndex(this.parent.grid, movableRowsObject, movableRows, 0);\n                this.updateIndex(this.parent.grid.dataSource, movableRows, this.parent.getCurrentViewRecords());\n            }\n        }\n    };\n    Edit.prototype.updateInfiniteCurrentViewData = function (newRecord, newRowIndex) {\n        var _this = this;\n        var infiniteData = 'infiniteCurrentViewData';\n        var updateCurrentViewData = 'updateCurrentViewData';\n        var size = Math.ceil(newRowIndex / this.parent.grid.pageSettings.pageSize);\n        var page = size > 0 ? size : 1;\n        var dataIndex = newRowIndex - ((page - 1) * this.parent.pageSettings.pageSize);\n        var infiniteCurrentViewData = this.parent.grid.infiniteScrollModule[infiniteData];\n        infiniteCurrentViewData[1].splice(0, 1);\n        var data = infiniteCurrentViewData[page];\n        if (!isNullOrUndefined(this.addRowRecord)) {\n            data.filter(function (e, index) {\n                if (e.uniqueID === _this.addRowRecord.uniqueID) {\n                    dataIndex = index;\n                }\n            });\n            if (this.addRowRecord.hasChildRecords && this.addRowRecord.childRecords.length &&\n                this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n                dataIndex += findChildrenRecords(this.addRowRecord).length;\n            }\n        }\n        if (dataIndex >= this.parent.pageSettings.pageSize) {\n            page += 1;\n            data = infiniteCurrentViewData[page];\n            dataIndex = dataIndex - this.parent.pageSettings.pageSize >= 0 ? dataIndex - this.parent.pageSettings.pageSize : 0;\n        }\n        dataIndex = this.parent.editSettings.newRowPosition === 'Below' ? dataIndex + 1 : dataIndex;\n        data.splice(dataIndex, 0, newRecord);\n        this.parent.grid.infiniteScrollModule[updateCurrentViewData]();\n    };\n    Edit.prototype.recordDoubleClick = function (args) {\n        var target = args.target;\n        if (isNullOrUndefined(target.closest('td.e-rowcell'))) {\n            return;\n        }\n        if (!(this.parent.grid.editSettings.allowEditing) || this.parent.grid.isEdit) {\n            return;\n        }\n        var column = this.parent.grid.getColumnByIndex(+target.closest('td.e-rowcell').getAttribute('aria-colindex'));\n        if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey &&\n            this.parent.editSettings.allowEditing && column.allowEditing && !(target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && this.parent.editSettings.allowEditOnDblClick) {\n            this.isOnBatch = true;\n            this.parent.grid.setProperties({ selectedRowIndex: args.rowIndex }, true);\n            if (this.parent.enableVirtualization) {\n                var tr = parentsUntil(args.target, 'e-row');\n                this.prevAriaRowIndex = tr.getAttribute('aria-rowindex');\n                tr.setAttribute('aria-rowindex', tr.rowIndex + '');\n            }\n            this.updateGridEditMode('Batch');\n        }\n    };\n    Edit.prototype.updateGridEditMode = function (mode) {\n        this.parent.grid.setProperties({ editSettings: { mode: mode } }, true);\n        var updateMethod = getObject('updateEditObj', this.parent.grid.editModule);\n        updateMethod.apply(this.parent.grid.editModule);\n        this.parent.grid.isEdit = false;\n    };\n    Edit.prototype.resetIsOnBatch = function () {\n        if (this.parent.enableVirtualization && this.parent.editSettings.mode === 'Cell') {\n            this.isOnBatch = false;\n            this.updateGridEditMode('Normal');\n        }\n    };\n    Edit.prototype.keyPressed = function (args) {\n        if (this.isOnBatch) {\n            this.keyPress = args.action;\n        }\n        if (args.action === 'f2') {\n            this.recordDoubleClick(args);\n        }\n        if (args.action === 'escape') {\n            this.parent.closeEdit();\n        }\n    };\n    Edit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    Edit.prototype.cellEdit = function (args) {\n        var _this = this;\n        var promise = 'promise';\n        var prom = args[promise];\n        delete args[promise];\n        if (this.parent.enableVirtualization && !isNullOrUndefined(this.prevAriaRowIndex)) {\n            args.row.setAttribute('aria-rowindex', this.prevAriaRowIndex);\n            this.prevAriaRowIndex = undefined;\n        }\n        if (this.keyPress !== 'enter') {\n            this.parent.trigger(events.cellEdit, args, function (celleditArgs) {\n                if (!celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.enableToolbarItems('edit');\n                }\n                else if (celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.isOnBatch = false;\n                    _this.updateGridEditMode('Normal');\n                }\n                if (!isNullOrUndefined(prom)) {\n                    prom.resolve(celleditArgs);\n                }\n            });\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-summarycell'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell') {\n            if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n                this.keyPress = null;\n            }\n            else if (this.keyPress === 'enter') {\n                args.cancel = true;\n                this.keyPress = null;\n                setValue('isEditCollapse', false, this.parent);\n            }\n            if (!args.columnObject.allowEditing) {\n                args.cancel = true;\n            }\n        }\n        // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n        //   this.isAdd = false;\n        // }\n    };\n    Edit.prototype.enableToolbarItems = function (request) {\n        if (!isNullOrUndefined(this.parent.grid.toolbarModule)) {\n            var toolbarID = this.parent.element.id + '_gridcontrol_';\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], request === 'save');\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], request === 'edit');\n        }\n    };\n    Edit.prototype.batchCancel = function () {\n        if (this.parent.editSettings.mode === 'Cell') {\n            var cellDetails = getValue('editModule.cellDetails', this.parent.grid.editModule);\n            var treeCell = this.parent.getCellFromIndex(cellDetails.rowIndex, this.parent.treeColumnIndex);\n            this.parent.renderModule.cellRender({\n                data: cellDetails.rowData,\n                cell: treeCell,\n                column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n            });\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        if (this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify('batchCancelAction', {});\n        }\n    };\n    Edit.prototype.customCellSave = function (args) {\n        if (isCountRequired(this.parent) && this.parent.editSettings.mode === 'Cell' && args.action === 'edit') {\n            this.updateCell(args, args.rowIndex);\n            this.afterCellSave(args, args.row, args.rowIndex);\n        }\n    };\n    Edit.prototype.cellSave = function (args) {\n        var _this = this;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.element.querySelector('form')) {\n            args.cancel = true;\n            var editModule = 'editModule';\n            setValue('isEdit', false, this.parent.grid);\n            setValue('isEditCollapse', true, this.parent);\n            args.rowData[args.columnName] = args.value;\n            var row_1;\n            if (isNullOrUndefined(args.cell)) {\n                row_1 = this.parent.grid.editModule[editModule].form.parentElement.parentNode;\n            }\n            else {\n                row_1 = args.cell.parentNode;\n            }\n            var rowIndex_1;\n            var primaryKeys_1 = this.parent.getPrimaryKeyFieldNames();\n            if (isNullOrUndefined(row_1)) {\n                this.parent.grid.getCurrentViewRecords().filter(function (e, i) {\n                    if (e[primaryKeys_1[0]] === args.rowData[primaryKeys_1[0]]) {\n                        rowIndex_1 = i;\n                        return;\n                    }\n                });\n            }\n            else {\n                var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n                    this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n                if (freeze) {\n                    if (this.parent.getRows().indexOf(row_1) !== -1) {\n                        rowIndex_1 = this.parent.getRows().indexOf(row_1);\n                    }\n                    else if (this.parent.getFrozenRightRows().indexOf(row_1) !== -1) {\n                        rowIndex_1 = this.parent.getFrozenRightRows().indexOf(row_1);\n                    }\n                    else {\n                        rowIndex_1 = this.parent.getMovableRows().indexOf(row_1);\n                    }\n                }\n                else {\n                    rowIndex_1 = (this.parent.getRows().indexOf(row_1) === -1 && (this.parent.getFrozenColumns() > 0)) ?\n                        this.parent.grid.getMovableRows().indexOf(row_1) : this.parent.getRows().indexOf(row_1);\n                }\n            }\n            var arg = {};\n            extend(arg, args);\n            arg.cancel = false;\n            arg.type = 'save';\n            row_1 = this.parent.grid.getRows()[row_1.rowIndex];\n            this.parent.trigger(events.actionBegin, arg);\n            if (!arg.cancel) {\n                if ((row_1.rowIndex === this.parent.getCurrentViewRecords().length - 1) && this.keyPress === 'tab') {\n                    this.isTabLastRow = true;\n                }\n                if (!isRemoteData(this.parent) &&\n                    !(this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n                    if (isCountRequired(this.parent)) {\n                        var eventPromise = 'eventPromise';\n                        var editArgs = { requestType: 'save', data: args.rowData, action: 'edit', row: row_1,\n                            rowIndex: rowIndex_1, rowData: args.rowData, columnName: args.columnName,\n                            filterChoiceCount: null, excelSearchOperator: null };\n                        this.parent.grid.getDataModule()[eventPromise](editArgs, this.parent.grid.query);\n                    }\n                    else {\n                        this.updateCell(args, rowIndex_1);\n                        this.afterCellSave(args, row_1, rowIndex_1);\n                    }\n                }\n                else if (isRemoteData(this.parent) ||\n                    (this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n                    var query = this.parent.grid.query;\n                    var crud = null;\n                    crud = this.parent.grid.dataSource.update(primaryKeys_1[0], args.rowData, query.fromTable, query, args.previousValue);\n                    crud.then(function (e) {\n                        if (!isNullOrUndefined(e)) {\n                            args.rowData[args.columnName] = e[args.columnName];\n                        }\n                        _this.updateCell(args, rowIndex_1);\n                        _this.afterCellSave(args, row_1, rowIndex_1);\n                    });\n                }\n            }\n            else {\n                this.parent.grid.isEdit = true;\n            }\n        }\n    };\n    Edit.prototype.afterCellSave = function (args, row, rowIndex) {\n        var mRow;\n        if (this.parent.grid.aggregateModule) {\n            this.parent.grid.aggregateModule.refresh(args.rowData);\n        }\n        this.parent.grid.editModule.destroyWidgets([this.parent.grid.getColumnByField(args.columnName)]);\n        this.parent.grid.editModule.formObj.destroy();\n        if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        this.enableToolbarItems('save');\n        var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n            this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (freeze) {\n            if (args.cell.closest('.e-frozen-left-header') || args.cell.closest('.e-frozen-left-content')) {\n                mRow = this.parent.grid.getRows()[rowIndex];\n            }\n            else if (args.cell.closest('.e-movableheader') || args.cell.closest('.e-movablecontent')) {\n                mRow = this.parent.grid.getMovableRows()[rowIndex];\n            }\n            else {\n                mRow = this.parent.grid.getFrozenRightRows()[rowIndex];\n            }\n            removeClass([mRow], ['e-editedrow', 'e-batchrow']);\n            removeClass(mRow.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        }\n        else if (this.parent.getFrozenColumns() > 0) {\n            if (args.cell.closest('.e-frozenheader') || args.cell.closest('.e-frozencontent')) {\n                mRow = this.parent.grid.getRows()[rowIndex];\n            }\n            else {\n                mRow = this.parent.grid.getMovableRows()[rowIndex];\n            }\n            removeClass([mRow], ['e-editedrow', 'e-batchrow']);\n            removeClass(mRow.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        }\n        removeClass([row], ['e-editedrow', 'e-batchrow']);\n        removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        if (this.parent['isCellSaveFocus'] !== false) {\n            this.parent.grid.focusModule.restoreFocus();\n        }\n        editAction({ value: args.rowData, action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, args.columnName);\n        if ((row.rowIndex === this.parent.getCurrentViewRecords().length - 1) && this.keyPress === 'enter') {\n            this.keyPress = null;\n        }\n        var saveArgs = {\n            type: 'save', column: this.parent.getColumnByField(args.columnName), data: args.rowData,\n            previousData: args.previousValue, row: row, target: args.cell\n        };\n        if (this.parent.aggregates.map(function (ag) { return ag.showChildSummary === true; }).length) {\n            this.parent.grid.refresh();\n        }\n        this.parent.trigger(events.actionComplete, saveArgs);\n    };\n    Edit.prototype.lastCellTab = function () {\n        if (!this.parent.grid.isEdit && this.isOnBatch && this.keyPress === 'tab' && this.parent.editSettings.mode === 'Cell') {\n            if (!this.parent.editSettings.allowNextRowEdit) {\n                this.updateGridEditMode('Normal');\n                this.isOnBatch = false;\n                this.keyPress = null;\n            }\n            else {\n                this.enableToolbarItems('edit');\n            }\n        }\n    };\n    Edit.prototype.updateCell = function (args, rowIndex) {\n        this.parent.grid.editModule.updateCell(rowIndex, args.columnName, args.rowData[args.columnName]);\n        this.parent.grid.getRowsObject()[rowIndex].data = args.rowData;\n    };\n    Edit.prototype.crudAction = function (details, columnName) {\n        editAction(details, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName, this.addRowRecord);\n        this.parent.parentData = [];\n        var data = this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            data[i].index = i;\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            if (details.value[key] === data[i][key]) {\n                if (details.action === 'add') {\n                    data[i].level = this.internalProperties.level;\n                    data[i].taskData = this.internalProperties.taskData;\n                    data[i].uniqueID = this.internalProperties.uniqueID;\n                    if (!isNullOrUndefined(this.internalProperties.parentItem)) {\n                        data[i].parentItem = this.internalProperties.parentItem;\n                        data[i].parentUniqueID = this.internalProperties.parentUniqueID;\n                    }\n                    data[i].childRecords = this.internalProperties.childRecords;\n                }\n            }\n            setValue('uniqueIDCollection.' + data[i].uniqueID + '.index', i, this.parent);\n            var adaptor = this.parent.dataSource.adaptor;\n            if ((isRemoteData(this.parent) || adaptor instanceof RemoteSaveAdaptor)) {\n                setValue('uniqueIDCollection.' + data[i].uniqueID, data[i], this.parent);\n            }\n            if (!data[i].level) {\n                this.parent.parentData.push(data[i]);\n            }\n        }\n        if (details.action === 'add' && this.previousNewRowPosition != null) {\n            this.parent.setProperties({ editSettings: { newRowPosition: this.previousNewRowPosition } }, true);\n            this.previousNewRowPosition = null;\n        }\n    };\n    Edit.prototype.updateIndex = function (data, rows, records) {\n        for (var j = 0; j < this.parent.getDataRows().length; j++) {\n            var data1 = records[j];\n            var index = getValue('uniqueIDCollection.' + data1.uniqueID + '.index', this.parent);\n            data1.index = index;\n            if (!isNullOrUndefined(data1.parentItem)) {\n                var parentIndex = getValue('uniqueIDCollection.' + data1.parentItem.uniqueID + '.index', this.parent);\n                data1.parentItem.index = parentIndex;\n            }\n        }\n        var count = -1;\n        var treeColIndex = this.parent.treeColumnIndex;\n        if (this.parent.getFrozenColumns() > 0) {\n            var cells = rows[0].querySelectorAll('.e-rowcell');\n            for (var l = 0; l < cells.length; l++) {\n                if (cells[l].classList.contains('e-gridrowindex0level0')) {\n                    treeColIndex = l;\n                    break;\n                }\n            }\n        }\n        for (var k = 0; k < this.parent.getRows().length; k++) {\n            if (!rows[k].classList.contains('e-detailrow')) {\n                count++;\n            }\n            var data2 = records[count];\n            var index = data2.index;\n            var level = data2.level;\n            var row = rows[k];\n            if (!isNullOrUndefined(data2.parentItem)) {\n                index = getValue('uniqueIDCollection.' + data2.parentItem.uniqueID + '.index', this.parent);\n            }\n            var treecell = row.cells[treeColIndex];\n            if (!isNullOrUndefined(treecell)) {\n                for (var l = 0; l < treecell.classList.length; l++) {\n                    var value = treecell.classList[l];\n                    var remove = /e-gridrowindex/i;\n                    var removed = /e-griddetailrowindex/i;\n                    var result = value.match(remove);\n                    var results = value.match(removed);\n                    if (result != null) {\n                        removeClass([treecell], value);\n                    }\n                    if (results != null) {\n                        removeClass([treecell], value);\n                    }\n                }\n                if (!rows[k].classList.contains('e-detailrow')) {\n                    addClass([treecell], 'e-gridrowindex' + index + 'level' + level);\n                }\n                else {\n                    addClass([treecell], 'e-griddetailrowindex' + index + 'level' + level);\n                }\n            }\n        }\n    };\n    Edit.prototype.beginAdd = function () {\n        var position;\n        var index = this.addRowIndex;\n        var records = this.parent.grid.getCurrentViewRecords();\n        if (this.parent.editSettings.mode === 'Batch') {\n            index = this.batchEditModule.getAddRowIndex();\n            this.selectedIndex = this.batchEditModule.getSelectedIndex();\n            if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                records = this.batchEditModule.getBatchRecords();\n            }\n        }\n        var rows = this.parent.grid.getDataRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n        var withinRange = this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n        var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n        if (this.parent.editSettings.mode !== 'Dialog') {\n            if (this.parent.editSettings.newRowPosition === 'Above') {\n                position = 'before';\n            }\n            else if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n                && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                position = 'after';\n                if (!isNullOrUndefined(records[index]) && records[index].expanded) {\n                    if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                        || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                        index += findChildrenRecords(records[index]).length;\n                        if (this.parent.editSettings.newRowPosition !== 'Child') {\n                            var batchChildCount = this.batchEditModule.getBatchChildCount();\n                            index = index + batchChildCount;\n                        }\n                    }\n                    else {\n                        index += findChildrenRecords(records[index]).length;\n                    }\n                }\n            }\n            if ((this.selectedIndex > -1 || isVirtualization) && withinRange\n                && (index || (this.parent.editSettings.newRowPosition === 'Child'\n                    || this.parent.editSettings.newRowPosition === 'Below'))) {\n                if (index >= rows.length - 1) {\n                    index = rows.length - 2;\n                }\n                var r = 'rows';\n                var newRowObject = this.parent.grid.contentModule[r][0];\n                var focussedElement = document.activeElement;\n                rows[index + 1][position](rows[0]);\n                setValue('batchIndex', index + 1, this.batchEditModule);\n                var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Above' ? index : index + 1;\n                if (this.parent.editSettings.mode === 'Batch') {\n                    this.parent.grid.contentModule[r].splice(0, 1);\n                    this.parent.grid.contentModule[r].splice(rowObjectIndex, 0, newRowObject);\n                }\n                var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n                    this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n                if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns || freeze) {\n                    var movableRows = this.parent.getMovableDataRows();\n                    var frows = 'freezeRows';\n                    var newFreezeRowObject = this.parent.grid.getRowsObject()[0];\n                    movableRows[index + 1][position](movableRows[0]);\n                    if (freeze) {\n                        var rightFrozenRows = this.parent.getFrozenRightDataRows();\n                        rightFrozenRows[index + 1][position](rightFrozenRows[0]);\n                    }\n                    if (this.parent.editSettings.mode === 'Batch') {\n                        this.parent.grid.contentModule[frows].splice(0, 1);\n                        this.parent.grid.contentModule[frows].splice(rowObjectIndex, 0, newFreezeRowObject);\n                    }\n                    setValue('batchIndex', index + 1, this.batchEditModule);\n                }\n                if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n                    var errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n                    for (var i = 0; i < errors.length; i++) {\n                        errors[i].remove();\n                    }\n                    setValue('errorRules', [], this.parent.grid.editModule.formObj);\n                }\n                if (isVirtualization) {\n                    this.prevAriaRowIndex = '-1';\n                }\n                focussedElement.focus();\n            }\n        }\n    };\n    // private beforeDataBound(args: BeforeDataBoundArgs): void {\n    //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n    //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n    //     let action: string = getValue('action', args);\n    //     let data: Object = getValue('data', args);\n    //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n    //       data = extend(this.editedData, data);\n    //       this.editedData = null;\n    //     }\n    //     if (!isNullOrUndefined(this.addedData)) {\n    //       let addedData: Object = args.result[args.result.length - 1];\n    //       addedData = extend(this.addedData, addedData);\n    //       this.addedData = null;\n    //       args.result.splice(this.addedIndex, 0, addedData);\n    //       args.result.splice(args.result.length, 1);\n    //     }\n    //   }\n    // }\n    Edit.prototype.beginEdit = function (args) {\n        if (args.requestType === 'refresh' && this.isOnBatch) {\n            args.cancel = true;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n            args.cancel = true;\n            return;\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-frame'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (args.requestType === 'delete') {\n            var data = args.data;\n            for (var i = 0; i < data.length; i++) {\n                this.deleteUniqueID(data[i].uniqueID);\n                var childs = findChildrenRecords(data[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                args.data = data.concat(childs);\n            }\n        }\n        if (args.requestType === 'add' || (this.isAddedRowByMethod && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling))) {\n            if (!(this.parent.grid.selectedRowIndex === -1 && this.isAddedRowByMethod)\n                && args.index === this.parent.grid.selectedRowIndex || args.index === 0) {\n                this.selectedIndex = this.parent.grid.selectedRowIndex;\n            }\n            if (this.parent.enableVirtualization) {\n                var selector = '.e-row[aria-rowindex=\"' + this.selectedIndex + '\"]';\n                var row = void 0;\n                if (this.selectedIndex > -1 && this.parent.editSettings.newRowPosition !== 'Top' &&\n                    this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    this.prevAriaRowIndex = this.selectedIndex.toString();\n                    row = this.parent.getContent().querySelector(selector);\n                    this.addRowIndex = row ? row.rowIndex : 0;\n                }\n                else {\n                    if (this.prevAriaRowIndex && this.prevAriaRowIndex !== '-1') {\n                        selector = '.e-row[aria-rowindex=\"' + this.prevAriaRowIndex + '\"]';\n                        row = this.parent.getContent().querySelector(selector);\n                        this.addRowIndex = row ? row.rowIndex : 0;\n                    }\n                    else {\n                        this.addRowIndex = 0;\n                    }\n                }\n            }\n            else {\n                if (this.isAddedRowByMethod && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling)) {\n                    this.addRowIndex = args.index;\n                }\n                else {\n                    this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n                }\n            }\n            if (this.isAddedRowByMethod && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling)) {\n                this.addRowRecord = this.parent.flatData[args.index];\n            }\n            else {\n                this.addRowRecord = this.parent.getSelectedRecords()[0];\n            }\n        }\n        if (this.isAddedRowByMethod && args.index !== 0) {\n            this.addRowRecord = this.parent.flatData[args.index];\n        }\n        if (this.parent.editSettings.newRowPosition === 'Child' && isNullOrUndefined(this.addRowRecord)\n            && !isNullOrUndefined(this.parent.getSelectedRecords()[0])) {\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n        this.isAddedRowByMethod = false;\n        args = this.beginAddEdit(args);\n        // if (args.requestType === 'save' &&\n        //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n        //      if (args.action === 'edit') {\n        //           this.editedData = args.data;\n        //      } else if (args.action === 'add') {\n        //           this.addedData = value;\n        //      }\n        // }\n    };\n    Edit.prototype.savePreviousRowPosition = function () {\n        if (this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n    };\n    Edit.prototype.beginAddEdit = function (args) {\n        var value = args.data;\n        if (args.action === 'add') {\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var position = null;\n            value.taskData = isNullOrUndefined(value.taskData) ? extend({}, args.data) : value.taskData;\n            var currentData = this.parent.grid.getCurrentViewRecords();\n            var index = this.addRowIndex;\n            value.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + value.uniqueID, value, this.parent);\n            var level = 0;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentItem = void 0;\n            var parentIdMapping = void 0;\n            var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n            var rows = this.parent.getRows();\n            var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n            var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n            var withinRange = this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n            if (currentData.length) {\n                idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n                parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n                if (currentData[this.addRowIndex].parentItem) {\n                    parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n                }\n                parentItem = currentData[this.addRowIndex].parentItem;\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top' && currentData.length) {\n                level = currentData[this.addRowIndex].level;\n                if (this.parent.editSettings.newRowPosition === 'Above') {\n                    position = 'before';\n                    index = currentData[this.addRowIndex].index;\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Below') {\n                    position = 'after';\n                    var childRecordCount = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex = currentData[this.addRowIndex].index;\n                    index = (childRecordCount > 0) ? (currentDataIndex + childRecordCount) : (currentDataIndex);\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Child') {\n                    position = 'after';\n                    if ((this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                        value.parentItem = extend({}, currentData[this.addRowIndex]);\n                        value.parentUniqueID = value.parentItem.uniqueID;\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    var childRecordCount1 = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex1 = currentData[this.addRowIndex].index;\n                    if (this.selectedIndex >= 0) {\n                        value.level = level + 1;\n                    }\n                    index = (childRecordCount1 > 0) ? (currentDataIndex1 + childRecordCount1) : (currentDataIndex1);\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = idMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                    if ((this.selectedIndex > -1 || isVirtualization) && level && withinRange) {\n                        value.parentUniqueID = parentUniqueID;\n                        value.parentItem = extend({}, parentItem);\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    value.level = level;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = parentIdMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (position != null && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                    args.index = position === 'before' ? index : index + 1;\n                }\n                if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    var dataSource = (this.parent.grid.dataSource instanceof DataManager ?\n                        this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n                    args.index = dataSource.length;\n                }\n            }\n            if (isNullOrUndefined(value.level)) {\n                value.level = level;\n            }\n            value.hasChildRecords = false;\n            value.childRecords = [];\n            value.index = 0;\n        }\n        if (args.action === 'add') {\n            this.internalProperties = { level: value.level, parentItem: value.parentItem, uniqueID: value.uniqueID,\n                taskData: value.taskData, parentUniqueID: isNullOrUndefined(value.parentItem) ? undefined : value.parentItem.uniqueID,\n                childRecords: value.childRecords };\n        }\n        if (args.requestType === 'delete') {\n            var deletedValues = args.data;\n            for (var i = 0; i < deletedValues.length; i++) {\n                if (deletedValues[i].parentItem) {\n                    var parentItem = getParentData(this.parent, deletedValues[i].parentItem.uniqueID);\n                    if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                        var childIndex = parentItem.childRecords.indexOf(deletedValues[i]);\n                        parentItem.childRecords.splice(childIndex, 1);\n                    }\n                }\n            }\n        }\n        return args;\n    };\n    /**\n     * If the data,index and position given, Adds the record to treegrid rows otherwise it will create edit form.\n     *\n     * @returns {void}\n     */\n    Edit.prototype.addRecord = function (data, index, position) {\n        if (this.parent.editSettings.newRowPosition === this.previousNewRowPosition || this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n        if (!this.isSelfReference && !isNullOrUndefined(data) && Object.hasOwnProperty.call(data, this.parent.childMapping)) {\n            var addRecords = [];\n            var previousEditMode = this.parent.editSettings.mode;\n            var previousGridEditMode = this.parent.grid.editSettings.mode;\n            addRecords.push(data);\n            this.parent.setProperties({ editSettings: { mode: 'Batch' } }, true);\n            this.parent.grid.setProperties({ editSettings: { mode: 'Batch' } }, true);\n            if (!isNullOrUndefined(position)) {\n                this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n            }\n            var updatedRecords = { addedRecords: addRecords, changedRecords: [], deletedRecords: [] };\n            this.parent.notify(events.batchSave, { updatedRecords: updatedRecords, index: index });\n            this.parent.setProperties({ editSettings: { mode: previousEditMode } }, true);\n            this.parent.grid.setProperties({ editSettings: { mode: previousGridEditMode } }, true);\n            this.parent.refresh();\n        }\n        else {\n            if (data) {\n                if (index > -1) {\n                    this.selectedIndex = index;\n                    this.addRowIndex = index;\n                }\n                else {\n                    this.selectedIndex = this.parent.selectedRowIndex;\n                    this.addRowIndex = this.parent.selectedRowIndex;\n                }\n                if (position) {\n                    this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n                }\n                this.parent.grid.editModule.addRecord(data, index);\n            }\n            else {\n                this.parent.grid.editModule.addRecord(data, index);\n            }\n        }\n    };\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     *\n     * @returns {boolean} Returns form validation results\n     */\n    Edit.prototype.editFormValidate = function () {\n        return this.parent.grid.editModule.editFormValidate();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.destroyForm = function () {\n        this.parent.grid.editModule.destroyForm();\n    };\n    Edit.prototype.contentready = function (e) {\n        if (!isNullOrUndefined(e.args.requestType)\n            && (e.args.requestType.toString() === 'delete' || e.args.requestType.toString() === 'save'\n                || (this.parent.editSettings.mode === 'Batch' && e.args.requestType.toString() === 'batchsave'))) {\n            this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n                if (this.parent.grid.dataSource.length === this.parent.getMovableDataRows().length) {\n                    this.updateIndex(this.parent.grid.dataSource, this.parent.getMovableDataRows(), this.parent.getCurrentViewRecords());\n                }\n            }\n        }\n    };\n    /**\n     * If the row index and field is given, edits the particular cell in a row.\n     *\n     * @returns {void}\n     */\n    Edit.prototype.editCell = function (rowIndex, field) {\n        if (this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch') {\n            if (this.parent.editSettings.mode !== 'Batch') {\n                this.isOnBatch = true;\n                this.updateGridEditMode('Batch');\n            }\n            this.parent.grid.editModule.editCell(rowIndex, field);\n        }\n    };\n    return Edit;\n}());\nexport { Edit };\n","import { Grid, CommandColumn as Command } from '@syncfusion/ej2-grids';\n/**\n * Command Column Module for TreeGrid\n *\n * @hidden\n */\nvar CommandColumn = /** @class */ (function () {\n    function CommandColumn(parent) {\n        Grid.Inject(Command);\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns CommandColumn module name\n     */\n    CommandColumn.prototype.getModuleName = function () {\n        return 'commandColumn';\n    };\n    /**\n     * Destroys the ContextMenu.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    CommandColumn.prototype.destroy = function () {\n        //this.removeEventListener();\n    };\n    return CommandColumn;\n}());\nexport { CommandColumn };\n","import { Grid, getObject } from '@syncfusion/ej2-grids';\nimport { DetailRow as detailrow } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, addClass } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isRemoteData } from '../utils';\n/**\n * TreeGrid Detail Row module\n *\n * @hidden\n */\nvar DetailRow = /** @class */ (function () {\n    function DetailRow(parent) {\n        Grid.Inject(detailrow);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns DetailRow module name\n     */\n    DetailRow.prototype.getModuleName = function () {\n        return 'detailRow';\n    };\n    DetailRow.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.on('detaildataBound', this.detaildataBound, this);\n        this.parent.grid.on('detail-indentcell-info', this.setIndentVisibility, this);\n        this.parent.on('childRowExpand', this.childRowExpand, this);\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('actioncomplete', this.actioncomplete, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    DetailRow.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.off('detaildataBound', this.detaildataBound);\n        this.parent.off('childRowExpand', this.childRowExpand);\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('actioncomplete', this.actioncomplete);\n        this.parent.grid.off('detail-indentcell-info', this.setIndentVisibility);\n    };\n    DetailRow.prototype.setIndentVisibility = function (args) {\n        var visible = 'visible';\n        args[visible] = false;\n    };\n    DetailRow.prototype.dataBoundArg = function () {\n        var detailele = this.parent.getRows().filter(function (e) {\n            return !e.classList.contains('e-detailrow');\n        });\n        for (var i = 0; i < detailele.length; i++) {\n            var elements = detailele[i].getElementsByClassName('e-detailrowcollapse');\n            var detailData = this.parent.grid.getRowObjectFromUID(detailele[i].getAttribute('data-Uid'));\n            var parentItem = getObject('parentItem', this.parent.grid.getCurrentViewRecords()[i]);\n            if (isNullOrUndefined(parentItem) || !isNullOrUndefined(parentItem) &&\n                getExpandStatus(this.parent, detailData.data, this.parent.grid.getCurrentViewRecords())) {\n                this.parent.grid.detailRowModule.expand(elements[0]);\n            }\n        }\n    };\n    DetailRow.prototype.childRowExpand = function (args) {\n        var detailRowElement = args.row.getElementsByClassName('e-detailrowcollapse');\n        if (!isNullOrUndefined(detailRowElement[0])) {\n            this.parent.grid.detailRowModule.expand(detailRowElement[0]);\n        }\n    };\n    DetailRow.prototype.rowExpandCollapse = function (args) {\n        if (isRemoteData(this.parent)) {\n            return;\n        }\n        for (var i = 0; i < args.detailrows.length; i++) {\n            args.detailrows[i].style.display = args.action;\n        }\n    };\n    DetailRow.prototype.detaildataBound = function (args) {\n        var data = args.data;\n        var row = args.detailElement.parentElement.previousSibling;\n        var index = !isNullOrUndefined(data.parentItem) ? data.parentItem.index : data.index;\n        var expandClass = 'e-gridrowindex' + index + 'level' + data.level;\n        var classlist = row.querySelector('.' + expandClass).classList;\n        var gridClas = [].slice.call(classlist).filter(function (gridclass) { return (gridclass === expandClass); });\n        var newNo = gridClas[0].length;\n        var slicedclas = gridClas.toString().slice(6, newNo);\n        var detailClass = 'e-griddetail' + slicedclas;\n        addClass([args.detailElement.parentElement], detailClass);\n    };\n    DetailRow.prototype.actioncomplete = function (args) {\n        if (args.requestType === 'beginEdit' || args.requestType === 'add') {\n            var spann = (args.row.querySelectorAll('.e-editcell')[0].getAttribute('colSpan'));\n            var colum = parseInt(spann, 10) - 1;\n            var updtdcolum = colum.toString();\n            args.row.querySelectorAll('.e-editcell')[0].setAttribute('colSpan', updtdcolum);\n        }\n        var focusElement = this.parent.grid.contentModule.getRows();\n        for (var i = 0; i < focusElement.length; i++) {\n            focusElement[i].cells[0].visible = false;\n        }\n        var focusModule = getObject('focusModule', this.parent.grid);\n        var matrix = 'refreshMatrix';\n        focusModule[matrix](true)({ rows: this.parent.grid.contentModule.getRows() });\n    };\n    /**\n     * Destroys the DetailModule.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    DetailRow.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return DetailRow;\n}());\nexport { DetailRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Cell, CellType } from '@syncfusion/ej2-grids';\nimport { VirtualContentRenderer } from '@syncfusion/ej2-grids';\nimport { InterSectionObserver } from '@syncfusion/ej2-grids';\nimport { TreeVirtualRowModelGenerator } from '../renderer/virtual-row-model-generator';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, EventHandler, getValue, setValue, Browser, debounce } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { isCountRequired } from '../utils';\nvar VirtualTreeContentRenderer = /** @class */ (function (_super) {\n    __extends(VirtualTreeContentRenderer, _super);\n    function VirtualTreeContentRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.isExpandCollapse = false;\n        _this.translateY = 0;\n        _this.maxiPage = 0;\n        _this.recordAdded = false;\n        /** @hidden */\n        _this.startIndex = -1;\n        _this.endIndex = -1;\n        _this.preTranslate = 0;\n        _this.isRemoteExpand = false;\n        /** @hidden */\n        _this.isDataSourceChanged = false;\n        _this.addEventListener();\n        return _this;\n    }\n    VirtualTreeContentRenderer.prototype.getModelGenerator = function () {\n        return new TreeVirtualRowModelGenerator(this.parent);\n    };\n    VirtualTreeContentRenderer.prototype.getRowByIndex = function (index) {\n        return this.parent.getDataRows().filter(function (e) { return parseInt(e.getAttribute('aria-rowindex'), 10) === index; })[0];\n    };\n    VirtualTreeContentRenderer.prototype.addEventListener = function () {\n        this.parent.on(events.virtualActionArgs, this.virtualOtherAction, this);\n        this.parent.on(events.indexModifier, this.indexModifier, this);\n    };\n    VirtualTreeContentRenderer.prototype.virtualOtherAction = function (args) {\n        if (args.setTop) {\n            this.translateY = 0;\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        else if (args.isExpandCollapse) {\n            this.isExpandCollapse = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.indexModifier = function (args) {\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this.recordAdded && this.startIndex > -1 && this.endIndex > -1) {\n            if (this.endIndex > args.count - this.parent.pageSettings.pageSize) {\n                var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n                var lastIndex = nextSetResIndex + this.parent.getRows().length;\n                if (lastIndex > args.count) {\n                    lastIndex = nextSetResIndex +\n                        (args.count - nextSetResIndex);\n                }\n                this.startIndex = lastIndex - this.parent.getRows().length;\n                this.endIndex = lastIndex;\n            }\n            else {\n                this.startIndex += 1;\n                this.endIndex += 1;\n            }\n            this.recordAdded = false;\n        }\n        if (this.isDataSourceChanged) {\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        args.startIndex = this.startIndex;\n        args.endIndex = this.endIndex;\n    };\n    VirtualTreeContentRenderer.prototype.eventListener = function (action) {\n        var _this = this;\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            this.parent[action]('data-ready', this.onDataReady, this);\n            this.parent[action]('refresh-virtual-block', this.refreshContentRows, this);\n            this.fn = function () {\n                _this.observers.observes(function (scrollArgs) { return _this.scrollListeners(scrollArgs); }, _this.onEnteredAction());\n                _this.parent.off('content-ready', _this.fn);\n            };\n            this.parent.addEventListener('dataBound', this.dataBoundEvent.bind(this));\n            this.parent.addEventListener('rowSelected', this.rowSelectedEvent.bind(this));\n            this.parent[action]('select-virtual-Row', this.toSelectVirtualRow, this);\n            this.parent.on('content-ready', this.fn, this);\n            this.parent.addEventListener(events.actionComplete, this.onActionComplete.bind(this));\n            this.parent[action]('virtual-scroll-edit-action-begin', this.beginEdit, this);\n            this.parent[action]('virtual-scroll-add-action-begin', this.beginAdd, this);\n            this.parent[action]('virtual-scroll-edit-success', this.virtualEditSuccess, this);\n            this.parent[action]('edit-reset', this.resetIseditValue, this);\n            this.parent[action]('get-virtual-data', this.getData, this);\n            this.parent[action]('virtual-scroll-edit-cancel', this.cancelEdit, this);\n            this.parent[action]('select-row-on-context-open', this.toSelectRowOnContextOpen, this);\n            this.parent[action]('refresh-virtual-editform-cells', this.refreshCell, this);\n            this.parent[action]('virtaul-cell-focus', this.cellFocus, this);\n        }\n        else {\n            _super.prototype.eventListener.call(this, 'on');\n        }\n    };\n    VirtualTreeContentRenderer.prototype.cellFocus = function (e) {\n        var virtualCellFocus = 'virtualCellFocus';\n        _super.prototype[virtualCellFocus].call(this, e);\n    };\n    VirtualTreeContentRenderer.prototype.onDataReady = function (e) {\n        _super.prototype.onDataReady.call(this, e);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            if (!isNullOrUndefined(e.count)) {\n                this.totalRecords = e.count;\n                if (!this.parent.enableColumnVirtualization) {\n                    getValue('virtualEle', this).setVirtualHeight(this.parent.getRowHeight() * e.count, '100%');\n                }\n            }\n            if ((!isNullOrUndefined(e.requestType) && e.requestType.toString() === 'collapseAll') || this.isDataSourceChanged) {\n                this.contents.scrollTop = 0;\n                this.isDataSourceChanged = false;\n            }\n        }\n    };\n    VirtualTreeContentRenderer.prototype.renderTable = function () {\n        _super.prototype.renderTable.call(this);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            getValue('observer', this).options.debounceEvent = false;\n            this.observers = new TreeInterSectionObserver(getValue('observer', this).element, getValue('observer', this).options);\n            this.contents = this.getPanel().firstChild;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getTranslateY = function (sTop, cHeight, info, isOnenter) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            if (this.isRemoteExpand) {\n                this.isRemoteExpand = false;\n                return this.preTranslate;\n            }\n            else {\n                this.preTranslate = _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n                return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n            }\n        }\n        else {\n            return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.dataBoundEvent = function () {\n        var dataBoundEve = 'dataBound';\n        var initialRowTop = 'initialRowTop';\n        if (this.parent.getRows().length && !this[initialRowTop] && !isNullOrUndefined(this.parent.getRowByIndex(0))) {\n            var rowTop = this.parent.getRowByIndex(0).getBoundingClientRect().top;\n            var gridTop = this.parent.element.getBoundingClientRect().top;\n            if (rowTop > 0) {\n                this[initialRowTop] = this.parent.getRowByIndex(0).getBoundingClientRect().top - gridTop;\n            }\n            else {\n                this[initialRowTop] = this.content.getBoundingClientRect().top -\n                    this.parent.getRowByIndex(0).getBoundingClientRect().height;\n            }\n        }\n        _super.prototype[dataBoundEve].call(this);\n    };\n    VirtualTreeContentRenderer.prototype.rowSelectedEvent = function (args) {\n        var rowSelected = 'rowSelected';\n        _super.prototype[rowSelected].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.toSelectVirtualRow = function (args) {\n        if (this.parent.isEdit) {\n            return;\n        }\n        var selectVirtualRow = 'selectVirtualRow';\n        var containerRect = 'containerRect';\n        if (isNullOrUndefined(this.observer[containerRect])) {\n            this.observer[containerRect] = this.observers[containerRect];\n        }\n        _super.prototype[selectVirtualRow].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.refreshCell = function (rowObj) {\n        rowObj.cells = this.generateCells();\n    };\n    VirtualTreeContentRenderer.prototype.generateCells = function () {\n        var cells = [];\n        for (var i = 0; i < this.parent.columns.length; i++) {\n            cells.push(this.generateCell(this.parent.columns[i]));\n        }\n        return cells;\n    };\n    VirtualTreeContentRenderer.prototype.generateCell = function (col, rowId, cellType, colSpan, oIndex, foreignKeyData) {\n        var opt = {\n            'visible': col.visible,\n            'isDataCell': !isNullOrUndefined(col.field || col.template),\n            'isTemplate': !isNullOrUndefined(col.template),\n            'rowID': rowId,\n            'column': col,\n            'cellType': !isNullOrUndefined(cellType) ? cellType : CellType.Data,\n            'colSpan': colSpan,\n            'commands': col.commands,\n            'isForeignKey': col.isForeignColumn && col.isForeignColumn(),\n            'foreignKeyData': col.isForeignColumn && col.isForeignColumn() && getValue(col.field, foreignKeyData)\n        };\n        if (opt.isDataCell || opt.column.type === 'checkbox' || opt.commands) {\n            opt.index = oIndex;\n        }\n        return new Cell(opt);\n    };\n    VirtualTreeContentRenderer.prototype.beginEdit = function (e) {\n        var selector = '.e-row[aria-rowindex=\"' + e.index + '\"]';\n        var index = this.parent.getContent().querySelector(selector).rowIndex;\n        var rowData = this.parent.getCurrentViewRecords()[index];\n        e.data = rowData;\n    };\n    VirtualTreeContentRenderer.prototype.beginAdd = function (args) {\n        var addAction = 'addActionBegin';\n        var isAdd = 'isAdd';\n        var addArgs = { newRowPosition: this.rowPosition, addRowIndex: this.addRowIndex, ariaRowIndex: this.ariaRowIndex };\n        this.parent.notify('get-row-position', addArgs);\n        this.rowPosition = addArgs.newRowPosition;\n        this.addRowIndex = addArgs.addRowIndex;\n        this.ariaRowIndex = addArgs.ariaRowIndex;\n        var rows = this.parent.getRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n        var withInRange = this.parent.selectedRowIndex >= firstAriaIndex && this.parent.selectedRowIndex <= lastAriaIndex;\n        if (!(this.rowPosition === 'Top' || this.rowPosition === 'Bottom')) {\n            this[isAdd] = true;\n        }\n        if (this.rowPosition === 'Top' || this.rowPosition === 'Bottom' ||\n            ((!this.addRowIndex || this.addRowIndex === -1) && (this.parent.selectedRowIndex === -1 || !withInRange))) {\n            _super.prototype[addAction].call(this, args);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.restoreEditState = function () {\n        var restoreEdit = 'restoreEdit';\n        _super.prototype[restoreEdit].call(this);\n    };\n    VirtualTreeContentRenderer.prototype.resetIseditValue = function () {\n        var resetIsEdit = 'resetIsedit';\n        var isAdd = 'isAdd';\n        this.parent.notify('reset-edit-props', {});\n        if ((this.rowPosition === 'Top' || this.rowPosition === 'Bottom') && this[isAdd]) {\n            _super.prototype[resetIsEdit].call(this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.virtualEditSuccess = function () {\n        var isAdd = 'isAdd';\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this[isAdd] && content.querySelector('.e-addedrow')) {\n            this.recordAdded = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.cancelEdit = function (args) {\n        var editCancel = 'editCancel';\n        _super.prototype[editCancel].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.toSelectRowOnContextOpen = function (args) {\n        var selectRowOnContextOpen = 'selectRowOnContextOpen';\n        _super.prototype[selectRowOnContextOpen].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.restoreNewRow = function () {\n        var isAdd = 'isAdd';\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this[isAdd] && !content.querySelector('.e-addedrow')) {\n            this.parent.isEdit = false;\n            this.parent.addRecord();\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getData = function (data) {\n        var getVirtualData = 'getVirtualData';\n        _super.prototype[getVirtualData].call(this, data);\n    };\n    VirtualTreeContentRenderer.prototype.onActionComplete = function (args) {\n        if (args.requestType === 'add') {\n            var addArgs = { newRowPosition: this.rowPosition, addRowIndex: this.addRowIndex, ariaRowIndex: this.ariaRowIndex };\n            this.parent.notify('get-row-position', addArgs);\n            this.rowPosition = addArgs.newRowPosition;\n            this.addRowIndex = addArgs.addRowIndex;\n            this.ariaRowIndex = addArgs.ariaRowIndex;\n        }\n        var actionComplete = 'actionComplete';\n        _super.prototype[actionComplete].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.onEnteredAction = function () {\n        var _this = this;\n        return function (element, current, direction, e, isWheel, check) {\n            var directVirtualRender = 'directVirtualRender';\n            if (!_this.parent[directVirtualRender]) { // with this property, columns are rendered without debouncing on horizontal scroll.\n                var preventEvent = 'preventEvent';\n                if (Browser.isIE && !isWheel && check && !_this[preventEvent]) {\n                    _this.parent.showSpinner();\n                }\n                var xAxis = current.axis === 'X';\n                var x = _this.getColumnOffset(xAxis ? _this.vgenerator.getColumnIndexes()[0] - 1 : _this.prevInfo.columnIndexes[0]\n                    - 1);\n                if (xAxis) {\n                    var idx = Object.keys(_this.vgenerator.cOffsets).length - _this.prevInfo.columnIndexes.length;\n                    var maxLeft = _this.vgenerator.cOffsets[idx - 1];\n                    x = x > maxLeft ? maxLeft : x; //TODO: This fix horizontal scrollbar jumping issue in column virtualization.\n                }\n                _this.virtualEle.adjustTable(x, _this.translateY);\n                if (_this.parent.enableColumnVirtualization) {\n                    _this.header.virtualEle.adjustTable(x, 0);\n                }\n            }\n        };\n    };\n    VirtualTreeContentRenderer.prototype.scrollListeners = function (scrollArgs) {\n        var info = scrollArgs.sentinel;\n        var outBuffer = this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 2);\n        var content = this.parent.getContent().querySelector('.e-content');\n        var scrollHeight = outBuffer * this.parent.getRowHeight();\n        var upScroll = (scrollArgs.offset.top - this.translateY) < 0;\n        var downScroll = Math.ceil(scrollArgs.offset.top - this.translateY) >= scrollHeight;\n        var selectedRowIndex = 'selectedRowIndex';\n        if (upScroll && (scrollArgs.direction !== 'right' && scrollArgs.direction !== 'left')) {\n            var vHeight = +(this.parent.height.toString().indexOf('%') < 0 ? this.parent.height :\n                this.parent.element.getBoundingClientRect().height);\n            var index = (~~(content.scrollTop / this.parent.getRowHeight())\n                + Math.ceil(vHeight / this.parent.getRowHeight()))\n                - this.parent.pageSettings.pageSize;\n            index = (index > 0) ? index : 0;\n            if (!isNullOrUndefined(this[selectedRowIndex]) && this[selectedRowIndex] !== -1 && index !== this[selectedRowIndex]) {\n                index = this[selectedRowIndex];\n            }\n            this.startIndex = index;\n            this.endIndex = index + this.parent.pageSettings.pageSize;\n            if (this.endIndex > this.totalRecords) {\n                var lastInx = this.totalRecords - 1;\n                var remains = this.endIndex % lastInx;\n                this.endIndex = lastInx;\n                this.startIndex = (this.startIndex - remains) < 0 ? 0 : (this.startIndex - remains);\n            }\n            //var firsttdinx = parseInt(this.parent.getContent().querySelector('.e-content td').getAttribute('index'), 0);\n            var rowPt = Math.ceil(scrollArgs.offset.top / this.parent.getRowHeight());\n            rowPt = rowPt % this.parent.pageSettings.pageSize;\n            var firsttdinx = 0;\n            if (!isNullOrUndefined(this.parent.getRows()[rowPt]) &&\n                !isNullOrUndefined(this.parent.getContent().querySelectorAll('.e-content tr')[rowPt])) {\n                var attr = this.parent.getContent().querySelectorAll('.e-content tr')[rowPt]\n                    .querySelector('td').getAttribute('index');\n                firsttdinx = +attr; // this.parent.getContent().querySelector('.e-content tr').getAttribute('aria-rowindex');\n            }\n            if (firsttdinx === 0) {\n                this.translateY = scrollArgs.offset.top;\n            }\n            else {\n                var height = this.parent.getRowHeight();\n                this.translateY = (scrollArgs.offset.top - (outBuffer * height) > 0) ?\n                    scrollArgs.offset.top - (outBuffer * height) + 10 : 0;\n            }\n        }\n        else if (downScroll && (scrollArgs.direction !== 'right' && scrollArgs.direction !== 'left')) {\n            var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n            var isLastBlock = (this[selectedRowIndex] + this.parent.pageSettings.pageSize) < this.totalRecords ? false : true;\n            if (!isNullOrUndefined(this[selectedRowIndex]) && this[selectedRowIndex] !== -1 &&\n                nextSetResIndex !== this[selectedRowIndex] && !isLastBlock) {\n                nextSetResIndex = this[selectedRowIndex];\n            }\n            var lastIndex = nextSetResIndex + this.parent.pageSettings.pageSize;\n            if (lastIndex > this.totalRecords) {\n                lastIndex = nextSetResIndex +\n                    (this.totalRecords - nextSetResIndex);\n            }\n            this.startIndex = !isLastBlock ? lastIndex - this.parent.pageSettings.pageSize : nextSetResIndex;\n            this.endIndex = lastIndex;\n            if (scrollArgs.offset.top > (this.parent.getRowHeight() * this.totalRecords)) {\n                this.translateY = this.getTranslateY(scrollArgs.offset.top, content.getBoundingClientRect().height);\n            }\n            else {\n                this.translateY = scrollArgs.offset.top;\n            }\n        }\n        if (((downScroll && (scrollArgs.offset.top < (this.parent.getRowHeight() * this.totalRecords)))\n            || (upScroll)) || (scrollArgs.direction === 'right' || scrollArgs.direction === 'left')) {\n            var viewInfo = this.currentInfo = getValue('getInfoFromView', this).apply(this, [scrollArgs.direction, info, scrollArgs.offset]);\n            this.previousInfo = viewInfo;\n            this.parent.setColumnIndexesInView(this.parent.enableColumnVirtualization ? viewInfo.columnIndexes : []);\n            var page = viewInfo.loadNext && !viewInfo.loadSelf ? viewInfo.nextInfo.page : viewInfo.page;\n            this.parent.setProperties({ pageSettings: { currentPage: page } }, true);\n            if (scrollArgs.direction !== 'right' && scrollArgs.direction !== 'left') {\n                viewInfo.event = viewInfo.event === 'refresh-virtual-block' ? 'model-changed' : viewInfo.event;\n            }\n            this.parent.notify(viewInfo.event, { requestType: 'virtualscroll', virtualInfo: viewInfo, focusElement: scrollArgs.focusElement });\n        }\n    };\n    VirtualTreeContentRenderer.prototype.appendContent = function (target, newChild, e) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            if (getValue('isExpandCollapse', e)) {\n                this.isRemoteExpand = true;\n            }\n            _super.prototype.appendContent.call(this, target, newChild, e);\n        }\n        else {\n            var info = e.virtualInfo.sentinelInfo && e.virtualInfo.sentinelInfo.axis === 'Y' &&\n                getValue('currentInfo', this).page && getValue('currentInfo', this).page !== e.virtualInfo.page ?\n                getValue('currentInfo', this) : e.virtualInfo;\n            var cBlock = (info.columnIndexes[0]) - 1;\n            var cOffset = this.getColumnOffset(cBlock);\n            var width = void 0;\n            if (this.parent.enableColumnVirtualization) {\n                this.header.virtualEle.adjustTable(cOffset, 0);\n                var cIndex = info.columnIndexes;\n                width = this.getColumnOffset(cIndex[cIndex.length - 1]) - this.getColumnOffset(cIndex[0] - 1) + '';\n                this.header.virtualEle.setWrapperWidth(width);\n            }\n            this.virtualEle.setWrapperWidth(width, (Browser.isIE || Browser.info.name === 'edge'));\n            target = this.parent.createElement('tbody');\n            target.appendChild(newChild);\n            var replace = 'replaceWith';\n            this.getTable().querySelector('tbody')[replace](target);\n            if (!this.isExpandCollapse || this.translateY === 0) {\n                getValue('virtualEle', this).adjustTable(cOffset, this.translateY);\n            }\n            else {\n                this.isExpandCollapse = false;\n            }\n            setValue('prevInfo', this.previousInfo ? this.previousInfo : info, this);\n            if (e.requestType === 'virtualscroll' && e.virtualInfo.sentinelInfo.axis === 'X') {\n                this.parent.notify(events.autoCol, {});\n            }\n            var focusCell = 'focusCell';\n            var restoreAdd = 'restoreAdd';\n            var ensureSelectedRowPosition = 'ensureSelectedRowPosition';\n            _super.prototype[focusCell].call(this, e);\n            var isAdd = 'isAdd';\n            if (this[isAdd] && !this.parent.getContent().querySelector('.e-content').querySelector('.e-addedrow')) {\n                if (!(this.rowPosition === 'Top' || this.rowPosition === 'Bottom')) {\n                    if (this.ariaRowIndex >= this.startIndex) {\n                        this.restoreNewRow();\n                    }\n                    else if (this.addRowIndex && this.addRowIndex > -1) {\n                        this[isAdd] = false;\n                        this.parent.isEdit = false;\n                    }\n                }\n            }\n            this.restoreEditState();\n            _super.prototype[restoreAdd].call(this);\n            _super.prototype[ensureSelectedRowPosition].call(this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('data-ready', this.onDataReady);\n        this.parent.off('content-ready', this.fn);\n        this.parent.off('select-virtual-Row', this.toSelectVirtualRow);\n        this.parent.off('dataBound', this.dataBoundEvent);\n        this.parent.off('rowSelected', this.rowSelectedEvent);\n        this.parent.off(events.virtualActionArgs, this.virtualOtherAction);\n        this.parent.off(events.indexModifier, this.indexModifier);\n        this.parent.off('virtual-scroll-edit-action-begin', this.beginEdit);\n        this.parent.off('virtual-scroll-add-action-begin', this.beginAdd);\n        this.parent.off('virtual-scroll-edit-success', this.virtualEditSuccess);\n        this.parent.off('edit-reset', this.resetIseditValue);\n        this.parent.off('get-virtual-data', this.getData);\n        this.parent.off('virtual-scroll-edit-cancel', this.cancelEdit);\n        this.parent.off('select-row-on-context-open', this.toSelectRowOnContextOpen);\n        this.parent.off('refresh-virtual-editform-cells', this.refreshCell);\n        this.parent.off('virtaul-cell-focus', this.cellFocus);\n    };\n    return VirtualTreeContentRenderer;\n}(VirtualContentRenderer));\nexport { VirtualTreeContentRenderer };\nvar TreeInterSectionObserver = /** @class */ (function (_super) {\n    __extends(TreeInterSectionObserver, _super);\n    function TreeInterSectionObserver() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.isWheeling = false;\n        _this.newPos = 0;\n        _this.lastPos = 0;\n        _this.timer = 0;\n        return _this;\n    }\n    TreeInterSectionObserver.prototype.observes = function (callback, onEnterCallback) {\n        var containerRect = 'containerRect';\n        _super.prototype[containerRect] = getValue('options', this).container.getBoundingClientRect();\n        EventHandler.add(getValue('options', this).container, 'scroll', this.virtualScrollHandlers(callback, onEnterCallback), this);\n    };\n    TreeInterSectionObserver.prototype.clear = function () {\n        this.lastPos = null;\n    };\n    TreeInterSectionObserver.prototype.virtualScrollHandlers = function (callback, onEnterCallback) {\n        var _this = this;\n        var delay = Browser.info.name === 'chrome' ? 200 : 100;\n        var options = 'options';\n        var movableEle = 'movableEle';\n        var element = 'element';\n        var fromWheel = 'fromWheel';\n        var debounced100 = debounce(callback, delay);\n        var debounced50 = debounce(callback, 50);\n        this[options].prevTop = this[options].prevLeft = 0;\n        return function (e) {\n            var top = _this[options].movableContainer ? _this[options].container.scrollTop : e.target.scrollTop;\n            var left = _this[options].movableContainer ? _this[options].scrollbar.scrollLeft : e.target.scrollLeft;\n            var direction = _this[options].prevTop < top ? 'down' : 'up';\n            direction = _this[options].prevLeft === left ? direction : _this[options].prevLeft < left ? 'right' : 'left';\n            _this[options].prevTop = top;\n            _this[options].prevLeft = left;\n            var current = _this.sentinelInfo[direction];\n            var delta = 0;\n            _this.newPos = top;\n            if (_this.lastPos != null) { // && newPos < maxScroll\n                delta = _this.newPos - _this.lastPos;\n            }\n            _this.lastPos = _this.newPos;\n            if (_this.timer) {\n                clearTimeout(_this.timer);\n            }\n            _this.timer = setTimeout(_this.clear, 0);\n            if ((delta > 100 || delta < -100) && (e && e.preventDefault)) {\n                e.returnValue = false;\n                e.preventDefault();\n            }\n            if (_this[options].axes.indexOf(current.axis) === -1) {\n                return;\n            }\n            var check = _this.check(direction);\n            if (current.entered && current.axis === 'X') {\n                if (_this[movableEle] && (direction === 'right' || direction === 'left')) {\n                    onEnterCallback(_this[movableEle], current, direction, { top: top, left: left }, _this[fromWheel], check);\n                }\n                else {\n                    onEnterCallback(_this[element], current, direction, { top: top, left: left }, _this[fromWheel], check);\n                }\n            }\n            if (check) {\n                var fn = debounced100;\n                if (current.axis === 'X') {\n                    fn = debounced50;\n                    fn({ direction: direction, sentinel: current, offset: { top: top, left: left },\n                        focusElement: document.activeElement });\n                }\n                else {\n                    callback({ direction: direction, sentinel: current, offset: { top: top, left: left },\n                        focusElement: document.activeElement });\n                }\n            }\n            _this[fromWheel] = false;\n        };\n    };\n    return TreeInterSectionObserver;\n}(InterSectionObserver));\nexport { TreeInterSectionObserver };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Grid, VirtualScroll as GridVirtualScroll } from '@syncfusion/ej2-grids';\nimport { RenderType } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { getExpandStatus } from '../utils';\nimport { VirtualTreeContentRenderer } from '../renderer/virtual-tree-content-render';\nimport { VirtualHeaderRenderer } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Virtual Scroll module will handle Virtualization\n *\n * @hidden\n */\nvar VirtualScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function VirtualScroll(parent) {\n        this.prevstartIndex = -1;\n        this.prevendIndex = -1;\n        this.parent = parent;\n        Grid.Inject(TreeVirtual);\n        this.addEventListener();\n    }\n    VirtualScroll.prototype.returnVisualData = function (args) {\n        args.data = this.visualData;\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns VirtualScroll module name\n     */\n    VirtualScroll.prototype.getModuleName = function () {\n        return 'virtualScroll';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    VirtualScroll.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds, this);\n        this.parent.on(events.pagingActions, this.virtualPageAction, this);\n        this.parent.on(events.destroy, this.destroy, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    VirtualScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds);\n        this.parent.off(events.pagingActions, this.virtualPageAction);\n        this.parent.off(events.destroy, this.destroy);\n    };\n    VirtualScroll.prototype.collapseExpandVirtualchilds = function (row) {\n        this.parent.grid.notify(events.virtualActionArgs, { isExpandCollapse: true });\n        this.expandCollapseRec = row.record;\n        row.record.expanded = row.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: row.row,\n            action: row.action,\n            record: row.record,\n            count: this.parent.flatData.length\n        };\n        this.parent.grid.clearSelection();\n        var requestType = getValue('isCollapseAll', this.parent) ? 'collapseAll' : 'refresh';\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret, { requestType: requestType });\n    };\n    VirtualScroll.prototype.virtualPageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var parents = dm.executeLocal(new Query().where(expanded));\n        var visualData = parents.filter(function (e) {\n            return getExpandStatus(_this.parent, e, parents);\n        });\n        this.visualData = visualData;\n        this.parent.grid.notify(events.dataListener, { data: visualData });\n        var counts = { startIndex: -1, endIndex: -1, count: pageingDetails.count };\n        this.parent.grid.notify(events.indexModifier, counts);\n        var startIndex = counts.startIndex;\n        var endIndex = counts.endIndex;\n        pageingDetails.count = visualData.length;\n        if (startIndex === -1 && endIndex === -1) {\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm.dataSource.json = visualData;\n            pageingDetails.result = dm.executeLocal(query);\n        }\n        else {\n            var requestType = pageingDetails.actionArgs.requestType;\n            if (requestType === 'filtering' || requestType === 'collapseAll' ||\n                (requestType === 'refresh' && this.parent.enableCollapseAll && endIndex > visualData.length)) {\n                startIndex = 0;\n                endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                this.parent.grid.getContent().firstElementChild.scrollTop = 0;\n                this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n            }\n            //if ((this.prevendIndex !== -1 && this.prevstartIndex !== -1) &&\n            //this.prevendIndex === endIndex && this.prevstartIndex === startIndex) {\n            if (!isNullOrUndefined(this.expandCollapseRec)) {\n                var resourceCount = this.parent.getRows();\n                var sIndex = visualData.indexOf(this.expandCollapseRec);\n                var tempdata = visualData.slice(sIndex, sIndex + resourceCount.length);\n                if (tempdata.length < resourceCount.length && sIndex >= 0 && startIndex !== 0) {\n                    sIndex = visualData.length - resourceCount.length;\n                    sIndex = sIndex > 0 ? sIndex : 0;\n                    startIndex = sIndex;\n                    endIndex = visualData.length;\n                }\n                else if (getValue('isCollapseAll', this.parent)) {\n                    startIndex = 0;\n                    endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                    this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n                }\n            }\n            //}\n            if ((this.parent.enableCollapseAll || this.parent.expandStateMapping) && !isNullOrUndefined(this.expandCollapseRec)) {\n                if (pageingDetails.count < this.parent.getRows()[0].getBoundingClientRect().height) {\n                    startIndex = 0;\n                }\n                else {\n                    startIndex = this.prevstartIndex === -1 ? 0 : this.prevstartIndex;\n                }\n            }\n            this.expandCollapseRec = null;\n            pageingDetails.result = visualData.slice(startIndex, endIndex);\n            this.prevstartIndex = startIndex;\n            this.prevendIndex = endIndex;\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * To destroy the virtualScroll module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    VirtualScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return VirtualScroll;\n}());\nexport { VirtualScroll };\nvar TreeVirtual = /** @class */ (function (_super) {\n    __extends(TreeVirtual, _super);\n    function TreeVirtual(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        getValue('parent', _this).off('initial-load', getValue('instantiateRenderer', _this), _this);\n        getValue('parent', _this).on('initial-load', _this.instantiateRenderers, _this);\n        return _this;\n    }\n    TreeVirtual.prototype.getModuleName = function () {\n        return 'treeVirtualScroll';\n    };\n    TreeVirtual.prototype.instantiateRenderers = function () {\n        var parentGrid = getValue('parent', this);\n        getValue('parent', this).log(['limitation', 'virtual_height'], 'virtualization');\n        var renderer = getValue('locator', this).getService('rendererFactory');\n        if (parentGrid.enableColumnVirtualization) {\n            getValue('addRenderer', renderer)\n                .apply(renderer, [RenderType.Header, new VirtualHeaderRenderer(getValue('parent', this), getValue('locator', this))]);\n        }\n        getValue('addRenderer', renderer)\n            .apply(renderer, [RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this))]);\n        //renderer.addRenderer(RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this)));\n        this.ensurePageSize();\n    };\n    TreeVirtual.prototype.ensurePageSize = function () {\n        var parentGrid = getValue('parent', this);\n        var rowHeight = parentGrid.getRowHeight();\n        if (!isNullOrUndefined(parentGrid.height) && typeof (parentGrid.height) === 'string' && parentGrid.height.indexOf('%') !== -1) {\n            parentGrid.element.style.height = parentGrid.height;\n        }\n        var vHeight = parentGrid.height.toString().indexOf('%') < 0 ? parentGrid.height :\n            parentGrid.element.getBoundingClientRect().height;\n        var blockSize = ~~(vHeight / rowHeight);\n        var height = blockSize * 2;\n        var size = parentGrid.pageSettings.pageSize;\n        parentGrid.setProperties({ pageSettings: { pageSize: size < height ? height : size } }, true);\n    };\n    return TreeVirtual;\n}(GridVirtualScroll));\nexport { TreeVirtual };\n","import { parentsUntil } from '@syncfusion/ej2-grids';\nimport { Grid, Freeze as FreezeColumn } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Freeze module\n *\n * @hidden\n */\nvar Freeze = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Freeze(parent) {\n        Grid.Inject(FreezeColumn);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    Freeze.prototype.addEventListener = function () {\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.grid.on('dblclick', this.dblClickHandler, this);\n    };\n    Freeze.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.grid.off('dblclick', this.dblClickHandler);\n    };\n    Freeze.prototype.rowExpandCollapse = function (args) {\n        var movableRows = this.parent.getMovableDataRows();\n        var frozenrows = this.parent.getRows();\n        var rows;\n        var frozenRightRows;\n        var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n            this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (freeze) {\n            frozenRightRows = this.parent.getFrozenRightRows().filter(function (e) {\n                return e.querySelector('.e-gridrowindex' + args.record.index + 'level' + (args.record.level + 1));\n            });\n        }\n        if (!args.detailrows.length) {\n            rows = movableRows.filter(function (e) {\n                return e.querySelector('.e-gridrowindex' + args.record.index + 'level' + (args.record.level + 1));\n            });\n        }\n        else {\n            rows = args.detailrows;\n        }\n        for (var i = 0; i < rows.length; i++) {\n            var rData = this.parent.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n            rows[i].style.display = args.action;\n            if (freeze) {\n                frozenRightRows[i].style.display = args.action;\n            }\n            var queryselector = args.action === 'none' ? '.e-treecolumn-container .e-treegridcollapse'\n                : '.e-treecolumn-container .e-treegridexpand';\n            if (frozenrows[rows[i].rowIndex].querySelector(queryselector)) {\n                var cRow = [];\n                for (var i_1 = 0; i_1 < movableRows.length; i_1++) {\n                    if (movableRows[i_1].querySelector('.e-gridrowindex' + rData.index + 'level' + (rData.level + 1))) {\n                        cRow.push(movableRows[i_1]);\n                    }\n                }\n                if (cRow.length) {\n                    this.rowExpandCollapse({ detailrows: cRow, action: args.action });\n                }\n            }\n        }\n    };\n    Freeze.prototype.dblClickHandler = function (e) {\n        if (parentsUntil(e.target, 'e-rowcell') &&\n            this.parent.grid.editSettings.allowEditOnDblClick && this.parent.editSettings.mode !== 'Cell') {\n            this.parent.grid.editModule.startEdit(parentsUntil(e.target, 'e-row'));\n        }\n    };\n    Freeze.prototype.dataBoundArg = function () {\n        var checkboxColumn = this.parent.getColumns().filter(function (e) {\n            return e.showCheckbox;\n        });\n        if (checkboxColumn.length && this.parent.freezeModule && this.parent.initialRender) {\n            addClass([this.parent.element.getElementsByClassName('e-grid')[0]], 'e-checkselection');\n        }\n    };\n    Freeze.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Freeze module name\n     */\n    Freeze.prototype.getModuleName = function () {\n        return 'freeze';\n    };\n    return Freeze;\n}());\nexport { Freeze };\n","import { Grid, ColumnChooser as GridColumnChooser } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnChooser module\n *\n * @hidden\n */\nvar ColumnChooser = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance.\n     */\n    function ColumnChooser(parent) {\n        Grid.Inject(GridColumnChooser);\n        this.parent = parent;\n    }\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     *\n     * @param  {number} X - Defines the X axis.\n     * @param  {number} Y - Defines the Y axis.\n     * @returns {void}\n     */\n    ColumnChooser.prototype.openColumnChooser = function (X, Y) {\n        return this.parent.grid.columnChooserModule.openColumnChooser(X, Y);\n    };\n    /**\n     * Destroys the openColumnChooser.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    ColumnChooser.prototype.destroy = function () {\n        //this.parent.grid.ColumnChooserModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ColumnChooser module name\n     */\n    ColumnChooser.prototype.getModuleName = function () {\n        return 'ColumnChooser';\n    };\n    return ColumnChooser;\n}());\nexport { ColumnChooser };\n","import { Grid, InfiniteScroll as GridInfiniteScroll } from '@syncfusion/ej2-grids';\nimport { RowRenderer, resetRowIndex } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined, remove } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { findChildrenRecords } from '../utils';\n/**\n * TreeGrid Infinite Scroll module will handle Infinite Scrolling.\n *\n * @hidden\n */\nvar InfiniteScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function InfiniteScroll(parent) {\n        this.parent = parent;\n        Grid.Inject(GridInfiniteScroll);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns Logger module name\n     */\n    InfiniteScroll.prototype.getModuleName = function () {\n        return 'infiniteScroll';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.addEventListener = function () {\n        this.parent.on(events.pagingActions, this.infinitePageAction, this);\n        this.parent.on('infinite-remote-expand', this.infiniteRemoteExpand, this);\n        this.parent.grid.on('delete-complete', this.infiniteDeleteHandler, this);\n        this.parent.grid.on('infinite-edit-handler', this.infiniteEditHandler, this);\n        this.parent.grid.on('infinite-crud-cancel', this.createRows, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('infinite-remote-expand', this.infiniteRemoteExpand);\n        this.parent.grid.off('delete-complete', this.infiniteDeleteHandler);\n        this.parent.grid.off('infinite-edit-handler', this.infiniteEditHandler);\n        this.parent.off(events.pagingActions, this.infinitePageAction);\n        this.parent.grid.off('infinite-crud-cancel', this.createRows);\n        this.parent.grid.off('content-ready', this.contentready);\n    };\n    /**\n     * Handles the Expand Collapse action for Remote data with infinite scrolling.\n     *\n     * @param {{ index: number, childData: ITreeData[] }} args - expanded row index and its child data\n     * @param { number } args.index - expanded row index\n     * @param { ITreeData[] } args.childData - child data of expanded row\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infiniteRemoteExpand = function (args) {\n        var rowObjects = this.parent.grid.getRowsObject();\n        var locator = 'serviceLocator';\n        var generateRows = 'generateRows';\n        var serviceLocator = this.parent.grid.infiniteScrollModule[locator];\n        var rowRenderer = new RowRenderer(serviceLocator, null, this.parent.grid);\n        var rows = this.parent.getRows();\n        var position = args.index === rows.length - 1 ? 'after' : 'before';\n        var cols = this.parent.grid.getColumns();\n        var childRowObjects = this.parent.grid.infiniteScrollModule[generateRows](args.childData, args);\n        var childRowElements = [];\n        for (var i = 0; i < childRowObjects.length; i++) {\n            childRowElements.push(rowRenderer.render(childRowObjects[i], cols));\n        }\n        rowObjects.splice.apply(rowObjects, [args.index + 1, 0].concat(childRowObjects));\n        for (var i = 0; i < childRowElements.length; i++) {\n            if (position === 'after') {\n                rows[args.index + i][position](childRowElements[i]);\n            }\n            else {\n                rows[args.index + i + 1][position](childRowElements[i]);\n            }\n            rows.splice(args.index + 1 + i, 0, childRowElements[i]);\n        }\n        resetRowIndex(this.parent.grid, this.parent.grid.getRowsObject(), this.parent.grid.getRows(), 0);\n    };\n    /**\n     * Resetted the row index for expand collapse action for cache support.\n     *\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.contentready = function () {\n        if (this.parent.infiniteScrollSettings.enableCache && !isNullOrUndefined(this.parent.editModule)) {\n            var updateIndex = 'updateIndex';\n            this.parent.editModule[updateIndex](this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.getFrozenColumns()) {\n                this.parent.editModule[updateIndex](this.parent.grid.dataSource, this.parent.getMovableDataRows(), this.parent.getCurrentViewRecords());\n            }\n        }\n    };\n    /**\n     * Handles the page query for Data operations and CRUD actions.\n     *\n     * @param {{ result: ITreeData[], count: number, actionArgs: object }} pageingDetails - data, its count and action details\n     * @param {ITreeData[]} pageingDetails.result - data on scroll action\n     * @param {number} pageingDetails.count - data count on scroll action\n     * @param {Object} pageingDetails.actionArgs - scroll action details\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infinitePageAction = function (pageingDetails) {\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var visualData = dm.executeLocal(new Query().where(expanded));\n        var actionArgs = getValue('actionArgs', pageingDetails.actionArgs);\n        var actions = getValue('actions', this.parent.grid.infiniteScrollModule);\n        var initial = actions.some(function (value) { return value === actionArgs.requestType; });\n        var initialRender = initial ? true : this.parent.initialRender ? true : false;\n        this.visualData = visualData;\n        pageingDetails.count = visualData.length;\n        if (getValue('isPrinting', pageingDetails.actionArgs)) {\n            pageingDetails.result = visualData;\n        }\n        else {\n            var query = new Query();\n            var isCache = this.parent.infiniteScrollSettings.enableCache;\n            if (isCache && this.parent.infiniteScrollSettings.initialBlocks > this.parent.infiniteScrollSettings.maxBlocks) {\n                this.parent.infiniteScrollSettings.initialBlocks = this.parent.infiniteScrollSettings.maxBlocks;\n            }\n            var size = initialRender ?\n                this.parent.pageSettings.pageSize * this.parent.infiniteScrollSettings.initialBlocks :\n                this.parent.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (!isNullOrUndefined(actionArgs)) {\n                var lastIndex = getValue('lastIndex', this.parent.grid.infiniteScrollModule);\n                var firstIndex = getValue('firstIndex', this.parent.grid.infiniteScrollModule);\n                if (!isCache && actionArgs.requestType === 'delete') {\n                    var skip = lastIndex - actionArgs.data.length + 1;\n                    var take = actionArgs.data.length;\n                    query = query.skip(skip).take(take);\n                }\n                else if (isCache && actionArgs.requestType === 'delete' ||\n                    (actionArgs.requestType === 'save' && actionArgs.action === 'add')) {\n                    query = query.skip(firstIndex);\n                    query = query.take(this.parent.infiniteScrollSettings.initialBlocks * this.parent.pageSettings.pageSize);\n                }\n                else {\n                    query = query.page(current, size);\n                }\n            }\n            else {\n                query = query.page(current, size);\n            }\n            dm.dataSource.json = visualData;\n            if (!isCache && !isNullOrUndefined(actionArgs) && actionArgs.requestType === 'save' && actionArgs.action === 'add') {\n                pageingDetails.result = [actionArgs.data];\n            }\n            else {\n                pageingDetails.result = dm.executeLocal(query);\n            }\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * Handles the currentviewdata for delete operation.\n     *\n     * @param {{ e: InfiniteScrollArgs, result: Object[] }} args - Scroller and data details\n     * @param {InfiniteScrollArgs} args.e -  scroller details while CRUD\n     * @param {Object[]} args.result - data details while CRUD\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infiniteEditHandler = function (args) {\n        var infiniteData = 'infiniteCurrentViewData';\n        var infiniteCurrentViewData = this.parent.grid.infiniteScrollModule[infiniteData];\n        var keys = Object.keys(infiniteCurrentViewData);\n        if (args.e.requestType === 'delete' && args.result.length > 1) {\n            for (var i = 1; i < args.result.length; i++) {\n                infiniteCurrentViewData[keys[keys.length - 1]].push(args.result[i]);\n            }\n        }\n    };\n    /**\n     * Handles the row objects for delete operation.\n     *\n     * @param {ActionEventArgs} args - crud action details\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infiniteDeleteHandler = function (args) {\n        if (args.requestType === 'delete') {\n            var rows = this.parent.grid.getRowsObject();\n            var rowElms = this.parent.getRows();\n            var data = args.data instanceof Array ? args.data : [args.data];\n            var keyField = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            this.removeRows(rowElms, rows, data, keyField, true);\n            if (this.parent.getFrozenColumns() > 0) {\n                var mRows = this.parent.grid.getMovableRowsObject();\n                var mRowElms = this.parent.grid.getMovableRows();\n                this.removeRows(mRowElms, mRows, data, keyField);\n            }\n        }\n    };\n    /**\n     * Handles the row objects for delete operation.\n     *\n     * @param {Element[]} rowElms - row elements\n     * @param {Row<Column>[]} rows - Row object collection\n     * @param {Object[]} data - data collection\n     * @param {string} keyField - primary key name\n     * @param { boolean} isFrozen - Specifies whether frozen column enabled\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.removeRows = function (rowElms, rows, data, keyField, isFrozen) {\n        var _this = this;\n        var resetInfiniteCurrentViewData = 'resetInfiniteCurrentViewData';\n        var _loop_1 = function (i) {\n            rows.filter(function (e, index) {\n                if (e.data[keyField] === data[i][keyField]) {\n                    if (isFrozen) {\n                        var page = Math.ceil((index + 1) / _this.parent.grid.pageSettings.pageSize);\n                        _this.parent.grid.infiniteScrollModule[resetInfiniteCurrentViewData](page, index);\n                    }\n                    rows.splice(index, 1);\n                    remove(rowElms[index]);\n                    rowElms.splice(index, 1);\n                }\n            });\n        };\n        for (var i = 0; i < data.length; i++) {\n            _loop_1(i);\n        }\n    };\n    /**\n     * Handles the row objects for Add operation.\n     */\n    InfiniteScroll.prototype.createRows = function (eventArgs) {\n        var locator = 'serviceLocator';\n        var actionArgs = eventArgs.args.e;\n        var row = eventArgs.row;\n        var serviceLocator = this.parent.grid.infiniteScrollModule[locator];\n        var rowRenderer = new RowRenderer(serviceLocator, null, this.parent.grid);\n        var tbody;\n        var currentData = this.parent.getCurrentViewRecords();\n        var currentRows = eventArgs.isMovable ? this.parent.grid.getMovableRows()\n            : this.parent.grid.getDataRows();\n        if (eventArgs.isFrozenRight) {\n            tbody = this.parent.element.querySelector('.e-frozen-right-content').querySelector('tbody');\n        }\n        else {\n            tbody = !this.parent.grid.isFrozenGrid() ? this.parent.getContent().querySelector('tbody') : eventArgs.isMovable\n                ? this.parent.grid.getMovableVirtualContent().querySelector('tbody')\n                : this.parent.grid.getFrozenVirtualContent().querySelector('tbody');\n        }\n        if (this.parent.frozenRows) {\n            tbody = eventArgs.isFrozenRows && this.parent.grid.infiniteScrollModule.requestType !== 'add'\n                || !eventArgs.isFrozenRows && this.parent.grid.infiniteScrollModule.requestType === 'add'\n                ? !this.parent.grid.isFrozenGrid() ? this.parent.getHeaderContent().querySelector('tbody')\n                    : eventArgs.isMovable ? this.parent.grid.getMovableVirtualHeader().querySelector('tbody')\n                        : eventArgs.isFrozenRight ? this.parent.element.querySelector('.e-frozen-right-header').querySelector('tbody')\n                            : this.parent.grid.getFrozenVirtualHeader().querySelector('tbody') : tbody;\n        }\n        var position;\n        var addRowIndex = 'addRowIndex';\n        var newRowIndex = this.parent.editModule[addRowIndex];\n        for (var i = 0; i < row.length; i++) {\n            var newRow = rowRenderer.render(row[i], this.parent.grid.getColumns());\n            if (actionArgs.requestType === 'save' && actionArgs.action === 'add') {\n                if (getValue('selectedIndex', this.parent.editModule) !== -1 && this.parent.editSettings.newRowPosition !== 'Top') {\n                    if (this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n                        position = 'after';\n                        newRowIndex += findChildrenRecords(currentData[newRowIndex + 1]).length;\n                        if (this.parent.editSettings.newRowPosition === 'Child') {\n                            newRowIndex -= 1; //// for child position already child record is added in childRecords so subtracting 1\n                        }\n                        currentRows[newRowIndex][position](newRow);\n                    }\n                    else if (this.parent.editSettings.newRowPosition === 'Above') {\n                        position = 'before';\n                        currentRows[this.parent.editModule[addRowIndex]][position](newRow);\n                    }\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    tbody.appendChild(newRow);\n                }\n                else {\n                    tbody.insertBefore(newRow, tbody.firstElementChild);\n                }\n            }\n            else if (actionArgs.requestType === 'delete') {\n                tbody.appendChild(newRow);\n            }\n        }\n        eventArgs.cancel = true;\n    };\n    /**\n     * To destroy the infiniteScroll module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    InfiniteScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return InfiniteScroll;\n}());\nexport { InfiniteScroll };\n"],"names":["isRemoteData","parent","dataSource","DataManager","adaptor","ODataAdaptor","WebApiAdaptor","WebMethodAdaptor","CacheAdaptor","UrlAdaptor","isCountRequired","isCheckboxcolumn","i","columns","length","showCheckbox","isFilterChildHierarchy","isNullOrUndefined","grid","searchSettings","key","hierarchyMode","allowFiltering","filterSettings","findParentRecords","records","datas","len","Object","keys","getObject","push","getExpandStatus","record","parents","childParent","parentRecord","parentItem","getParentData","uniqueID","initialRender","expandStateMapping","expanded","findChildrenRecords","hasChildRecords","childRecords","concat","isOffline","dm","ready","extendArray","array","obj","objArr","j","getPlainData","value","index","level","taskData","requireFilter","isHidden","el","style","window","getComputedStyle","display","visibility","editAction","details","control","isSelfReference","addRowIndex","selectedIndex","columnName","addRowRecord","batchChanges","action","getPrimaryKeyFieldNames","treeData","json","modifiedData","originalData","isSkip","editSettings","mode","editModule","getBatchChanges","addAct","currentViewRecords","getCurrentViewRecords","extend","newRowPosition","unshift","primaryKeys","currentdata","addAction","Array","k","_loop_1","prototype","hasOwnProperty","call","editedData","parentIdMapping","idMapping","splice","childMapping","updateParentRow","currentData_1","parentData","flatData","filter","e","p","removeChildRecords","isChildAll","editRowIndex","updateCurrentViewData","child","index_1","currentRecords","map","enableVirtualization","getValue","parentUniqueID","sortSettings","indexOf","data","setRowData","row","getRowByIndex","getRows","getRowIndexByPrimaryKey","movableRow","frozenRows","getFrozenColumns","getMovableRowByIndex","index_2","treeColumnIndex","allowRowDragAndDrop","enableImmutableMode","renderModule","cellRender","cell","cells","column","getColumns","requestType","Column","options","this","allowEditing","edit","disableHtmlEncode","allowReordering","showColumnMenu","allowSorting","allowResizing","merge","__extends","extendStatics","d","b","setPrototypeOf","__proto__","__","constructor","create","__decorate","decorators","target","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Predicate","_super","apply","Property","ChildProperty","FilterSettings","Collection","TextWrapSettings","DOC_URL","BASE_DOC_URL","IsRowDDEnabled","Logger","Grid","Inject","GridLogger","getModuleName","log","types","args","type","item","detailLists","cOp","check","success","message","generateMessage","replace","gridurl","substring","treeGridObj","dataStateChange","console","logType","treeLog","treeGrid","isPrimaryKey","treeGridDetails","mapping_fields_missing","opt","ERROR","rowDataBound","queryCellInfo","beforeDataBound","actionBegin","actionComplete","rowSelected","checkboxChange","rowDeselected","toolbarClick","beforeExcelExport","beforePdfExport","collapsed","remoteExpand","localPagedExpandCollapse","pagingActions","printGridInit","contextMenuOpen","contextMenuClick","crudAction","beginEdit","beginAdd","recordDoubleClick","cellSave","cellSaved","cellEdit","batchDelete","batchCancel","batchAdd","beforeBatchDelete","beforeBatchAdd","beforeBatchSave","batchSave","keyPressed","doubleTap","virtualActionArgs","dataListener","indexModifier","beforeStartEdit","beforeBatchCancel","detailDataBound","rowDragStartHelper","rowsAdd","rowsRemove","rowdraging","rowDropped","TreeClipboard","_this","treeCopyContent","copiedUniqueIdCollection","treeGridParent","setCopyData","withHeader","copyContent","getSelection","toString","clipBoardTextArea","rows","selectionSettings","selectedIndexes","getSelectedRowIndexes","sort","a","classList","contains","slice","querySelectorAll","uniqueid","getSelectedRecords","copyHierarchyMode","parentContentData","childContentData","headerTextArray","getVisibleColumns","headerText","cancel","trigger","Browser","userAgent","match","setSelectionRange","select","treeLevel","copy","paste","rowIndex","colIndex","destroy","childData","GridClipboard","Selection","selectedItems","filteredList","addEventListener","on","headerCheckbox","columnCheckbox","updateGridActions","checkboxSelection","removeEventListener","isDestroyed","off","checkBox","checkWrap","parentsUntil","querySelector","closest","selectCheckboxes","triggerChkChangeEvent","nextElementSibling","autoCheckHierarchy","checkBoxvalue","headerSelection","checkState","rowElement","checked","rowData","getCheckedRecords","events.checkboxChange","getCheckboxcolumnIndex","mappingUid","columnIndex","col","uid","headerCelllength","getHeaderContent","getAttribute","headerElement","rowChkBox","createElement","className","attrs","createCheckBox","label","add","insertBefore","cloneNode","firstChild","renderColumnCheckbox","setAttribute","checkboxState","allowTextWrap","width","checkbox","removeClass","container","containerELe","spanEle","innerHTML","divEle","appendChild","rowIndexes","flatRecord","traverSelection","ischildItem","updateSelectedItems","updateParentSelection","filterModule","filteredResult","getFilteredChildRecords","count","isSummaryRow","indeter","checkChildRecords","checkBoxRecord","checkAll","filterResult","rec","currentRecord","checkedRecord","recordIndex","checkboxRecord","tr","movableTr","getMovableDataRows","checkedIndex","checkBoxclass","childLength","updatedData","forEach","getCheckedrecords","getCheckedRowIndexes","Print","GridPrint","events.printGridInit","printTreeGrid","printGrid","gridElement","events.queryCellInfo","events.rowDataBound","events.beforeDataBound","addClass","print","SearchSettings","SelectionSettings","Render","templateResult","columnTemplateResult","reactTemplateRender","RowModifier","allowPaging","pageSettings","pageSizeMode","enableCollapseAll","proxy_1","parentrec","cellElement","pad","filterLevel","totalIconsWidth","getColumnByUid","summaryRow","frozenColumns","enableColumnVirtualization","getColumnIndexByUid","emptyExpandIcon","styles","n","iconRequired","hasFilteredChildRecords","expandIcon","expand","updateTreeCell","getFrozenLeftColumnsCount","getFrozenRightColumnsCount","freezerightColumns","getFrozenRightColumns","freezeLeftColumns","getFrozenLeftColumns","movableColumns","getMovableColumns","field","notify","checkboxElement","parseInt","summaryData","rowTemplate","treeColumn","templateFn","colindex","template","templateCompiler","textContent","appendChildren","children","tempID","element","id","portals","isReact","result","DataManipulation","addedRecords","parentItems","taskIds","hierarchyData","storedIndex","sortedData","isSortAction","dataResults","updateParentRemoteData","beginSorting","updateData","events.remoteExpand","collectExpandingRecs","dataProcessor","isRemote","convertToFlatData","query","Query","filterKey","params","param","where","addParams","hasChildMapping","qry","clone","queries","executeQuery","then","DataUtil","distinct","httpRequest","statusText","setValue","zerothLevelData","dataManagerSuccess","hideSpinner","convertJSONData","tempData","selfData","mappingData","executeLocal","group","groupData","items","selfReferenceUpdate","createRecords","referenceData","shift","loadChildOnDemand","getUid","Math","ceil","random","rowDetails","isChild","gridRows","getContentTable","childRecord","targetEle","getElementsByClassName","getRowObjectFromUID","childRows","parentRow","expandingTd","detailRowModule","fetchRemoteChildData","getDataModule","generateQuery","clonequries","fn","showSpinner","currentViewData","inx","getRowsObject","haveChild","events.actionComplete","aggregates","gridQuery","aggregateQuery","summaryQuery","q","summaryModule","calculateSummaryValue","totalRecordsCount","virtualArgs","remoteVirtualAction","notifyArgs","enableInfiniteScrolling","events.expanded","contentModule","currentInfo","prevInfo","loadNext","currentPage","nextInfo","page","parentRecords","treeGridData","currentData","dataObj","isExport","expresults","exportType","isPrinting","actionArgs","actionData","actionAddArgs","primaryKeyColumnName","dataValue","isLocalData","updateAction","filterQuery","searchQuery","results","fltrQuery","srchQuery","filteredData","gridQuery_1","srtQry","srt","getColumnByField","compFun","sortComparer","bind","direction","sortBy","sortArgs","temp","paging","printMode","actArgs","events.pagingActions","isCollapsedStatePersist","actualResults","dataResult","events.crudAction","events.batchSave","ToolbarItem","ContextMenuItems","PageSettings","AggregateColumn","intl","Internationalization","setFormatter","cultureName","format","skeleton","formatFn","getFormatFunction","getDateFormat","getNumberFormat","getFormatter","setTemplate","helper","undefined","footerTemplate","getEnumValue","CellType","Summary","compile","property","getTemplate","setPropertiesSilent","prop","setProperties","AggregateRow","EditSettings","SortDescriptor","SortSettings","InfiniteScrollSettings","TreeGrid","uniqueIDCollection","uniqueIDFilterCollection","changedRecords","deletedRecords","objectEqualityChecker","old","current","isEqual","excludeKeys","Date","getTime","TreeGrid_1","TreeGridSelection","mergePersistTreeGridData","injectedModules","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","pdfExportModule","preRender","TreeGridLocale","initProperties","defaultLocale","Above","Below","Child","AddRow","ExpandAll","CollapseAll","RowIndent","RowOutdent","l10n","L10n","locale","sortByColumn","isMultiSort","sortModule","sortColumn","clearSorting","removeSortColumn","search","searchString","autoFitColumns","fieldNames","resizeModule","updateColumnModel","reorderColumns","fromFName","toFName","localeObject","gridLocale","treeGridLocale","load","printModule","treeGridkeyActionHandler","allowKeyboard","parentTarget","summaryElement","expandAll","collapseAll","expandCollapseRequest","parentElement","findnextRowElement","selectRow","cellIndex","row_1","clearSelection","findPreviousRowElement","rIndex","cIndex","summaryRowElement","previousElementSibling","columnModel","isExpandAll","isCollapseAll","keyConfigs","ctrlDownArrow","ctrlUpArrow","ctrlShiftUpArrow","ctrlShiftDownArrow","downArrow","upArrow","offline","RemoteSaveAdaptor","wireEvents","EventHandler","mouseClickHandler","keyboardModule","KeyboardEvents","keyAction","eventName","tabIndex","requiredModules","modules","getGridColumns","member","toolbar","contextMenuItems","allowExcelExport","detailTemplate","allowPdfExport","showColumnChooser","extendRequiredModules","allowAdding","allowDeleting","isCommandColumn","allowSelection","some","commands","commandsTemplate","unwireEvents","remove","loggerModule","render","createSpinner","dataModule","autoGenerateColumns","convertTreeData","loadGrid","rowDropSettings","targetID","addListener","gridContainer","height","gridRequiredModules","appendTo","renderComplete","destroyTemplateFn","clearTemplate","afterGridRender","clipboardModule","griddata","bindGridProperties","bindedDataSource","enableRtl","columnQueryMode","getActualProperties","pagerTemplate","infiniteScrollSettings","enableAltRow","enableHover","enableAutoFill","rowHeight","gridLines","getGridToolbar","toolbarTemplate","textWrapSettings","selectedRowIndex","getContextMenu","columnMenuItems","getGridEditSettings","clipMode","templateInstance","triggerEvents","bindGridEvents","rowSelecting","events.rowSelected","events.rowDeselected","resizeStop","excelQueryCellInfo","pdfQueryCellInfo","checkBoxChange","pdfExportComplete","excelExportComplete","excelHeaderQueryCellInfo","pdfHeaderQueryCellInfo","dataSourceChanged","rowDeselecting","cellDeselected","cellDeselecting","columnMenuOpen","columnMenuClick","cellSelected","headerCellInfo","resizeStart","resizing","columnDrag","columnDragStart","columnDrop","beforePrint","beforeCopy","beforePaste","TreeLogger","printComplete","actionFailure","extendedGridDataBoundEvent","extendedGridEvents","extendedGridActionEvents","extendedGridEditEvents","bindGridDragEvents","bindCallBackEvents","lastRowBorder","visiblerow","isAddBorder","isPixelHeight","dataBound","updateRowTemplate","updateAltRow","req","totalRows","callBackPromise_1","Deferred","beforeDataBoundArgs","resolve","callBackPromise","events.toolbarClick","toolbarargs","cellSelecting","cellselectingArgs","events.beginEdit","begineditArgs","isExpandRefresh","events.dataStateChange","isContextMenuOpen","contextitems","contextMenuModule","contextMenu","events.cellSave","cellsaveArgs","events.cellSaved","promise","events.cellEdit","events.batchAdd","events.beforeBatchSave","events.beforeBatchAdd","events.batchDelete","events.beforeBatchDelete","events.batchCancel","treeColumnRowTemplate","datacount","defaultQuery","JsonAdaptor","dataManager","events.actionBegin","updateTreeGridModel","events.beginAdd","ag","showChildSummary","refresh","events.recordDoubleClick","events.detailDataBound","events.contextMenuClick","events.contextMenuOpen","events.rowDragStartHelper","rowDragStart","rowDrag","isEdit","events.rowdraging","rowDrop","events.rowDropped","registeredTemplate","allowEditOnDblClick","showConfirmDialog","showDeleteConfirmDialog","allowNextRowEdit","dialog","text","getConstant","tooltipText","Search","prefixIcon","isEmptyColumnModel","treeGridColumn","gridColumn","gridColumnCollection","_i","_a","onPropertyChanged","newProp","requireRefresh","properties_1","refreshColumns","allowMultiSorting","isDataSourceChanged","eventListener","renderTable","closeEdit","treeGridElement","hasTreeGridChild","removeListener","dataBind","document","getElementById","getPersistData","keyEntity","ignoreOnPersist","currentObject","val","ignoreInArrays","addOnPersist","ignoreOnColumn","ignoreInColumn","touches","isEditCollapse","getPager","addRecord","position","saveCell","updateCell","updateRow","deleteRecord","fieldName","startEdit","editCell","enableToolbarItems","isEnable","toolbarModule","enableItems","endEdit","openColumnChooser","x","y","columnChooserModule","deleteRow","setCellValue","primaryKey","goToPage","pageNo","pagerModule","updateExternalMessage","getCellFromIndex","iterateArrayOrObject","Columns","getColumnFieldNames","getFooterContent","getFooterContentTable","showColumns","showBy","hideColumns","hideBy","getColumnHeaderByField","getColumnHeaderByIndex","getColumnHeaderByUid","getColumnIndexByField","getVirtualColIndexByUid","isRefresh","gridColumns","stackedHeader","getContent","mergeColumns","storedColumn","getDataRows","dRows","getHeaderTable","getRowInfo","getUidByColumnField","cols","visible","selectionModule","getVisibleRecords","visibleRecords","indexes","refreshUI","refreshHeader","dialogObj","targetElement","rowInfo","collapseRow","expandRow","getCollapseExpandRecords","expandingArgs","expandCollapse","collapseArgs","setHeightForFrozenContent","freeze","refreshScrollOffset","collapsingArgs","events.collapsed","firstElementChild","scrollHeight","scrollTop","getRowHeight","scrollBy","expandAtLevel","getRecordDetails","pindex","collapseAtLevel","startIndex","expandCollapseAll","isExpandCollapseall","updateChildOnDemand","displayAction","detailrows","localExpand","sHeight","clientHeight","events.localPagedExpandCollapse","deff","data_1","length_1","rows_1","args_1","collapseRemoteChild","movableRows","freezeRightRows","rows_2","primaryKeyField","getMovableRows","getFrozenRightRows","visibleRowCount","gridRow","rcell","arg","movablerows","rightrows","collapsingTd","collapse","expandElement","cRow","eRows","i_1","updateResultModel","returnResult","filterByColumn","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","removeFilteredColsByField","isClearFilterBar","isToggle","selectRows","selectCell","getSelectedRows","getMovableCellFromIndex","getFrozenRightRowByIndex","getFrozenRightDataRows","getFrozenRightCellFromIndex","getFrozenLeftColumnHeaderByIndex","getFrozenRightColumnHeaderByIndex","getMovableColumnHeaderByIndex","getMovableColumnsCount","getVisibleMovableCount","getVisibleFrozenRightCount","getVisibleFrozenLeftCount","getFrozenCount","cnt","isFrozen","getSelectedRowCellIndexes","baseModule","treeModule","reorderRows","fromIndexes","toIndex","rowDragAndDropModule","Complex","RowDropSettings","Event","NotifyPropertyChanges","Component","Reorder","GridReorder","getTreeColumn","treeIndex","updatedCols","f","Resize","GridResize","fName","RowDD","canDrop","isDraggedWithChild","isaddtoBottom","GridDragDrop","getChildrecordsByParentID","Rowdraging","events.rowsAdd","rowsAdded","events.rowsRemove","rowsRemoved","tObj","dropPosition","dropIndex","dropRows","orderToIndex","dropData","totalRecord","parentrow","updatedParent","draggedRecord","dragRecords","draggedRecord_1","dragRecords_1","deleteDragRow","refreshGridDataSource","tempDataSource","idx","droppedRecord","proxy","removeFirstrowBorder","canremove","removeLastrowBorder","isEmptyRow","islastRowIndex","updateIcon","rowEle","rowPositionHeight","addErrorElem","rowTop","toolHeight","offsetHeight","positionOffSet","getOffset","contentHeight","top","offsetTop","divide","topRowSegment","middleRowSegment","bottomRowSegment","mouseEvent","touchEvent","posy","pageY","changedTouches","isTopSegment","isMiddleRowSegment","isBottomRowSegment","removeChildBorder","removetopOrBottomBorder","addFirstrowBorder","removeErrorElem","topOrBottomBorder","addRemoveClasses","addLastRowborder","borderElem","targetRow","node","div","gridheaderEle","toolbarHeight","getToolbar","multiplegrid","offsetWidth","getScrollWidth","trElement","bottomborder","gridcontentEle","bottom","scrollElem","scrollWidth","Scroll","getScrollBarWidth","dragelem","ele","errorVal","content","parentNode","removeChild","spanContent","paddingLeft","errorelem","border","box","getBoundingClientRect","body","docElem","documentElement","pageYOffset","scrollLeft","pageXOffset","clientTop","clientLeft","left","round","cloneElement","cursor","rowIdx","ensuredropPosition","dropElement","ej2_instances","dragDropGrid","fromIndex","getTargetIdx","srcControl","targetIndex","isNaN","actualData","srcControlFlatData","actualIndex","selectedRecord","isByMethod","draggedRecord_2","isMultipleGrid","dragLength","reverse","_loop_2","this_1","correctIndex","offsetParent","newParentIndex","recordIndex1","dropAtTop","getChildCount","droppedRecordIndex","updateChildRecordLevel","updateChildRecord","dropMiddle","nonRepeat_1","childRecordsLength","recordLevel","childItem","deletedRow","removeRecords","flatParentData","childIndex","removeChildItem","idz","parentIndex","deletedRecordCount","i_2","i_3","draggedRecords","TreeVirtualRowModelGenerator","events.dataListener","getDatas","visualData","getDataInfo","getData","generateRows","info","virtualInfo","blockIndexes","getBlockIndexes","url","checkAndResetCache","clear","cache","groups","getBlockSize","VirtualRowModelGenerator","Filter","GridFilter","isHierarchyFilter","flatFilteredData","filteredParentRecs","updatedFilteredRecord","clearFilterLevel","dataDetails","addParentRecord","ischild","checkChildExsist","parent_1","parRecord","updateParentFilteredRecord","updateFilterLevel","uniqueIDValue","childRec","isExist","parent_2","parent_3","fLevel","ExcelExport","GridExcel","updateExcelResultModel","exportRowDataBound","finalPageSetup","isCsv","Promise","isLocal","event.beforeExcelExport","customData","manipulateExportProperties","book","dtSrc","queryResult","flatsData","dataSrc","indent","excelRow","excelrowobj","rowObj","filtercolumnlength","Boolean","rowlength","excelRows","rowlevel","expandedStatus","sublevelState","state","grouping","outlineLevel","isCollapsed","worksheets","pageSetup","isSummaryRowBelow","PdfExport","GridPdf","updatePdfResultModel","event.beforePdfExport","customsData","manipulatePdfProperties","flatDatas","paragraphIndent","Page","GridPage","collapseExpandPagedchilds","pageAction","primaryKeyField_1","ret","pageRoot","pagedResults","newResults","t","res","pageingDetails","propname","skip","size","pageSize","take","dm_1","or","parents_1","floor","Toolbar","tool","refreshToolbar","toolbarClickHandler","Aggregate","GridAggregate","flatChildRecords","isSort","flatRecords","summaryLength","dataLength","getChildRecordsLength","summaryRowIndex","len_1","createSummaryItem","idx_1","currentIndex","summaryParent","length_2","itemData","summary","displayColumn","keys_1","getSummaryValues","summaryColumn","single","getFormatFromType","tempObj","requiresCount","summaryKey","sumData","toLowerCase","calculateAggregate","disp","value_1","summaryformat","Sort","GridSort","flatSortedData","updateModel","createdSortedRecords","sortParams","iterateSort","childSort","ColumnMenu","GridColumnMenu","getColumnMenu","columnMenuModule","ContextMenu","cmenu","addRow","editRecord","BatchEdit","batchChildCount","batchAddedRecords","batchDeletedRecords","batchAddRowRecord","batchRecords","isAdd","batchPageAction","batchCancelAction","immutableBatchAction","nextCellIndex","getBatchRecords","getAddRowIndex","getSelectedIndex","getBatchChildCount","actualCellIndex","frozenCols","columnObject","getColumnByIndex","added","primaryKey_1","currentDataIndex","indexvalue","rowObjectIndex","getActualRowObjectIndex","newBatchRowAdded","changes","batchIndex","primaryParent","childRecordCount","updateChildCount","updateRowIndex","focusModule","table","matrix","childs","primarykey","parentRowIndex","getRowElementByUID","totalCount","selectedRecords","mRows","deleterecords","deleteUniqueID","positionIndex","updatedRecords","primarykey_1","addRecords","totalRecords","endIndex","indexValue","Edit","prevAriaRowIndex","isAddedRowByMethod","GridEdit","previousNewRowPosition","internalProperties","batchEditModule","events.keyPressed","lastCellTab","contentready","editActionEvents","events.doubleTap","gridDblClick","customCellSave","savePreviousRowPosition","events.beforeStartEdit","events.beforeBatchCancel","resetIsOnBatch","getRowPosition","doubleClickTarget","addArgs","ariaRowIndex","applyFormValidation","eventArgs","treeObj","keyData","paramsLength","infiniteAddAction","rowObjects","newRowObject","newRowObjectIndex","newRecord","updateInfiniteCurrentViewData","movableRowsObject","getMovableRowsObject","isCache","enableCache","resetRowIndex","updateIndex","newRowIndex","dataIndex","infiniteCurrentViewData","infiniteScrollModule","isOnBatch","updateGridEditMode","keyPress","prom","celleditArgs","request","toolbarID","cellDetails","treeCell","afterCellSave","form","rowIndex_1","primaryKeys_1","isTabLastRow","update","fromTable","previousValue","editArgs","filterChoiceCount","excelSearchOperator","mRow","aggregateModule","destroyWidgets","formObj","restoreFocus","saveArgs","previousData","data1","treeColIndex","l","data2","treecell","firstAriaIndex","lastAriaIndex","withinRange","isVirtualization","focussedElement","activeElement","newFreezeRowObject","rightFrozenRows","errors","focus","selector","beginAddEdit","childRecordCount1","currentDataIndex1","deletedValues","previousEditMode","previousGridEditMode","editFormValidate","destroyForm","CommandColumn","Command","DetailRow","detailrow","dataBoundArg","detaildataBound","setIndentVisibility","childRowExpand","rowExpandCollapse","actioncomplete","detailele","elements","detailData","detailRowElement","detailElement","previousSibling","expandClass","classlist","gridClas","gridclass","newNo","detailClass","spann","updtdcolum","focusElement","VirtualTreeContentRenderer","locator","isExpandCollapse","translateY","maxiPage","recordAdded","preTranslate","isRemoteExpand","getModelGenerator","events.virtualActionArgs","virtualOtherAction","events.indexModifier","setTop","nextSetResIndex","lastIndex","onDataReady","refreshContentRows","observers","observes","scrollArgs","scrollListeners","onEnteredAction","dataBoundEvent","rowSelectedEvent","toSelectVirtualRow","onActionComplete","virtualEditSuccess","resetIseditValue","cancelEdit","toSelectRowOnContextOpen","refreshCell","cellFocus","setVirtualHeight","contents","debounceEvent","TreeInterSectionObserver","getPanel","getTranslateY","sTop","cHeight","isOnenter","initialRowTop","gridTop","containerRect","observer","generateCells","generateCell","rowId","cellType","colSpan","oIndex","foreignKeyData","isDataCell","isTemplate","rowID","Data","isForeignKey","isForeignColumn","Cell","rowPosition","withInRange","restoreEditState","restoreNewRow","isWheel","isIE","xAxis","axis","getColumnOffset","vgenerator","getColumnIndexes","columnIndexes","cOffsets","maxLeft","virtualEle","adjustTable","header","sentinel","outBuffer","upScroll","offset","downScroll","vHeight","lastInx","remains","rowPt","firsttdinx","isLastBlock","viewInfo","previousInfo","setColumnIndexesInView","loadSelf","event","appendContent","newChild","sentinelInfo","cBlock","cOffset","setWrapperWidth","name","getTable","VirtualContentRenderer","isWheeling","newPos","lastPos","timer","callback","onEnterCallback","virtualScrollHandlers","delay","debounced50","debounce","prevTop","prevLeft","movableContainer","scrollbar","delta","clearTimeout","setTimeout","preventDefault","returnValue","axes","entered","InterSectionObserver","VirtualScroll","prevstartIndex","prevendIndex","TreeVirtual","returnVisualData","collapseExpandVirtualchilds","virtualPageAction","expandCollapseRec","counts","resourceCount","sIndex","instantiateRenderers","parentGrid","renderer","getService","RenderType","Header","VirtualHeaderRenderer","Content","ensurePageSize","GridVirtualScroll","Freeze","FreezeColumn","dblClickHandler","frozenRightRows","frozenrows","rData","queryselector","freezeModule","ColumnChooser","GridColumnChooser","X","Y","InfiniteScroll","GridInfiniteScroll","infinitePageAction","infiniteRemoteExpand","infiniteDeleteHandler","infiniteEditHandler","createRows","serviceLocator","rowRenderer","RowRenderer","childRowObjects","childRowElements","initialBlocks","maxBlocks","firstIndex","rowElms","keyField","removeRows","mRowElms","tbody","currentRows","isMovable","isFrozenRight","isFrozenGrid","getMovableVirtualContent","getFrozenVirtualContent","isFrozenRows","getMovableVirtualHeader","getFrozenVirtualHeader","newRow"],"mappings":"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"}