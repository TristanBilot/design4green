[{"/Users/tristanbilot/Desktop/Design4green/design4green/src/index.js":"1","/Users/tristanbilot/Desktop/Design4green/design4green/src/reportWebVitals.js":"2","/Users/tristanbilot/Desktop/Design4green/design4green/src/App.js":"3","/Users/tristanbilot/Desktop/Design4green/design4green/src/Components/CsvLoader.js":"4","/Users/tristanbilot/Desktop/Design4green/design4green/src/Components/SingleMovie.js":"5","/Users/tristanbilot/Desktop/Design4green/design4green/src/Components/scripts/graph_data.js":"6","/Users/tristanbilot/Desktop/Design4green/design4green/src/Components/GraphPage.js":"7","/Users/tristanbilot/Desktop/Design4green/design4green/src/Components/MainPage.js":"8","/Users/tristanbilot/Desktop/Design4green/design4green/src/Components/BasketPage.js":"9","/Users/tristanbilot/Desktop/Design4green/design4green/src/serviceWorker.js":"10","/Users/tristanbilot/Desktop/Design4green/design4green/src/Components/SelectionPage.js":"11","/Users/tristanbilot/Desktop/Design4green/design4green/src/Components/SelectionList.js":"12"},{"size":578,"mtime":1637236598076,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1617722540346,"results":"15","hashOfConfig":"14"},{"size":890,"mtime":1637238424819,"results":"16","hashOfConfig":"14"},{"size":329,"mtime":1637162776086,"results":"17","hashOfConfig":"14"},{"size":958,"mtime":1637237745183,"results":"18","hashOfConfig":"14"},{"size":789,"mtime":1637196861157,"results":"19","hashOfConfig":"14"},{"size":9957,"mtime":1637226639927,"results":"20","hashOfConfig":"14"},{"size":2672,"mtime":1637232851676,"results":"21","hashOfConfig":"14"},{"size":1617,"mtime":1637234421670,"results":"22","hashOfConfig":"14"},{"size":5194,"mtime":1637236618339,"results":"23","hashOfConfig":"14"},{"size":911,"mtime":1637237337397,"results":"24","hashOfConfig":"14"},{"size":2249,"mtime":1637238469530,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"2ohk48",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"40","usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"41"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/tristanbilot/Desktop/Design4green/design4green/src/index.js",[],["56","57"],"/Users/tristanbilot/Desktop/Design4green/design4green/src/reportWebVitals.js",[],"/Users/tristanbilot/Desktop/Design4green/design4green/src/App.js",[],"/Users/tristanbilot/Desktop/Design4green/design4green/src/Components/CsvLoader.js",["58","59"],"/Users/tristanbilot/Desktop/Design4green/design4green/src/Components/SingleMovie.js",["60"],"import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass SingleMovie extends Component {\n  state = {\n    isHovering: false\n  };\n\n  handleEnter = () => {\n    this.setState({ isHovering: true });\n  };\n\n  handleLeave = () => {\n    this.setState({ isHovering: false });\n  };\n\n  render() {\n    const { movie } = this.props;\n    return (\n      <Link to={\"/\" + movie.id} style={{color:\"black\"}}>\n        <div\n          className=\"movie-card\"\n          onMouseEnter={this.handleEnter}\n          onMouseLeave={this.handleLeave}\n        >\n          \n          <p style={{width:\"180px\"}}>\n          <p style={{color:\"black\",whiteSpace: \"nowrap\",overflow: \"hidden\",textOverflow:\"clip\", color:\"white\"}}>\n          {movie.title}\n          </p>\n          </p>\n          {this.state.isHovering && (\n            <h3 className=\"movie-title\">\n            </h3>\n          )}\n        </div>\n      </Link>\n    );\n  }\n}\n\nexport default SingleMovie\n","/Users/tristanbilot/Desktop/Design4green/design4green/src/Components/scripts/graph_data.js",["61"],"\"use strict\";\n/**\n * Gantt DataSource\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\nexports.editingResources = [\n    { resourceId: 1, resourceName: 'Martin Tamer' },\n    { resourceId: 2, resourceName: 'Rose Fuller' },\n    { resourceId: 3, resourceName: 'Margaret Buchanan' },\n    { resourceId: 4, resourceName: 'Fuller King' },\n    { resourceId: 5, resourceName: 'Davolio Fuller' },\n    { resourceId: 6, resourceName: 'Van Jack' },\n    { resourceId: 7, resourceName: 'Fuller Buchanan' },\n    { resourceId: 8, resourceName: 'Jack Davolio' },\n    { resourceId: 9, resourceName: 'Tamer Vinet' },\n    { resourceId: 10, resourceName: 'Vinet Fuller' },\n    { resourceId: 11, resourceName: 'Bergs Anton' },\n    { resourceId: 12, resourceName: 'Construction Supervisor' }\n];\n",["62","63"],"/Users/tristanbilot/Desktop/Design4green/design4green/src/Components/GraphPage.js",["64","65","66"],"import React, { Component } from 'react';\nimport { GanttComponent, Inject, Selection, Toolbar, ExcelExport, PdfExport, ColumnsDirective, ColumnDirective } from '@syncfusion/ej2-react-gantt';\nimport { editingResources } from './scripts/graph_data';\nimport csvFile from '../INR.csv'\nimport DataFrame from \"dataframe-js\";\nimport './css/graph.css'\n\nconst Papa = require('papaparse');\n\nclass GraphPage extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            dataframe: null,\n            columns: [],\n            graph: [],\n            graphLabels: [],\n          }\n\n        this.taskbarWithColorBinded = this.taskbarWithColor.bind(this)\n\n        this.taskBarColors = {\n            \"STRATEGIE\": \"#1b5e20\",\n            \"SPECIFICATIONS\": \"#00695c\",\n            \"UX/UI\": \"#0097a7\",\n            \"CONTENUS\": \"#039be5\",\n            \"ARCHITECTURE\": \"#2196f3\",\n            \"FRONTEND\": \"#5c6bc0\",\n            \"BACKEND\": \"#9575cd\",\n            \"HEBERGEMENT\": \"#ce93d8\",\n        }\n\n        this.taskFields = {\n            id: 'TaskID',\n            name: 'TaskName',\n            startDate: 'StartDate',\n            endDate: 'EndDate',\n            duration: 'Duration',\n            progress: 'Progress',\n            dependency: 'Predecessor',\n            child: 'subtasks',\n            resourceInfo: 'resources'\n        };\n        this.resourceFields = {\n            id: 'resourceId',\n            name: 'resourceName'\n        };\n        this.splitterSettings = {\n            columnIndex: 2\n        };\n        this.projectStartDate = new Date()\n        let projectNbDays = 40\n        this.projectEndDate = new Date(Date.now()+ (1000*60*60*24) * projectNbDays)\n        this.gridLines = 'Both';\n        this.toolbar = ['ExcelExport', 'CsvExport', 'PdfExport'];\n        this.timelineSettings = {\n            topTier: {\n                unit: 'Week',\n                format: 'MMM dd, y',\n            },\n            bottomTier: {\n                unit: 'Day',\n            },\n        };\n        this.labelSettings = {\n            // leftLabel: 'TaskName',\n            rightLabel: 'resources'\n        };\n    }\n\n    async componentWillMount() {\n        await this.loadCsv()\n        await this.timeout(100)\n        await this.getGanttGraph()\n    }\n\n    async loadCsv() {\n        if (this.state.dataframe == null) {\n            var binded = this.loadCsvBinded.bind(this)\n            Papa.parse(csvFile, {\n              download: true,\n              complete: binded,\n              encoding: 'UTF-8'\n          });\n        }\n    }\n    \n    loadCsvBinded(input) {\n        let csv = input.data\n        let columns = csv[0]\n        let data = csv.slice(1)\n        let df = new DataFrame(data, columns)\n    \n        // df = df.chain(row => row.get(\"Etape Cycle de Vie\") != \"N/A\")\n        this.setState({\n          \"columns\": columns,\n          \"dataframe\": df\n        })\n    }\n\n    translateCycleLifeToInteger(row) {\n        let cycleLife = row.get(\"Etape Cycle de Vie\")\n        let priorities = [ 'Acquisition', 'Conception', 'Réalisation', 'Déploiement', 'Administration', \n         'Utilisation', 'Maintenance', 'Fin de Vie', 'Revalorisation' ]\n    \n         row = row.set(\"Cycle life priority\", priorities.indexOf(cycleLife))\n         return row\n      }\n\n    async getGanttGraph(criterions) {\n        console.log(\"this.state.dataframe\")\n        console.log(this.state.dataframe)\n        if (this.state.dataframe == null)\n            return []\n    \n        let df = this.getGanttInfoAsDataframe([\n            \"STR-1.07\",\n            \"STR-1.C09\",\n            \"STR-1.16\",\n            \"STR-3.C06\",\n            \"STR-3.C05\",\n            \"STR-3.07\",\n            \"SPC-6.C01\",\n            \"UX/UI-3.01\",\n            \"ARCH-9.C02\"\n        ])\n    \n        let cycleLifeCategories = [ 'Acquisition', 'Conception', 'Réalisation', 'Déploiement', 'Administration', \n            'Utilisation', 'Maintenance', 'Fin de Vie', 'Revalorisation' ]\n    \n        let graph = []\n        let labels = []\n        let day = 1000*60*60*24\n        let baseXPosition = this.projectStartDate\n        let widthOfCycleLife = 4\n        let i = 1\n        var lastRow = null;\n\n        df.chain(row => {\n            let cycleLifeIndex = cycleLifeCategories.indexOf(row.get(\"Etape Cycle de Vie\"))\n            console.log('cycleLifeIndex')\n            console.log(cycleLifeIndex)\n            let begXPosition = new Date(baseXPosition.getTime() + (widthOfCycleLife * cycleLifeIndex) * day)\n            let endXPosition = new Date(baseXPosition.getTime() + (widthOfCycleLife * cycleLifeIndex) * day + widthOfCycleLife * day)\n    \n            let node = {\n                TaskID: i,\n                TaskName: row.get(\"Use Case\"),\n                StartDate: begXPosition,\n                EndDate: endXPosition,\n                subtasks: [],\n                category: row.get(\"Famille d'origine\"),\n                useCase: row.get(\"Use Case\")\n            }\n            if (lastRow != null && lastRow.get(\"Etape Cycle de Vie\") != row.get(\"Etape Cycle de Vie\")) {\n                node[\"Predecessor\"] = i - 1\n            }\n\n            graph.push(node)\n            lastRow = row\n\n            labels.push({\n                resourceId: i++,\n                resourceName: row.get(\"CRITERES\")\n            })\n        })\n\n        console.log(graph)\n    \n        this.setState({\n            graph: graph,\n            graphLabels: labels,\n        })\n    }\n\n    getGanttInfoAsDataframe(ids) {\n        let dfs = []\n    \n        // for each id, fetch the required column infos \n        ids.forEach(id => {\n            let df = this.state.dataframe.filter(row => row\n            .get(\"ID\") === id)\n            .select(\"Famille d'origine\", \"CRITERES\", \"Etape Cycle de Vie\", \"incontournables\", \"Use Case\", \"JUSTIFICATIONS\", \"Priorité\");\n            dfs.push(df)\n        })\n        \n        // merge all the rows dataframes in one dataframe\n        let totalDf = new DataFrame([]);\n        dfs.forEach(df => {\n            totalDf = totalDf.union(df)\n        })\n    \n        // parse the priority to integers\n        totalDf = totalDf.chain(this.translatePriorityToInteger)\n        totalDf = this.sortDataframe(totalDf)\n        return totalDf\n    }\n\n    sortDataframe(df) {\n        // add a new colum with an integer representing the priority based on cycle life\n        df = df.withColumn(\"Cycle life priority\")\n        df = df.chain(this.translateCycleLifeToInteger)\n    \n        // sort first by priority and then by cycle life to make groups\n        df = df.sortBy(\"Priorité\")\n        df = df.sortBy(\"Cycle life priority\")\n        return df\n      }\n\n    translatePriorityToInteger(row) {\n        let priority = row.get(\"Priorité\")\n        let priorities = {\n          \"Low\": 1,\n          \"Medium\": 2,\n          \"High\": 3,\n          \"\": 4,\n        }\n        row = row.set(\"Priorité\", priorities[priority])\n        return row\n    }\n\n    translateCycleLifeToInteger(row) {\n        let cycleLife = row.get(\"Etape Cycle de Vie\")\n        let priorities = [ 'Acquisition', 'Conception', 'Réalisation', 'Déploiement', 'Administration', \n         'Utilisation', 'Maintenance', 'Fin de Vie', 'Revalorisation' ]\n    \n         row = row.set(\"Cycle life priority\", priorities.indexOf(cycleLife))\n         return row\n      }\n\n    timeout(delay) {\n        return new Promise( res => setTimeout(res, delay) );\n    }\n\n    taskbarWithColor(props) {\n        return (\n        <div className=\"e-gantt-child-taskbar e-custom-moments\" style={{ height: \"100%\", borderRadius: \"5px\", backgroundColor:this.taskBarColors[props.taskData.category], textAlign: \"center\" }}>\n            <div>\n              <span className=\"e-task-label\" style={{textOoverflow: \"ellipsis\", height: \"90%\", overflow: \"hidden\", color: \"white\", fontSize: \"10px\" }}>{props.taskData.useCase}</span>\n            </div>\n        </div>)\n    }\n\n    toolbarClick(args) {\n        if (args.item.id === \"GanttExport_excelexport\") {\n            this.ganttInstance.excelExport();\n        }\n        else if (args.item.id === \"GanttExport_csvexport\") {\n            this.ganttInstance.csvExport();\n        }\n        else if (args.item.id === \"GanttExport_pdfexport\") {\n            this.ganttInstance.pdfExport();\n        }\n    }\n    render() {\n        console.log(editingResources)\n        return (<div className='control-pane'>\n        <div className='control-section'>\n          <GanttComponent id='GanttExport' ref={gantt => this.ganttInstance = gantt} height='700px' rowHeight={45} taskbarHeight={35} dataSource={this.state.graph} dateFormat={'MMM dd, y'} treeColumnIndex={1} allowExcelExport={true} allowPdfExport={true} allowSelection={true} showColumnMenu={false} highlightWeekends={true} allowUnscheduledTasks={true} projectStartDate={this.projectStartDate} projectEndDate={this.projectEndDate} splitterSettings={this.splitterSettings} taskFields={this.taskFields} timelineSettings={this.timelineSettings} labelSettings={this.labelSettings} toolbarClick={this.toolbarClick.bind(this)} height='410px' gridLines={this.gridLines} toolbar={this.toolbar} resourceFields={this.resourceFields} resources={editingResources} taskbarTemplate={this.taskbarWithColorBinded}>\n            <ColumnsDirective>\n              <ColumnDirective field='TaskID' width='60'></ColumnDirective>\n              <ColumnDirective field='TaskName' width='250'></ColumnDirective>\n              <ColumnDirective field='StartDate'></ColumnDirective>\n              <ColumnDirective field='EndDate'></ColumnDirective>\n              <ColumnDirective field='Duration'></ColumnDirective>\n              <ColumnDirective field='Predecessor'></ColumnDirective>\n              <ColumnDirective field='resources'></ColumnDirective>\n              <ColumnDirective field='Progress'></ColumnDirective>\n            </ColumnsDirective>\n            <Inject services={[Selection, Toolbar, ExcelExport, PdfExport]}/>\n          </GanttComponent>\n        </div>\n      </div>);\n    }\n}\n\nexport default GraphPage;","/Users/tristanbilot/Desktop/Design4green/design4green/src/Components/MainPage.js",[],"/Users/tristanbilot/Desktop/Design4green/design4green/src/Components/BasketPage.js",["67","68","69"],"import React, { Component } from 'react';\nimport './css/basketPage.scss'\n\nclass BasketPage extends Component {\n\n    constructor(props) {\n        super(props)\n        \n        // this.state = {\n        //     hasClick: false,\n        // }\n        this.onStartCLickBinded = this.onStartCLick.bind(this)\n    }\n\n    async componentWillMount() {\n    }\n\n    onStartCLick() {\n        this.setState(({\n            hasClick: true\n        }))\n    }\n    \n    render() {\n        return (\n                <div id=\"modal-container\">\n                    <div class=\"modal-background\">\n                        <div class=\"modal\">\n                            <div id=\"close_modal_action\"><i class=\"fas fa-times close_modal\"></i></div>\n                            <h2>My cart</h2>\n                            \n                        </div>\n                    </div>\n                    \n                </div>);\n                    {/* <div class=\"content\">\n                    <h1>Modal Animations</h1>\n                    <div class=\"buttons\">\n                        <div id=\"one\" class=\"button\">Unfolding</div>\n                        <div id=\"two\" class=\"button\">Revealing</div>\n                        <div id=\"three\" class=\"button\">Uncovering</div>\n                        <div id=\"four\" class=\"button\">Blow Up</div><br />\n                        <div id=\"five\" class=\"button\">Meep Meep</div>\n                        <div id=\"six\" class=\"button\">Sketch</div>\n                        <div id=\"seven\" class=\"button\">Bond</div>\n                    </div> */}\n                    {/* </div> */}\n    }\n}\n\nexport default BasketPage;","/Users/tristanbilot/Desktop/Design4green/design4green/src/serviceWorker.js",[],"/Users/tristanbilot/Desktop/Design4green/design4green/src/Components/SelectionPage.js",[],"/Users/tristanbilot/Desktop/Design4green/design4green/src/Components/SelectionList.js",["70"],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":3,"column":8,"nodeType":"77","messageId":"78","endLine":3,"endColumn":15},{"ruleId":"75","severity":1,"message":"79","line":4,"column":7,"nodeType":"77","messageId":"78","endLine":4,"endColumn":11},{"ruleId":"80","severity":1,"message":"81","line":28,"column":97,"nodeType":"82","messageId":"83","endLine":28,"endColumn":102},{"ruleId":"84","severity":1,"message":"85","line":1,"column":1,"nodeType":"86","messageId":"87","endLine":1,"endColumn":14,"fix":"88"},{"ruleId":"71","replacedBy":"89"},{"ruleId":"73","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":156,"column":70,"nodeType":"93","messageId":"83","endLine":156,"endColumn":72},{"ruleId":"94","severity":1,"message":"95","line":223,"column":5,"nodeType":"96","messageId":"83","endLine":230,"endColumn":8},{"ruleId":"97","severity":1,"message":"98","line":260,"column":623,"nodeType":"99","messageId":"100","endLine":260,"endColumn":637},{"ruleId":"101","severity":1,"message":"102","line":36,"column":21,"nodeType":"103","messageId":"104","endLine":46,"endColumn":31},{"ruleId":"105","severity":1,"message":"106","line":36,"column":21,"nodeType":"103","messageId":"107","endLine":47,"endColumn":35},{"ruleId":"101","severity":1,"message":"102","line":47,"column":21,"nodeType":"103","messageId":"104","endLine":47,"endColumn":35},{"ruleId":"75","severity":1,"message":"108","line":46,"column":21,"nodeType":"77","messageId":"78","endLine":46,"endColumn":27},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"no-unused-vars","'csvFile' is defined but never used.","Identifier","unusedVar","'Papa' is assigned a value but never used.","no-dupe-keys","Duplicate key 'color'.","ObjectExpression","unexpected","strict","'use strict' is unnecessary inside of modules.","ExpressionStatement","module",{"range":"111","text":"112"},["109"],["110"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","no-dupe-class-members","Duplicate name 'translateCycleLifeToInteger'.","MethodDefinition","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-unreachable","Unreachable code.","unreachableCode","'random' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[0,13],""]