[{"/Users/tristanbilot/Desktop/Design4green/design4green/src/index.js":"1","/Users/tristanbilot/Desktop/Design4green/design4green/src/reportWebVitals.js":"2","/Users/tristanbilot/Desktop/Design4green/design4green/src/App.js":"3","/Users/tristanbilot/Desktop/Design4green/design4green/src/Components/scripts/graph_data.js":"4","/Users/tristanbilot/Desktop/Design4green/design4green/src/Components/GraphPage.js":"5","/Users/tristanbilot/Desktop/Design4green/design4green/src/Components/MainPage.js":"6","/Users/tristanbilot/Desktop/Design4green/design4green/src/serviceWorker.js":"7","/Users/tristanbilot/Desktop/Design4green/design4green/src/Components/SelectionPage.js":"8","/Users/tristanbilot/Desktop/Design4green/design4green/src/Components/SelectionList.js":"9","/Users/tristanbilot/Desktop/Design4green/design4green/src/Components/Recommandation.js":"10","/Users/tristanbilot/Desktop/Design4green/design4green/src/Components/Cart.js":"11","/Users/tristanbilot/Desktop/Design4green/design4green/src/Components/BasketPage.js":"12","/Users/tristanbilot/Desktop/Design4green/design4green/src/Components/GridCriteres.js":"13","/Users/tristanbilot/Desktop/Design4green/design4green/src/Components/Critere.js":"14"},{"size":578,"mtime":1637236598076,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1617722540346,"results":"17","hashOfConfig":"16"},{"size":918,"mtime":1637298686353,"results":"18","hashOfConfig":"16"},{"size":789,"mtime":1637196861157,"results":"19","hashOfConfig":"16"},{"size":9504,"mtime":1637291340472,"results":"20","hashOfConfig":"16"},{"size":2432,"mtime":1637302195193,"results":"21","hashOfConfig":"16"},{"size":5229,"mtime":1637302714232,"results":"22","hashOfConfig":"16"},{"size":8178,"mtime":1637302744525,"results":"23","hashOfConfig":"16"},{"size":2181,"mtime":1637286936396,"results":"24","hashOfConfig":"16"},{"size":1662,"mtime":1637296622498,"results":"25","hashOfConfig":"16"},{"size":3481,"mtime":1637289508332,"results":"26","hashOfConfig":"16"},{"size":1460,"mtime":1637300801806,"results":"27","hashOfConfig":"16"},{"size":2295,"mtime":1637302432686,"results":"28","hashOfConfig":"16"},{"size":953,"mtime":1637300667569,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"2ohk48",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/tristanbilot/Desktop/Design4green/design4green/src/index.js",[],["63","64"],"/Users/tristanbilot/Desktop/Design4green/design4green/src/reportWebVitals.js",[],"/Users/tristanbilot/Desktop/Design4green/design4green/src/App.js",["65"],"/Users/tristanbilot/Desktop/Design4green/design4green/src/Components/scripts/graph_data.js",["66"],"\"use strict\";\n/**\n * Gantt DataSource\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\nexports.editingResources = [\n    { resourceId: 1, resourceName: 'Martin Tamer' },\n    { resourceId: 2, resourceName: 'Rose Fuller' },\n    { resourceId: 3, resourceName: 'Margaret Buchanan' },\n    { resourceId: 4, resourceName: 'Fuller King' },\n    { resourceId: 5, resourceName: 'Davolio Fuller' },\n    { resourceId: 6, resourceName: 'Van Jack' },\n    { resourceId: 7, resourceName: 'Fuller Buchanan' },\n    { resourceId: 8, resourceName: 'Jack Davolio' },\n    { resourceId: 9, resourceName: 'Tamer Vinet' },\n    { resourceId: 10, resourceName: 'Vinet Fuller' },\n    { resourceId: 11, resourceName: 'Bergs Anton' },\n    { resourceId: 12, resourceName: 'Construction Supervisor' }\n];\n","/Users/tristanbilot/Desktop/Design4green/design4green/src/Components/GraphPage.js",["67","68"],"import React, { Component } from 'react';\nimport { GanttComponent, Inject, Selection, Toolbar, ExcelExport, PdfExport, ColumnsDirective, ColumnDirective } from '@syncfusion/ej2-react-gantt';\nimport { editingResources } from './scripts/graph_data';\nimport DataFrame from \"dataframe-js\";\nimport './css/graph.css'\n\nclass GraphPage extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            dataframe: props.dataframe,\n            basket: props.basket,\n            columns: [],\n            graph: [],\n            graphLabels: [],\n          }\n\n        this.taskbarWithColorBinded = this.taskbarWithColor.bind(this)\n\n        this.taskBarColors = {\n            \"STRATEGIE\": \"#1b5e20\",\n            \"SPECIFICATIONS\": \"#00695c\",\n            \"UX/UI\": \"#0097a7\",\n            \"CONTENUS\": \"#039be5\",\n            \"ARCHITECTURE\": \"#2196f3\",\n            \"FRONTEND\": \"#5c6bc0\",\n            \"BACKEND\": \"#9575cd\",\n            \"HEBERGEMENT\": \"#ce93d8\",\n        }\n\n        this.taskFields = {\n            id: 'TaskID',\n            name: 'TaskName',\n            startDate: 'StartDate',\n            endDate: 'EndDate',\n            duration: 'Duration',\n            progress: 'Progress',\n            dependency: 'Predecessor',\n            child: 'subtasks',\n            resourceInfo: 'resources'\n        };\n        this.resourceFields = {\n            id: 'resourceId',\n            name: 'resourceName'\n        };\n        this.splitterSettings = {\n            columnIndex: 2\n        };\n        this.projectStartDate = new Date()\n        let projectNbDays = 40\n        this.projectEndDate = new Date(Date.now()+ (1000*60*60*24) * projectNbDays)\n        this.gridLines = 'Both';\n        this.toolbar = ['ExcelExport', 'CsvExport', 'PdfExport'];\n        this.timelineSettings = {\n            topTier: {\n                unit: 'Week',\n                format: 'MMM dd, y',\n            },\n            bottomTier: {\n                unit: 'Day',\n            },\n        };\n        this.labelSettings = {\n            // leftLabel: 'TaskName',\n            rightLabel: 'resources'\n        };\n    }\n\n    async componentWillMount() {\n        await this.getGanttGraph()\n    }\n\n    async getGanttGraph(criterions) {\n        if (this.state.dataframe == null)\n            return []\n\n        let cycleLifeCategories = [ 'Acquisition', 'Conception', 'Réalisation', 'Déploiement', 'Administration', \n            'Utilisation', 'Maintenance', 'Fin de Vie', 'Revalorisation' ]\n    \n        let graph = []\n        let labels = []\n        let day = 1000*60*60*24\n        let baseXPosition = this.projectStartDate\n        let widthOfCycleLife = 4\n        let i = 1\n        var lastCycle = null;\n\n        this.state.basket.forEach(element => {\n            let cycleLifeIndex = cycleLifeCategories.indexOf(element.cycle)\n            let begXPosition = new Date(baseXPosition.getTime() + (widthOfCycleLife * cycleLifeIndex) * day)\n            let endXPosition = new Date(baseXPosition.getTime() + (widthOfCycleLife * cycleLifeIndex) * day + widthOfCycleLife * day)\n    \n            let node = {\n                TaskID: i,\n                TaskName: element.useCase,\n                StartDate: begXPosition,\n                EndDate: endXPosition,\n                subtasks: [],\n                category: element.family,\n                useCase: element.useCase\n            }\n            if (lastCycle != null && lastCycle != element.cycle) {\n                node[\"Predecessor\"] = i - 1\n            }\n\n            graph.push(node)\n            lastCycle = element.cycle\n\n            labels.push({\n                resourceId: i++,\n                resourceName: element.criterion\n            })\n        })\n    \n        this.setState({\n            graph: graph,\n            graphLabels: labels,\n        })\n    }\n\n    getGanttInfoAsDataframe(ids) {\n        let dfs = []\n    \n        // for each id, fetch the required column infos \n        ids.forEach(id => {\n            let df = this.state.dataframe.filter(row => row\n            .get(\"ID\") === id)\n            .select(\"Famille d'origine\", \"CRITERES\", \"Etape Cycle de Vie\", \"incontournables\", \"Use Case\", \"JUSTIFICATIONS\", \"Priorité\");\n            dfs.push(df)\n        })\n        \n        // merge all the rows dataframes in one dataframe\n        let totalDf = new DataFrame([]);\n        dfs.forEach(df => {\n            totalDf = totalDf.union(df)\n        })\n    \n        // parse the priority to integers\n        totalDf = totalDf.chain(this.translatePriorityToInteger)\n        totalDf = this.sortDataframe(totalDf)\n        return totalDf\n    }\n\n    translatePriorityToInteger(row) {\n        let priority = row.get(\"Priorité\")\n        let priorities = {\n          \"Low\": 1,\n          \"Medium\": 2,\n          \"High\": 3,\n          \"\": 4,\n        }\n        row = row.set(\"Priorité\", priorities[priority])\n        return row\n    }\n\n    translateCycleLifeToInteger(row) {\n        let cycleLife = row.get(\"Etape Cycle de Vie\")\n        let priorities = [ 'Acquisition', 'Conception', 'Réalisation', 'Déploiement', 'Administration', \n         'Utilisation', 'Maintenance', 'Fin de Vie', 'Revalorisation' ]\n    \n         row = row.set(\"Cycle life priority\", priorities.indexOf(cycleLife))\n         return row\n      }\n\n    sortDataframe(df) {\n        // add a new colum with an integer representing the priority based on cycle life\n        df = df.withColumn(\"Cycle life priority\")\n        df = df.chain(this.translateCycleLifeToInteger)\n    \n        // sort first by priority and then by cycle life to make groups\n        df = df.sortBy(\"Priorité\")\n        df = df.sortBy(\"Cycle life priority\")\n        return df\n    }\n\n    timeout(delay) {\n        return new Promise( res => setTimeout(res, delay) );\n    }\n\n    taskbarWithColor(props) {\n        return (\n        <div className=\"e-gantt-child-taskbar e-custom-moments\" style={{ height: \"100%\", borderRadius: \"5px\", backgroundColor:this.taskBarColors[props.taskData.category], textAlign: \"center\" }}>\n            <div>\n              <span className=\"e-task-label\" style={{textOoverflow: \"ellipsis\", height: \"90%\", overflow: \"hidden\", color: \"white\", fontSize: \"10px\" }}>{props.taskData.useCase}</span>\n            </div>\n        </div>)\n    }\n\n    toolbarClick(args) {\n        if (args.item.id === \"GanttExport_excelexport\") {\n            this.ganttInstance.excelExport();\n        }\n        else if (args.item.id === \"GanttExport_csvexport\") {\n            this.ganttInstance.csvExport();\n        }\n        else if (args.item.id === \"GanttExport_pdfexport\") {\n            this.ganttInstance.pdfExport();\n        }\n    }\n\n    loadLegend() {\n        let colors = { \"STRATEGIE\": \"#1b5e20\",\n            \"SPECIFICATIONS\": \"#00695c\",\n            \"UX/UI\": \"#0097a7\",\n            \"CONTENUS\": \"#039be5\",\n            \"ARCHITECTURE\": \"#2196f3\",\n            \"FRONTEND\": \"#5c6bc0\",\n            \"BACKEND\": \"#9575cd\",\n            \"HEBERGEMENT\": \"#ce93d8\",\n        }\n        let elements = []\n        for (const [label, color] of Object.entries(colors)) {\n            elements.push(\n                <div className=\"row\">\n                    <div className=\"col legend\" style={{backgroundColor: color}}></div>\n                    <div className=\"col\">{label}</div>\n                    <div className=\"col\"></div>\n                    <div className=\"col\"></div>\n                </div>\n            )\n        }\n        return elements\n    }\n\n    render() {\n        return (<div className='control-pane'>\n        <a href = \"/list\"> <button class=\"link-button button basket-btn button-before\">Retour</button></a>\n        <div>\n        <h2 className=\"margin30\">Diagramme de Gantt</h2>\n            <div className='control-section'>\n            <GanttComponent id='GanttExport' ref={gantt => this.ganttInstance = gantt} height='700px' rowHeight={45} taskbarHeight={35} dataSource={this.state.graph} dateFormat={'MMM dd, y'} treeColumnIndex={1} allowExcelExport={true} allowPdfExport={true} allowSelection={true} showColumnMenu={false} highlightWeekends={true} allowUnscheduledTasks={true} projectStartDate={this.projectStartDate} projectEndDate={this.projectEndDate} splitterSettings={this.splitterSettings} taskFields={this.taskFields} timelineSettings={this.timelineSettings} labelSettings={this.labelSettings} toolbarClick={this.toolbarClick.bind(this)} height='410px' gridLines={this.gridLines} toolbar={this.toolbar} resourceFields={this.resourceFields} resources={editingResources} taskbarTemplate={this.taskbarWithColorBinded}>\n                <ColumnsDirective>\n                <ColumnDirective field='TaskID' width='60'></ColumnDirective>\n                <ColumnDirective field='TaskName' width='250'></ColumnDirective>\n                <ColumnDirective field='StartDate'></ColumnDirective>\n                <ColumnDirective field='EndDate'></ColumnDirective>\n                <ColumnDirective field='Duration'></ColumnDirective>\n                <ColumnDirective field='Predecessor'></ColumnDirective>\n                <ColumnDirective field='resources'></ColumnDirective>\n                <ColumnDirective field='Progress'></ColumnDirective>\n                </ColumnsDirective>\n                <Inject services={[Selection, Toolbar, ExcelExport, PdfExport]}/>\n            </GanttComponent>\n            </div>\n            <div className=\"margin30\">\n            <h3>Légende</h3>\n                { this.loadLegend() }\n                <div className=\"legend\"></div>\n            </div>\n        </div>\n      </div>);\n    }\n}\n\nexport default GraphPage;","/Users/tristanbilot/Desktop/Design4green/design4green/src/Components/MainPage.js",["69"],"/Users/tristanbilot/Desktop/Design4green/design4green/src/serviceWorker.js",[],"/Users/tristanbilot/Desktop/Design4green/design4green/src/Components/SelectionPage.js",[],"/Users/tristanbilot/Desktop/Design4green/design4green/src/Components/SelectionList.js",[],"/Users/tristanbilot/Desktop/Design4green/design4green/src/Components/Recommandation.js",["70"],"import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass Recommandation extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      recommandation: props.recommandation,\n      basketMethod: props.basketMethod,\n      addToBasketMethod: props.addToBasketMethod,\n      rmToBasketMethod: props.rmToBasketMethod,\n      category: props.category,\n      isHovering: false,\n    };\n  }\n\n  handleEnter = () => {\n    this.setState({ isHovering: true });\n  };\n\n  handleLeave = () => {\n    this.setState({ isHovering: false });\n  };\n\n  getColor() {\n    let colors = {\n      \"STRATEGIE\": \"#1b5e20\",\n      \"SPECIFICATIONS\": \"#00695c\",\n      \"UX/UI\": \"#0097a7\",\n      \"CONTENUS\": \"#039be5\",\n      \"ARCHITECTURE\": \"#2196f3\",\n      \"FRONTEND\": \"#5c6bc0\",\n      \"BACKEND\": \"#9575cd\",\n      \"HEBERGEMENT\": \"#ce93d8\",\n    }\n    return colors[this.state.category]\n  }\n\n  recommandationLabel() {\n    return this.state.recommandation.get(\"RECOMMANDATION\")//.substring(0, 38) + \"...\"\n  }\n\n  render() {\n    return (\n      <div onClick={() => this.state.basketMethod(this.state.recommandation.get(\"RECOMMANDATION\"))}>\n        <div\n          className=\"movie-card\"\n          style={{backgroundColor: this.getColor()}}\n          onMouseEnter={this.handleEnter}\n          onMouseLeave={this.handleLeave}\n        >\n          \n            <p className=\"recommandationLabel\">\n              {this.recommandationLabel()}\n            </p>\n          {this.state.isHovering && (\n            <h3 className=\"movie-title\">\n            </h3>\n          )}\n        </div>\n        </div>\n      // </Link>\n    );\n  }\n}\n\nexport default Recommandation\n","/Users/tristanbilot/Desktop/Design4green/design4green/src/Components/Cart.js",["71"],"import React from \"react\";\nimport './css/Cart.css';\n\n\nfunction _defineProperty(obj, key, value) {\n    if (key in obj)\n    {\n        Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); }\n    else\n    {\n        obj[key] = value;\n    }\n    return obj;\n}\n\nfunction Header(props) {\n  return React.createElement(\"header\", {\n    className: \"container\"\n  }, React.createElement(\"h1\", null, \"Panier\"), React.createElement(\"ul\", {\n    className: \"breadcrumb\"\n  }, React.createElement(\"li\", null, \"Accueil\"), React.createElement(\"li\", null, \"Panier\")), \n);\n}\n\nfunction ProductList(props) {\n  return React.createElement(\"section\", {\n    className: \"container\"\n  }, React.createElement(\"ul\", {\n    className: \"products cart-scrollable-list\",\n    divid: \"\"\n  }, props.products.map((product, index) => {\n    let isMandatory = product.mandatory\n    return React.createElement(\"li\", {\n      className: \"row\",\n      key: index\n    }, React.createElement(\"div\", {\n      className: \"col left centered-div \" + (isMandatory ? \"isMandatory\" : \"\")\n    }, React.createElement(\"div\", {\n      className: \"detail\"\n    }, React.createElement(\"div\", {\n      className: \"name\"\n    }, React.createElement(\"a\", {\n      href: \"#\"\n    }, product.id)), React.createElement(\"div\", {\n      className: \"description\"\n    }, product.useCase), React.createElement(\"div\", {\n      className: \"col right\"\n    }, React.createElement(\"div\", {\n      className: \"remove\"\n    }, React.createElement(\"div\", {\n      onClick: props.onRemoveProduct.bind(this, index),\n      version: \"1.1\",\n      id: \"oula\",\n      className: \"close\",\n      x: \"0px\",\n      y: \"0px\",\n      viewBox: \"0 0 200 200\",\n      enableBackground: \"new 0 0 60 60\"\n    }, React.createElement(\"polygon\", {\n      points: \"38.936,23.561 36.814,21.439 30.562,27.691 24.311,21.439 22.189,23.561 28.441,29.812 22.189,36.064 24.311,38.186 30.562,31.934 36.814,38.186 38.936,36.064 32.684,29.812\"\n    })))))));\n  })));\n}\n\n\nclass Cart extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"onRemoveProduct\", i => {\n      const products = this.state.products.filter((product, index) => {\n        return index != i;\n      });\n      this.setState({\n        products\n      });\n    });\n\n    this.state = {\n      products: [{\n        image: \"https://via.placeholder.com/200x150\",\n        name: \"PRODUCT ITEM NUMBER 1\",\n        description: \"Description for product item number 1\",\n        quantity: 2\n      }, {\n        image: \"https://via.placeholder.com/200x150\",\n        name: \"PRODUCT ITEM NUMBER 2\",\n        description: \"Description for product item number 1\",\n        quantity: 1\n      }],\n      tax: 5,\n      basket: props.basket,\n    };\n  }\n\n  componentWillReceiveProps(newProps) {\n    this.setState({\n        basket: newProps.basket,\n    })\n}\n\n  render() {\n    const products = this.state.basket;\n    return React.createElement(\"div\", null, React.createElement(Header, {\n      products: products\n    }), products.length > 0 ? React.createElement(\"div\", null, React.createElement(ProductList, {\n      products: products,\n      onRemoveProduct: this.onRemoveProduct\n    })) : React.createElement(\"div\", {\n      className: \"empty-product\"\n    }, React.createElement(\"h3\", null, \"Votre panier est vide.\"), React.createElement(\"button\", null, \"Shopping now\")));\n  }\n\n}\n\n//ReactDOM.render( React.createElement(Cart, null), document.getElementById(\"ShopCart\"));\n\nexport default Cart;","/Users/tristanbilot/Desktop/Design4green/design4green/src/Components/BasketPage.js",[],"/Users/tristanbilot/Desktop/Design4green/design4green/src/Components/GridCriteres.js",[],"/Users/tristanbilot/Desktop/Design4green/design4green/src/Components/Critere.js",[],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":6,"column":8,"nodeType":"78","messageId":"79","endLine":6,"endColumn":20},{"ruleId":"80","severity":1,"message":"81","line":1,"column":1,"nodeType":"82","messageId":"83","endLine":1,"endColumn":14,"fix":"84"},{"ruleId":"85","severity":1,"message":"86","line":103,"column":48,"nodeType":"87","messageId":"88","endLine":103,"endColumn":50},{"ruleId":"89","severity":1,"message":"90","line":232,"column":625,"nodeType":"91","messageId":"92","endLine":232,"endColumn":639},{"ruleId":"93","severity":1,"message":"94","line":7,"column":5,"nodeType":"95","messageId":"96","endLine":9,"endColumn":6},{"ruleId":"76","severity":1,"message":"97","line":2,"column":10,"nodeType":"78","messageId":"79","endLine":2,"endColumn":14},{"ruleId":"85","severity":1,"message":"86","line":72,"column":22,"nodeType":"87","messageId":"88","endLine":72,"endColumn":24},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"no-unused-vars","'GridCriteres' is defined but never used.","Identifier","unusedVar","strict","'use strict' is unnecessary inside of modules.","ExpressionStatement","module",{"range":"100","text":"101"},"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Link' is defined but never used.","no-global-assign","no-unsafe-negation",[0,13],""]