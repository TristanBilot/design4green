{"ast":null,"code":"import { PointF, PdfColor, PdfPen, PdfSolidBrush, PdfStandardFont, PdfStringFormat, PdfVerticalAlignment, PdfTextAlignment, PdfWordWrapType } from '@syncfusion/ej2-pdf-export';\nimport { extend, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { pixelToPoint } from '../base/utils';\n/**\n */\n\nvar PdfTimeline =\n/** @class */\nfunction () {\n  function PdfTimeline(gantt) {\n    this.width = 0;\n    this.gantt = gantt;\n    this.parent = gantt.parent;\n    this.topTierPoint = new PointF();\n    this.bottomTierPoint = new PointF();\n    this.topTierIndex = 0;\n    this.bottomTierIndex = 0;\n    this.prevTopTierIndex = 0;\n    this.prevBottomTierIndex = 0;\n  }\n  /**\n   * @private\n   * @param {PdfPage} page .\n   * @param {PointF} startPoint .\n   * @param {TimelineDetails} detail .\n   * @returns {void}\n   */\n\n\n  PdfTimeline.prototype.drawTimeline = function (page, startPoint, detail) {\n    var remainWidth = Math.floor(detail.totalWidth);\n    var renderWidth = 0;\n    this.topTierPoint.x = startPoint.x;\n    this.topTierPoint.y = startPoint.y;\n    this.prevTopTierIndex = this.topTierIndex;\n    this.prevBottomTierIndex = this.bottomTierIndex;\n\n    while (remainWidth > 0) {\n      var pHeader = this.topTier[this.topTierIndex];\n\n      if (this.topTier.length > this.topTierIndex) {\n        var isCompleted = false;\n\n        if (!this.topTier[this.topTierIndex].isFinished) {\n          if (remainWidth >= pHeader.width) {\n            renderWidth = pHeader.width;\n            pHeader.isFinished = true;\n            pHeader.completedWidth = renderWidth;\n            isCompleted = true;\n          } else {\n            renderWidth = remainWidth;\n            isCompleted = false;\n            pHeader.isFinished = false;\n            pHeader.width = pHeader.width - remainWidth;\n            pHeader.completedWidth = renderWidth;\n          }\n        } //Primary header Event Arguments\n\n        /* eslint-disable-next-line */\n\n\n        this.triggerQueryTimelinecell(page, this.topTierPoint.x, this.topTierPoint.y, this.topTierHeight, renderWidth, pHeader.value, true);\n        this.topTierPoint.x += pixelToPoint(renderWidth);\n        remainWidth -= renderWidth;\n\n        if (isCompleted) {\n          this.topTierIndex++;\n        }\n      } else {\n        remainWidth = 0;\n      }\n    }\n\n    remainWidth = Math.floor(detail.totalWidth);\n    var height = this.parent.timelineModule.isSingleTier ? 0 : this.topTierHeight;\n    this.bottomTierPoint = new PointF(startPoint.x, pixelToPoint(startPoint.y + height));\n\n    while (remainWidth > 0) {\n      var secondHeader = this.bottomTier[this.bottomTierIndex];\n\n      if (this.bottomTier.length > this.bottomTierIndex) {\n        var isCompleted = true;\n        var width = secondHeader.width;\n\n        if (remainWidth < width) {\n          width = remainWidth;\n          isCompleted = false;\n          secondHeader.completedWidth = width;\n        } //Secondary header Event Arguments\n\n        /* eslint-disable-next-line */\n\n\n        this.triggerQueryTimelinecell(page, this.bottomTierPoint.x, this.bottomTierPoint.y, this.bottomTierHeight, width, secondHeader.value, false);\n        this.bottomTierPoint.x = this.bottomTierPoint.x + pixelToPoint(width);\n        remainWidth -= width;\n        secondHeader.completedWidth = width;\n\n        if (isCompleted) {\n          this.bottomTierIndex++;\n        }\n      } else {\n        remainWidth = 0;\n      }\n    }\n  };\n  /**\n   *\n   * @param {PdfPage} page .\n   * @param {PointF} startPoint .\n   * @param {TimelineDetails}  detail .\n   * @returns {void} .\n   * Draw the specific gantt chart side header when the taskbar exceeds the page\n   * @private\n   */\n\n  /* eslint-disable-next-line */\n\n\n  PdfTimeline.prototype.drawPageTimeline = function (page, startPoint, detail) {\n    this.topTierPoint = extend({}, {}, startPoint, true);\n\n    for (var index = this.prevTopTierIndex; index <= this.topTierIndex; index++) {\n      if (this.topTier.length > index) {\n        var pHeader = this.topTier[index];\n\n        if (pHeader.completedWidth > 0) {\n          //Primary header Event Arguments\n\n          /* eslint-disable-next-line */\n          this.triggerQueryTimelinecell(page, this.topTierPoint.x, this.topTierPoint.y, this.topTierHeight, pHeader.completedWidth, pHeader.value, true);\n          this.topTierPoint.x += pixelToPoint(pHeader.completedWidth);\n        }\n      }\n    }\n\n    this.bottomTierPoint.x = startPoint.x;\n    this.bottomTierPoint.y = pixelToPoint(startPoint.y + this.topTierHeight);\n\n    for (var index = this.prevBottomTierIndex; index <= this.bottomTierIndex; index++) {\n      if (this.bottomTier.length > index) {\n        var secondHeader = this.bottomTier[index];\n\n        if (secondHeader.completedWidth > 0) {\n          //Secondary header Event Arguments\n\n          /* eslint-disable-next-line */\n          this.triggerQueryTimelinecell(page, this.bottomTierPoint.x, this.bottomTierPoint.y, this.bottomTierHeight, secondHeader.width, secondHeader.value, false);\n          this.bottomTierPoint.x = this.bottomTierPoint.x + pixelToPoint(secondHeader.width);\n        }\n      }\n    }\n  };\n  /**\n   * Method to trigger pdf query timelinecell event\n   */\n\n  /* eslint-disable-next-line */\n\n\n  PdfTimeline.prototype.triggerQueryTimelinecell = function (page, x, y, height, width, value, isTopTier) {\n    var graphics = page.graphics;\n    var timelineStyle = {};\n    var ganttStyle = this.gantt.ganttStyle;\n    timelineStyle.borderColor = new PdfColor(ganttStyle.timeline.borderColor);\n    timelineStyle.fontColor = new PdfColor(ganttStyle.timeline.fontColor);\n    timelineStyle.fontSize = ganttStyle.timeline.fontSize;\n    timelineStyle.fontStyle = ganttStyle.timeline.fontStyle;\n    timelineStyle.backgroundColor = new PdfColor(ganttStyle.timeline.backgroundColor);\n\n    if (ganttStyle.timeline.padding) {\n      timelineStyle.padding = ganttStyle.timeline.padding;\n    }\n\n    var format = new PdfStringFormat();\n\n    if (isNullOrUndefined(ganttStyle.timeline.format)) {\n      if (isTopTier) {\n        format.lineAlignment = PdfVerticalAlignment.Middle;\n        format.alignment = PdfTextAlignment.Left;\n      } else {\n        format.lineAlignment = PdfVerticalAlignment.Middle;\n        format.alignment = PdfTextAlignment.Center;\n        format.wordWrap = PdfWordWrapType.Character;\n      }\n    } else {\n      format = ganttStyle.timeline.format;\n    }\n\n    timelineStyle.format = format;\n    var eventArgs = {\n      timelineCell: timelineStyle,\n      value: value\n    };\n\n    if (this.parent.pdfQueryTimelineCellInfo) {\n      this.parent.trigger('pdfQueryTimelineCellInfo', eventArgs);\n    }\n\n    var e = eventArgs.timelineCell;\n    var rectPen = new PdfPen(eventArgs.timelineCell.borderColor);\n    var rectBrush = new PdfSolidBrush(eventArgs.timelineCell.backgroundColor);\n    graphics.drawRectangle(rectPen, rectBrush, x, y, pixelToPoint(width), pixelToPoint(height));\n    var font = new PdfStandardFont(ganttStyle.fontFamily, e.fontSize, e.fontStyle);\n    var textBrush = new PdfSolidBrush(eventArgs.timelineCell.fontColor);\n    var pLeft = ganttStyle.timeline.padding ? eventArgs.timelineCell.padding.left : 0;\n    var pTop = ganttStyle.timeline.padding ? eventArgs.timelineCell.padding.top : 0;\n    /* eslint-disable-next-line */\n\n    graphics.drawString(eventArgs.value, font, null, textBrush, x + pLeft, y + pTop, pixelToPoint(width), pixelToPoint(height), e.format);\n  };\n\n  return PdfTimeline;\n}();\n\nexport { PdfTimeline };","map":{"version":3,"sources":["/Users/tristanbilot/Desktop/Design4green/design4green/node_modules/@syncfusion/ej2-gantt/src/gantt/export/pdf-timeline.js"],"names":["PointF","PdfColor","PdfPen","PdfSolidBrush","PdfStandardFont","PdfStringFormat","PdfVerticalAlignment","PdfTextAlignment","PdfWordWrapType","extend","isNullOrUndefined","pixelToPoint","PdfTimeline","gantt","width","parent","topTierPoint","bottomTierPoint","topTierIndex","bottomTierIndex","prevTopTierIndex","prevBottomTierIndex","prototype","drawTimeline","page","startPoint","detail","remainWidth","Math","floor","totalWidth","renderWidth","x","y","pHeader","topTier","length","isCompleted","isFinished","completedWidth","triggerQueryTimelinecell","topTierHeight","value","height","timelineModule","isSingleTier","secondHeader","bottomTier","bottomTierHeight","drawPageTimeline","index","isTopTier","graphics","timelineStyle","ganttStyle","borderColor","timeline","fontColor","fontSize","fontStyle","backgroundColor","padding","format","lineAlignment","Middle","alignment","Left","Center","wordWrap","Character","eventArgs","timelineCell","pdfQueryTimelineCellInfo","trigger","e","rectPen","rectBrush","drawRectangle","font","fontFamily","textBrush","pLeft","left","pTop","top","drawString"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,QAAjB,EAA2BC,MAA3B,EAAmCC,aAAnC,EAAkDC,eAAlD,EAAmEC,eAAnE,EAAoFC,oBAApF,EAA0GC,gBAA1G,EAA4HC,eAA5H,QAAmJ,4BAAnJ;AACA,SAASC,MAAT,EAAiBC,iBAAjB,QAA0C,sBAA1C;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA;AACA;;AACA,IAAIC,WAAW;AAAG;AAAe,YAAY;AACzC,WAASA,WAAT,CAAqBC,KAArB,EAA4B;AACxB,SAAKC,KAAL,GAAa,CAAb;AACA,SAAKD,KAAL,GAAaA,KAAb;AACA,SAAKE,MAAL,GAAcF,KAAK,CAACE,MAApB;AACA,SAAKC,YAAL,GAAoB,IAAIhB,MAAJ,EAApB;AACA,SAAKiB,eAAL,GAAuB,IAAIjB,MAAJ,EAAvB;AACA,SAAKkB,YAAL,GAAoB,CAApB;AACA,SAAKC,eAAL,GAAuB,CAAvB;AACA,SAAKC,gBAAL,GAAwB,CAAxB;AACA,SAAKC,mBAAL,GAA2B,CAA3B;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;AACIT,EAAAA,WAAW,CAACU,SAAZ,CAAsBC,YAAtB,GAAqC,UAAUC,IAAV,EAAgBC,UAAhB,EAA4BC,MAA5B,EAAoC;AACrE,QAAIC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWH,MAAM,CAACI,UAAlB,CAAlB;AACA,QAAIC,WAAW,GAAG,CAAlB;AACA,SAAKf,YAAL,CAAkBgB,CAAlB,GAAsBP,UAAU,CAACO,CAAjC;AACA,SAAKhB,YAAL,CAAkBiB,CAAlB,GAAsBR,UAAU,CAACQ,CAAjC;AACA,SAAKb,gBAAL,GAAwB,KAAKF,YAA7B;AACA,SAAKG,mBAAL,GAA2B,KAAKF,eAAhC;;AACA,WAAOQ,WAAW,GAAG,CAArB,EAAwB;AACpB,UAAIO,OAAO,GAAG,KAAKC,OAAL,CAAa,KAAKjB,YAAlB,CAAd;;AACA,UAAI,KAAKiB,OAAL,CAAaC,MAAb,GAAsB,KAAKlB,YAA/B,EAA6C;AACzC,YAAImB,WAAW,GAAG,KAAlB;;AACA,YAAI,CAAC,KAAKF,OAAL,CAAa,KAAKjB,YAAlB,EAAgCoB,UAArC,EAAiD;AAC7C,cAAIX,WAAW,IAAIO,OAAO,CAACpB,KAA3B,EAAkC;AAC9BiB,YAAAA,WAAW,GAAGG,OAAO,CAACpB,KAAtB;AACAoB,YAAAA,OAAO,CAACI,UAAR,GAAqB,IAArB;AACAJ,YAAAA,OAAO,CAACK,cAAR,GAAyBR,WAAzB;AACAM,YAAAA,WAAW,GAAG,IAAd;AACH,WALD,MAMK;AACDN,YAAAA,WAAW,GAAGJ,WAAd;AACAU,YAAAA,WAAW,GAAG,KAAd;AACAH,YAAAA,OAAO,CAACI,UAAR,GAAqB,KAArB;AACAJ,YAAAA,OAAO,CAACpB,KAAR,GAAgBoB,OAAO,CAACpB,KAAR,GAAgBa,WAAhC;AACAO,YAAAA,OAAO,CAACK,cAAR,GAAyBR,WAAzB;AACH;AACJ,SAhBwC,CAiBzC;;AACA;;;AACA,aAAKS,wBAAL,CAA8BhB,IAA9B,EAAoC,KAAKR,YAAL,CAAkBgB,CAAtD,EAAyD,KAAKhB,YAAL,CAAkBiB,CAA3E,EAA8E,KAAKQ,aAAnF,EAAkGV,WAAlG,EAA+GG,OAAO,CAACQ,KAAvH,EAA8H,IAA9H;AACA,aAAK1B,YAAL,CAAkBgB,CAAlB,IAAuBrB,YAAY,CAACoB,WAAD,CAAnC;AACAJ,QAAAA,WAAW,IAAII,WAAf;;AACA,YAAIM,WAAJ,EAAiB;AACb,eAAKnB,YAAL;AACH;AACJ,OAzBD,MA0BK;AACDS,QAAAA,WAAW,GAAG,CAAd;AACH;AACJ;;AACDA,IAAAA,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWH,MAAM,CAACI,UAAlB,CAAd;AACA,QAAIa,MAAM,GAAG,KAAK5B,MAAL,CAAY6B,cAAZ,CAA2BC,YAA3B,GAA0C,CAA1C,GAA8C,KAAKJ,aAAhE;AACA,SAAKxB,eAAL,GAAuB,IAAIjB,MAAJ,CAAWyB,UAAU,CAACO,CAAtB,EAAyBrB,YAAY,CAACc,UAAU,CAACQ,CAAX,GAAeU,MAAhB,CAArC,CAAvB;;AACA,WAAOhB,WAAW,GAAG,CAArB,EAAwB;AACpB,UAAImB,YAAY,GAAG,KAAKC,UAAL,CAAgB,KAAK5B,eAArB,CAAnB;;AACA,UAAI,KAAK4B,UAAL,CAAgBX,MAAhB,GAAyB,KAAKjB,eAAlC,EAAmD;AAC/C,YAAIkB,WAAW,GAAG,IAAlB;AACA,YAAIvB,KAAK,GAAGgC,YAAY,CAAChC,KAAzB;;AACA,YAAIa,WAAW,GAAGb,KAAlB,EAAyB;AACrBA,UAAAA,KAAK,GAAGa,WAAR;AACAU,UAAAA,WAAW,GAAG,KAAd;AACAS,UAAAA,YAAY,CAACP,cAAb,GAA8BzB,KAA9B;AACH,SAP8C,CAQ/C;;AACA;;;AACA,aAAK0B,wBAAL,CAA8BhB,IAA9B,EAAoC,KAAKP,eAAL,CAAqBe,CAAzD,EAA4D,KAAKf,eAAL,CAAqBgB,CAAjF,EAAoF,KAAKe,gBAAzF,EAA2GlC,KAA3G,EAAkHgC,YAAY,CAACJ,KAA/H,EAAsI,KAAtI;AACA,aAAKzB,eAAL,CAAqBe,CAArB,GAAyB,KAAKf,eAAL,CAAqBe,CAArB,GAAyBrB,YAAY,CAACG,KAAD,CAA9D;AACAa,QAAAA,WAAW,IAAIb,KAAf;AACAgC,QAAAA,YAAY,CAACP,cAAb,GAA8BzB,KAA9B;;AACA,YAAIuB,WAAJ,EAAiB;AACb,eAAKlB,eAAL;AACH;AACJ,OAjBD,MAkBK;AACDQ,QAAAA,WAAW,GAAG,CAAd;AACH;AACJ;AACJ,GAlED;AAmEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACI;;;AACAf,EAAAA,WAAW,CAACU,SAAZ,CAAsB2B,gBAAtB,GAAyC,UAAUzB,IAAV,EAAgBC,UAAhB,EAA4BC,MAA5B,EAAoC;AACzE,SAAKV,YAAL,GAAoBP,MAAM,CAAC,EAAD,EAAK,EAAL,EAASgB,UAAT,EAAqB,IAArB,CAA1B;;AACA,SAAK,IAAIyB,KAAK,GAAG,KAAK9B,gBAAtB,EAAwC8B,KAAK,IAAI,KAAKhC,YAAtD,EAAoEgC,KAAK,EAAzE,EAA6E;AACzE,UAAI,KAAKf,OAAL,CAAaC,MAAb,GAAsBc,KAA1B,EAAiC;AAC7B,YAAIhB,OAAO,GAAG,KAAKC,OAAL,CAAae,KAAb,CAAd;;AACA,YAAIhB,OAAO,CAACK,cAAR,GAAyB,CAA7B,EAAgC;AAC5B;;AACA;AACA,eAAKC,wBAAL,CAA8BhB,IAA9B,EAAoC,KAAKR,YAAL,CAAkBgB,CAAtD,EAAyD,KAAKhB,YAAL,CAAkBiB,CAA3E,EAA8E,KAAKQ,aAAnF,EAAkGP,OAAO,CAACK,cAA1G,EAA0HL,OAAO,CAACQ,KAAlI,EAAyI,IAAzI;AACA,eAAK1B,YAAL,CAAkBgB,CAAlB,IAAuBrB,YAAY,CAACuB,OAAO,CAACK,cAAT,CAAnC;AACH;AACJ;AACJ;;AACD,SAAKtB,eAAL,CAAqBe,CAArB,GAAyBP,UAAU,CAACO,CAApC;AACA,SAAKf,eAAL,CAAqBgB,CAArB,GAAyBtB,YAAY,CAACc,UAAU,CAACQ,CAAX,GAAe,KAAKQ,aAArB,CAArC;;AACA,SAAK,IAAIS,KAAK,GAAG,KAAK7B,mBAAtB,EAA2C6B,KAAK,IAAI,KAAK/B,eAAzD,EAA0E+B,KAAK,EAA/E,EAAmF;AAC/E,UAAI,KAAKH,UAAL,CAAgBX,MAAhB,GAAyBc,KAA7B,EAAoC;AAChC,YAAIJ,YAAY,GAAG,KAAKC,UAAL,CAAgBG,KAAhB,CAAnB;;AACA,YAAIJ,YAAY,CAACP,cAAb,GAA8B,CAAlC,EAAqC;AACjC;;AACA;AACA,eAAKC,wBAAL,CAA8BhB,IAA9B,EAAoC,KAAKP,eAAL,CAAqBe,CAAzD,EAA4D,KAAKf,eAAL,CAAqBgB,CAAjF,EAAoF,KAAKe,gBAAzF,EAA2GF,YAAY,CAAChC,KAAxH,EAA+HgC,YAAY,CAACJ,KAA5I,EAAmJ,KAAnJ;AACA,eAAKzB,eAAL,CAAqBe,CAArB,GAAyB,KAAKf,eAAL,CAAqBe,CAArB,GAAyBrB,YAAY,CAACmC,YAAY,CAAChC,KAAd,CAA9D;AACH;AACJ;AACJ;AACJ,GA1BD;AA2BA;AACJ;AACA;;AACI;;;AACAF,EAAAA,WAAW,CAACU,SAAZ,CAAsBkB,wBAAtB,GAAiD,UAAUhB,IAAV,EAAgBQ,CAAhB,EAAmBC,CAAnB,EAAsBU,MAAtB,EAA8B7B,KAA9B,EAAqC4B,KAArC,EAA4CS,SAA5C,EAAuD;AACpG,QAAIC,QAAQ,GAAG5B,IAAI,CAAC4B,QAApB;AACA,QAAIC,aAAa,GAAG,EAApB;AACA,QAAIC,UAAU,GAAG,KAAKzC,KAAL,CAAWyC,UAA5B;AACAD,IAAAA,aAAa,CAACE,WAAd,GAA4B,IAAItD,QAAJ,CAAaqD,UAAU,CAACE,QAAX,CAAoBD,WAAjC,CAA5B;AACAF,IAAAA,aAAa,CAACI,SAAd,GAA0B,IAAIxD,QAAJ,CAAaqD,UAAU,CAACE,QAAX,CAAoBC,SAAjC,CAA1B;AACAJ,IAAAA,aAAa,CAACK,QAAd,GAAyBJ,UAAU,CAACE,QAAX,CAAoBE,QAA7C;AACAL,IAAAA,aAAa,CAACM,SAAd,GAA0BL,UAAU,CAACE,QAAX,CAAoBG,SAA9C;AACAN,IAAAA,aAAa,CAACO,eAAd,GAAgC,IAAI3D,QAAJ,CAAaqD,UAAU,CAACE,QAAX,CAAoBI,eAAjC,CAAhC;;AACA,QAAIN,UAAU,CAACE,QAAX,CAAoBK,OAAxB,EAAiC;AAC7BR,MAAAA,aAAa,CAACQ,OAAd,GAAwBP,UAAU,CAACE,QAAX,CAAoBK,OAA5C;AACH;;AACD,QAAIC,MAAM,GAAG,IAAIzD,eAAJ,EAAb;;AACA,QAAIK,iBAAiB,CAAC4C,UAAU,CAACE,QAAX,CAAoBM,MAArB,CAArB,EAAmD;AAC/C,UAAIX,SAAJ,EAAe;AACXW,QAAAA,MAAM,CAACC,aAAP,GAAuBzD,oBAAoB,CAAC0D,MAA5C;AACAF,QAAAA,MAAM,CAACG,SAAP,GAAmB1D,gBAAgB,CAAC2D,IAApC;AACH,OAHD,MAIK;AACDJ,QAAAA,MAAM,CAACC,aAAP,GAAuBzD,oBAAoB,CAAC0D,MAA5C;AACAF,QAAAA,MAAM,CAACG,SAAP,GAAmB1D,gBAAgB,CAAC4D,MAApC;AACAL,QAAAA,MAAM,CAACM,QAAP,GAAkB5D,eAAe,CAAC6D,SAAlC;AACH;AACJ,KAVD,MAWK;AACDP,MAAAA,MAAM,GAAGR,UAAU,CAACE,QAAX,CAAoBM,MAA7B;AACH;;AACDT,IAAAA,aAAa,CAACS,MAAd,GAAuBA,MAAvB;AACA,QAAIQ,SAAS,GAAG;AACZC,MAAAA,YAAY,EAAElB,aADF;AAEZX,MAAAA,KAAK,EAAEA;AAFK,KAAhB;;AAIA,QAAI,KAAK3B,MAAL,CAAYyD,wBAAhB,EAA0C;AACtC,WAAKzD,MAAL,CAAY0D,OAAZ,CAAoB,0BAApB,EAAgDH,SAAhD;AACH;;AACD,QAAII,CAAC,GAAGJ,SAAS,CAACC,YAAlB;AACA,QAAII,OAAO,GAAG,IAAIzE,MAAJ,CAAWoE,SAAS,CAACC,YAAV,CAAuBhB,WAAlC,CAAd;AACA,QAAIqB,SAAS,GAAG,IAAIzE,aAAJ,CAAkBmE,SAAS,CAACC,YAAV,CAAuBX,eAAzC,CAAhB;AACAR,IAAAA,QAAQ,CAACyB,aAAT,CAAuBF,OAAvB,EAAgCC,SAAhC,EAA2C5C,CAA3C,EAA8CC,CAA9C,EAAiDtB,YAAY,CAACG,KAAD,CAA7D,EAAsEH,YAAY,CAACgC,MAAD,CAAlF;AACA,QAAImC,IAAI,GAAG,IAAI1E,eAAJ,CAAoBkD,UAAU,CAACyB,UAA/B,EAA2CL,CAAC,CAAChB,QAA7C,EAAuDgB,CAAC,CAACf,SAAzD,CAAX;AACA,QAAIqB,SAAS,GAAG,IAAI7E,aAAJ,CAAkBmE,SAAS,CAACC,YAAV,CAAuBd,SAAzC,CAAhB;AACA,QAAIwB,KAAK,GAAG3B,UAAU,CAACE,QAAX,CAAoBK,OAApB,GAA8BS,SAAS,CAACC,YAAV,CAAuBV,OAAvB,CAA+BqB,IAA7D,GAAoE,CAAhF;AACA,QAAIC,IAAI,GAAG7B,UAAU,CAACE,QAAX,CAAoBK,OAApB,GAA8BS,SAAS,CAACC,YAAV,CAAuBV,OAAvB,CAA+BuB,GAA7D,GAAmE,CAA9E;AACA;;AACAhC,IAAAA,QAAQ,CAACiC,UAAT,CAAoBf,SAAS,CAAC5B,KAA9B,EAAqCoC,IAArC,EAA2C,IAA3C,EAAiDE,SAAjD,EAA4DhD,CAAC,GAAGiD,KAAhE,EAAuEhD,CAAC,GAAGkD,IAA3E,EAAiFxE,YAAY,CAACG,KAAD,CAA7F,EAAsGH,YAAY,CAACgC,MAAD,CAAlH,EAA4H+B,CAAC,CAACZ,MAA9H;AACH,GA7CD;;AA8CA,SAAOlD,WAAP;AACH,CA9KgC,EAAjC;;AA+KA,SAASA,WAAT","sourcesContent":["import { PointF, PdfColor, PdfPen, PdfSolidBrush, PdfStandardFont, PdfStringFormat, PdfVerticalAlignment, PdfTextAlignment, PdfWordWrapType } from '@syncfusion/ej2-pdf-export';\nimport { extend, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { pixelToPoint } from '../base/utils';\n/**\n */\nvar PdfTimeline = /** @class */ (function () {\n    function PdfTimeline(gantt) {\n        this.width = 0;\n        this.gantt = gantt;\n        this.parent = gantt.parent;\n        this.topTierPoint = new PointF();\n        this.bottomTierPoint = new PointF();\n        this.topTierIndex = 0;\n        this.bottomTierIndex = 0;\n        this.prevTopTierIndex = 0;\n        this.prevBottomTierIndex = 0;\n    }\n    /**\n     * @private\n     * @param {PdfPage} page .\n     * @param {PointF} startPoint .\n     * @param {TimelineDetails} detail .\n     * @returns {void}\n     */\n    PdfTimeline.prototype.drawTimeline = function (page, startPoint, detail) {\n        var remainWidth = Math.floor(detail.totalWidth);\n        var renderWidth = 0;\n        this.topTierPoint.x = startPoint.x;\n        this.topTierPoint.y = startPoint.y;\n        this.prevTopTierIndex = this.topTierIndex;\n        this.prevBottomTierIndex = this.bottomTierIndex;\n        while (remainWidth > 0) {\n            var pHeader = this.topTier[this.topTierIndex];\n            if (this.topTier.length > this.topTierIndex) {\n                var isCompleted = false;\n                if (!this.topTier[this.topTierIndex].isFinished) {\n                    if (remainWidth >= pHeader.width) {\n                        renderWidth = pHeader.width;\n                        pHeader.isFinished = true;\n                        pHeader.completedWidth = renderWidth;\n                        isCompleted = true;\n                    }\n                    else {\n                        renderWidth = remainWidth;\n                        isCompleted = false;\n                        pHeader.isFinished = false;\n                        pHeader.width = pHeader.width - remainWidth;\n                        pHeader.completedWidth = renderWidth;\n                    }\n                }\n                //Primary header Event Arguments\n                /* eslint-disable-next-line */\n                this.triggerQueryTimelinecell(page, this.topTierPoint.x, this.topTierPoint.y, this.topTierHeight, renderWidth, pHeader.value, true);\n                this.topTierPoint.x += pixelToPoint(renderWidth);\n                remainWidth -= renderWidth;\n                if (isCompleted) {\n                    this.topTierIndex++;\n                }\n            }\n            else {\n                remainWidth = 0;\n            }\n        }\n        remainWidth = Math.floor(detail.totalWidth);\n        var height = this.parent.timelineModule.isSingleTier ? 0 : this.topTierHeight;\n        this.bottomTierPoint = new PointF(startPoint.x, pixelToPoint(startPoint.y + height));\n        while (remainWidth > 0) {\n            var secondHeader = this.bottomTier[this.bottomTierIndex];\n            if (this.bottomTier.length > this.bottomTierIndex) {\n                var isCompleted = true;\n                var width = secondHeader.width;\n                if (remainWidth < width) {\n                    width = remainWidth;\n                    isCompleted = false;\n                    secondHeader.completedWidth = width;\n                }\n                //Secondary header Event Arguments\n                /* eslint-disable-next-line */\n                this.triggerQueryTimelinecell(page, this.bottomTierPoint.x, this.bottomTierPoint.y, this.bottomTierHeight, width, secondHeader.value, false);\n                this.bottomTierPoint.x = this.bottomTierPoint.x + pixelToPoint(width);\n                remainWidth -= width;\n                secondHeader.completedWidth = width;\n                if (isCompleted) {\n                    this.bottomTierIndex++;\n                }\n            }\n            else {\n                remainWidth = 0;\n            }\n        }\n    };\n    /**\n     *\n     * @param {PdfPage} page .\n     * @param {PointF} startPoint .\n     * @param {TimelineDetails}  detail .\n     * @returns {void} .\n     * Draw the specific gantt chart side header when the taskbar exceeds the page\n     * @private\n     */\n    /* eslint-disable-next-line */\n    PdfTimeline.prototype.drawPageTimeline = function (page, startPoint, detail) {\n        this.topTierPoint = extend({}, {}, startPoint, true);\n        for (var index = this.prevTopTierIndex; index <= this.topTierIndex; index++) {\n            if (this.topTier.length > index) {\n                var pHeader = this.topTier[index];\n                if (pHeader.completedWidth > 0) {\n                    //Primary header Event Arguments\n                    /* eslint-disable-next-line */\n                    this.triggerQueryTimelinecell(page, this.topTierPoint.x, this.topTierPoint.y, this.topTierHeight, pHeader.completedWidth, pHeader.value, true);\n                    this.topTierPoint.x += pixelToPoint(pHeader.completedWidth);\n                }\n            }\n        }\n        this.bottomTierPoint.x = startPoint.x;\n        this.bottomTierPoint.y = pixelToPoint(startPoint.y + this.topTierHeight);\n        for (var index = this.prevBottomTierIndex; index <= this.bottomTierIndex; index++) {\n            if (this.bottomTier.length > index) {\n                var secondHeader = this.bottomTier[index];\n                if (secondHeader.completedWidth > 0) {\n                    //Secondary header Event Arguments\n                    /* eslint-disable-next-line */\n                    this.triggerQueryTimelinecell(page, this.bottomTierPoint.x, this.bottomTierPoint.y, this.bottomTierHeight, secondHeader.width, secondHeader.value, false);\n                    this.bottomTierPoint.x = this.bottomTierPoint.x + pixelToPoint(secondHeader.width);\n                }\n            }\n        }\n    };\n    /**\n     * Method to trigger pdf query timelinecell event\n     */\n    /* eslint-disable-next-line */\n    PdfTimeline.prototype.triggerQueryTimelinecell = function (page, x, y, height, width, value, isTopTier) {\n        var graphics = page.graphics;\n        var timelineStyle = {};\n        var ganttStyle = this.gantt.ganttStyle;\n        timelineStyle.borderColor = new PdfColor(ganttStyle.timeline.borderColor);\n        timelineStyle.fontColor = new PdfColor(ganttStyle.timeline.fontColor);\n        timelineStyle.fontSize = ganttStyle.timeline.fontSize;\n        timelineStyle.fontStyle = ganttStyle.timeline.fontStyle;\n        timelineStyle.backgroundColor = new PdfColor(ganttStyle.timeline.backgroundColor);\n        if (ganttStyle.timeline.padding) {\n            timelineStyle.padding = ganttStyle.timeline.padding;\n        }\n        var format = new PdfStringFormat();\n        if (isNullOrUndefined(ganttStyle.timeline.format)) {\n            if (isTopTier) {\n                format.lineAlignment = PdfVerticalAlignment.Middle;\n                format.alignment = PdfTextAlignment.Left;\n            }\n            else {\n                format.lineAlignment = PdfVerticalAlignment.Middle;\n                format.alignment = PdfTextAlignment.Center;\n                format.wordWrap = PdfWordWrapType.Character;\n            }\n        }\n        else {\n            format = ganttStyle.timeline.format;\n        }\n        timelineStyle.format = format;\n        var eventArgs = {\n            timelineCell: timelineStyle,\n            value: value\n        };\n        if (this.parent.pdfQueryTimelineCellInfo) {\n            this.parent.trigger('pdfQueryTimelineCellInfo', eventArgs);\n        }\n        var e = eventArgs.timelineCell;\n        var rectPen = new PdfPen(eventArgs.timelineCell.borderColor);\n        var rectBrush = new PdfSolidBrush(eventArgs.timelineCell.backgroundColor);\n        graphics.drawRectangle(rectPen, rectBrush, x, y, pixelToPoint(width), pixelToPoint(height));\n        var font = new PdfStandardFont(ganttStyle.fontFamily, e.fontSize, e.fontStyle);\n        var textBrush = new PdfSolidBrush(eventArgs.timelineCell.fontColor);\n        var pLeft = ganttStyle.timeline.padding ? eventArgs.timelineCell.padding.left : 0;\n        var pTop = ganttStyle.timeline.padding ? eventArgs.timelineCell.padding.top : 0;\n        /* eslint-disable-next-line */\n        graphics.drawString(eventArgs.value, font, null, textBrush, x + pLeft, y + pTop, pixelToPoint(width), pixelToPoint(height), e.format);\n    };\n    return PdfTimeline;\n}());\nexport { PdfTimeline };\n"]},"metadata":{},"sourceType":"module"}