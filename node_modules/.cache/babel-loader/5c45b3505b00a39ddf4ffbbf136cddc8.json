{"ast":null,"code":"import { createElement, formatUnit, remove, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as cls from '../base/css-constants';\n\nvar EventMarker =\n/** @class */\nfunction () {\n  function EventMarker(gantt) {\n    this.parent = gantt;\n    this.eventMarkersContainer = null;\n  }\n  /**\n   * @returns {void} .\n   * @private\n   */\n\n\n  EventMarker.prototype.renderEventMarkers = function () {\n    if (this.parent.eventMarkers && this.parent.eventMarkers.length > 0) {\n      if (!this.parent.ganttChartModule.chartBodyContent.contains(this.eventMarkersContainer)) {\n        this.eventMarkersContainer = createElement('div', {\n          className: cls.eventMarkersContainer\n        });\n        this.parent.ganttChartModule.chartBodyContent.appendChild(this.eventMarkersContainer);\n      }\n\n      this.eventMarkersContainer.innerHTML = '';\n      this.getEventMarkersElements(this.eventMarkersContainer);\n    } else {\n      this.removeContainer();\n    }\n  };\n  /**\n   * @returns {void} .\n   * @private\n   */\n\n\n  EventMarker.prototype.removeContainer = function () {\n    if (this.eventMarkersContainer) {\n      remove(this.eventMarkersContainer);\n      this.eventMarkersContainer = null;\n    }\n  };\n  /**\n   * Method to get event markers as html string\n   *\n   * @param {HTMLElement} container .\n   * @returns {void} .\n   */\n\n\n  EventMarker.prototype.getEventMarkersElements = function (container) {\n    var left;\n    var eventMarkerElement;\n    var spanElement;\n    var rightArrow;\n\n    for (var i = 0; i < this.parent.eventMarkers.length; i++) {\n      left = this.parent.dataOperation.getTaskLeft(this.parent.dateValidationModule.getDateFromFormat(this.parent.eventMarkers[i].day, true), false);\n      eventMarkerElement = createElement('div', {\n        className: cls.eventMarkersChild,\n        styles: \"left:\" + left + \"px;  height:100%;\",\n        id: 'stripline' + i\n      });\n\n      if (this.parent.eventMarkers[i].label) {\n        spanElement = createElement('div', {\n          className: cls.eventMarkersSpan\n        });\n        var property = this.parent.disableHtmlEncode ? 'textContent' : 'innerHTML';\n        spanElement[property] = this.parent.eventMarkers[i].label;\n        eventMarkerElement.appendChild(spanElement);\n        rightArrow = createElement('div', {\n          className: 'e-gantt-right-arrow'\n        });\n        eventMarkerElement.appendChild(rightArrow);\n      }\n\n      if (this.parent.eventMarkers[i].cssClass) {\n        eventMarkerElement.classList.add(this.parent.eventMarkers[i].cssClass);\n      }\n\n      eventMarkerElement.setAttribute('tabindex', '-1');\n\n      if (!isNullOrUndefined(this.parent.eventMarkers[i].day)) {\n        eventMarkerElement.setAttribute('aria-label', this.parent.localeObj.getConstant('eventMarkers') + ' ' + (typeof this.parent.eventMarkers[i].day === 'string' ? this.parent.eventMarkers[i].day : this.parent.getFormatedDate(this.parent.eventMarkers[i].day)) + ' ' + this.parent.eventMarkers[i].label);\n      }\n\n      container.appendChild(eventMarkerElement);\n    }\n  };\n  /**\n   * @returns {void} .\n   * @private\n   */\n\n\n  EventMarker.prototype.updateContainerHeight = function () {\n    if (this.eventMarkersContainer) {\n      this.eventMarkersContainer.style.height = formatUnit(this.parent.getContentHeight());\n    }\n  };\n\n  return EventMarker;\n}();\n\nexport { EventMarker };","map":{"version":3,"sources":["/Users/tristanbilot/Desktop/Design4green/design4green/node_modules/@syncfusion/ej2-gantt/src/gantt/renderer/event-marker.js"],"names":["createElement","formatUnit","remove","isNullOrUndefined","cls","EventMarker","gantt","parent","eventMarkersContainer","prototype","renderEventMarkers","eventMarkers","length","ganttChartModule","chartBodyContent","contains","className","appendChild","innerHTML","getEventMarkersElements","removeContainer","container","left","eventMarkerElement","spanElement","rightArrow","i","dataOperation","getTaskLeft","dateValidationModule","getDateFromFormat","day","eventMarkersChild","styles","id","label","eventMarkersSpan","property","disableHtmlEncode","cssClass","classList","add","setAttribute","localeObj","getConstant","getFormatedDate","updateContainerHeight","style","height","getContentHeight"],"mappings":"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","sourcesContent":["import { createElement, formatUnit, remove, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as cls from '../base/css-constants';\nvar EventMarker = /** @class */ (function () {\n    function EventMarker(gantt) {\n        this.parent = gantt;\n        this.eventMarkersContainer = null;\n    }\n    /**\n     * @returns {void} .\n     * @private\n     */\n    EventMarker.prototype.renderEventMarkers = function () {\n        if (this.parent.eventMarkers && this.parent.eventMarkers.length > 0) {\n            if (!this.parent.ganttChartModule.chartBodyContent.contains(this.eventMarkersContainer)) {\n                this.eventMarkersContainer = createElement('div', {\n                    className: cls.eventMarkersContainer\n                });\n                this.parent.ganttChartModule.chartBodyContent.appendChild(this.eventMarkersContainer);\n            }\n            this.eventMarkersContainer.innerHTML = '';\n            this.getEventMarkersElements(this.eventMarkersContainer);\n        }\n        else {\n            this.removeContainer();\n        }\n    };\n    /**\n     * @returns {void} .\n     * @private\n     */\n    EventMarker.prototype.removeContainer = function () {\n        if (this.eventMarkersContainer) {\n            remove(this.eventMarkersContainer);\n            this.eventMarkersContainer = null;\n        }\n    };\n    /**\n     * Method to get event markers as html string\n     *\n     * @param {HTMLElement} container .\n     * @returns {void} .\n     */\n    EventMarker.prototype.getEventMarkersElements = function (container) {\n        var left;\n        var eventMarkerElement;\n        var spanElement;\n        var rightArrow;\n        for (var i = 0; i < this.parent.eventMarkers.length; i++) {\n            left = this.parent.dataOperation.getTaskLeft(this.parent.dateValidationModule.getDateFromFormat(this.parent.eventMarkers[i].day, true), false);\n            eventMarkerElement = createElement('div', {\n                className: cls.eventMarkersChild, styles: \"left:\" + left + \"px;  height:100%;\",\n                id: 'stripline' + i\n            });\n            if (this.parent.eventMarkers[i].label) {\n                spanElement = createElement('div', {\n                    className: cls.eventMarkersSpan\n                });\n                var property = this.parent.disableHtmlEncode ? 'textContent' : 'innerHTML';\n                spanElement[property] = this.parent.eventMarkers[i].label;\n                eventMarkerElement.appendChild(spanElement);\n                rightArrow = createElement('div', {\n                    className: 'e-gantt-right-arrow'\n                });\n                eventMarkerElement.appendChild(rightArrow);\n            }\n            if (this.parent.eventMarkers[i].cssClass) {\n                eventMarkerElement.classList.add(this.parent.eventMarkers[i].cssClass);\n            }\n            eventMarkerElement.setAttribute('tabindex', '-1');\n            if (!isNullOrUndefined(this.parent.eventMarkers[i].day)) {\n                eventMarkerElement.setAttribute('aria-label', this.parent.localeObj.getConstant('eventMarkers') + ' '\n                    + (typeof this.parent.eventMarkers[i].day === 'string' ?\n                        this.parent.eventMarkers[i].day : this.parent.getFormatedDate(this.parent.eventMarkers[i].day))\n                    + ' ' + this.parent.eventMarkers[i].label);\n            }\n            container.appendChild(eventMarkerElement);\n        }\n    };\n    /**\n     * @returns {void} .\n     * @private\n     */\n    EventMarker.prototype.updateContainerHeight = function () {\n        if (this.eventMarkersContainer) {\n            this.eventMarkersContainer.style.height = formatUnit(this.parent.getContentHeight());\n        }\n    };\n    return EventMarker;\n}());\nexport { EventMarker };\n"]},"metadata":{},"sourceType":"module"}