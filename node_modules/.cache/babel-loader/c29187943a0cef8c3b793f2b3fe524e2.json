{"ast":null,"code":"import { TreeGrid } from '@syncfusion/ej2-treegrid';\nimport { createElement, isNullOrUndefined, getValue, extend, EventHandler, deleteObject } from '@syncfusion/ej2-base';\nimport { setValue } from '@syncfusion/ej2-base';\nimport { Deferred, Query } from '@syncfusion/ej2-data';\nimport { Column as GanttColumn } from '../models/column';\nimport { isCountRequired } from './utils';\n/**\n * TreeGrid related code goes here\n *\n * @param {object} args .\n * @returns {void} .\n */\n\nvar GanttTreeGrid =\n/** @class */\nfunction () {\n  function GanttTreeGrid(parent) {\n    var _this = this;\n\n    this.previousScroll = {\n      top: 0,\n      left: 0\n    };\n\n    this.queryCellInfo = function (args) {\n      _this.parent.trigger('queryCellInfo', args);\n    };\n\n    this.headerCellInfo = function (args) {\n      _this.parent.trigger('headerCellInfo', args);\n    };\n\n    this.rowDataBound = function (args) {\n      _this.parent.trigger('rowDataBound', args);\n    };\n\n    this.columnMenuOpen = function (args) {\n      _this.parent.notify('columnMenuOpen', args);\n\n      _this.parent.trigger('columnMenuOpen', args);\n    };\n\n    this.columnMenuClick = function (args) {\n      _this.parent.trigger('columnMenuClick', args);\n    }; // eslint-disable-next-line valid-jsdoc\n\n\n    this.objectEqualityChecker = function (old, current) {\n      if (old) {\n        var keys = Object.keys(old);\n        var isEqual = true;\n        var excludeKeys = ['Children', 'childRecords', 'taskData', 'uniqueID', 'parentItem', 'parentUniqueID', 'ganttProperties'];\n\n        for (var i = 0; i < keys.length; i++) {\n          /* eslint-disable-next-line */\n          var oldKey = old[keys[i]] instanceof Date ? new Date(old[keys[i]]).getTime() : old[keys[i]];\n          /* eslint-disable-next-line */\n\n          var currentKey = current[keys[i]] instanceof Date ? new Date(current[keys[i]]).getTime() : current[keys[i]];\n\n          if (oldKey !== currentKey && excludeKeys.indexOf(keys[i]) === -1) {\n            _this.parent.modifiedRecords.push(current);\n\n            isEqual = false;\n            break;\n          }\n        }\n\n        return isEqual;\n      } else {\n        return false;\n      }\n    };\n\n    this.parent = parent;\n    this.parent.treeGrid = new TreeGrid();\n    this.parent.treeGrid.allowSelection = false;\n    this.parent.treeGrid.allowKeyboard = this.parent.allowKeyboard;\n    this.parent.treeGrid.enableImmutableMode = this.parent.enableImmutableMode;\n    this.treeGridColumns = [];\n    this.validateGanttColumns();\n    this.addEventListener();\n  }\n\n  GanttTreeGrid.prototype.addEventListener = function () {\n    this.parent.on('renderPanels', this.createContainer, this);\n    this.parent.on('chartScroll', this.updateScrollTop, this);\n    this.parent.on('destroy', this.destroy, this);\n    this.parent.treeGrid.on('renderReactTemplate', this.renderReactTemplate, this);\n  };\n\n  GanttTreeGrid.prototype.renderReactTemplate = function (args) {\n    var portals = 'portals';\n    this.parent[portals] = args;\n    this.parent.renderTemplates();\n  };\n\n  GanttTreeGrid.prototype.createContainer = function () {\n    //let height: number = this.parent.ganttHeight - this.parent.toolbarModule.element.offsetHeight - 46;\n    this.treeGridElement = createElement('div', {\n      id: 'treeGrid' + this.parent.element.id,\n      className: 'e-gantt-tree-grid' //  styles: 'height:' + height + 'px;'\n\n    });\n    var tempHeader = createElement('div', {\n      className: 'e-gantt-temp-header'\n    });\n    this.parent.treeGridPane.appendChild(this.treeGridElement);\n    this.treeGridElement.appendChild(tempHeader);\n    this.parent.treeGridPane.classList.add('e-temp-content');\n  };\n  /**\n   * Method to initiate TreeGrid\n   *\n   * @returns {void} .\n   */\n\n\n  GanttTreeGrid.prototype.renderTreeGrid = function () {\n    this.composeProperties();\n    this.bindEvents();\n    this.parent.treeGrid.appendTo(this.treeGridElement);\n    this.wireEvents();\n  };\n\n  GanttTreeGrid.prototype.composeProperties = function () {\n    this.parent.treeGrid.showColumnMenu = this.parent.showColumnMenu;\n    this.parent.treeGrid.columnMenuItems = this.parent.columnMenuItems;\n    this.parent.treeGrid.childMapping = isNullOrUndefined(this.parent.taskFields.child) ? '' : this.parent.taskFields.child;\n    this.parent.treeGrid.treeColumnIndex = this.parent.treeColumnIndex;\n    this.parent.treeGrid.columns = this.treeGridColumns;\n\n    if (this.parent.dataSource instanceof Object && isCountRequired(this.parent)) {\n      // In order to bind the observable data at load time, hasChildMapping is necessary to be mapped.\n      this.parent.treeGrid.hasChildMapping = 'isParent';\n      var count = getValue('count', this.parent.dataSource);\n      this.parent.treeGrid.dataSource = {\n        result: this.parent.flatData,\n        count: count\n      };\n    } else {\n      this.parent.treeGrid.hasChildMapping = null;\n      this.parent.treeGrid.dataSource = this.parent.flatData;\n    }\n\n    this.parent.treeGrid.expandStateMapping = this.parent.taskFields.expandState;\n    var isGantt = 'isGantt';\n    this.parent.treeGrid[isGantt] = true;\n    this.parent.treeGrid.rowHeight = this.parent.rowHeight;\n    this.parent.treeGrid.gridLines = this.parent.gridLines;\n\n    if (this.parent.searchSettings.fields.length !== 0 || this.parent.searchSettings.key !== '') {\n      this.parent.treeGrid.searchSettings = this.parent.searchSettings;\n    }\n\n    var isJsComponent = 'isJsComponent';\n    this.parent.treeGrid[isJsComponent] = true;\n    var toolbarHeight = 0;\n\n    if (!isNullOrUndefined(this.parent.toolbarModule) && !isNullOrUndefined(this.parent.toolbarModule.element)) {\n      toolbarHeight = this.parent.toolbarModule.element.offsetHeight;\n    }\n\n    this.parent.treeGrid.height = this.parent.ganttHeight - toolbarHeight - 46;\n  };\n\n  GanttTreeGrid.prototype.getContentDiv = function () {\n    return this.treeGridElement.querySelector('.e-content');\n  };\n\n  GanttTreeGrid.prototype.getHeaderDiv = function () {\n    return this.treeGridElement.querySelector('.e-headercontent');\n  };\n\n  GanttTreeGrid.prototype.getScrollbarWidth = function () {\n    var outer = document.createElement('div');\n    outer.style.visibility = 'hidden';\n    outer.style.overflow = 'scroll';\n    outer.style.msOverflowStyle = 'scrollbar';\n    var inner = document.createElement('div');\n    outer.appendChild(inner);\n    this.parent.element.appendChild(outer);\n    var scrollbarWidth = outer.offsetWidth - inner.offsetWidth;\n    outer.parentNode.removeChild(outer);\n    return scrollbarWidth;\n  };\n  /**\n   * @returns {void} .\n   * @private\n   */\n\n\n  GanttTreeGrid.prototype.ensureScrollBar = function () {\n    var content = this.getContentDiv();\n    var headerDiv = this.getHeaderDiv();\n    var scrollWidth = this.getScrollbarWidth();\n    var isMobile = /Android|Mac|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n\n    if (scrollWidth !== 0) {\n      content.style.cssText += 'width: calc(100% + ' + scrollWidth + 'px);';\n    } else {\n      content.classList.add('e-gantt-scroll-padding');\n    }\n\n    if (scrollWidth === 0 && isMobile) {\n      headerDiv.style.cssText += 'width: calc(100% + 17px);';\n    }\n  };\n\n  GanttTreeGrid.prototype.bindEvents = function () {\n    this.parent.treeGrid.dataBound = this.dataBound.bind(this);\n    this.parent.treeGrid.collapsing = this.collapsing.bind(this);\n    this.parent.treeGrid.collapsed = this.collapsed.bind(this);\n    this.parent.treeGrid.expanding = this.expanding.bind(this);\n    this.parent.treeGrid.expanded = this.expanded.bind(this);\n    this.parent.treeGrid.actionBegin = this.actionBegin.bind(this);\n    this.parent.treeGrid.actionComplete = this.treeActionComplete.bind(this);\n    this.parent.treeGrid.created = this.created.bind(this);\n    this.parent.treeGrid.actionFailure = this.actionFailure.bind(this);\n    this.parent.treeGrid.queryCellInfo = this.queryCellInfo.bind(this);\n    this.parent.treeGrid.headerCellInfo = this.headerCellInfo.bind(this);\n    this.parent.treeGrid.rowDataBound = this.rowDataBound.bind(this);\n    this.parent.treeGrid.columnMenuOpen = this.columnMenuOpen.bind(this);\n    this.parent.treeGrid.columnMenuClick = this.columnMenuClick.bind(this);\n    this.parent.treeGrid.beforeDataBound = this.beforeDataBound.bind(this);\n    this.parent.treeGrid.dataStateChange = this.dataStateChange.bind(this);\n  };\n\n  GanttTreeGrid.prototype.beforeDataBound = function (args) {\n    this.parent.updatedRecords = this.parent.virtualScrollModule && this.parent.enableVirtualization ? getValue('virtualScrollModule.visualData', this.parent.treeGrid) : getValue('result', args);\n\n    if (this.parent.virtualScrollModule && this.parent.enableVirtualization) {\n      this.parent.updateContentHeight(args);\n    }\n\n    setValue('contentModule.objectEqualityChecker', this.objectEqualityChecker, this.parent.treeGrid.grid);\n  };\n\n  GanttTreeGrid.prototype.dataBound = function (args) {\n    this.ensureScrollBar();\n    this.parent.treeDataBound(args);\n    this.prevCurrentView = extend([], [], this.parent.currentViewData, true);\n  };\n\n  GanttTreeGrid.prototype.dataStateChange = function (args) {\n    if (args.action && args.action.requestType === 'refresh') {\n      this.parent.treeGrid.dataSource = {\n        result: getValue('result', this.parent.treeGrid.dataSource),\n        count: getValue('count', this.parent.treeGrid.dataSource)\n      };\n    }\n\n    this.parent.trigger('dataStateChange', args);\n  };\n\n  GanttTreeGrid.prototype.collapsing = function (args) {\n    // Collapsing event\n    var callBackPromise = new Deferred();\n\n    if (!this.parent.ganttChartModule.isExpandCollapseFromChart) {\n      var collapsingArgs = this.createExpandCollapseArgs(args);\n      this.parent.ganttChartModule.collapseGanttRow(collapsingArgs);\n      setValue('cancel', getValue('cancel', collapsingArgs), args);\n    }\n  };\n\n  GanttTreeGrid.prototype.expanding = function (args) {\n    // Expanding event\n    var callBackPromise = new Deferred();\n\n    if (!this.parent.ganttChartModule.isExpandCollapseFromChart) {\n      var expandingArgs = this.createExpandCollapseArgs(args);\n      this.parent.ganttChartModule.expandGanttRow(expandingArgs);\n      setValue('cancel', getValue('cancel', expandingArgs), args);\n    }\n  };\n\n  GanttTreeGrid.prototype.collapsed = function (args) {\n    if (!this.parent.ganttChartModule.isExpandCollapseFromChart && !this.parent.isExpandCollapseLevelMethod) {\n      var collapsedArgs = this.createExpandCollapseArgs(args);\n      this.parent.ganttChartModule.collapsedGanttRow(collapsedArgs);\n    }\n  };\n\n  GanttTreeGrid.prototype.expanded = function (args) {\n    if (!this.parent.ganttChartModule.isExpandCollapseFromChart && !this.parent.isExpandCollapseLevelMethod) {\n      if (!args['data'].length) {\n        var expandedArgs = this.createExpandCollapseArgs(args);\n        this.parent.ganttChartModule.expandedGanttRow(expandedArgs);\n      }\n    }\n  };\n\n  GanttTreeGrid.prototype.actionBegin = function (args) {\n    this.parent.notify('actionBegin', args);\n    this.parent.trigger('actionBegin', args);\n  }; // eslint-disable-next-line\n\n\n  GanttTreeGrid.prototype.created = function (args) {\n    this.updateKeyConfigSettings();\n  };\n\n  GanttTreeGrid.prototype.actionFailure = function (args) {\n    this.parent.trigger('actionFailure', args);\n  };\n\n  GanttTreeGrid.prototype.createExpandCollapseArgs = function (args) {\n    var record = getValue('data', args);\n    var gridRow = getValue('row', args);\n    var chartRow;\n    chartRow = this.parent.ganttChartModule.getChartRows()[this.parent.currentViewData.indexOf(record)];\n    var eventArgs = {\n      data: record,\n      gridRow: gridRow,\n      chartRow: chartRow,\n      cancel: false\n    };\n    return eventArgs;\n  };\n\n  GanttTreeGrid.prototype.treeActionComplete = function (args) {\n    var updatedArgs = extend({}, args, true);\n\n    if (getValue('requestType', args) === 'sorting') {\n      this.parent.notify('updateModel', {});\n      deleteObject(updatedArgs, 'isFrozen');\n    } else if (getValue('requestType', args) === 'filtering') {\n      this.parent.notify('updateModel', {});\n      var focussedElement = this.parent.element.querySelector('.e-treegrid');\n      focussedElement.focus();\n    } else if (getValue('type', args) === 'save') {\n      if (this.parent.editModule && this.parent.editModule.cellEditModule) {\n        var data = getValue('data', args);\n\n        if (!isNullOrUndefined(data) && !isNullOrUndefined(this.parent.getTaskByUniqueID(data.uniqueID))) {\n          /* eslint-disable-next-line */\n          this.parent.getTaskByUniqueID(data.uniqueID).taskData[this.parent.taskFields.duration] = data.taskData[this.parent.taskFields.duration];\n\n          if (!isNullOrUndefined(data.taskData[this.parent.taskFields.resourceInfo])) {\n            /* eslint-disable-next-line */\n            this.parent.getTaskByUniqueID(data.uniqueID).taskData[this.parent.taskFields.resourceInfo] = data.taskData[this.parent.taskFields.resourceInfo];\n          }\n        }\n\n        this.parent.editModule.cellEditModule.initiateCellEdit(args, this.currentEditRow);\n        this.currentEditRow = {};\n      }\n    }\n\n    if (getValue('requestType', args) === 'filterafteropen') {\n      this.parent.notify('actionComplete', args);\n    }\n\n    if (getValue('requestType', args) === 'searching') {\n      this.parent.notify('actionComplete', args);\n    }\n\n    if (!isNullOrUndefined(getValue('batchChanges', args)) && !isNullOrUndefined(this.parent.toolbarModule)) {\n      this.parent.toolbarModule.refreshToolbarItems();\n    }\n\n    if (this.parent.isCancelled) {\n      setValue('requestType', 'cancel', updatedArgs);\n      setValue('action', 'CellEditing', updatedArgs);\n      this.parent.isCancelled = false;\n    }\n\n    if (getValue('requestType', args) === 'refresh' && isNullOrUndefined(getValue('type', args)) && this.parent.addDeleteRecord) {\n      if (this.parent.selectedRowIndex != -1) {\n        this.parent.selectRow(this.parent.selectedRowIndex);\n      } else {\n        this.parent.selectRow(0);\n      }\n\n      this.parent.addDeleteRecord = false;\n    }\n\n    this.parent.trigger('actionComplete', updatedArgs);\n  };\n\n  GanttTreeGrid.prototype.updateKeyConfigSettings = function () {\n    delete this.parent.treeGrid.grid.keyboardModule.keyConfigs.delete;\n    delete this.parent.treeGrid.grid.keyboardModule.keyConfigs.insert;\n    delete this.parent.treeGrid.grid.keyboardModule.keyConfigs.upArrow;\n    delete this.parent.treeGrid.grid.keyboardModule.keyConfigs.downArrow;\n    delete this.parent.treeGrid.grid.keyboardModule.keyConfigs.ctrlHome;\n    delete this.parent.treeGrid.grid.keyboardModule.keyConfigs.ctrlEnd;\n    delete this.parent.treeGrid.grid.keyboardModule.keyConfigs.enter;\n    delete this.parent.treeGrid.grid.keyboardModule.keyConfigs.tab;\n    delete this.parent.treeGrid.grid.keyboardModule.keyConfigs.shiftTab;\n    delete this.parent.treeGrid.keyboardModule.keyConfigs.enter;\n    delete this.parent.treeGrid.keyboardModule.keyConfigs.upArrow;\n    delete this.parent.treeGrid.keyboardModule.keyConfigs.downArrow;\n    delete this.parent.treeGrid.keyboardModule.keyConfigs.ctrlShiftUpArrow;\n    delete this.parent.treeGrid.keyboardModule.keyConfigs.ctrlShiftDownArrow;\n    delete this.parent.treeGrid.keyboardModule.keyConfigs.ctrlUpArrow;\n    delete this.parent.treeGrid.keyboardModule.keyConfigs.ctrlDownArrow;\n    delete this.parent.treeGrid.keyboardModule.keyConfigs.tab;\n    delete this.parent.treeGrid.keyboardModule.keyConfigs.shiftTab;\n  };\n  /**\n   * Method to bind internal events on TreeGrid element\n   *\n   * @returns {void} .\n   */\n\n\n  GanttTreeGrid.prototype.wireEvents = function () {\n    var content = this.parent.treeGrid.element.querySelector('.e-content');\n\n    if (content) {\n      EventHandler.add(content, 'scroll', this.scrollHandler, this);\n    }\n\n    if (this.parent.isAdaptive) {\n      EventHandler.add(this.parent.treeGridPane, 'click', this.treeGridClickHandler, this);\n    }\n  };\n\n  GanttTreeGrid.prototype.unWireEvents = function () {\n    var content = this.parent.treeGrid.element && this.parent.treeGrid.element.querySelector('.e-content');\n\n    if (content) {\n      EventHandler.remove(content, 'scroll', this.scrollHandler);\n    }\n\n    if (this.parent.isAdaptive) {\n      EventHandler.remove(this.parent.treeGridPane, 'click', this.treeGridClickHandler);\n    }\n  }; // eslint-disable-next-line\n\n\n  GanttTreeGrid.prototype.scrollHandler = function (e) {\n    var content = this.parent.treeGrid.element.querySelector('.e-content');\n\n    if (content.scrollTop !== this.previousScroll.top) {\n      this.parent.notify('grid-scroll', {\n        top: content.scrollTop\n      });\n    }\n\n    this.previousScroll.top = content.scrollTop;\n\n    if (this.parent.contextMenuModule && this.parent.contextMenuModule.isOpen) {\n      this.parent.contextMenuModule.contextMenu.close();\n    }\n  };\n  /**\n   * @returns {void} .\n   * @private\n   */\n\n\n  GanttTreeGrid.prototype.validateGanttColumns = function () {\n    var ganttObj = this.parent;\n    var length = ganttObj.columns.length;\n    var tasks = this.parent.taskFields;\n    this.parent.columnMapping = {};\n    this.parent.columnByField = {};\n    this.parent.customColumns = [];\n    var tasksMapping = ['id', 'name', 'startDate', 'endDate', 'duration', 'dependency', 'progress', 'baselineStartDate', 'baselineEndDate', 'resourceInfo', 'notes', 'work', 'manual', 'type'];\n\n    var _loop_1 = function (i) {\n      var column = {};\n\n      if (typeof ganttObj.columns[i] === 'string') {\n        column.field = ganttObj.columns[i];\n      } else {\n        column = ganttObj.columns[i];\n      }\n\n      var columnName = [];\n\n      if (tasksMapping.length > 0) {\n        columnName = tasksMapping.filter(function (name) {\n          return column.field === tasks[name];\n        });\n      }\n\n      if (columnName.length === 0) {\n        if (column.field === this_1.parent.resourceFields.group) {\n          return \"continue\";\n        }\n\n        this_1.parent.customColumns.push(column.field);\n        column.headerText = column.headerText ? column.headerText : column.field;\n        column.width = column.width ? column.width : 150;\n        column.editType = column.editType ? column.editType : 'stringedit';\n        column.type = column.type ? column.type : 'string';\n        this_1.bindTreeGridColumnProperties(column, true);\n        return \"continue\";\n      } else {\n        var index = tasksMapping.indexOf(columnName[0]);\n        tasksMapping.splice(index, 1);\n        this_1.createTreeGridColumn(column, true);\n        this_1.parent.columnMapping[columnName[0]] = column.field;\n      }\n    };\n\n    var this_1 = this;\n\n    for (var i = 0; i < length; i++) {\n      _loop_1(i);\n    }\n    /** Create default columns with task settings property */\n\n\n    for (var j = 0; j < tasksMapping.length; j++) {\n      var column = {};\n\n      if (!isNullOrUndefined(tasks[tasksMapping[j]])) {\n        column.field = tasks[tasksMapping[j]];\n        this.createTreeGridColumn(column, length === 0);\n        this.parent.columnMapping[tasksMapping[j]] = column.field;\n      }\n    }\n\n    if (this.parent.viewType !== 'ProjectView') {\n      var column = {};\n      this.composeUniqueIDColumn(column);\n      this.createTreeGridColumn(column, true);\n    }\n  };\n  /**\n   *\n   * @param {GanttColumnModel} column .\n   * @param {boolean} isDefined .\n   * @returns {void} .\n   */\n\n\n  GanttTreeGrid.prototype.createTreeGridColumn = function (column, isDefined) {\n    var taskSettings = this.parent.taskFields;\n    column.disableHtmlEncode = !isNullOrUndefined(column.disableHtmlEncode) ? column.disableHtmlEncode : this.parent.disableHtmlEncode;\n\n    if (taskSettings.id !== column.field) {\n      column.clipMode = column.clipMode ? column.clipMode : 'EllipsisWithTooltip';\n    }\n\n    if (taskSettings.id === column.field) {\n      /** Id column */\n      this.composeIDColumn(column);\n    } else if (taskSettings.name === column.field) {\n      /** Name column */\n      column.headerText = column.headerText ? column.headerText : this.parent.localeObj.getConstant('name');\n      column.width = column.width ? column.width : 150;\n      column.editType = column.editType ? column.editType : 'stringedit';\n      column.type = column.type ? column.type : 'string';\n    } else if (taskSettings.startDate === column.field) {\n      /** Name column */\n      column.headerText = column.headerText ? column.headerText : this.parent.localeObj.getConstant('startDate');\n      column.editType = column.editType ? column.editType : this.parent.getDateFormat().toLowerCase().indexOf('hh') !== -1 ? 'datetimepickeredit' : 'datepickeredit';\n      column.format = column.format ? column.format : {\n        type: 'date',\n        format: this.parent.getDateFormat()\n      };\n      column.width = column.width ? column.width : 150;\n      column.edit = {\n        params: {\n          renderDayCell: this.parent.renderWorkingDayCell.bind(this.parent)\n        }\n      };\n    } else if (taskSettings.endDate === column.field) {\n      column.headerText = column.headerText ? column.headerText : this.parent.localeObj.getConstant('endDate');\n      column.format = column.format ? column.format : {\n        type: 'date',\n        format: this.parent.getDateFormat()\n      };\n      column.editType = column.editType ? column.editType : this.parent.getDateFormat().toLowerCase().indexOf('hh') !== -1 ? 'datetimepickeredit' : 'datepickeredit';\n      column.width = column.width ? column.width : 150;\n      column.edit = {\n        params: {\n          renderDayCell: this.parent.renderWorkingDayCell.bind(this.parent)\n        }\n      };\n    } else if (taskSettings.duration === column.field) {\n      column.width = column.width ? column.width : 150;\n      column.headerText = column.headerText ? column.headerText : this.parent.localeObj.getConstant('duration');\n      column.valueAccessor = column.valueAccessor ? column.valueAccessor : !isNullOrUndefined(column.edit) ? null : this.durationValueAccessor.bind(this);\n      column.editType = column.editType ? column.editType : 'stringedit';\n      column.type = 'string';\n    } else if (taskSettings.progress === column.field) {\n      this.composeProgressColumn(column);\n    } else if (taskSettings.dependency === column.field) {\n      column.headerText = column.headerText ? column.headerText : this.parent.localeObj.getConstant('dependency');\n      column.width = column.width ? column.width : 150;\n      column.editType = column.editType ? column.editType : 'stringedit';\n      column.type = 'string';\n      column.allowFiltering = column.allowFiltering === false ? false : true;\n    } else if (taskSettings.resourceInfo === column.field) {\n      this.composeResourceColumn(column);\n    } else if (taskSettings.notes === column.field) {\n      column.headerText = column.headerText ? column.headerText : this.parent.localeObj.getConstant('notes');\n      column.width = column.width ? column.width : 150;\n      column.editType = column.editType ? column.editType : 'stringedit';\n\n      if (!this.parent.showInlineNotes) {\n        if (!column.template) {\n          column.template = '<div class=\"e-ganttnotes-info\">' + '<span class=\"e-icons e-notes-info\"></span></div>';\n        }\n      }\n    } else if (taskSettings.baselineStartDate === column.field || taskSettings.baselineEndDate === column.field) {\n      var colName = taskSettings.baselineEndDate === column.field ? 'baselineEndDate' : 'baselineStartDate';\n      column.width = column.width ? column.width : 150;\n      column.headerText = column.headerText ? column.headerText : this.parent.localeObj.getConstant(colName);\n      column.format = column.format ? column.format : {\n        type: 'date',\n        format: this.parent.getDateFormat()\n      };\n      column.editType = column.editType ? column.editType : this.parent.getDateFormat().toLowerCase().indexOf('hh') !== -1 ? 'datetimepickeredit' : 'datepickeredit';\n    } else if (taskSettings.work === column.field) {\n      column.headerText = column.headerText ? column.headerText : this.parent.localeObj.getConstant('work');\n      column.width = column.width ? column.width : 150;\n      column.valueAccessor = column.valueAccessor ? column.valueAccessor : this.workValueAccessor.bind(this);\n      column.editType = column.editType ? column.editType : 'numericedit';\n    } else if (taskSettings.type === column.field) {\n      column.headerText = column.headerText ? column.headerText : this.parent.localeObj.getConstant('taskType');\n      column.width = column.width ? column.width : 150; //column.type = 'string';\n\n      column.editType = 'dropdownedit';\n      column.valueAccessor = column.valueAccessor ? column.valueAccessor : this.taskTypeValueAccessor.bind(this);\n    } else if (taskSettings.manual === column.field && this.parent.taskMode === 'Custom') {\n      column.headerText = column.headerText ? column.headerText : this.parent.localeObj.getConstant('taskMode');\n      column.width = column.width ? column.width : 120;\n      column.editType = column.editType ? column.editType : 'dropdownedit';\n      column.valueAccessor = column.valueAccessor ? column.valueAccessor : this.modeValueAccessor.bind(this);\n      column.edit = {\n        params: {\n          query: new Query(),\n          dataSource: [{\n            id: 1,\n            text: this.parent.localeObj.getConstant('manual'),\n            value: true\n          }, {\n            id: 2,\n            text: this.parent.localeObj.getConstant('auto'),\n            value: false\n          }],\n          fields: {\n            text: 'text',\n            value: 'value'\n          }\n        }\n      };\n    }\n\n    this.bindTreeGridColumnProperties(column, isDefined);\n  };\n  /**\n   * Compose Resource columns\n   *\n   * @param {GanttColumnModel} column .\n   * @returns {void} .\n   */\n\n\n  GanttTreeGrid.prototype.composeResourceColumn = function (column) {\n    column.headerText = column.headerText ? column.headerText : this.parent.localeObj.getConstant('resourceName');\n    column.width = column.width ? column.width : 150;\n    column.type = 'string';\n    column.valueAccessor = column.valueAccessor ? column.valueAccessor : this.resourceValueAccessor.bind(this);\n    column.allowFiltering = column.allowFiltering === false ? false : true;\n  };\n  /**\n   * @param {IGanttData} data .\n   * @returns {object} .\n   * @private\n   */\n\n\n  GanttTreeGrid.prototype.getResourceIds = function (data) {\n    var value = getValue(this.parent.taskFields.resourceInfo, data.taskData);\n    var id = [];\n\n    if (!isNullOrUndefined(value)) {\n      for (var i = 0; i < value.length; i++) {\n        id.push(typeof value[i] === 'object' ? value[i][this.parent.resourceFields.id] : value[i]);\n      }\n\n      return id;\n    } else {\n      return value;\n    }\n  };\n  /**\n   * Create Id column\n   *\n   * @param {GanttColumnModel} column .\n   * @returns {void} .\n   */\n\n\n  GanttTreeGrid.prototype.composeIDColumn = function (column) {\n    var isProjectView = this.parent.viewType === 'ProjectView';\n    column.isPrimaryKey = isProjectView ? true : false;\n    column.headerText = column.headerText ? column.headerText : this.parent.localeObj.getConstant('id');\n    column.width = column.width ? column.width : 100;\n    column.allowEditing = column.allowEditing ? column.allowEditing : false;\n    column.editType = column.editType ? column.editType : 'numericedit';\n    column.valueAccessor = isProjectView ? null : this.idValueAccessor.bind(this);\n  };\n\n  GanttTreeGrid.prototype.composeUniqueIDColumn = function (column) {\n    column.field = 'rowUniqueID';\n    column.isPrimaryKey = true;\n    column.headerText = 'UniqueID';\n    column.allowEditing = false;\n    column.visible = false;\n  };\n  /**\n   * Create progress column\n   *\n   * @param {GanttColumnModel} column .\n   * @returns {void} .\n   */\n\n\n  GanttTreeGrid.prototype.composeProgressColumn = function (column) {\n    column.headerText = column.headerText ? column.headerText : this.parent.localeObj.getConstant('progress');\n    column.width = column.width ? column.width : 150;\n    column.editType = column.editType ? column.editType : 'numericedit';\n  };\n  /**\n   * @param {GanttColumnModel} newGanttColumn .\n   * @param {boolean} isDefined .\n   * @returns {void} .\n   */\n\n\n  GanttTreeGrid.prototype.bindTreeGridColumnProperties = function (newGanttColumn, isDefined) {\n    var treeGridColumn = {};\n    var ganttColumn = {};\n\n    for (var _i = 0, _a = Object.keys(newGanttColumn); _i < _a.length; _i++) {\n      var prop = _a[_i];\n      treeGridColumn[prop] = ganttColumn[prop] = newGanttColumn[prop];\n    }\n\n    this.parent.columnByField[ganttColumn.field] = ganttColumn;\n    this.parent.ganttColumns.push(new GanttColumn(ganttColumn));\n\n    if (isDefined) {\n      this.treeGridColumns.push(treeGridColumn);\n    }\n  }; // eslint-disable-next-line\n\n\n  GanttTreeGrid.prototype.durationValueAccessor = function (field, data, column) {\n    var ganttProp = data.ganttProperties;\n\n    if (!isNullOrUndefined(ganttProp)) {\n      return this.parent.dataOperation.getDurationString(ganttProp.duration, ganttProp.durationUnit);\n    }\n\n    return '';\n  }; // eslint-disable-next-line\n\n\n  GanttTreeGrid.prototype.resourceValueAccessor = function (field, data, column) {\n    var ganttProp = data.ganttProperties;\n\n    if (!isNullOrUndefined(ganttProp)) {\n      return ganttProp.resourceNames;\n    }\n\n    return '';\n  };\n\n  GanttTreeGrid.prototype.workValueAccessor = function (field, data, column) {\n    var ganttProp = data.ganttProperties;\n\n    if (!isNullOrUndefined(ganttProp)) {\n      return this.parent.dataOperation.getWorkString(ganttProp.work, ganttProp.workUnit);\n    }\n\n    return '';\n  };\n\n  GanttTreeGrid.prototype.taskTypeValueAccessor = function (field, data, column) {\n    var ganttProp = data.ganttProperties;\n\n    if (!isNullOrUndefined(ganttProp)) {\n      return ganttProp.taskType;\n    }\n\n    return '';\n  };\n\n  GanttTreeGrid.prototype.modeValueAccessor = function (field, data, column) {\n    if (data[field]) {\n      return 'Manual';\n    } else {\n      return 'Auto';\n    }\n  };\n\n  GanttTreeGrid.prototype.idValueAccessor = function (field, data, column) {\n    return data.level === 0 ? 'R-' + data.ganttProperties.taskId : 'T-' + data.ganttProperties.taskId;\n  };\n\n  GanttTreeGrid.prototype.updateScrollTop = function (args) {\n    this.treeGridElement.querySelector('.e-content').scrollTop = getValue('top', args);\n    this.previousScroll.top = this.treeGridElement.querySelector('.e-content').scrollTop;\n  };\n\n  GanttTreeGrid.prototype.treeGridClickHandler = function (e) {\n    this.parent.notify('treeGridClick', e);\n  };\n\n  GanttTreeGrid.prototype.removeEventListener = function () {\n    this.parent.off('renderPanels', this.createContainer);\n    this.parent.off('chartScroll', this.updateScrollTop);\n    this.parent.off('destroy', this.destroy);\n    this.parent.treeGrid.off('reactTemplateRender', this.renderReactTemplate);\n  };\n\n  GanttTreeGrid.prototype.destroy = function () {\n    this.removeEventListener();\n    this.unWireEvents();\n\n    if (this.parent.treeGrid.element) {\n      this.parent.treeGrid.destroy();\n    }\n  };\n\n  return GanttTreeGrid;\n}();\n\nexport { GanttTreeGrid };","map":{"version":3,"sources":["/Users/tristanbilot/Desktop/Design4green/design4green/node_modules/@syncfusion/ej2-gantt/src/gantt/base/tree-grid.js"],"names":["TreeGrid","createElement","isNullOrUndefined","getValue","extend","EventHandler","deleteObject","setValue","Deferred","Query","Column","GanttColumn","isCountRequired","GanttTreeGrid","parent","_this","previousScroll","top","left","queryCellInfo","args","trigger","headerCellInfo","rowDataBound","columnMenuOpen","notify","columnMenuClick","objectEqualityChecker","old","current","keys","Object","isEqual","excludeKeys","i","length","oldKey","Date","getTime","currentKey","indexOf","modifiedRecords","push","treeGrid","allowSelection","allowKeyboard","enableImmutableMode","treeGridColumns","validateGanttColumns","addEventListener","prototype","on","createContainer","updateScrollTop","destroy","renderReactTemplate","portals","renderTemplates","treeGridElement","id","element","className","tempHeader","treeGridPane","appendChild","classList","add","renderTreeGrid","composeProperties","bindEvents","appendTo","wireEvents","showColumnMenu","columnMenuItems","childMapping","taskFields","child","treeColumnIndex","columns","dataSource","hasChildMapping","count","result","flatData","expandStateMapping","expandState","isGantt","rowHeight","gridLines","searchSettings","fields","key","isJsComponent","toolbarHeight","toolbarModule","offsetHeight","height","ganttHeight","getContentDiv","querySelector","getHeaderDiv","getScrollbarWidth","outer","document","style","visibility","overflow","msOverflowStyle","inner","scrollbarWidth","offsetWidth","parentNode","removeChild","ensureScrollBar","content","headerDiv","scrollWidth","isMobile","test","navigator","userAgent","cssText","dataBound","bind","collapsing","collapsed","expanding","expanded","actionBegin","actionComplete","treeActionComplete","created","actionFailure","beforeDataBound","dataStateChange","updatedRecords","virtualScrollModule","enableVirtualization","updateContentHeight","grid","treeDataBound","prevCurrentView","currentViewData","action","requestType","callBackPromise","ganttChartModule","isExpandCollapseFromChart","collapsingArgs","createExpandCollapseArgs","collapseGanttRow","expandingArgs","expandGanttRow","isExpandCollapseLevelMethod","collapsedArgs","collapsedGanttRow","expandedArgs","expandedGanttRow","updateKeyConfigSettings","record","gridRow","chartRow","getChartRows","eventArgs","data","cancel","updatedArgs","focussedElement","focus","editModule","cellEditModule","getTaskByUniqueID","uniqueID","taskData","duration","resourceInfo","initiateCellEdit","currentEditRow","refreshToolbarItems","isCancelled","addDeleteRecord","selectedRowIndex","selectRow","keyboardModule","keyConfigs","delete","insert","upArrow","downArrow","ctrlHome","ctrlEnd","enter","tab","shiftTab","ctrlShiftUpArrow","ctrlShiftDownArrow","ctrlUpArrow","ctrlDownArrow","scrollHandler","isAdaptive","treeGridClickHandler","unWireEvents","remove","e","scrollTop","contextMenuModule","isOpen","contextMenu","close","ganttObj","tasks","columnMapping","columnByField","customColumns","tasksMapping","_loop_1","column","field","columnName","filter","name","this_1","resourceFields","group","headerText","width","editType","type","bindTreeGridColumnProperties","index","splice","createTreeGridColumn","j","viewType","composeUniqueIDColumn","isDefined","taskSettings","disableHtmlEncode","clipMode","composeIDColumn","localeObj","getConstant","startDate","getDateFormat","toLowerCase","format","edit","params","renderDayCell","renderWorkingDayCell","endDate","valueAccessor","durationValueAccessor","progress","composeProgressColumn","dependency","allowFiltering","composeResourceColumn","notes","showInlineNotes","template","baselineStartDate","baselineEndDate","colName","work","workValueAccessor","taskTypeValueAccessor","manual","taskMode","modeValueAccessor","query","text","value","resourceValueAccessor","getResourceIds","isProjectView","isPrimaryKey","allowEditing","idValueAccessor","visible","newGanttColumn","treeGridColumn","ganttColumn","_i","_a","prop","ganttColumns","ganttProp","ganttProperties","dataOperation","getDurationString","durationUnit","resourceNames","getWorkString","workUnit","taskType","level","taskId","removeEventListener","off"],"mappings":"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","sourcesContent":["import { TreeGrid } from '@syncfusion/ej2-treegrid';\nimport { createElement, isNullOrUndefined, getValue, extend, EventHandler, deleteObject } from '@syncfusion/ej2-base';\nimport { setValue } from '@syncfusion/ej2-base';\nimport { Deferred, Query } from '@syncfusion/ej2-data';\nimport { Column as GanttColumn } from '../models/column';\nimport { isCountRequired } from './utils';\n/**\n * TreeGrid related code goes here\n *\n * @param {object} args .\n * @returns {void} .\n */\nvar GanttTreeGrid = /** @class */ (function () {\n    function GanttTreeGrid(parent) {\n        var _this = this;\n        this.previousScroll = { top: 0, left: 0 };\n        this.queryCellInfo = function (args) {\n            _this.parent.trigger('queryCellInfo', args);\n        };\n        this.headerCellInfo = function (args) {\n            _this.parent.trigger('headerCellInfo', args);\n        };\n        this.rowDataBound = function (args) {\n            _this.parent.trigger('rowDataBound', args);\n        };\n        this.columnMenuOpen = function (args) {\n            _this.parent.notify('columnMenuOpen', args);\n            _this.parent.trigger('columnMenuOpen', args);\n        };\n        this.columnMenuClick = function (args) {\n            _this.parent.trigger('columnMenuClick', args);\n        };\n        // eslint-disable-next-line valid-jsdoc\n        this.objectEqualityChecker = function (old, current) {\n            if (old) {\n                var keys = Object.keys(old);\n                var isEqual = true;\n                var excludeKeys = ['Children', 'childRecords', 'taskData', 'uniqueID', 'parentItem', 'parentUniqueID', 'ganttProperties'];\n                for (var i = 0; i < keys.length; i++) {\n                    /* eslint-disable-next-line */\n                    var oldKey = old[keys[i]] instanceof Date ? new Date(old[keys[i]]).getTime() : old[keys[i]];\n                    /* eslint-disable-next-line */\n                    var currentKey = current[keys[i]] instanceof Date ? new Date(current[keys[i]]).getTime() : current[keys[i]];\n                    if (oldKey !== currentKey && excludeKeys.indexOf(keys[i]) === -1) {\n                        _this.parent.modifiedRecords.push(current);\n                        isEqual = false;\n                        break;\n                    }\n                }\n                return isEqual;\n            }\n            else {\n                return false;\n            }\n        };\n        this.parent = parent;\n        this.parent.treeGrid = new TreeGrid();\n        this.parent.treeGrid.allowSelection = false;\n        this.parent.treeGrid.allowKeyboard = this.parent.allowKeyboard;\n        this.parent.treeGrid.enableImmutableMode = this.parent.enableImmutableMode;\n        this.treeGridColumns = [];\n        this.validateGanttColumns();\n        this.addEventListener();\n    }\n    GanttTreeGrid.prototype.addEventListener = function () {\n        this.parent.on('renderPanels', this.createContainer, this);\n        this.parent.on('chartScroll', this.updateScrollTop, this);\n        this.parent.on('destroy', this.destroy, this);\n        this.parent.treeGrid.on('renderReactTemplate', this.renderReactTemplate, this);\n    };\n    GanttTreeGrid.prototype.renderReactTemplate = function (args) {\n        var portals = 'portals';\n        this.parent[portals] = args;\n        this.parent.renderTemplates();\n    };\n    GanttTreeGrid.prototype.createContainer = function () {\n        //let height: number = this.parent.ganttHeight - this.parent.toolbarModule.element.offsetHeight - 46;\n        this.treeGridElement = createElement('div', {\n            id: 'treeGrid' + this.parent.element.id, className: 'e-gantt-tree-grid'\n            //  styles: 'height:' + height + 'px;'\n        });\n        var tempHeader = createElement('div', { className: 'e-gantt-temp-header' });\n        this.parent.treeGridPane.appendChild(this.treeGridElement);\n        this.treeGridElement.appendChild(tempHeader);\n        this.parent.treeGridPane.classList.add('e-temp-content');\n    };\n    /**\n     * Method to initiate TreeGrid\n     *\n     * @returns {void} .\n     */\n    GanttTreeGrid.prototype.renderTreeGrid = function () {\n        this.composeProperties();\n        this.bindEvents();\n        this.parent.treeGrid.appendTo(this.treeGridElement);\n        this.wireEvents();\n    };\n    GanttTreeGrid.prototype.composeProperties = function () {\n        this.parent.treeGrid.showColumnMenu = this.parent.showColumnMenu;\n        this.parent.treeGrid.columnMenuItems = this.parent.columnMenuItems;\n        this.parent.treeGrid.childMapping = isNullOrUndefined(this.parent.taskFields.child) ? '' : this.parent.taskFields.child;\n        this.parent.treeGrid.treeColumnIndex = this.parent.treeColumnIndex;\n        this.parent.treeGrid.columns = this.treeGridColumns;\n        if (this.parent.dataSource instanceof Object && isCountRequired(this.parent)) {\n            // In order to bind the observable data at load time, hasChildMapping is necessary to be mapped.\n            this.parent.treeGrid.hasChildMapping = 'isParent';\n            var count = getValue('count', this.parent.dataSource);\n            this.parent.treeGrid.dataSource = { result: this.parent.flatData, count: count };\n        }\n        else {\n            this.parent.treeGrid.hasChildMapping = null;\n            this.parent.treeGrid.dataSource = this.parent.flatData;\n        }\n        this.parent.treeGrid.expandStateMapping = this.parent.taskFields.expandState;\n        var isGantt = 'isGantt';\n        this.parent.treeGrid[isGantt] = true;\n        this.parent.treeGrid.rowHeight = this.parent.rowHeight;\n        this.parent.treeGrid.gridLines = this.parent.gridLines;\n        if (this.parent.searchSettings.fields.length !== 0 || this.parent.searchSettings.key !== '') {\n            this.parent.treeGrid.searchSettings = this.parent.searchSettings;\n        }\n        var isJsComponent = 'isJsComponent';\n        this.parent.treeGrid[isJsComponent] = true;\n        var toolbarHeight = 0;\n        if (!isNullOrUndefined(this.parent.toolbarModule) && !isNullOrUndefined(this.parent.toolbarModule.element)) {\n            toolbarHeight = this.parent.toolbarModule.element.offsetHeight;\n        }\n        this.parent.treeGrid.height = this.parent.ganttHeight - toolbarHeight - 46;\n    };\n    GanttTreeGrid.prototype.getContentDiv = function () {\n        return this.treeGridElement.querySelector('.e-content');\n    };\n    GanttTreeGrid.prototype.getHeaderDiv = function () {\n        return this.treeGridElement.querySelector('.e-headercontent');\n    };\n    GanttTreeGrid.prototype.getScrollbarWidth = function () {\n        var outer = document.createElement('div');\n        outer.style.visibility = 'hidden';\n        outer.style.overflow = 'scroll';\n        outer.style.msOverflowStyle = 'scrollbar';\n        var inner = document.createElement('div');\n        outer.appendChild(inner);\n        this.parent.element.appendChild(outer);\n        var scrollbarWidth = (outer.offsetWidth - inner.offsetWidth);\n        outer.parentNode.removeChild(outer);\n        return scrollbarWidth;\n    };\n    /**\n     * @returns {void} .\n     * @private\n     */\n    GanttTreeGrid.prototype.ensureScrollBar = function () {\n        var content = this.getContentDiv();\n        var headerDiv = this.getHeaderDiv();\n        var scrollWidth = this.getScrollbarWidth();\n        var isMobile = /Android|Mac|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n        if (scrollWidth !== 0) {\n            content.style.cssText += 'width: calc(100% + ' + scrollWidth + 'px);';\n        }\n        else {\n            content.classList.add('e-gantt-scroll-padding');\n        }\n        if (scrollWidth === 0 && isMobile) {\n            headerDiv.style.cssText += 'width: calc(100% + 17px);';\n        }\n    };\n    GanttTreeGrid.prototype.bindEvents = function () {\n        this.parent.treeGrid.dataBound = this.dataBound.bind(this);\n        this.parent.treeGrid.collapsing = this.collapsing.bind(this);\n        this.parent.treeGrid.collapsed = this.collapsed.bind(this);\n        this.parent.treeGrid.expanding = this.expanding.bind(this);\n        this.parent.treeGrid.expanded = this.expanded.bind(this);\n        this.parent.treeGrid.actionBegin = this.actionBegin.bind(this);\n        this.parent.treeGrid.actionComplete = this.treeActionComplete.bind(this);\n        this.parent.treeGrid.created = this.created.bind(this);\n        this.parent.treeGrid.actionFailure = this.actionFailure.bind(this);\n        this.parent.treeGrid.queryCellInfo = this.queryCellInfo.bind(this);\n        this.parent.treeGrid.headerCellInfo = this.headerCellInfo.bind(this);\n        this.parent.treeGrid.rowDataBound = this.rowDataBound.bind(this);\n        this.parent.treeGrid.columnMenuOpen = this.columnMenuOpen.bind(this);\n        this.parent.treeGrid.columnMenuClick = this.columnMenuClick.bind(this);\n        this.parent.treeGrid.beforeDataBound = this.beforeDataBound.bind(this);\n        this.parent.treeGrid.dataStateChange = this.dataStateChange.bind(this);\n    };\n    GanttTreeGrid.prototype.beforeDataBound = function (args) {\n        this.parent.updatedRecords = this.parent.virtualScrollModule && this.parent.enableVirtualization ?\n            getValue('virtualScrollModule.visualData', this.parent.treeGrid) : getValue('result', args);\n        if (this.parent.virtualScrollModule && this.parent.enableVirtualization) {\n            this.parent.updateContentHeight(args);\n        }\n        setValue('contentModule.objectEqualityChecker', this.objectEqualityChecker, this.parent.treeGrid.grid);\n    };\n    GanttTreeGrid.prototype.dataBound = function (args) {\n        this.ensureScrollBar();\n        this.parent.treeDataBound(args);\n        this.prevCurrentView = extend([], [], this.parent.currentViewData, true);\n    };\n    GanttTreeGrid.prototype.dataStateChange = function (args) {\n        if (args.action && args.action.requestType === 'refresh') {\n            this.parent.treeGrid.dataSource = {\n                result: getValue('result', this.parent.treeGrid.dataSource),\n                count: getValue('count', this.parent.treeGrid.dataSource)\n            };\n        }\n        this.parent.trigger('dataStateChange', args);\n    };\n    GanttTreeGrid.prototype.collapsing = function (args) {\n        // Collapsing event\n        var callBackPromise = new Deferred();\n        if (!this.parent.ganttChartModule.isExpandCollapseFromChart) {\n            var collapsingArgs = this.createExpandCollapseArgs(args);\n            this.parent.ganttChartModule.collapseGanttRow(collapsingArgs);\n            setValue('cancel', getValue('cancel', collapsingArgs), args);\n        }\n    };\n    GanttTreeGrid.prototype.expanding = function (args) {\n        // Expanding event\n        var callBackPromise = new Deferred();\n        if (!this.parent.ganttChartModule.isExpandCollapseFromChart) {\n            var expandingArgs = this.createExpandCollapseArgs(args);\n            this.parent.ganttChartModule.expandGanttRow(expandingArgs);\n            setValue('cancel', getValue('cancel', expandingArgs), args);\n        }\n    };\n    GanttTreeGrid.prototype.collapsed = function (args) {\n        if (!this.parent.ganttChartModule.isExpandCollapseFromChart && !this.parent.isExpandCollapseLevelMethod) {\n            var collapsedArgs = this.createExpandCollapseArgs(args);\n            this.parent.ganttChartModule.collapsedGanttRow(collapsedArgs);\n        }\n    };\n    GanttTreeGrid.prototype.expanded = function (args) {\n        if (!this.parent.ganttChartModule.isExpandCollapseFromChart && !this.parent.isExpandCollapseLevelMethod) {\n            if (!args['data'].length) {\n                var expandedArgs = this.createExpandCollapseArgs(args);\n                this.parent.ganttChartModule.expandedGanttRow(expandedArgs);\n            }\n        }\n    };\n    GanttTreeGrid.prototype.actionBegin = function (args) {\n        this.parent.notify('actionBegin', args);\n        this.parent.trigger('actionBegin', args);\n    }; // eslint-disable-next-line\n    GanttTreeGrid.prototype.created = function (args) {\n        this.updateKeyConfigSettings();\n    };\n    GanttTreeGrid.prototype.actionFailure = function (args) {\n        this.parent.trigger('actionFailure', args);\n    };\n    GanttTreeGrid.prototype.createExpandCollapseArgs = function (args) {\n        var record = getValue('data', args);\n        var gridRow = getValue('row', args);\n        var chartRow;\n        chartRow = this.parent.ganttChartModule.getChartRows()[this.parent.currentViewData.indexOf(record)];\n        var eventArgs = { data: record, gridRow: gridRow, chartRow: chartRow, cancel: false };\n        return eventArgs;\n    };\n    GanttTreeGrid.prototype.treeActionComplete = function (args) {\n        var updatedArgs = extend({}, args, true);\n        if (getValue('requestType', args) === 'sorting') {\n            this.parent.notify('updateModel', {});\n            deleteObject(updatedArgs, 'isFrozen');\n        }\n        else if (getValue('requestType', args) === 'filtering') {\n            this.parent.notify('updateModel', {});\n            var focussedElement = this.parent.element.querySelector('.e-treegrid');\n            focussedElement.focus();\n        }\n        else if (getValue('type', args) === 'save') {\n            if (this.parent.editModule && this.parent.editModule.cellEditModule) {\n                var data = getValue('data', args);\n                if (!isNullOrUndefined(data) && !isNullOrUndefined(this.parent.getTaskByUniqueID(data.uniqueID))) {\n                    /* eslint-disable-next-line */\n                    this.parent.getTaskByUniqueID(data.uniqueID).taskData[this.parent.taskFields.duration] = data.taskData[this.parent.taskFields.duration];\n                    if (!isNullOrUndefined(data.taskData[this.parent.taskFields.resourceInfo])) {\n                        /* eslint-disable-next-line */\n                        this.parent.getTaskByUniqueID(data.uniqueID).taskData[this.parent.taskFields.resourceInfo] = data.taskData[this.parent.taskFields.resourceInfo];\n                    }\n                }\n                this.parent.editModule.cellEditModule.initiateCellEdit(args, this.currentEditRow);\n                this.currentEditRow = {};\n            }\n        }\n        if (getValue('requestType', args) === 'filterafteropen') {\n            this.parent.notify('actionComplete', args);\n        }\n        if (getValue('requestType', args) === 'searching') {\n            this.parent.notify('actionComplete', args);\n        }\n        if (!isNullOrUndefined(getValue('batchChanges', args)) && !isNullOrUndefined(this.parent.toolbarModule)) {\n            this.parent.toolbarModule.refreshToolbarItems();\n        }\n        if (this.parent.isCancelled) {\n            setValue('requestType', 'cancel', updatedArgs);\n            setValue('action', 'CellEditing', updatedArgs);\n            this.parent.isCancelled = false;\n        }\n        if (getValue('requestType', args) === 'refresh' && isNullOrUndefined(getValue('type', args)) && this.parent.addDeleteRecord) {\n            if (this.parent.selectedRowIndex != -1) {\n                this.parent.selectRow(this.parent.selectedRowIndex);\n            }\n            else {\n                this.parent.selectRow(0);\n            }\n            this.parent.addDeleteRecord = false;\n        }\n        this.parent.trigger('actionComplete', updatedArgs);\n    };\n    GanttTreeGrid.prototype.updateKeyConfigSettings = function () {\n        delete this.parent.treeGrid.grid.keyboardModule.keyConfigs.delete;\n        delete this.parent.treeGrid.grid.keyboardModule.keyConfigs.insert;\n        delete this.parent.treeGrid.grid.keyboardModule.keyConfigs.upArrow;\n        delete this.parent.treeGrid.grid.keyboardModule.keyConfigs.downArrow;\n        delete this.parent.treeGrid.grid.keyboardModule.keyConfigs.ctrlHome;\n        delete this.parent.treeGrid.grid.keyboardModule.keyConfigs.ctrlEnd;\n        delete this.parent.treeGrid.grid.keyboardModule.keyConfigs.enter;\n        delete this.parent.treeGrid.grid.keyboardModule.keyConfigs.tab;\n        delete this.parent.treeGrid.grid.keyboardModule.keyConfigs.shiftTab;\n        delete this.parent.treeGrid.keyboardModule.keyConfigs.enter;\n        delete this.parent.treeGrid.keyboardModule.keyConfigs.upArrow;\n        delete this.parent.treeGrid.keyboardModule.keyConfigs.downArrow;\n        delete this.parent.treeGrid.keyboardModule.keyConfigs.ctrlShiftUpArrow;\n        delete this.parent.treeGrid.keyboardModule.keyConfigs.ctrlShiftDownArrow;\n        delete this.parent.treeGrid.keyboardModule.keyConfigs.ctrlUpArrow;\n        delete this.parent.treeGrid.keyboardModule.keyConfigs.ctrlDownArrow;\n        delete this.parent.treeGrid.keyboardModule.keyConfigs.tab;\n        delete this.parent.treeGrid.keyboardModule.keyConfigs.shiftTab;\n    };\n    /**\n     * Method to bind internal events on TreeGrid element\n     *\n     * @returns {void} .\n     */\n    GanttTreeGrid.prototype.wireEvents = function () {\n        var content = this.parent.treeGrid.element.querySelector('.e-content');\n        if (content) {\n            EventHandler.add(content, 'scroll', this.scrollHandler, this);\n        }\n        if (this.parent.isAdaptive) {\n            EventHandler.add(this.parent.treeGridPane, 'click', this.treeGridClickHandler, this);\n        }\n    };\n    GanttTreeGrid.prototype.unWireEvents = function () {\n        var content = this.parent.treeGrid.element &&\n            this.parent.treeGrid.element.querySelector('.e-content');\n        if (content) {\n            EventHandler.remove(content, 'scroll', this.scrollHandler);\n        }\n        if (this.parent.isAdaptive) {\n            EventHandler.remove(this.parent.treeGridPane, 'click', this.treeGridClickHandler);\n        }\n    };\n    // eslint-disable-next-line\n    GanttTreeGrid.prototype.scrollHandler = function (e) {\n        var content = this.parent.treeGrid.element.querySelector('.e-content');\n        if (content.scrollTop !== this.previousScroll.top) {\n            this.parent.notify('grid-scroll', { top: content.scrollTop });\n        }\n        this.previousScroll.top = content.scrollTop;\n        if (this.parent.contextMenuModule && this.parent.contextMenuModule.isOpen) {\n            this.parent.contextMenuModule.contextMenu.close();\n        }\n    };\n    /**\n     * @returns {void} .\n     * @private\n     */\n    GanttTreeGrid.prototype.validateGanttColumns = function () {\n        var ganttObj = this.parent;\n        var length = ganttObj.columns.length;\n        var tasks = this.parent.taskFields;\n        this.parent.columnMapping = {};\n        this.parent.columnByField = {};\n        this.parent.customColumns = [];\n        var tasksMapping = ['id', 'name', 'startDate', 'endDate', 'duration', 'dependency',\n            'progress', 'baselineStartDate', 'baselineEndDate', 'resourceInfo', 'notes', 'work', 'manual', 'type'];\n        var _loop_1 = function (i) {\n            var column = {};\n            if (typeof ganttObj.columns[i] === 'string') {\n                column.field = ganttObj.columns[i];\n            }\n            else {\n                column = ganttObj.columns[i];\n            }\n            var columnName = [];\n            if (tasksMapping.length > 0) {\n                columnName = tasksMapping.filter(function (name) {\n                    return column.field === tasks[name];\n                });\n            }\n            if (columnName.length === 0) {\n                if (column.field === this_1.parent.resourceFields.group) {\n                    return \"continue\";\n                }\n                this_1.parent.customColumns.push(column.field);\n                column.headerText = column.headerText ? column.headerText : column.field;\n                column.width = column.width ? column.width : 150;\n                column.editType = column.editType ? column.editType : 'stringedit';\n                column.type = column.type ? column.type : 'string';\n                this_1.bindTreeGridColumnProperties(column, true);\n                return \"continue\";\n            }\n            else {\n                var index = tasksMapping.indexOf(columnName[0]);\n                tasksMapping.splice(index, 1);\n                this_1.createTreeGridColumn(column, true);\n                this_1.parent.columnMapping[columnName[0]] = column.field;\n            }\n        };\n        var this_1 = this;\n        for (var i = 0; i < length; i++) {\n            _loop_1(i);\n        }\n        /** Create default columns with task settings property */\n        for (var j = 0; j < tasksMapping.length; j++) {\n            var column = {};\n            if (!isNullOrUndefined(tasks[tasksMapping[j]])) {\n                column.field = tasks[tasksMapping[j]];\n                this.createTreeGridColumn(column, length === 0);\n                this.parent.columnMapping[tasksMapping[j]] = column.field;\n            }\n        }\n        if (this.parent.viewType !== 'ProjectView') {\n            var column = {};\n            this.composeUniqueIDColumn(column);\n            this.createTreeGridColumn(column, true);\n        }\n    };\n    /**\n     *\n     * @param {GanttColumnModel} column .\n     * @param {boolean} isDefined .\n     * @returns {void} .\n     */\n    GanttTreeGrid.prototype.createTreeGridColumn = function (column, isDefined) {\n        var taskSettings = this.parent.taskFields;\n        column.disableHtmlEncode = !isNullOrUndefined(column.disableHtmlEncode) ? column.disableHtmlEncode : this.parent.disableHtmlEncode;\n        if (taskSettings.id !== column.field) {\n            column.clipMode = column.clipMode ? column.clipMode : 'EllipsisWithTooltip';\n        }\n        if (taskSettings.id === column.field) {\n            /** Id column */\n            this.composeIDColumn(column);\n        }\n        else if (taskSettings.name === column.field) {\n            /** Name column */\n            column.headerText = column.headerText ? column.headerText : this.parent.localeObj.getConstant('name');\n            column.width = column.width ? column.width : 150;\n            column.editType = column.editType ? column.editType : 'stringedit';\n            column.type = column.type ? column.type : 'string';\n        }\n        else if (taskSettings.startDate === column.field) {\n            /** Name column */\n            column.headerText = column.headerText ? column.headerText : this.parent.localeObj.getConstant('startDate');\n            column.editType = column.editType ? column.editType :\n                this.parent.getDateFormat().toLowerCase().indexOf('hh') !== -1 ? 'datetimepickeredit' : 'datepickeredit';\n            column.format = column.format ? column.format : { type: 'date', format: this.parent.getDateFormat() };\n            column.width = column.width ? column.width : 150;\n            column.edit = { params: { renderDayCell: this.parent.renderWorkingDayCell.bind(this.parent) } };\n        }\n        else if (taskSettings.endDate === column.field) {\n            column.headerText = column.headerText ? column.headerText : this.parent.localeObj.getConstant('endDate');\n            column.format = column.format ? column.format : { type: 'date', format: this.parent.getDateFormat() };\n            column.editType = column.editType ? column.editType :\n                this.parent.getDateFormat().toLowerCase().indexOf('hh') !== -1 ? 'datetimepickeredit' : 'datepickeredit';\n            column.width = column.width ? column.width : 150;\n            column.edit = { params: { renderDayCell: this.parent.renderWorkingDayCell.bind(this.parent) } };\n        }\n        else if (taskSettings.duration === column.field) {\n            column.width = column.width ? column.width : 150;\n            column.headerText = column.headerText ? column.headerText : this.parent.localeObj.getConstant('duration');\n            column.valueAccessor = column.valueAccessor ? column.valueAccessor : !isNullOrUndefined(column.edit) ? null :\n                this.durationValueAccessor.bind(this);\n            column.editType = column.editType ? column.editType : 'stringedit';\n            column.type = 'string';\n        }\n        else if (taskSettings.progress === column.field) {\n            this.composeProgressColumn(column);\n        }\n        else if (taskSettings.dependency === column.field) {\n            column.headerText = column.headerText ? column.headerText : this.parent.localeObj.getConstant('dependency');\n            column.width = column.width ? column.width : 150;\n            column.editType = column.editType ? column.editType : 'stringedit';\n            column.type = 'string';\n            column.allowFiltering = column.allowFiltering === false ? false : true;\n        }\n        else if (taskSettings.resourceInfo === column.field) {\n            this.composeResourceColumn(column);\n        }\n        else if (taskSettings.notes === column.field) {\n            column.headerText = column.headerText ? column.headerText : this.parent.localeObj.getConstant('notes');\n            column.width = column.width ? column.width : 150;\n            column.editType = column.editType ? column.editType : 'stringedit';\n            if (!this.parent.showInlineNotes) {\n                if (!column.template) {\n                    column.template = '<div class=\"e-ganttnotes-info\">' +\n                        '<span class=\"e-icons e-notes-info\"></span></div>';\n                }\n            }\n        }\n        else if (taskSettings.baselineStartDate === column.field ||\n            taskSettings.baselineEndDate === column.field) {\n            var colName = (taskSettings.baselineEndDate === column.field) ? 'baselineEndDate' :\n                'baselineStartDate';\n            column.width = column.width ? column.width : 150;\n            column.headerText = column.headerText ? column.headerText : this.parent.localeObj.getConstant(colName);\n            column.format = column.format ? column.format : { type: 'date', format: this.parent.getDateFormat() };\n            column.editType = column.editType ? column.editType :\n                this.parent.getDateFormat().toLowerCase().indexOf('hh') !== -1 ? 'datetimepickeredit' : 'datepickeredit';\n        }\n        else if (taskSettings.work === column.field) {\n            column.headerText = column.headerText ? column.headerText : this.parent.localeObj.getConstant('work');\n            column.width = column.width ? column.width : 150;\n            column.valueAccessor = column.valueAccessor ? column.valueAccessor : this.workValueAccessor.bind(this);\n            column.editType = column.editType ? column.editType : 'numericedit';\n        }\n        else if (taskSettings.type === column.field) {\n            column.headerText = column.headerText ? column.headerText : this.parent.localeObj.getConstant('taskType');\n            column.width = column.width ? column.width : 150;\n            //column.type = 'string';\n            column.editType = 'dropdownedit';\n            column.valueAccessor = column.valueAccessor ? column.valueAccessor : this.taskTypeValueAccessor.bind(this);\n        }\n        else if (taskSettings.manual === column.field && this.parent.taskMode === 'Custom') {\n            column.headerText = column.headerText ? column.headerText : this.parent.localeObj.getConstant('taskMode');\n            column.width = column.width ? column.width : 120;\n            column.editType = column.editType ? column.editType : 'dropdownedit';\n            column.valueAccessor = column.valueAccessor ? column.valueAccessor : this.modeValueAccessor.bind(this);\n            column.edit = {\n                params: {\n                    query: new Query(),\n                    dataSource: [\n                        { id: 1, text: this.parent.localeObj.getConstant('manual'), value: true },\n                        { id: 2, text: this.parent.localeObj.getConstant('auto'), value: false }\n                    ],\n                    fields: { text: 'text', value: 'value' }\n                }\n            };\n        }\n        this.bindTreeGridColumnProperties(column, isDefined);\n    };\n    /**\n     * Compose Resource columns\n     *\n     * @param {GanttColumnModel} column .\n     * @returns {void} .\n     */\n    GanttTreeGrid.prototype.composeResourceColumn = function (column) {\n        column.headerText = column.headerText ? column.headerText : this.parent.localeObj.getConstant('resourceName');\n        column.width = column.width ? column.width : 150;\n        column.type = 'string';\n        column.valueAccessor = column.valueAccessor ? column.valueAccessor : this.resourceValueAccessor.bind(this);\n        column.allowFiltering = column.allowFiltering === false ? false : true;\n    };\n    /**\n     * @param {IGanttData} data .\n     * @returns {object} .\n     * @private\n     */\n    GanttTreeGrid.prototype.getResourceIds = function (data) {\n        var value = getValue(this.parent.taskFields.resourceInfo, data.taskData);\n        var id = [];\n        if (!isNullOrUndefined(value)) {\n            for (var i = 0; i < value.length; i++) {\n                id.push(typeof value[i] === 'object' ? value[i][this.parent.resourceFields.id] : value[i]);\n            }\n            return id;\n        }\n        else {\n            return value;\n        }\n    };\n    /**\n     * Create Id column\n     *\n     * @param {GanttColumnModel} column .\n     * @returns {void} .\n     */\n    GanttTreeGrid.prototype.composeIDColumn = function (column) {\n        var isProjectView = this.parent.viewType === 'ProjectView';\n        column.isPrimaryKey = isProjectView ? true : false;\n        column.headerText = column.headerText ? column.headerText : this.parent.localeObj.getConstant('id');\n        column.width = column.width ? column.width : 100;\n        column.allowEditing = column.allowEditing ? column.allowEditing : false;\n        column.editType = column.editType ? column.editType : 'numericedit';\n        column.valueAccessor = isProjectView ? null : this.idValueAccessor.bind(this);\n    };\n    GanttTreeGrid.prototype.composeUniqueIDColumn = function (column) {\n        column.field = 'rowUniqueID';\n        column.isPrimaryKey = true;\n        column.headerText = 'UniqueID';\n        column.allowEditing = false;\n        column.visible = false;\n    };\n    /**\n     * Create progress column\n     *\n     * @param {GanttColumnModel} column .\n     * @returns {void} .\n     */\n    GanttTreeGrid.prototype.composeProgressColumn = function (column) {\n        column.headerText = column.headerText ? column.headerText : this.parent.localeObj.getConstant('progress');\n        column.width = column.width ? column.width : 150;\n        column.editType = column.editType ? column.editType : 'numericedit';\n    };\n    /**\n     * @param {GanttColumnModel} newGanttColumn .\n     * @param {boolean} isDefined .\n     * @returns {void} .\n     */\n    GanttTreeGrid.prototype.bindTreeGridColumnProperties = function (newGanttColumn, isDefined) {\n        var treeGridColumn = {};\n        var ganttColumn = {};\n        for (var _i = 0, _a = Object.keys(newGanttColumn); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            treeGridColumn[prop] = ganttColumn[prop] = newGanttColumn[prop];\n        }\n        this.parent.columnByField[ganttColumn.field] = ganttColumn;\n        this.parent.ganttColumns.push(new GanttColumn(ganttColumn));\n        if (isDefined) {\n            this.treeGridColumns.push(treeGridColumn);\n        }\n    }; // eslint-disable-next-line\n    GanttTreeGrid.prototype.durationValueAccessor = function (field, data, column) {\n        var ganttProp = data.ganttProperties;\n        if (!isNullOrUndefined(ganttProp)) {\n            return this.parent.dataOperation.getDurationString(ganttProp.duration, ganttProp.durationUnit);\n        }\n        return '';\n    }; // eslint-disable-next-line\n    GanttTreeGrid.prototype.resourceValueAccessor = function (field, data, column) {\n        var ganttProp = data.ganttProperties;\n        if (!isNullOrUndefined(ganttProp)) {\n            return ganttProp.resourceNames;\n        }\n        return '';\n    };\n    GanttTreeGrid.prototype.workValueAccessor = function (field, data, column) {\n        var ganttProp = data.ganttProperties;\n        if (!isNullOrUndefined(ganttProp)) {\n            return this.parent.dataOperation.getWorkString(ganttProp.work, ganttProp.workUnit);\n        }\n        return '';\n    };\n    GanttTreeGrid.prototype.taskTypeValueAccessor = function (field, data, column) {\n        var ganttProp = data.ganttProperties;\n        if (!isNullOrUndefined(ganttProp)) {\n            return ganttProp.taskType;\n        }\n        return '';\n    };\n    GanttTreeGrid.prototype.modeValueAccessor = function (field, data, column) {\n        if (data[field]) {\n            return 'Manual';\n        }\n        else {\n            return 'Auto';\n        }\n    };\n    GanttTreeGrid.prototype.idValueAccessor = function (field, data, column) {\n        return data.level === 0 ? 'R-' + data.ganttProperties.taskId : 'T-' + data.ganttProperties.taskId;\n    };\n    GanttTreeGrid.prototype.updateScrollTop = function (args) {\n        this.treeGridElement.querySelector('.e-content').scrollTop = getValue('top', args);\n        this.previousScroll.top = this.treeGridElement.querySelector('.e-content').scrollTop;\n    };\n    GanttTreeGrid.prototype.treeGridClickHandler = function (e) {\n        this.parent.notify('treeGridClick', e);\n    };\n    GanttTreeGrid.prototype.removeEventListener = function () {\n        this.parent.off('renderPanels', this.createContainer);\n        this.parent.off('chartScroll', this.updateScrollTop);\n        this.parent.off('destroy', this.destroy);\n        this.parent.treeGrid.off('reactTemplateRender', this.renderReactTemplate);\n    };\n    GanttTreeGrid.prototype.destroy = function () {\n        this.removeEventListener();\n        this.unWireEvents();\n        if (this.parent.treeGrid.element) {\n            this.parent.treeGrid.destroy();\n        }\n    };\n    return GanttTreeGrid;\n}());\nexport { GanttTreeGrid };\n"]},"metadata":{},"sourceType":"module"}