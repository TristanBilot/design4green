{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { createElement, isNullOrUndefined, extend, compile, getValue, setValue } from '@syncfusion/ej2-base';\nimport { formatUnit, addClass } from '@syncfusion/ej2-base';\nimport { isScheduledTask } from '../base/utils';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as cls from '../base/css-constants';\nimport { DateProcessor } from '../base/date-processor';\n/**\n * To render the chart rows in Gantt\n */\n\nvar ChartRows =\n/** @class */\nfunction (_super) {\n  __extends(ChartRows, _super);\n\n  function ChartRows(ganttObj) {\n    var _this = _super.call(this, ganttObj) || this;\n\n    _this.taskBarHeight = 0;\n    _this.milestoneHeight = 0;\n    _this.milesStoneRadius = 0;\n    _this.baselineTop = 0;\n    _this.baselineHeight = 3;\n    _this.touchLeftConnectorpoint = '';\n    _this.touchRightConnectorpoint = '';\n    _this.dropSplit = false;\n    _this.refreshedTr = [];\n    _this.refreshedData = [];\n    _this.isUpdated = true;\n    _this.parent = ganttObj;\n\n    _this.initPublicProp();\n\n    _this.addEventListener();\n\n    return _this;\n  }\n  /**\n   * To initialize the public property.\n   *\n   * @returns {void}\n   * @private\n   */\n\n\n  ChartRows.prototype.initPublicProp = function () {\n    this.ganttChartTableBody = null;\n  };\n\n  ChartRows.prototype.addEventListener = function () {\n    this.parent.on('renderPanels', this.createChartTable, this);\n    this.parent.on('dataReady', this.initiateTemplates, this);\n    this.parent.on('destroy', this.destroy, this);\n  };\n\n  ChartRows.prototype.refreshChartByTimeline = function () {\n    this.taskTable.style.width = formatUnit(this.parent.timelineModule.totalTimelineWidth);\n    var prevDate = getValue('prevProjectStartDate', this.parent.dataOperation);\n    var isUpdated = false;\n\n    if (prevDate) {\n      isUpdated = prevDate.getTime() === this.parent.cloneProjectStartDate.getTime();\n    }\n\n    this.isUpdated = this.parent.isFromOnPropertyChange && isUpdated && getValue('mutableData', this.parent.treeGrid.grid.contentModule) ? true : false;\n    this.refreshGanttRows();\n    this.isUpdated = true;\n  };\n  /**\n   * To render chart rows.\n   *\n   * @returns {void}\n   * @private\n   */\n\n\n  ChartRows.prototype.createChartTable = function () {\n    this.taskTable = createElement('table', {\n      className: cls.taskTable + ' ' + cls.zeroSpacing,\n      id: 'GanttTaskTable' + this.parent.element.id,\n      styles: 'z-index: 2;position: absolute;width:' + this.parent.timelineModule.totalTimelineWidth + 'px;',\n      attrs: {\n        cellspacing: '0.25px'\n      }\n    });\n    var colgroup = createElement('colgroup');\n    var column = createElement('col', {\n      styles: 'width:' + this.parent.timelineModule.totalTimelineWidth + 'px;'\n    });\n    colgroup.appendChild(column);\n    this.taskTable.appendChild(colgroup);\n    this.ganttChartTableBody = createElement('tbody', {\n      id: this.parent.element.id + 'GanttTaskTableBody'\n    });\n    this.taskTable.appendChild(this.ganttChartTableBody);\n    this.parent.ganttChartModule.chartBodyContent.appendChild(this.taskTable);\n  };\n\n  ChartRows.prototype.initiateTemplates = function () {\n    this.taskTable.style.width = formatUnit(this.parent.timelineModule.totalTimelineWidth);\n    this.initChartHelperPrivateVariable();\n    this.initializeChartTemplate();\n  };\n  /**\n   * To render chart rows.\n   *\n   * @returns {void}\n   * @private\n   */\n\n\n  ChartRows.prototype.renderChartRows = function () {\n    this.createTaskbarTemplate();\n    this.parent.isGanttChartRendered = true;\n  };\n  /**\n   * To get gantt Indicator.\n   *\n   * @param {IIndicator} indicator .\n   * @returns {NodeList} .\n   * @private\n   */\n\n\n  ChartRows.prototype.getIndicatorNode = function (indicator) {\n    var templateString = '<label class=\"' + cls.label + ' ' + cls.taskIndicatorDiv + '\"  style=\"line-height:' + this.parent.rowHeight + 'px;' + 'left:' + this.getIndicatorleft(indicator.date) + 'px;\"><i class=\"' + indicator.iconClass + '\"></i> </label>';\n    return this.createDivElement(templateString);\n  };\n  /**\n   * To get gantt Indicator.\n   *\n   * @param {Date | string} date .\n   * @returns {number} .\n   * @private\n   */\n\n\n  ChartRows.prototype.getIndicatorleft = function (date) {\n    date = this.parent.dateValidationModule.getDateFromFormat(date);\n    var left = this.parent.dataOperation.getTaskLeft(date, false);\n    return left;\n  };\n  /**\n   * To get child taskbar Node.\n   *\n   *  @param {number} i .\n   * @param {NodeList} rootElement .\n   * @returns {NodeList} .\n   * @private\n   */\n\n\n  ChartRows.prototype.getChildTaskbarNode = function (i, rootElement) {\n    var childTaskbarNode = null;\n    var data = this.templateData;\n\n    if (this.childTaskbarTemplateFunction) {\n      childTaskbarNode = this.childTaskbarTemplateFunction(extend({\n        index: i\n      }, data), this.parent, 'TaskbarTemplate', this.getTemplateID('TaskbarTemplate'), false, undefined, rootElement[0]);\n    } else {\n      var labelString = '';\n      var taskLabel = '';\n      var taskbarInnerDiv = void 0;\n      var progressDiv = void 0;\n\n      if (data.ganttProperties.startDate && data.ganttProperties.endDate && data.ganttProperties.duration) {\n        taskbarInnerDiv = this.createDivElement('<div class=\"' + cls.childTaskBarInnerDiv + ' ' + cls.traceChildTaskBar + ' ' + (data.ganttProperties.isAutoSchedule ? '' : cls.manualChildTaskBar) + '\"' + 'style=\"width:' + data.ganttProperties.width + 'px;height:' + this.taskBarHeight + 'px;\"></div>');\n        progressDiv = this.createDivElement('<div class=\"' + cls.childProgressBarInnerDiv + ' ' + cls.traceChildProgressBar + ' ' + (data.ganttProperties.isAutoSchedule ? '' : cls.manualChildProgressBar) + '\"' + ' style=\"border-style:' + (data.ganttProperties.progressWidth ? 'solid;' : 'none;') + 'width:' + data.ganttProperties.progressWidth + 'px;height:100%;' + 'border-top-right-radius:' + this.getBorderRadius(data.ganttProperties) + 'px;' + 'border-bottom-right-radius:' + this.getBorderRadius(data.ganttProperties) + 'px;\">' + '</div>');\n      }\n\n      if (this.taskLabelTemplateFunction && !isNullOrUndefined(progressDiv) && progressDiv.length > 0) {\n        var taskLabelTemplateNode = this.taskLabelTemplateFunction(extend({\n          index: i\n        }, data), this.parent, 'TaskLabelTemplate', this.getTemplateID('TaskLabelTemplate'), false, undefined, progressDiv[0]);\n\n        if (taskLabelTemplateNode && taskLabelTemplateNode.length > 0) {\n          var tempDiv = createElement('div');\n          tempDiv.appendChild(taskLabelTemplateNode[0]);\n          labelString = tempDiv.innerHTML;\n        }\n      } else {\n        labelString = this.getTaskLabel(this.parent.labelSettings.taskLabel);\n        labelString = labelString === 'isCustomTemplate' ? this.parent.labelSettings.taskLabel : labelString;\n      }\n\n      if (labelString !== 'null') {\n        taskLabel = '<span class=\"' + cls.taskLabel + '\" style=\"line-height:' + (this.taskBarHeight - 1) + 'px; text-align:' + (this.parent.viewType === 'ResourceView' ? 'left;' : '') + 'display:' + (this.parent.viewType === 'ResourceView' ? 'inline-flex;' : '') + 'width:' + (this.parent.viewType === 'ResourceView' ? data.ganttProperties.width - 10 : '') + 'px; height:' + this.taskBarHeight + 'px;\">' + labelString + '</span>';\n      }\n\n      var template = !isNullOrUndefined(data.ganttProperties.segments) && data.ganttProperties.segments.length > 0 ? this.splitTaskbar(data, labelString) : data.ganttProperties.startDate && data.ganttProperties.endDate && data.ganttProperties.duration ? taskLabel : data.ganttProperties.startDate && !data.ganttProperties.endDate && !data.ganttProperties.duration ? '<div class=\"' + cls.childProgressBarInnerDiv + ' ' + cls.traceChildTaskBar + ' ' + cls.unscheduledTaskbarLeft + ' ' + (data.ganttProperties.isAutoSchedule ? '' : cls.manualChildTaskBar) + '\"' + 'style=\"left:' + data.ganttProperties.left + 'px; height:' + this.taskBarHeight + 'px;\"></div>' : data.ganttProperties.endDate && !data.ganttProperties.startDate && !data.ganttProperties.duration ? '<div class=\"' + cls.childProgressBarInnerDiv + ' ' + cls.traceChildTaskBar + ' ' + cls.unscheduledTaskbarRight + ' ' + (data.ganttProperties.isAutoSchedule ? '' : cls.manualChildTaskBar) + '\"' + 'style=\"left:' + data.ganttProperties.left + 'px; height:' + this.taskBarHeight + 'px;\"></div>' : data.ganttProperties.duration && !data.ganttProperties.startDate && !data.ganttProperties.endDate ? '<div class=\"' + cls.childProgressBarInnerDiv + ' ' + cls.traceChildTaskBar + ' ' + cls.unscheduledTaskbar + ' ' + (data.ganttProperties.isAutoSchedule ? '' : cls.manualChildTaskBar) + '\"' + 'style=\"left:' + data.ganttProperties.left + 'px; width:' + data.ganttProperties.width + 'px;' + ' height:' + this.taskBarHeight + 'px;\"></div>' : '';\n\n      if (data.ganttProperties.startDate && data.ganttProperties.endDate && data.ganttProperties.duration && (isNullOrUndefined(data.ganttProperties.segments) || !isNullOrUndefined(data.ganttProperties.segments) && data.ganttProperties.segments.length === 0)) {\n        if (template !== '' && !isNullOrUndefined(progressDiv) && progressDiv.length > 0) {\n          progressDiv[0].appendChild([].slice.call(this.createDivElement(template))[0]);\n        }\n\n        if (!isNullOrUndefined(taskbarInnerDiv) && taskbarInnerDiv.length > 0) {\n          taskbarInnerDiv[0].appendChild([].slice.call(progressDiv)[0]);\n        }\n\n        childTaskbarNode = taskbarInnerDiv;\n      } else {\n        childTaskbarNode = this.createDivElement(template);\n      }\n    }\n\n    return childTaskbarNode;\n  };\n\n  ChartRows.prototype.splitTaskbar = function (data, labelString) {\n    var splitTasks = '';\n\n    for (var i = 0; i < data.ganttProperties.segments.length; i++) {\n      var segment = data.ganttProperties.segments[i];\n      var segmentPosition = i === 0 ? 'e-segment-first' : i === data.ganttProperties.segments.length - 1 ? 'e-segment-last' : 'e-segment-inprogress';\n      splitTasks += //split taskbar\n      '<div class=\"' + cls.childTaskBarInnerDiv + ' ' + segmentPosition + ' ' + cls.traceChildTaskBar + ' ' + ' e-segmented-taskbar' + '\"style=\"width:' + segment.width + 'px;position: absolute; left:' + segment.left + 'px;height:' + this.taskBarHeight + 'px; overflow: initial;\" data-segment-index = \"' + i + '\" aria-label = \"' + this.generateSpiltTaskAriaLabel(segment, data.ganttProperties) + '\"> ' + this.getSplitTaskbarLeftResizerNode() + //split progress bar\n      '<div class=\"' + cls.childProgressBarInnerDiv + ' ' + cls.traceChildProgressBar + ' ' + '\" style=\"border-style:' + (segment.progressWidth ? 'solid;' : 'none;') + 'display:' + (segment.progressWidth >= 0 ? 'block;' : 'none;') + 'width:' + segment.progressWidth + 'px;height:100%;' + 'border-top-right-radius:' + this.getSplitTaskBorderRadius(segment) + 'px;' + 'border-bottom-right-radius:' + this.getSplitTaskBorderRadius(segment) + 'px;\">' + // progress label\n      '<span class=\"' + cls.taskLabel + '\" style=\"line-height:' + (this.taskBarHeight - 1) + 'px;display:' + (segment.showProgress ? 'inline;' : 'none;') + 'height:' + this.taskBarHeight + 'px;\">' + labelString + '</span>' + '</div>' + this.getSplitTaskbarRightResizerNode(segment) + (segment.showProgress ? this.getSplitProgressResizerNode(segment) : '') + '</div></div>';\n    }\n\n    return splitTasks;\n  };\n\n  ChartRows.prototype.getSplitTaskbarLeftResizerNode = function () {\n    var lResizerLeft = -(this.parent.isAdaptive ? 12 : 2);\n    var template = '<div class=\"' + cls.taskBarLeftResizer + ' ' + cls.icon + '\"' + ' style=\"left:' + lResizerLeft + 'px;height:' + this.taskBarHeight + 'px;\"></div>';\n    return template;\n  };\n\n  ChartRows.prototype.getSplitTaskbarRightResizerNode = function (segment) {\n    var rResizerLeft = this.parent.isAdaptive ? -2 : -10;\n    var template = '<div class=\"' + cls.taskBarRightResizer + ' ' + cls.icon + '\"' + ' style=\"left:' + (segment.width + rResizerLeft) + 'px;' + 'height:' + this.taskBarHeight + 'px;\"></div>';\n    return template;\n  };\n\n  ChartRows.prototype.getSplitProgressResizerNode = function (segment) {\n    var template = '<div class=\"' + cls.childProgressResizer + '\"' + ' style=\"left:' + (segment.progressWidth - 6) + 'px;margin-top:' + (this.taskBarHeight - 4) + 'px;\"><div class=\"' + cls.progressBarHandler + '\"' + '><div class=\"' + cls.progressHandlerElement + '\"></div>' + '<div class=\"' + cls.progressBarHandlerAfter + '\"></div></div>';\n    return template;\n  };\n\n  ChartRows.prototype.getSegmentIndex = function (splitStartDate, record) {\n    var segmentIndex = -1;\n    var ganttProp = record.ganttProperties;\n    var segments = ganttProp.segments;\n\n    if (!isNullOrUndefined(segments)) {\n      segments.sort(function (a, b) {\n        return a.startDate.getTime() - b.startDate.getTime();\n      });\n      var length_1 = segments.length;\n\n      for (var i = 0; i < length_1; i++) {\n        var segment = segments[i]; // To find if user tend to split the start date of a main taskbar\n        // purpose of this to restrict the split action\n\n        if (splitStartDate.getTime() === ganttProp.startDate.getTime()) {\n          this.dropSplit = true;\n          segmentIndex = 0; // To find the if user tend to split the first date of already segmented task.\n          // purpose of this to move on day of a segment\n        } else if (splitStartDate.getTime() === segment.startDate.getTime()) {\n          this.dropSplit = true;\n          var sDate = segment.startDate;\n          sDate.setDate(sDate.getDate() + 1);\n          sDate = segment.startDate = this.parent.dataOperation.checkStartDate(sDate, ganttProp, false);\n          segment.startDate = sDate;\n          var eDate = segment.endDate;\n          eDate = this.parent.dataOperation.getEndDate(sDate, segment.duration, ganttProp.durationUnit, ganttProp, false);\n          segment.endDate = eDate;\n\n          if (i === segments.length - 1) {\n            this.parent.setRecordValue('endDate', eDate, ganttProp, true);\n          }\n\n          this.incrementSegments(segments, i, record);\n          segmentIndex = segment.segmentIndex; // To find if the user tend to split the segment and find the segment index\n        } else {\n          segment.endDate = this.parent.dataOperation.getEndDate(segment.startDate, segment.duration, ganttProp.durationUnit, ganttProp, false);\n\n          if (splitStartDate.getTime() >= segment.startDate.getTime() && splitStartDate.getTime() <= segment.endDate.getTime()) {\n            segmentIndex = segment.segmentIndex;\n          }\n        }\n\n        this.parent.setRecordValue('segments', ganttProp.segments, ganttProp, true);\n      }\n    }\n\n    if (segmentIndex === -1) {\n      this.dropSplit = true;\n    }\n\n    return segmentIndex;\n  };\n\n  ChartRows.prototype.mergeTask = function (taskId, segmentIndexes) {\n    var mergeArrayLength = segmentIndexes.length;\n    var taskFields = this.parent.taskFields;\n    var mergeData = this.parent.flatData.filter(function (x) {\n      if (x[taskFields.id] === taskId) {\n        return x;\n      } else {\n        return null;\n      }\n    })[0];\n    var segments = mergeData.ganttProperties.segments;\n    segmentIndexes = segmentIndexes.sort(function (a, b) {\n      return b.firstSegmentIndex - a.firstSegmentIndex;\n    });\n\n    for (var arrayLength = 0; arrayLength < mergeArrayLength; arrayLength++) {\n      var firstSegment = segments[segmentIndexes[arrayLength].firstSegmentIndex];\n      var secondSegment = segments[segmentIndexes[arrayLength].secondSegmentIndex];\n      var duration = firstSegment.duration + secondSegment.duration;\n      var endDate = this.parent.dataOperation.getEndDate(firstSegment.startDate, duration, mergeData.ganttProperties.durationUnit, mergeData.ganttProperties, false);\n      var segment = {\n        startDate: firstSegment.startDate,\n        endDate: endDate,\n        duration: duration\n      };\n      var insertIndex = segmentIndexes[arrayLength].firstSegmentIndex;\n      segments.splice(insertIndex, 2, segment);\n      this.parent.setRecordValue('segments', segments, mergeData.ganttProperties, true);\n      this.parent.dataOperation.updateMappingData(mergeData, 'segments');\n\n      if (segments.length === 1) {\n        this.parent.setRecordValue('endDate', endDate, mergeData.ganttProperties, true);\n        this.parent.setRecordValue('segments', null, mergeData.ganttProperties, true);\n        this.parent.dataOperation.updateMappingData(mergeData, 'segments');\n      } else if (mergeData.ganttProperties.endDate !== segments[segments.length - 1].endDate) {\n        this.parent.setRecordValue('endDate', segments[segments.length - 1].endDate, mergeData.ganttProperties, true);\n      }\n    }\n\n    this.refreshChartAfterSegment(mergeData, 'mergeSegment');\n  };\n\n  ChartRows.prototype.refreshChartAfterSegment = function (data, requestType) {\n    this.parent.setRecordValue('segments', this.parent.dataOperation.setSegmentsInfo(data, false), data.ganttProperties, true);\n    this.parent.dataOperation.updateMappingData(data, 'segments');\n    this.parent.dataOperation.updateWidthLeft(data);\n\n    if (this.parent.predecessorModule && this.parent.taskFields.dependency) {\n      this.parent.predecessorModule.updatedRecordsDateByPredecessor();\n      this.parent.connectorLineModule.removePreviousConnectorLines(this.parent.flatData);\n      this.parent.connectorLineEditModule.refreshEditedRecordConnectorLine(this.parent.flatData);\n\n      if (data.parentItem && this.parent.getParentTask(data.parentItem).ganttProperties.isAutoSchedule && this.parent.isInPredecessorValidation) {\n        this.parent.dataOperation.updateParentItems(data.parentItem);\n      }\n\n      this.refreshRecords(this.parent.currentViewData);\n    } else {\n      this.refreshRow(this.parent.currentViewData.indexOf(data));\n    }\n\n    var tr = this.ganttChartTableBody.querySelectorAll('tr')[this.parent.currentViewData.indexOf(data)];\n    var args = {\n      requestType: requestType,\n      rowData: data\n    };\n    this.triggerQueryTaskbarInfoByIndex(tr, data);\n    this.parent.selectionModule.clearSelection();\n    var segments = args.rowData.taskData[this.parent.taskFields.segments];\n\n    if (this.parent.timezone && segments != null) {\n      for (var i = 0; i < segments.length; i++) {\n        segments[i][this.parent.taskFields.startDate] = this.parent.dateValidationModule.remove(args.rowData.ganttProperties.segments[i].startDate, this.parent.timezone);\n\n        if (this.parent.taskFields.endDate) {\n          segments[i][this.parent.taskFields.endDate] = this.parent.dateValidationModule.remove(args.rowData.ganttProperties.segments[i].endDate, this.parent.timezone);\n        }\n      }\n    }\n\n    this.parent.trigger('actionComplete', args);\n    setValue('isEdit', false, this.parent.contextMenuModule);\n    setValue('isEdit', false, this.parent);\n  };\n  /**\n   * public method to split task bar.\n   *\n   * @public\n   */\n\n\n  ChartRows.prototype.splitTask = function (taskId, splitDates) {\n    var taskFields = this.parent.taskFields;\n    var splitDate = splitDates;\n    var splitRecord = this.parent.flatData.filter(function (x) {\n      if (x[taskFields.id] === taskId) {\n        return x;\n      } else {\n        return null;\n      }\n    })[0];\n    var ganttProp = splitRecord.ganttProperties;\n    this.dropSplit = false;\n    var segmentIndex = -1;\n    var segments = ganttProp.segments;\n\n    if (isNullOrUndefined(splitDates.length) || splitDates.length < 0) {\n      var splitStartDate = this.parent.dataOperation.checkStartDate(splitDate, ganttProp, false);\n\n      if (splitStartDate.getTime() !== ganttProp.startDate.getTime()) {\n        if (ganttProp.isAutoSchedule) {\n          if (!isNullOrUndefined(segments)) {\n            segmentIndex = this.getSegmentIndex(splitStartDate, splitRecord);\n          } //check atleast one day difference is there to split\n\n\n          if (this.dropSplit === false && splitDate.getTime() > ganttProp.startDate.getTime() && splitDate.getTime() < ganttProp.endDate.getTime()) {\n            segments = segmentIndex !== -1 ? segments : [];\n            var startDate = segmentIndex !== -1 ? segments[segmentIndex].startDate : new Date(ganttProp.startDate.getTime());\n            var endDate = segmentIndex !== -1 ? segments[segmentIndex].endDate : new Date(ganttProp.endDate.getTime());\n            var segmentDuration = this.parent.dataOperation.getDuration(startDate, endDate, ganttProp.durationUnit, ganttProp.isAutoSchedule, ganttProp.isMilestone);\n            this.parent.setRecordValue('segments', this.splitSegmentedTaskbar(startDate, endDate, splitDate, segmentIndex, segments, splitRecord, segmentDuration), ganttProp, true);\n\n            if (segmentIndex !== -1) {\n              this.incrementSegments(segments, segmentIndex + 1, splitRecord);\n            }\n\n            this.parent.setRecordValue('endDate', segments[segments.length - 1].endDate, ganttProp, true);\n\n            if (this.parent.taskFields.endDate) {\n              this.parent.dataOperation.updateMappingData(splitRecord, 'endDate');\n            }\n          }\n\n          this.refreshChartAfterSegment(splitRecord, 'splitTaskbar');\n        }\n      }\n    } else {\n      splitDates.sort(function (a, b) {\n        return a.getTime() - b.getTime();\n      });\n      this.parent.setRecordValue('segments', this.constructSegments(splitDates, splitRecord.ganttProperties), splitRecord.ganttProperties, true);\n      this.refreshChartAfterSegment(splitRecord, 'splitTask');\n    }\n  };\n\n  ChartRows.prototype.constructSegments = function (dates, taskData) {\n    var segmentsArray = [];\n    var segment;\n    var startDate = new Date();\n    var endDate;\n    var duration;\n\n    for (var i = 0; i < dates.length + 1; i++) {\n      startDate = i === 0 ? taskData.startDate : startDate;\n      startDate = this.parent.dataOperation.checkStartDate(startDate, taskData, false);\n      endDate = i !== dates.length ? new Date(dates[i].getTime()) > taskData.endDate ? taskData.endDate : new Date(dates[i].getTime()) : taskData.endDate;\n      endDate = this.parent.dataOperation.checkEndDate(endDate, taskData, false);\n      duration = this.parent.dataOperation.getDuration(startDate, endDate, taskData.durationUnit, taskData.isAutoSchedule, taskData.isMilestone);\n\n      if (endDate.getTime() >= startDate.getTime()) {\n        segment = {\n          startDate: startDate,\n          endDate: endDate,\n          duration: duration\n        };\n        segmentsArray.push(segment);\n      }\n\n      if (i === dates.length) {\n        break;\n      }\n\n      startDate = new Date(dates[i].getTime());\n      startDate.setDate(dates[i].getDate() + 1);\n    }\n\n    return segmentsArray;\n  };\n\n  ChartRows.prototype.splitSegmentedTaskbar = function (startDate, endDate, splitDate, segmentIndex, segments, ganttData, segmentDuration) {\n    var ganttProp = ganttData.ganttProperties;\n    var checkClickState = this.parent.nonWorkingDayIndex.indexOf(splitDate.getDay());\n    var increment = checkClickState === -1 ? 0 : checkClickState === 0 ? 1 : 2;\n    startDate = this.parent.dataOperation.checkStartDate(startDate, ganttProp, false);\n    var segmentEndDate = new Date(splitDate.getTime());\n    segmentEndDate = this.parent.dataOperation.checkEndDate(segmentEndDate, ganttProp, false);\n\n    for (var i = 0; i < 2; i++) {\n      var segment = {\n        startDate: startDate,\n        endDate: segmentEndDate,\n        duration: this.parent.dataOperation.getDuration(startDate, segmentEndDate, ganttProp.durationUnit, ganttProp.isAutoSchedule, ganttProp.isMilestone),\n        offsetDuration: 1\n      };\n      var endDateState = this.parent.nonWorkingDayIndex.indexOf(segmentEndDate.getDay());\n\n      if (segmentIndex !== -1) {\n        segments.splice(segmentIndex, 1);\n        segmentIndex = -1;\n      }\n\n      segments.push(segment);\n      var mode = this.parent.timelineModule.customTimelineSettings.bottomTier.unit;\n\n      if (mode === 'Hour' || mode === 'Minutes') {\n        startDate = new Date(splitDate.getTime());\n        startDate = this.parent.dataOperation.checkStartDate(startDate, ganttProp, false);\n        var count = this.parent.timelineModule.customTimelineSettings.bottomTier.count;\n        var mode_1 = this.parent.timelineModule.customTimelineSettings.bottomTier.unit;\n        var timeIncrement = this.parent.timelineModule.getIncrement(startDate, count, mode_1);\n        var newTime = startDate.getTime() + timeIncrement;\n        startDate.setTime(newTime + increment);\n        segmentEndDate = new Date(endDate.getTime());\n        timeIncrement = this.parent.timelineModule.getIncrement(segmentEndDate, count, mode_1);\n        newTime = segmentEndDate.getTime() + timeIncrement;\n        segmentEndDate.setTime(newTime + increment);\n      } else {\n        startDate = new Date(splitDate.getTime());\n        startDate.setDate(startDate.getDate() + 1 + increment);\n        startDate = this.parent.dataOperation.checkStartDate(startDate, ganttProp, false);\n        segmentEndDate = new Date(endDate.getTime());\n        segmentEndDate.setDate(segmentEndDate.getDate() + 1);\n      }\n\n      if (endDateState !== -1) {\n        var diff = segmentDuration - segment.duration;\n        segmentEndDate = this.parent.dataOperation.getEndDate(startDate, diff, ganttProp.durationUnit, ganttProp, false);\n      } else {\n        segmentEndDate = this.parent.dataOperation.checkEndDate(segmentEndDate, ganttProp, false);\n      }\n    }\n\n    segments.sort(function (a, b) {\n      return a.startDate.getTime() - b.startDate.getTime();\n    });\n    return segments;\n  };\n\n  ChartRows.prototype.incrementSegments = function (segments, segmentIndex, ganttData) {\n    var ganttProp = ganttData.ganttProperties;\n\n    for (var i = segmentIndex + 1; i < segments.length; i++) {\n      var segment = segments[i];\n      var startDate = i !== 0 ? new Date(segments[i - 1].endDate.getTime()) : new Date(segment.startDate.getTime());\n      startDate = this.parent.dataOperation.getEndDate(startDate, segment.offsetDuration, ganttProp.durationUnit, ganttProp, false);\n      startDate = this.parent.dataOperation.checkStartDate(startDate, ganttProp, false);\n      segment.startDate = startDate;\n      var endDate = segment.endDate = this.parent.dataOperation.getEndDate(startDate, segment.duration, ganttProp.durationUnit, ganttProp, false);\n      segment.endDate = endDate;\n\n      if (i === segments.length - 1) {\n        this.parent.setRecordValue('endDate', endDate, ganttProp, true);\n\n        if (this.parent.taskFields.endDate) {\n          this.parent.dataOperation.updateMappingData(ganttData, 'endDate');\n        }\n      }\n    }\n\n    segments.sort(function (a, b) {\n      return a.startDate.getTime() - b.startDate.getTime();\n    });\n    this.parent.setRecordValue('segments', segments, ganttProp, true);\n    this.parent.dataOperation.updateMappingData(ganttData, 'segments');\n  };\n  /**\n   * To get milestone node.\n   *\n   * @param {number} i .\n   * @param {NodeList} rootElement .\n   * @returns {NodeList} .\n   * @private\n   */\n\n\n  ChartRows.prototype.getMilestoneNode = function (i, rootElement) {\n    var milestoneNode = null;\n    var data = this.templateData;\n\n    if (this.milestoneTemplateFunction) {\n      milestoneNode = this.milestoneTemplateFunction(extend({\n        index: i\n      }, data), this.parent, 'MilestoneTemplate', this.getTemplateID('MilestoneTemplate'), false, undefined, rootElement[0]);\n    } else {\n      var template = '<div class=\"' + cls.traceMilestone + '\" style=\"position:absolute;\">' + '<div class=\"' + cls.milestoneTop + ' ' + (!data.ganttProperties.startDate && !data.ganttProperties.endDate ? cls.unscheduledMilestoneTop : '') + '\" style=\"border-right-width:' + this.milesStoneRadius + 'px;border-left-width:' + this.milesStoneRadius + 'px;border-bottom-width:' + this.milesStoneRadius + 'px;\"></div>' + '<div class=\"' + cls.milestoneBottom + ' ' + (!data.ganttProperties.startDate && !data.ganttProperties.endDate ? cls.unscheduledMilestoneBottom : '') + '\" style=\"top:' + this.milesStoneRadius + 'px;border-right-width:' + this.milesStoneRadius + 'px; border-left-width:' + this.milesStoneRadius + 'px; border-top-width:' + this.milesStoneRadius + 'px;\"></div></div>';\n      milestoneNode = this.createDivElement(template);\n    }\n\n    return milestoneNode;\n  };\n  /**\n   * To get task baseline Node.\n   *\n   * @returns {NodeList} .\n   * @private\n   */\n\n\n  ChartRows.prototype.getTaskBaselineNode = function () {\n    var data = this.templateData;\n    var template = '<div class=\"' + cls.baselineBar + ' ' + '\" style=\"margin-top:' + this.baselineTop + 'px;left:' + data.ganttProperties.baselineLeft + 'px;' + 'width:' + data.ganttProperties.baselineWidth + 'px;height:' + this.baselineHeight + 'px;' + (this.baselineColor ? 'background-color: ' + this.baselineColor + ';' : '') + '\"></div>';\n    return this.createDivElement(template);\n  };\n  /**\n   * To get milestone baseline node.\n   *\n   * @returns {NodeList} .\n   * @private\n   */\n\n\n  ChartRows.prototype.getMilestoneBaselineNode = function () {\n    var data = this.templateData;\n    var template = '<div class=\"' + cls.baselineMilestoneContainer + ' ' + '\" style=\"' + 'left:' + (data.ganttProperties.baselineLeft - this.milesStoneRadius) + 'px;' + 'margin-top:' + (-Math.floor(this.parent.rowHeight - this.milestoneMarginTop) + 2) + 'px\">' + '<div class=\"' + cls.baselineMilestoneDiv + '\">' + '<div class=\"' + cls.baselineMilestoneDiv + ' ' + cls.baselineMilestoneTop + '\"  ' + 'style=\"top:' + -this.milestoneHeight + 'px;border-right:' + this.milesStoneRadius + 'px solid transparent;border-left:' + this.milesStoneRadius + 'px solid transparent;border-top:0px' + 'solid transparent;border-bottom-width:' + this.milesStoneRadius + 'px;' + 'border-bottom-style: solid;' + (this.baselineColor ? 'border-bottom-color: ' + this.baselineColor + ';' : '') + '\"></div>' + '<div class=\"' + cls.baselineMilestoneDiv + ' ' + cls.baselineMilestoneBottom + '\"  ' + 'style=\"top:' + (this.milesStoneRadius - this.milestoneHeight) + 'px;border-right:' + this.milesStoneRadius + 'px solid transparent;border-left:' + this.milesStoneRadius + 'px solid transparent;border-bottom:0px' + 'solid transparent;border-top-width:' + this.milesStoneRadius + 'px;' + 'border-top-style: solid;' + (this.baselineColor ? 'border-top-color: ' + this.baselineColor + ';' : '') + '\"></div>' + '</div></div>';\n    return this.createDivElement(template);\n  };\n  /**\n   * To get left label node.\n   *\n   * @param {number} i .\n   * @returns {NodeList} .\n   * @private\n   */\n\n\n  ChartRows.prototype.getLeftLabelNode = function (i) {\n    var leftLabelNode = this.leftLabelContainer();\n    leftLabelNode[0].setAttribute('aria-label', this.generateTaskLabelAriaLabel('left'));\n    var leftLabelTemplateNode = null;\n\n    if (this.leftTaskLabelTemplateFunction) {\n      leftLabelTemplateNode = this.leftTaskLabelTemplateFunction(extend({\n        index: i\n      }, this.templateData), this.parent, 'LeftLabelTemplate', this.getTemplateID('LeftLabelTemplate'), false, undefined, leftLabelNode[0]);\n    } else {\n      var field = this.parent.labelSettings.leftLabel;\n      var labelString = this.getTaskLabel(field);\n\n      if (labelString) {\n        labelString = labelString === 'isCustomTemplate' ? field : labelString;\n        leftLabelTemplateNode = this.getLableText(labelString, cls.leftLabelInnerDiv);\n      }\n    }\n\n    if (leftLabelTemplateNode && leftLabelTemplateNode.length > 0) {\n      leftLabelNode[0].appendChild([].slice.call(leftLabelTemplateNode)[0]);\n    }\n\n    return leftLabelNode;\n  };\n\n  ChartRows.prototype.getLableText = function (labelString, labelDiv) {\n    var templateString = createElement('div', {\n      className: labelDiv,\n      styles: 'height:' + this.taskBarHeight + 'px;' + 'margin-top:' + this.taskBarMarginTop + 'px;'\n    });\n    var spanElem = createElement('span', {\n      className: cls.label\n    });\n    var property = this.parent.disableHtmlEncode ? 'textContent' : 'innerHTML';\n    spanElem[property] = labelString;\n    templateString.appendChild(spanElem);\n    var div = createElement('div');\n    div.appendChild(templateString);\n    return div.childNodes;\n  };\n  /**\n   * To get right label node.\n   *\n   * @param {number} i .\n   * @returns {NodeList} .\n   * @private\n   */\n\n\n  ChartRows.prototype.getRightLabelNode = function (i) {\n    var rightLabelNode = this.rightLabelContainer();\n    rightLabelNode[0].setAttribute('aria-label', this.generateTaskLabelAriaLabel('right'));\n    var rightLabelTemplateNode = null;\n\n    if (this.rightTaskLabelTemplateFunction) {\n      rightLabelTemplateNode = this.rightTaskLabelTemplateFunction(extend({\n        index: i\n      }, this.templateData), this.parent, 'RightLabelTemplate', this.getTemplateID('RightLabelTemplate'), false, undefined, rightLabelNode[0]);\n    } else {\n      var field = this.parent.labelSettings.rightLabel;\n      var labelString = this.getTaskLabel(field);\n\n      if (labelString) {\n        labelString = labelString === 'isCustomTemplate' ? field : labelString;\n        rightLabelTemplateNode = this.getLableText(labelString, cls.rightLabelInnerDiv);\n      }\n    }\n\n    if (rightLabelTemplateNode && rightLabelTemplateNode.length > 0) {\n      rightLabelNode[0].appendChild([].slice.call(rightLabelTemplateNode)[0]);\n    }\n\n    return rightLabelNode;\n  };\n\n  ChartRows.prototype.getManualTaskbar = function () {\n    var data = this.templateData;\n    var taskbarHeight = this.taskBarHeight / 2 - 1;\n    var innerDiv = data.ganttProperties.startDate && data.ganttProperties.endDate && data.ganttProperties.duration ? '<div class=\"' + cls.manualParentTaskBar + '\" style=\"width:' + data.ganttProperties.width + 'px;' + 'height:' + taskbarHeight / 5 + 'px;border-left-width:' + taskbarHeight / 5 + 'px; border-bottom:' + taskbarHeight / 5 + 'px solid transparent;\"></div>' : !data.ganttProperties.startDate && !data.ganttProperties.endDate && data.ganttProperties.duration ? '<div class=\"' + cls.manualParentTaskBar + ' ' + cls.traceManualUnscheduledTask + '\" style=\"width:' + data.ganttProperties.width + 'px;' + 'height:' + (taskbarHeight / 5 + 1) + 'px;border-left-width:' + taskbarHeight / 5 + 'px; border-bottom:' + taskbarHeight / 5 + 'px solid transparent;\"></div>' : '<div class=\"' + cls.manualParentTaskBar + ' ' + (data.ganttProperties.startDate ? cls.unscheduledTaskbarLeft : cls.unscheduledTaskbarRight) + '\" style=\"width:' + data.ganttProperties.width + 'px;' + 'height:' + taskbarHeight * 2 + 'px;border-left-width:' + taskbarHeight / 5 + 'px; border-bottom:' + taskbarHeight / 5 + 'px solid transparent;\"></div>';\n    var template = '<div class=\"' + cls.manualParentMainContainer + '\"' + 'style=left:' + (data.ganttProperties.left - data.ganttProperties.autoLeft) + 'px;' + 'width:' + data.ganttProperties.width + 'px;' + 'height:' + taskbarHeight + 'px;>' + innerDiv + (data.ganttProperties.startDate && data.ganttProperties.endDate && data.ganttProperties.duration || data.ganttProperties.duration ? '<div class=\"e-gantt-manualparenttaskbar-left\" style=' + '\"height:' + taskbarHeight + 'px;border-left-width:' + taskbarHeight / 5 + 'px; border-bottom:' + taskbarHeight / 5 + 'px solid transparent;\"></div>' + '<div class=\"e-gantt-manualparenttaskbar-right\" style=' + 'left:' + (data.ganttProperties.width - taskbarHeight / 5) + 'px;height:' + taskbarHeight + 'px;border-right-width:' + taskbarHeight / 5 + 'px;border-bottom:' + taskbarHeight / 5 + 'px solid transparent;>' + '</div></div>' : '');\n    var milestoneTemplate = '<div class=\"' + cls.manualParentMilestone + '\" style=\"position:absolute;left:' + (data.ganttProperties.left - data.ganttProperties.autoLeft - this.milestoneHeight / 2) + 'px;width:' + this.milesStoneRadius * 2 + 'px;\">' + '<div class=\"' + cls.manualParentMilestoneTop + '\" style=\"border-right-width:' + this.milesStoneRadius + 'px;border-left-width:' + this.milesStoneRadius + 'px;border-bottom-width:' + this.milesStoneRadius + 'px;\"></div>' + '<div class=\"' + cls.manualParentMilestoneBottom + '\" style=\"top:' + this.milesStoneRadius + 'px;border-right-width:' + this.milesStoneRadius + 'px; border-left-width:' + this.milesStoneRadius + 'px; border-top-width:' + this.milesStoneRadius + 'px;\"></div></div>';\n    return this.createDivElement(data.ganttProperties.width === 0 ? milestoneTemplate : template);\n  };\n  /**\n   * To get parent taskbar node.\n   *\n   * @param {number} i .\n   * @param {NodeList} rootElement .\n   * @returns {NodeList} .\n   * @private\n   */\n\n\n  ChartRows.prototype.getParentTaskbarNode = function (i, rootElement) {\n    var parentTaskbarNode = null;\n    var data = this.templateData;\n\n    if (this.parentTaskbarTemplateFunction) {\n      parentTaskbarNode = this.parentTaskbarTemplateFunction(extend({\n        index: i\n      }, data), this.parent, 'ParentTaskbarTemplate', this.getTemplateID('ParentTaskbarTemplate'), false, undefined, rootElement[0]);\n    } else {\n      var labelString = '';\n      var labelDiv = void 0;\n      var tHeight = this.taskBarHeight / 5;\n      var template = this.createDivElement('<div class=\"' + cls.parentTaskBarInnerDiv + ' ' + this.getExpandClass(data) + ' ' + cls.traceParentTaskBar + '\"' + ' style=\"width:' + (data.ganttProperties.isAutoSchedule ? data.ganttProperties.width : data.ganttProperties.autoWidth) + 'px;height:' + (data.ganttProperties.isAutoSchedule ? this.taskBarHeight : tHeight * 3) + 'px;margin-top:' + (data.ganttProperties.isAutoSchedule ? '' : tHeight * 2) + 'px;\">' + '</div>');\n      var progressBarInnerDiv = this.createDivElement('<div class=\"' + cls.parentProgressBarInnerDiv + ' ' + this.getExpandClass(data) + ' ' + cls.traceParentProgressBar + '\"' + ' style=\"border-style:' + (data.ganttProperties.progressWidth ? 'solid;' : 'none;') + 'width:' + data.ganttProperties.progressWidth + 'px;' + 'border-top-right-radius:' + this.getBorderRadius(data) + 'px;' + 'border-bottom-right-radius:' + this.getBorderRadius(data) + 'px;height:100%;\"></div>');\n\n      if (this.taskLabelTemplateFunction) {\n        var parentTaskLabelNode = this.taskLabelTemplateFunction(extend({\n          index: i\n        }, data), this.parent, 'TaskLabelTemplate', this.getTemplateID('TaskLabelTemplate'), false, undefined, progressBarInnerDiv[0]);\n\n        if (parentTaskLabelNode && parentTaskLabelNode.length > 0) {\n          var div = createElement('div');\n          div.appendChild(parentTaskLabelNode[0]);\n          labelString = div.innerHTML;\n        }\n      } else {\n        labelString = this.getTaskLabel(this.parent.labelSettings.taskLabel);\n        labelString = labelString === 'isCustomTemplate' ? this.parent.labelSettings.taskLabel : labelString;\n      }\n\n      if (labelString !== 'null') {\n        labelDiv = this.createDivElement('<span class=\"' + cls.taskLabel + '\" style=\"line-height:' + (this.taskBarHeight - 1) + 'px; display:' + (this.parent.viewType === 'ResourceView' ? 'inline-flex;' : '') + 'width:' + (this.parent.viewType === 'ResourceView' ? data.ganttProperties.width - 10 : '') + 'px; height:' + this.taskBarHeight + 'px;\">' + labelString + '</span>');\n        progressBarInnerDiv[0].appendChild([].slice.call(labelDiv)[0]);\n      }\n\n      var milestoneTemplate = '<div class=\"' + cls.parentMilestone + '\" style=\"position:absolute;\">' + '<div class=\"' + cls.parentMilestoneTop + '\" style=\"border-right-width:' + this.milesStoneRadius + 'px;border-left-width:' + this.milesStoneRadius + 'px;border-bottom-width:' + this.milesStoneRadius + 'px;\"></div>' + '<div class=\"' + cls.parentMilestoneBottom + '\" style=\"top:' + this.milesStoneRadius + 'px;border-right-width:' + this.milesStoneRadius + 'px; border-left-width:' + this.milesStoneRadius + 'px; border-top-width:' + this.milesStoneRadius + 'px;\"></div></div>';\n      template[0].appendChild([].slice.call(progressBarInnerDiv)[0]);\n      parentTaskbarNode = data.ganttProperties.isMilestone ? this.createDivElement(data.ganttProperties.isAutoSchedule ? milestoneTemplate : '') : template;\n    }\n\n    return parentTaskbarNode;\n  };\n  /**\n   * To get taskbar row('TR') node\n   *\n   * @returns {NodeList} .\n   * @private\n   */\n\n\n  ChartRows.prototype.getTableTrNode = function () {\n    var table = createElement('table');\n    var className = this.parent.gridLines === 'Horizontal' || this.parent.gridLines === 'Both' ? 'e-chart-row-border' : '';\n    table.innerHTML = '<tr class=\"' + this.getRowClassName(this.templateData) + ' ' + cls.chartRow + '\"' + 'style=\"display:' + this.getExpandDisplayProp(this.templateData) + ';height:' + this.parent.rowHeight + 'px;\">' + '<td class=\"' + cls.chartRowCell + ' ' + className + '\" style=\"width:' + this.parent.timelineModule.totalTimelineWidth + 'px;\"></td></tr>';\n    return table.childNodes;\n  };\n  /**\n   * To initialize chart templates.\n   *\n   * @returns {void}\n   * @private\n   */\n\n\n  ChartRows.prototype.initializeChartTemplate = function () {\n    if (!isNullOrUndefined(this.parent.parentTaskbarTemplate)) {\n      this.parentTaskbarTemplateFunction = this.templateCompiler(this.parent.parentTaskbarTemplate);\n    }\n\n    if (!isNullOrUndefined(this.parent.labelSettings.leftLabel) && this.isTemplate(this.parent.labelSettings.leftLabel)) {\n      this.leftTaskLabelTemplateFunction = this.templateCompiler(this.parent.labelSettings.leftLabel);\n    }\n\n    if (!isNullOrUndefined(this.parent.labelSettings.rightLabel) && this.isTemplate(this.parent.labelSettings.rightLabel)) {\n      this.rightTaskLabelTemplateFunction = this.templateCompiler(this.parent.labelSettings.rightLabel);\n    }\n\n    if (!isNullOrUndefined(this.parent.labelSettings.taskLabel) && this.isTemplate(this.parent.labelSettings.taskLabel)) {\n      this.taskLabelTemplateFunction = this.templateCompiler(this.parent.labelSettings.taskLabel);\n    }\n\n    if (!isNullOrUndefined(this.parent.taskbarTemplate)) {\n      this.childTaskbarTemplateFunction = this.templateCompiler(this.parent.taskbarTemplate);\n    }\n\n    if (!isNullOrUndefined(this.parent.milestoneTemplate)) {\n      this.milestoneTemplateFunction = this.templateCompiler(this.parent.milestoneTemplate);\n    }\n  };\n\n  ChartRows.prototype.createDivElement = function (template) {\n    var div = createElement('div');\n    div.innerHTML = template;\n    return div.childNodes;\n  };\n\n  ChartRows.prototype.isTemplate = function (template) {\n    var result = false;\n\n    if (typeof template !== 'string' || template.indexOf('#') === 0 || template.indexOf('<') > -1 || template.indexOf('$') > -1) {\n      result = true;\n    }\n\n    return result;\n  };\n  /**\n   * @param {string} templateName .\n   * @returns {string} .\n   * @private\n   */\n\n\n  ChartRows.prototype.getTemplateID = function (templateName) {\n    var ganttID = this.parent.element.id;\n    return ganttID + templateName;\n  };\n\n  ChartRows.prototype.leftLabelContainer = function () {\n    var template = '<div class=\"' + (this.leftTaskLabelTemplateFunction ? cls.leftLabelTempContainer : cls.leftLabelContainer) + ' ' + '\" tabindex=\"-1\" style=\"height:' + (this.parent.rowHeight - 1) + 'px;width:' + this.taskNameWidth(this.templateData) + '\"></div>';\n    return this.createDivElement(template);\n  };\n\n  ChartRows.prototype.taskbarContainer = function () {\n    var data = this.templateData;\n    var manualParent = this.parent.editModule && this.parent.editSettings.allowTaskbarEditing && this.parent.editModule.taskbarEditModule.taskBarEditAction === 'ParentResizing' ? true : false;\n    var template = '<div class=\"' + cls.taskBarMainContainer + ' ' + this.parent.getUnscheduledTaskClass(data.ganttProperties) + ' ' + (data.ganttProperties.cssClass ? data.ganttProperties.cssClass : '') + '\" ' + ' tabindex=\"-1\" style=\"' + (data.ganttProperties.isMilestone && !manualParent ? 'width:' + this.milestoneHeight + 'px;height:' + this.milestoneHeight + 'px;margin-top:' + this.milestoneMarginTop + 'px;left:' + (data.ganttProperties.left - this.milestoneHeight / 2) + 'px;' : 'width:' + data.ganttProperties.width + 'px;margin-top:' + this.taskBarMarginTop + 'px;left:' + (!data.hasChildRecords || data.ganttProperties.isAutoSchedule ? data.ganttProperties.left : data.ganttProperties.autoLeft) + 'px;height:' + this.taskBarHeight + 'px;cursor:' + (data.ganttProperties.isAutoSchedule ? 'move;' : 'auto;')) + '\"></div>';\n    return this.createDivElement(template);\n  };\n\n  ChartRows.prototype.rightLabelContainer = function () {\n    var template = '<div class=\"' + (this.rightTaskLabelTemplateFunction ? cls.rightLabelTempContainer : cls.rightLabelContainer) + '\" ' + ' tabindex=\"-1\" style=\"left:' + this.getRightLabelLeft(this.templateData) + 'px;height:' + (this.parent.rowHeight - 1) + 'px;\"></div>';\n    return this.createDivElement(template);\n  };\n\n  ChartRows.prototype.childTaskbarLeftResizer = function () {\n    var lResizerLeft = -(this.parent.isAdaptive ? 12 : 2);\n    var template = '<div class=\"' + cls.taskBarLeftResizer + ' ' + cls.icon + '\"' + ' style=\"left:' + lResizerLeft + 'px;height:' + this.taskBarHeight + 'px;\"></div>';\n    return this.createDivElement(template);\n  };\n\n  ChartRows.prototype.childTaskbarRightResizer = function () {\n    var rResizerLeft = this.parent.isAdaptive ? -2 : -10;\n    var template = '<div class=\"' + cls.taskBarRightResizer + ' ' + cls.icon + '\"' + ' style=\"left:' + (this.templateData.ganttProperties.width + rResizerLeft) + 'px;' + 'height:' + this.taskBarHeight + 'px;\"></div>';\n    return this.createDivElement(template);\n  };\n\n  ChartRows.prototype.childTaskbarProgressResizer = function () {\n    var template = '<div class=\"' + cls.childProgressResizer + '\"' + ' style=\"left:' + (this.templateData.ganttProperties.progressWidth - 6) + 'px;margin-top:' + (this.taskBarHeight - 4) + 'px;\"><div class=\"' + cls.progressBarHandler + '\"' + '><div class=\"' + cls.progressHandlerElement + '\"></div>' + '<div class=\"' + cls.progressBarHandlerAfter + '\"></div></div>';\n    return this.createDivElement(template);\n  };\n\n  ChartRows.prototype.getLeftPointNode = function () {\n    var data = this.templateData;\n    var pointerLeft = -((this.parent.isAdaptive ? 14 : 2) + this.connectorPointWidth);\n    var mileStoneLeft = -(this.connectorPointWidth + 2);\n    var pointerTop = Math.floor(this.milesStoneRadius - this.connectorPointWidth / 2);\n    var template = '<div class=\"' + cls.leftConnectorPointOuterDiv + '\" style=\"' + (data.ganttProperties.isMilestone ? 'margin-top:' + pointerTop + 'px;left:' + mileStoneLeft + 'px;' : 'margin-top:' + this.connectorPointMargin + 'px;left:' + pointerLeft + 'px;') + '\">' + '<div class=\"' + cls.connectorPointLeft + ' ' + this.parent.getUnscheduledTaskClass(data.ganttProperties) + '\" style=\"width: ' + this.connectorPointWidth + 'px;' + 'height: ' + this.connectorPointWidth + 'px;\">' + this.touchLeftConnectorpoint + '</div></div>';\n    return this.createDivElement(template);\n  };\n\n  ChartRows.prototype.getRightPointNode = function () {\n    var data = this.templateData;\n    var pointerRight = this.parent.isAdaptive ? 10 : -2;\n    var pointerTop = Math.floor(this.milesStoneRadius - this.connectorPointWidth / 2);\n    var template = '<div class=\"' + cls.rightConnectorPointOuterDiv + '\" style=\"' + (data.ganttProperties.isMilestone ? 'left:' + (this.milestoneHeight - 2) + 'px;margin-top:' + pointerTop + 'px;' : 'left:' + (data.ganttProperties.width + pointerRight) + 'px;margin-top:' + this.connectorPointMargin + 'px;') + '\">' + '<div class=\"' + cls.connectorPointRight + ' ' + this.parent.getUnscheduledTaskClass(data.ganttProperties) + '\" style=\"width:' + this.connectorPointWidth + 'px;height:' + this.connectorPointWidth + 'px;\">' + this.touchRightConnectorpoint + '</div></div>';\n    return this.createDivElement(template);\n  };\n  /**\n   * To get task label.\n   *\n   * @param {string} field .\n   * @returns {string} .\n   * @private\n   */\n\n\n  ChartRows.prototype.getTaskLabel = function (field) {\n    var length = this.parent.ganttColumns.length;\n    var resultString = null;\n\n    if (!isNullOrUndefined(field) && field !== '') {\n      if (field === this.parent.taskFields.resourceInfo) {\n        resultString = this.getResourceName(this.templateData);\n      } else {\n        for (var i = 0; i < length; i++) {\n          if (field === this.parent.ganttColumns[i].field) {\n            resultString = this.getFieldValue(this.templateData[field]).toString();\n            break;\n          }\n        }\n\n        if (isNullOrUndefined(resultString)) {\n          return 'isCustomTemplate';\n        }\n      }\n    } else {\n      resultString = '';\n    }\n\n    return resultString;\n  };\n\n  ChartRows.prototype.getExpandDisplayProp = function (data) {\n    data = this.templateData;\n\n    if (this.parent.getExpandStatus(data)) {\n      return 'table-row';\n    }\n\n    return 'none';\n  };\n\n  ChartRows.prototype.getRowClassName = function (data) {\n    data = this.templateData;\n    var rowClass = 'gridrowtaskId';\n    var parentItem = data.parentItem;\n\n    if (parentItem) {\n      rowClass += parentItem.taskId.toString();\n    }\n\n    rowClass += 'level';\n    rowClass += data.level.toString();\n    return rowClass;\n  };\n\n  ChartRows.prototype.getBorderRadius = function (data) {\n    data = this.templateData;\n    var diff = data.ganttProperties.width - data.ganttProperties.progressWidth;\n\n    if (diff <= 4) {\n      return 4 - diff;\n    } else {\n      return 0;\n    }\n  };\n\n  ChartRows.prototype.getSplitTaskBorderRadius = function (data) {\n    var diff = data.width - data.progressWidth;\n\n    if (diff <= 4) {\n      return 4 - diff;\n    } else {\n      return 0;\n    }\n  };\n\n  ChartRows.prototype.taskNameWidth = function (ganttData) {\n    ganttData = this.templateData;\n    var ganttProp = ganttData.ganttProperties;\n    var width;\n\n    if (ganttData.ganttProperties.isMilestone) {\n      width = ganttData.ganttProperties.left - this.parent.getTaskbarHeight() / 2;\n    } else if (ganttData.hasChildRecords && !ganttProp.isAutoSchedule) {\n      if (!this.parent.allowUnscheduledTasks) {\n        width = ganttProp.autoStartDate.getTime() < ganttProp.startDate.getTime() ? ganttProp.autoLeft : ganttProp.left;\n      } else {\n        width = ganttProp.left < ganttProp.autoLeft ? ganttProp.left : ganttProp.autoLeft;\n      }\n    } else {\n      width = ganttData.ganttProperties.left;\n    }\n\n    if (width < 0) {\n      width = 0;\n    }\n\n    return width + 'px';\n  };\n\n  ChartRows.prototype.getRightLabelLeft = function (ganttData) {\n    ganttData = this.templateData;\n    var ganttProp = ganttData.ganttProperties;\n    var left;\n    var endLeft;\n    var width;\n\n    if (ganttData.ganttProperties.isMilestone) {\n      return ganttData.ganttProperties.left + this.parent.getTaskbarHeight() / 2;\n    } else if (ganttData.hasChildRecords && !ganttProp.isAutoSchedule) {\n      if (!this.parent.allowUnscheduledTasks) {\n        left = ganttProp.autoStartDate.getTime() < ganttProp.startDate.getTime() ? ganttProp.autoLeft : ganttProp.left;\n        endLeft = ganttProp.autoEndDate.getTime() < ganttProp.endDate.getTime() ? this.parent.dataOperation.getTaskLeft(ganttProp.endDate, ganttProp.isMilestone) : this.parent.dataOperation.getTaskLeft(ganttProp.autoEndDate, ganttProp.isMilestone);\n        width = endLeft - left;\n      } else {\n        left = ganttProp.left < ganttProp.autoLeft ? ganttProp.left : ganttProp.autoLeft;\n        width = ganttProp.autoWidth;\n      }\n\n      return left + width;\n    } else {\n      return ganttData.ganttProperties.left + ganttData.ganttProperties.width;\n    }\n  };\n\n  ChartRows.prototype.getExpandClass = function (data) {\n    data = this.templateData;\n\n    if (data.expanded) {\n      return cls.rowExpand;\n    } else if (!data.expanded && data.hasChildRecords) {\n      return cls.rowCollapse;\n    }\n\n    return '';\n  };\n\n  ChartRows.prototype.getFieldValue = function (field) {\n    return isNullOrUndefined(field) ? '' : field;\n  };\n\n  ChartRows.prototype.getResourceName = function (ganttData) {\n    ganttData = this.templateData;\n    var resource = null;\n\n    if (!isNullOrUndefined(ganttData.ganttProperties.resourceInfo)) {\n      var length_2 = ganttData.ganttProperties.resourceInfo.length;\n\n      if (length_2 > 0) {\n        for (var i = 0; i < length_2; i++) {\n          var resourceName = ganttData.ganttProperties.resourceInfo[i][this.parent.resourceFields.name];\n          var resourceUnit = ganttData.ganttProperties.resourceInfo[i][this.parent.resourceFields.unit];\n\n          if (resourceUnit !== 100) {\n            resourceName += '[' + resourceUnit + '%' + ']';\n          }\n\n          if (isNullOrUndefined(resource)) {\n            resource = resourceName;\n          } else {\n            resource += ' , ' + resourceName;\n          }\n        }\n\n        return resource;\n      } else {\n        return '';\n      }\n    }\n\n    return '';\n  };\n  /**\n   * To initialize private variable help to render task bars.\n   *\n   * @returns {void}\n   * @private\n   */\n\n\n  ChartRows.prototype.initChartHelperPrivateVariable = function () {\n    this.baselineColor = !isNullOrUndefined(this.parent.baselineColor) && this.parent.baselineColor !== '' ? this.parent.baselineColor : null;\n    this.taskBarHeight = isNullOrUndefined(this.parent.taskbarHeight) || this.parent.taskbarHeight >= this.parent.rowHeight ? Math.floor(this.parent.rowHeight * 0.62) : this.parent.taskbarHeight; // 0.62 -- Standard Ratio.\n\n    if (this.parent.renderBaseline) {\n      var height = void 0;\n\n      if (this.taskBarHeight + this.baselineHeight <= this.parent.rowHeight) {\n        height = this.taskBarHeight;\n      } else {\n        height = this.taskBarHeight - (this.baselineHeight + 1);\n      }\n\n      this.taskBarHeight = height;\n    }\n\n    this.milestoneHeight = Math.floor(this.taskBarHeight * 0.82); // 0.82 -- Standard Ratio.\n\n    this.taskBarMarginTop = Math.floor((this.parent.rowHeight - this.taskBarHeight) / 2);\n    this.milestoneMarginTop = Math.floor((this.parent.rowHeight - this.milestoneHeight) / 2);\n    this.milesStoneRadius = Math.floor(this.milestoneHeight / 2);\n    this.baselineTop = -(Math.floor(this.parent.rowHeight - (this.taskBarHeight + this.taskBarMarginTop)) - 1);\n    this.connectorPointWidth = this.parent.isAdaptive ? Math.round(this.taskBarHeight / 2) : 8;\n    this.connectorPointMargin = Math.floor(this.taskBarHeight / 2 - this.connectorPointWidth / 2);\n  };\n  /**\n   * Function used to refresh Gantt rows.\n   *\n   * @returns {void}\n   * @private\n   */\n\n\n  ChartRows.prototype.refreshGanttRows = function () {\n    this.parent.currentViewData = this.parent.treeGrid.getCurrentViewRecords().slice();\n    this.createTaskbarTemplate();\n\n    if (this.parent.viewType === 'ResourceView' && this.parent.showOverAllocation) {\n      for (var i = 0; i < this.parent.currentViewData.length; i++) {\n        var data = this.parent.currentViewData[i];\n\n        if (data.childRecords.length > 0) {\n          this.parent.setRecordValue('workTimelineRanges', this.parent.dataOperation.mergeRangeCollections(data.ganttProperties.workTimelineRanges, true), data.ganttProperties, true);\n          this.parent.dataOperation.calculateRangeLeftWidth(data.ganttProperties.workTimelineRanges);\n        }\n      }\n\n      this.parent.ganttChartModule.renderRangeContainer(this.parent.currentViewData);\n    }\n  };\n  /**\n   * To render taskbars.\n   *\n   * @returns {void}\n   * @private\n   */\n\n\n  ChartRows.prototype.createTaskbarTemplate = function () {\n    var trs = [].slice.call(this.ganttChartTableBody.querySelectorAll('tr'));\n    this.ganttChartTableBody.innerHTML = '';\n    var collapsedResourceRecord = [];\n    var prevCurrentView = this.parent.treeGridModule.prevCurrentView;\n    this.refreshedTr = [];\n    this.refreshedData = [];\n\n    if (this.parent.enableImmutableMode && prevCurrentView && prevCurrentView.length > 0 && this.isUpdated) {\n      var oldKeys = {};\n      var oldRowElements = [];\n      var key = this.parent.treeGrid.getPrimaryKeyFieldNames()[0];\n\n      for (var i = 0; i < prevCurrentView.length; i++) {\n        oldRowElements[i] = trs[i];\n        oldKeys[prevCurrentView[i][key]] = i;\n      }\n\n      for (var index = 0; index < this.parent.currentViewData.length; index++) {\n        var oldIndex = oldKeys[this.parent.currentViewData[index][key]];\n        var modifiedRecIndex = this.parent.modifiedRecords.indexOf(this.parent.currentViewData[index]);\n\n        if (isNullOrUndefined(oldIndex) || modifiedRecIndex !== -1) {\n          var tRow = this.getGanttChartRow(index, this.parent.currentViewData[index]);\n          this.ganttChartTableBody.appendChild(tRow);\n          this.refreshedTr.push(this.ganttChartTableBody.querySelectorAll('tr')[index]);\n          this.refreshedData.push(this.parent.currentViewData[index]);\n        } else {\n          this.ganttChartTableBody.appendChild(oldRowElements[oldIndex]);\n        }\n\n        this.ganttChartTableBody.querySelectorAll('tr')[index].setAttribute('aria-rowindex', index.toString());\n      }\n    } else {\n      for (var i = 0; i < this.parent.currentViewData.length; i++) {\n        var tempTemplateData = this.parent.currentViewData[i];\n\n        if (this.parent.viewType === 'ResourceView' && !tempTemplateData.expanded && this.parent.enableMultiTaskbar) {\n          collapsedResourceRecord.push(tempTemplateData);\n        }\n\n        var tRow = this.getGanttChartRow(i, tempTemplateData);\n        this.ganttChartTableBody.appendChild(tRow);\n\n        if (this.parent.enableImmutableMode) {\n          this.refreshedTr.push(this.ganttChartTableBody.querySelectorAll('tr')[i]);\n          this.refreshedData.push(this.parent.currentViewData[i]);\n        } // To maintain selection when virtualization is enabled\n\n\n        if (this.parent.selectionModule && this.parent.allowSelection) {\n          this.parent.selectionModule.maintainSelectedRecords(parseInt(tRow.getAttribute('aria-rowindex'), 10));\n        }\n      }\n    }\n\n    this.triggerQueryTaskbarInfo();\n    this.parent.modifiedRecords = [];\n\n    if (collapsedResourceRecord.length) {\n      for (var j = 0; j < collapsedResourceRecord.length; j++) {\n        if (collapsedResourceRecord[j].hasChildRecords) {\n          this.parent.isGanttChartRendered = true;\n          this.parent.chartRowsModule.refreshRecords([collapsedResourceRecord[j]]);\n        }\n      }\n    }\n\n    this.parent.renderTemplates();\n  };\n  /**\n   * To render taskbars.\n   *\n   * @param {number} i .\n   * @param {IGanttData} tempTemplateData .\n   * @returns {Node} .\n   * @private\n   */\n\n\n  ChartRows.prototype.getGanttChartRow = function (i, tempTemplateData) {\n    this.templateData = tempTemplateData;\n    var taskBaselineTemplateNode = null;\n    var parentTrNode = this.getTableTrNode();\n    var leftLabelNode = this.getLeftLabelNode(i);\n    var taskbarContainerNode = this.taskbarContainer();\n    taskbarContainerNode[0].setAttribute('aria-label', this.generateAriaLabel(this.templateData));\n    taskbarContainerNode[0].setAttribute('rowUniqueId', this.templateData.ganttProperties.rowUniqueID);\n\n    if (!this.templateData.hasChildRecords) {\n      var connectorLineLeftNode = this.getLeftPointNode();\n      taskbarContainerNode[0].appendChild([].slice.call(connectorLineLeftNode)[0]);\n    }\n\n    if (this.templateData.hasChildRecords) {\n      var parentTaskbarTemplateNode = this.getParentTaskbarNode(i, taskbarContainerNode);\n\n      if (!this.templateData.ganttProperties.isAutoSchedule) {\n        var manualTaskbar = this.getManualTaskbar();\n        taskbarContainerNode[0].appendChild([].slice.call(manualTaskbar)[0]);\n      }\n\n      if (parentTaskbarTemplateNode && parentTaskbarTemplateNode.length > 0) {\n        taskbarContainerNode[0].appendChild([].slice.call(parentTaskbarTemplateNode)[0]);\n      }\n\n      if (this.parent.renderBaseline && this.templateData.ganttProperties.baselineStartDate && this.templateData.ganttProperties.baselineEndDate) {\n        taskBaselineTemplateNode = this.getTaskBaselineNode();\n      }\n    } else if (this.templateData.ganttProperties.isMilestone) {\n      var milestoneTemplateNode = this.getMilestoneNode(i, taskbarContainerNode);\n\n      if (milestoneTemplateNode && milestoneTemplateNode.length > 0) {\n        taskbarContainerNode[0].appendChild([].slice.call(milestoneTemplateNode)[0]);\n      }\n\n      if (this.parent.renderBaseline && this.templateData.ganttProperties.baselineStartDate && this.templateData.ganttProperties.baselineEndDate) {\n        taskBaselineTemplateNode = this.getMilestoneBaselineNode();\n      }\n    } else {\n      var scheduledTask = isScheduledTask(this.templateData.ganttProperties); // eslint-disable-line\n\n      var childTaskbarProgressResizeNode = null;\n      var childTaskbarRightResizeNode = null;\n      var childTaskbarLeftResizeNode = null;\n\n      if (!isNullOrUndefined(scheduledTask)) {\n        if (scheduledTask || this.templateData.ganttProperties.duration) {\n          if (scheduledTask && (isNullOrUndefined(this.templateData.ganttProperties.segments) || this.templateData.ganttProperties.segments.length <= 0)) {\n            childTaskbarProgressResizeNode = this.childTaskbarProgressResizer();\n            childTaskbarLeftResizeNode = this.childTaskbarLeftResizer();\n            childTaskbarRightResizeNode = this.childTaskbarRightResizer();\n          }\n        }\n\n        var childTaskbarTemplateNode = this.getChildTaskbarNode(i, taskbarContainerNode);\n\n        if (childTaskbarLeftResizeNode) {\n          taskbarContainerNode[0].appendChild([].slice.call(childTaskbarLeftResizeNode)[0]);\n        }\n\n        if (childTaskbarTemplateNode && childTaskbarTemplateNode.length > 0) {\n          if (this.templateData.ganttProperties.segments && this.templateData.ganttProperties.segments.length > 0) {\n            var length_3 = this.templateData.ganttProperties.segments.length;\n            var connector = '<div class=\"e-gantt-split-container-line\"></div>';\n            var segmentConnector = null;\n            segmentConnector = this.createDivElement(connector);\n            taskbarContainerNode[0].appendChild([].slice.call(segmentConnector)[0]);\n\n            for (var i_1 = 0; i_1 < length_3; i_1++) {\n              taskbarContainerNode[0].appendChild([].slice.call(childTaskbarTemplateNode)[0]);\n            }\n          } else {\n            taskbarContainerNode[0].appendChild([].slice.call(childTaskbarTemplateNode)[0]);\n          }\n        }\n\n        if (childTaskbarProgressResizeNode) {\n          taskbarContainerNode[0].appendChild([].slice.call(childTaskbarProgressResizeNode)[0]);\n        }\n\n        if (childTaskbarRightResizeNode) {\n          taskbarContainerNode[0].appendChild([].slice.call(childTaskbarRightResizeNode)[0]);\n        }\n      }\n\n      if (this.parent.renderBaseline && this.templateData.ganttProperties.baselineStartDate && this.templateData.ganttProperties.baselineEndDate) {\n        taskBaselineTemplateNode = this.getTaskBaselineNode();\n      }\n    }\n\n    if (!this.templateData.hasChildRecords) {\n      var connectorLineRightNode = this.getRightPointNode();\n      taskbarContainerNode[0].appendChild([].slice.call(connectorLineRightNode)[0]);\n    }\n\n    var rightLabelNode = this.getRightLabelNode(i);\n    parentTrNode[0].childNodes[0].childNodes[0].appendChild([].slice.call(leftLabelNode)[0]);\n    parentTrNode[0].childNodes[0].childNodes[0].appendChild([].slice.call(taskbarContainerNode)[0]);\n\n    if (this.templateData.ganttProperties.indicators && this.templateData.ganttProperties.indicators.length > 0) {\n      var taskIndicatorNode = void 0;\n      var taskIndicatorTextFunction = void 0;\n      var taskIndicatorTextNode = void 0;\n      var indicators = this.templateData.ganttProperties.indicators;\n\n      for (var indicatorIndex = 0; indicatorIndex < indicators.length; indicatorIndex++) {\n        taskIndicatorNode = this.getIndicatorNode(indicators[indicatorIndex]);\n\n        if (indicators[indicatorIndex].name.indexOf('$') > -1 || indicators[indicatorIndex].name.indexOf('#') > -1) {\n          taskIndicatorTextFunction = this.templateCompiler(indicators[indicatorIndex].name);\n          taskIndicatorTextNode = taskIndicatorTextFunction(extend({\n            index: i\n          }, this.templateData), this.parent, 'indicatorLabelText');\n        } else {\n          var text = createElement('Text');\n          text.innerHTML = indicators[indicatorIndex].name;\n          taskIndicatorTextNode = text.childNodes;\n        }\n\n        taskIndicatorNode[0].appendChild([].slice.call(taskIndicatorTextNode)[0]);\n        taskIndicatorNode[0].title = !isNullOrUndefined(indicators[indicatorIndex].tooltip) ? indicators[indicatorIndex].tooltip : '';\n        parentTrNode[0].childNodes[0].childNodes[0].appendChild([].slice.call(taskIndicatorNode)[0]);\n      }\n    }\n\n    if (rightLabelNode && rightLabelNode.length > 0) {\n      parentTrNode[0].childNodes[0].childNodes[0].appendChild([].slice.call(rightLabelNode)[0]);\n    }\n\n    if (!isNullOrUndefined(taskBaselineTemplateNode)) {\n      parentTrNode[0].childNodes[0].childNodes[0].appendChild([].slice.call(taskBaselineTemplateNode)[0]);\n    }\n\n    var tRow = parentTrNode[0].childNodes[0];\n    this.setAriaRowIndex(tempTemplateData, tRow);\n    return tRow;\n  };\n  /**\n   * To set aria-rowindex for chart rows\n   *\n   * @returns {void} .\n   * @private\n   */\n\n\n  ChartRows.prototype.setAriaRowIndex = function (tempTemplateData, tRow) {\n    var dataSource = this.parent.treeGrid.getCurrentViewRecords();\n    var visualData = this.parent.virtualScrollModule && this.parent.enableVirtualization ? getValue('virtualScrollModule.visualData', this.parent.treeGrid) : dataSource;\n    var index = visualData.indexOf(tempTemplateData);\n    tRow.setAttribute('aria-rowindex', index.toString());\n  };\n  /**\n   * To trigger query taskbar info event.\n   *\n   * @returns {void}\n   * @private\n   */\n\n\n  ChartRows.prototype.triggerQueryTaskbarInfo = function () {\n    if (!this.parent.queryTaskbarInfo) {\n      return;\n    }\n\n    var length = this.parent.enableImmutableMode ? this.refreshedTr.length : this.ganttChartTableBody.querySelectorAll('tr').length;\n    var trElement;\n    var data;\n\n    for (var index = 0; index < length; index++) {\n      trElement = this.parent.enableImmutableMode ? this.refreshedTr[index] : this.ganttChartTableBody.querySelectorAll('tr')[index];\n      data = this.refreshedData.length > 0 ? this.refreshedData[index] : this.parent.currentViewData[index];\n      var segmentLength = !isNullOrUndefined(data.ganttProperties.segments) && data.ganttProperties.segments.length;\n\n      if (segmentLength > 0) {\n        for (var i = 0; i < segmentLength; i++) {\n          var segmentedTasks = trElement.getElementsByClassName('e-segmented-taskbar');\n          var segmentElement = segmentedTasks[i];\n          this.triggerQueryTaskbarInfoByIndex(segmentElement, data);\n        }\n      } else if (trElement) {\n        this.triggerQueryTaskbarInfoByIndex(trElement, data);\n      }\n    }\n  };\n  /**\n   *\n   * @param {Element} trElement .\n   * @param {IGanttData} data .\n   * @returns {void} .\n   * @private\n   */\n\n\n  ChartRows.prototype.triggerQueryTaskbarInfoByIndex = function (trElement, data) {\n    var _this = this; // eslint-disable-next-line\n\n\n    var taskbarElement = !isNullOrUndefined(data.ganttProperties.segments) && data.ganttProperties.segments.length > 0 ? trElement : trElement.querySelector('.' + cls.taskBarMainContainer);\n    var rowElement;\n    var triggerTaskbarElement;\n    var args = {\n      data: data,\n      rowElement: trElement,\n      taskbarElement: taskbarElement,\n      taskbarType: data.hasChildRecords ? 'ParentTask' : data.ganttProperties.isMilestone ? 'Milestone' : 'ChildTask'\n    };\n    var classCollections = this.getClassName(args);\n\n    if (args.taskbarType === 'Milestone') {\n      args.milestoneColor = taskbarElement.querySelector(classCollections[0]) ? getComputedStyle(taskbarElement.querySelector(classCollections[0])).borderBottomColor : null;\n      args.baselineColor = trElement.querySelector(classCollections[1]) ? getComputedStyle(trElement.querySelector(classCollections[1])).borderBottomColor : null;\n    } else {\n      var childTask = taskbarElement.querySelector(classCollections[0]);\n      var progressTask = taskbarElement.querySelector(classCollections[1]);\n      args.taskbarBgColor = isNullOrUndefined(childTask) ? null : taskbarElement.classList.contains(cls.traceChildTaskBar) ? getComputedStyle(taskbarElement).backgroundColor : getComputedStyle(taskbarElement.querySelector(classCollections[0])).backgroundColor;\n      args.taskbarBorderColor = isNullOrUndefined(childTask) ? null : taskbarElement.classList.contains(cls.traceChildTaskBar) ? getComputedStyle(taskbarElement).backgroundColor : getComputedStyle(taskbarElement.querySelector(classCollections[0])).borderColor;\n      args.progressBarBgColor = isNullOrUndefined(progressTask) ? null : taskbarElement.classList.contains(cls.traceChildProgressBar) ? getComputedStyle(taskbarElement).backgroundColor : getComputedStyle(taskbarElement.querySelector(classCollections[1])).backgroundColor; // args.progressBarBorderColor = taskbarElement.querySelector(progressBarClass) ?\n      //     getComputedStyle(taskbarElement.querySelector(progressBarClass)).borderColor : null;\n\n      args.baselineColor = trElement.querySelector('.' + cls.baselineBar) ? getComputedStyle(trElement.querySelector('.' + cls.baselineBar)).backgroundColor : null;\n      args.taskLabelColor = taskbarElement.querySelector('.' + cls.taskLabel) ? getComputedStyle(taskbarElement.querySelector('.' + cls.taskLabel)).color : null;\n    }\n\n    args.rightLabelColor = trElement.querySelector('.' + cls.rightLabelContainer) && trElement.querySelector('.' + cls.rightLabelContainer).querySelector('.' + cls.label) ? getComputedStyle(trElement.querySelector('.' + cls.rightLabelContainer).querySelector('.' + cls.label)).color : null;\n    args.leftLabelColor = trElement.querySelector('.' + cls.leftLabelContainer) && trElement.querySelector('.' + cls.leftLabelContainer).querySelector('.' + cls.label) ? getComputedStyle(trElement.querySelector('.' + cls.leftLabelContainer).querySelector('.' + cls.label)).color : null;\n    this.parent.trigger('queryTaskbarInfo', args, function (taskbarArgs) {\n      _this.updateQueryTaskbarInfoArgs(taskbarArgs, rowElement, triggerTaskbarElement);\n    });\n  };\n  /**\n   * To update query taskbar info args.\n   *\n   * @param {IQueryTaskbarInfoEventArgs} args .\n   * @param {Element} rowElement .\n   * @param {Element} taskBarElement .\n   * @returns {void}\n   * @private\n   */\n\n\n  ChartRows.prototype.updateQueryTaskbarInfoArgs = function (args, rowElement, taskBarElement) {\n    var trElement = args.rowElement;\n    var taskbarElement = args.taskbarElement;\n    var classCollections = this.getClassName(args);\n\n    if (args.taskbarType === 'Milestone') {\n      if (taskbarElement.querySelector(classCollections[0]) && getComputedStyle(taskbarElement.querySelector(classCollections[0])).borderBottomColor !== args.milestoneColor) {\n        taskbarElement.querySelector(classCollections[0]).style.borderBottomColor = args.milestoneColor;\n        taskbarElement.querySelector('.' + cls.milestoneBottom).style.borderTopColor = args.milestoneColor;\n      }\n\n      if (trElement.querySelector(classCollections[1]) && getComputedStyle(trElement.querySelector(classCollections[1])).borderTopColor !== args.baselineColor) {\n        trElement.querySelector(classCollections[1]).style.borderBottomColor = args.baselineColor;\n        trElement.querySelector('.' + cls.baselineMilestoneBottom).style.borderTopColor = args.baselineColor;\n      }\n    } else {\n      if (taskbarElement.querySelector(classCollections[0]) && getComputedStyle(taskbarElement.querySelector(classCollections[0])).backgroundColor !== args.taskbarBgColor) {\n        taskbarElement.querySelector(classCollections[0]).style.backgroundColor = args.taskbarBgColor;\n      }\n\n      if (taskbarElement.querySelector(classCollections[0]) && getComputedStyle(taskbarElement.querySelector(classCollections[0])).borderColor !== args.taskbarBorderColor) {\n        taskbarElement.querySelector(classCollections[0]).style.borderColor = args.taskbarBorderColor;\n      }\n\n      if (taskbarElement.querySelector(classCollections[1]) && getComputedStyle(taskbarElement.querySelector(classCollections[1])).backgroundColor !== args.progressBarBgColor) {\n        taskbarElement.querySelector(classCollections[1]).style.backgroundColor = args.progressBarBgColor;\n      }\n\n      if (taskbarElement.classList.contains(cls.traceChildTaskBar) && getComputedStyle(taskbarElement).backgroundColor !== args.taskbarBgColor) {\n        taskbarElement.style.backgroundColor = args.taskbarBgColor;\n      }\n\n      if (taskbarElement.classList.contains(cls.traceChildTaskBar) && getComputedStyle(taskbarElement).borderColor !== args.taskbarBorderColor) {\n        taskbarElement.style.borderColor = args.taskbarBorderColor;\n      }\n\n      if (taskbarElement.classList.contains(cls.traceChildProgressBar) && getComputedStyle(taskbarElement).backgroundColor !== args.progressBarBgColor) {\n        taskbarElement.style.backgroundColor = args.progressBarBgColor;\n      } // if (taskbarElement.querySelector(progressBarClass) &&\n      //     getComputedStyle(taskbarElement.querySelector(progressBarClass)).borderColor !== args.progressBarBorderColor) {\n      //     (taskbarElement.querySelector(progressBarClass) as HTMLElement).style.borderColor = args.progressBarBorderColor;\n      // }\n\n\n      if (taskbarElement.querySelector('.' + cls.taskLabel) && getComputedStyle(taskbarElement.querySelector('.' + cls.taskLabel)).color !== args.taskLabelColor) {\n        taskbarElement.querySelector('.' + cls.taskLabel).style.color = args.taskLabelColor;\n      }\n\n      if (trElement.querySelector('.' + cls.baselineBar) && getComputedStyle(trElement.querySelector('.' + cls.baselineBar)).backgroundColor !== args.baselineColor) {\n        trElement.querySelector('.' + cls.baselineBar).style.backgroundColor = args.baselineColor;\n      }\n    }\n\n    if (trElement.querySelector('.' + cls.leftLabelContainer) && trElement.querySelector('.' + cls.leftLabelContainer).querySelector('.' + cls.label) && getComputedStyle(trElement.querySelector('.' + cls.leftLabelContainer).querySelector('.' + cls.label)).color !== args.leftLabelColor) {\n      trElement.querySelector('.' + cls.leftLabelContainer).querySelector('.' + cls.label).style.color = args.leftLabelColor;\n    }\n\n    if (trElement.querySelector('.' + cls.rightLabelContainer) && trElement.querySelector('.' + cls.rightLabelContainer).querySelector('.' + cls.label) && getComputedStyle(trElement.querySelector('.' + cls.rightLabelContainer).querySelector('.' + cls.label)).color !== args.rightLabelColor) {\n      trElement.querySelector('.' + cls.rightLabelContainer).querySelector('.' + cls.label).style.color = args.rightLabelColor;\n    }\n  };\n\n  ChartRows.prototype.getClassName = function (args) {\n    var classCollection = [];\n    classCollection.push('.' + (args.taskbarType === 'ParentTask' ? cls.traceParentTaskBar : args.taskbarType === 'ChildTask' ? cls.traceChildTaskBar : cls.milestoneTop));\n    classCollection.push('.' + (args.taskbarType === 'ParentTask' ? cls.traceParentProgressBar : args.taskbarType === 'ChildTask' ? cls.traceChildProgressBar : cls.baselineMilestoneTop));\n    return classCollection;\n  };\n  /**\n   * To compile template string.\n   *\n   * @param {string} template .\n   * @returns {Function} .\n   * @private\n   */\n\n\n  ChartRows.prototype.templateCompiler = function (template) {\n    if (!isNullOrUndefined(template) && template !== '') {\n      try {\n        if (document.querySelectorAll(template).length) {\n          return compile(document.querySelector(template).innerHTML.trim(), this.parent);\n        } else {\n          return compile(template, this.parent);\n        }\n      } catch (e) {\n        return compile(template, this.parent);\n      }\n    }\n\n    return null;\n  };\n  /**\n   * To refresh edited TR\n   *\n   * @param {number} index .\n   * @param {boolean} isValidateRange .\n   * @returns {void} .\n   * @private\n   */\n\n\n  ChartRows.prototype.refreshRow = function (index, isValidateRange) {\n    var tr = this.ganttChartTableBody.childNodes[index];\n    var selectedItem = this.parent.currentViewData[index];\n\n    if (index !== -1 && selectedItem) {\n      var data = selectedItem;\n\n      if (this.parent.viewType === 'ResourceView' && data.hasChildRecords && !data.expanded && this.parent.enableMultiTaskbar) {\n        tr.replaceChild(this.getResourceParent(data).childNodes[0], tr.childNodes[0]);\n      } else {\n        tr.replaceChild(this.getGanttChartRow(index, data).childNodes[0], tr.childNodes[0]);\n      }\n\n      if (this.parent.viewType === 'ResourceView' && data.hasChildRecords && this.parent.showOverAllocation) {\n        if (isValidateRange) {\n          this.parent.ganttChartModule.renderRangeContainer(this.parent.currentViewData);\n        } else {\n          this.parent.dataOperation.updateOverlappingValues(data);\n          this.parent.ganttChartModule.renderRangeContainer([data]);\n        }\n      }\n\n      var segmentLength = !isNullOrUndefined(data.ganttProperties.segments) && data.ganttProperties.segments.length;\n\n      if (segmentLength > 0) {\n        for (var i = 0; i < segmentLength; i++) {\n          var segmentedTasks = tr.getElementsByClassName('e-segmented-taskbar');\n          var segmentElement = segmentedTasks[i];\n          this.triggerQueryTaskbarInfoByIndex(segmentElement, data);\n        }\n      } else {\n        this.triggerQueryTaskbarInfoByIndex(tr, data);\n      }\n\n      var dataId = this.parent.viewType === 'ProjectView' ? data.ganttProperties.taskId : data.ganttProperties.rowUniqueID;\n      this.parent.treeGrid.grid.setRowData(dataId, data);\n      var row = this.parent.treeGrid.grid.getRowObjectFromUID(this.parent.treeGrid.grid.getDataRows()[index].getAttribute('data-uid'));\n      row.data = data;\n    }\n  };\n\n  ChartRows.prototype.getResourceParent = function (record) {\n    var chartRows = this.parent.ganttChartModule.getChartRows();\n    this.templateData = record;\n    var parentTrNode = this.getTableTrNode();\n    var leftLabelNode = this.leftLabelContainer();\n    var collapseParent = createElement('div', {\n      className: 'e-collapse-parent'\n    });\n    parentTrNode[0].childNodes[0].childNodes[0].appendChild(collapseParent);\n    var tasks = this.parent.dataOperation.setSortedChildTasks(record);\n    this.parent.dataOperation.updateOverlappingIndex(tasks);\n\n    for (var i = 0; i < chartRows.length; i++) {\n      if (chartRows[i].classList.contains('gridrowtaskId' + record.ganttProperties.rowUniqueID + 'level' + (record.level + 1))) {\n        var cloneElement = chartRows[i].querySelector('.e-taskbar-main-container');\n        addClass([cloneElement], 'collpse-parent-border');\n        var id = chartRows[i].querySelector('.' + cls.taskBarMainContainer).getAttribute('rowUniqueId');\n        var ganttData = this.parent.getRecordByID(id);\n        var zIndex = ganttData.ganttProperties.eOverlapIndex.toString();\n        var cloneChildElement = cloneElement.cloneNode(true);\n        cloneChildElement.style.zIndex = zIndex;\n        parentTrNode[0].childNodes[0].childNodes[0].childNodes[0].appendChild(cloneChildElement);\n      }\n    }\n\n    parentTrNode[0].childNodes[0].childNodes[0].appendChild([].slice.call(leftLabelNode)[0]);\n    return parentTrNode[0].childNodes[0];\n  };\n  /**\n   * To refresh all edited records\n   *\n   * @param {IGanttData} items .\n   * @param {boolean} isValidateRange .\n   * @returns {void} .\n   * @private\n   */\n\n\n  ChartRows.prototype.refreshRecords = function (items, isValidateRange) {\n    if (this.parent.isGanttChartRendered) {\n      this.parent.renderTemplates();\n\n      if (this.parent.viewType === 'ResourceView' && this.parent.enableMultiTaskbar) {\n        var sortedRecords = [];\n        sortedRecords = new DataManager(items).executeLocal(new Query().sortBy('expanded', 'Descending'));\n        items = sortedRecords;\n      }\n\n      for (var i = 0; i < items.length; i++) {\n        var index = this.parent.currentViewData.indexOf(items[i]);\n        this.refreshRow(index, isValidateRange);\n      }\n\n      this.parent.ganttChartModule.updateLastRowBottomWidth();\n    }\n  };\n\n  ChartRows.prototype.removeEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    this.parent.off('renderPanels', this.createChartTable);\n    this.parent.off('dataReady', this.initiateTemplates);\n    this.parent.off('destroy', this.destroy);\n  };\n\n  ChartRows.prototype.destroy = function () {\n    this.removeEventListener();\n  };\n\n  ChartRows.prototype.generateAriaLabel = function (data) {\n    data = this.templateData;\n    var defaultValue = '';\n    var nameConstant = this.parent.localeObj.getConstant('name');\n    var startDateConstant = this.parent.localeObj.getConstant('startDate');\n    var endDateConstant = this.parent.localeObj.getConstant('endDate');\n    var durationConstant = this.parent.localeObj.getConstant('duration');\n    var taskNameVal = data.ganttProperties.taskName;\n    var startDateVal = data.ganttProperties.startDate;\n    var endDateVal = data.ganttProperties.endDate;\n    var durationVal = data.ganttProperties.duration;\n\n    if (data.ganttProperties.isMilestone) {\n      defaultValue = nameConstant + ' ' + taskNameVal + ' ' + startDateConstant + ' ' + this.parent.getFormatedDate(startDateVal);\n    } else {\n      if (taskNameVal) {\n        defaultValue += nameConstant + ' ' + taskNameVal + ' ';\n      }\n\n      if (startDateVal) {\n        defaultValue += startDateConstant + ' ' + this.parent.getFormatedDate(startDateVal) + ' ';\n      }\n\n      if (endDateVal) {\n        defaultValue += endDateConstant + ' ' + this.parent.getFormatedDate(endDateVal) + ' ';\n      }\n\n      if (durationVal) {\n        defaultValue += durationConstant + ' ' + this.parent.getDurationString(durationVal, data.ganttProperties.durationUnit);\n      }\n    }\n\n    return defaultValue;\n  };\n\n  ChartRows.prototype.generateSpiltTaskAriaLabel = function (data, ganttProp) {\n    var defaultValue = '';\n    var startDateConstant = this.parent.localeObj.getConstant('startDate');\n    var endDateConstant = this.parent.localeObj.getConstant('endDate');\n    var durationConstant = this.parent.localeObj.getConstant('duration');\n    var startDateVal = data.startDate;\n    var endDateVal = data.endDate;\n    var durationVal = data.duration;\n\n    if (startDateVal) {\n      defaultValue += startDateConstant + ' ' + this.parent.getFormatedDate(startDateVal) + ' ';\n    }\n\n    if (endDateVal) {\n      defaultValue += endDateConstant + ' ' + this.parent.getFormatedDate(endDateVal) + ' ';\n    }\n\n    if (durationVal) {\n      defaultValue += durationConstant + ' ' + this.parent.getDurationString(durationVal, ganttProp.durationUnit);\n    }\n\n    return defaultValue;\n  };\n\n  ChartRows.prototype.generateTaskLabelAriaLabel = function (type) {\n    var label = '';\n\n    if (type === 'left' && this.parent.labelSettings.leftLabel && !this.leftTaskLabelTemplateFunction) {\n      label += this.parent.localeObj.getConstant('leftTaskLabel') + ' ' + this.getTaskLabel(this.parent.labelSettings.leftLabel);\n    } else if (type === 'right' && this.parent.labelSettings.rightLabel && !this.rightTaskLabelTemplateFunction) {\n      label += this.parent.localeObj.getConstant('rightTaskLabel') + ' ' + this.getTaskLabel(this.parent.labelSettings.rightLabel);\n    }\n\n    return label;\n  };\n\n  return ChartRows;\n}(DateProcessor);\n\nexport { ChartRows };","map":{"version":3,"sources":["/Users/tristanbilot/Desktop/Design4green/design4green/node_modules/@syncfusion/ej2-gantt/src/gantt/renderer/chart-rows.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","createElement","isNullOrUndefined","extend","compile","getValue","setValue","formatUnit","addClass","isScheduledTask","DataManager","Query","cls","DateProcessor","ChartRows","_super","ganttObj","_this","call","taskBarHeight","milestoneHeight","milesStoneRadius","baselineTop","baselineHeight","touchLeftConnectorpoint","touchRightConnectorpoint","dropSplit","refreshedTr","refreshedData","isUpdated","parent","initPublicProp","addEventListener","ganttChartTableBody","on","createChartTable","initiateTemplates","destroy","refreshChartByTimeline","taskTable","style","width","timelineModule","totalTimelineWidth","prevDate","dataOperation","getTime","cloneProjectStartDate","isFromOnPropertyChange","treeGrid","grid","contentModule","refreshGanttRows","className","zeroSpacing","id","element","styles","attrs","cellspacing","colgroup","column","appendChild","ganttChartModule","chartBodyContent","initChartHelperPrivateVariable","initializeChartTemplate","renderChartRows","createTaskbarTemplate","isGanttChartRendered","getIndicatorNode","indicator","templateString","label","taskIndicatorDiv","rowHeight","getIndicatorleft","date","iconClass","createDivElement","dateValidationModule","getDateFromFormat","left","getTaskLeft","getChildTaskbarNode","i","rootElement","childTaskbarNode","data","templateData","childTaskbarTemplateFunction","index","getTemplateID","undefined","labelString","taskLabel","taskbarInnerDiv","progressDiv","ganttProperties","startDate","endDate","duration","childTaskBarInnerDiv","traceChildTaskBar","isAutoSchedule","manualChildTaskBar","childProgressBarInnerDiv","traceChildProgressBar","manualChildProgressBar","progressWidth","getBorderRadius","taskLabelTemplateFunction","length","taskLabelTemplateNode","tempDiv","innerHTML","getTaskLabel","labelSettings","viewType","template","segments","splitTaskbar","unscheduledTaskbarLeft","unscheduledTaskbarRight","unscheduledTaskbar","slice","splitTasks","segment","segmentPosition","generateSpiltTaskAriaLabel","getSplitTaskbarLeftResizerNode","getSplitTaskBorderRadius","showProgress","getSplitTaskbarRightResizerNode","getSplitProgressResizerNode","lResizerLeft","isAdaptive","taskBarLeftResizer","icon","rResizerLeft","taskBarRightResizer","childProgressResizer","progressBarHandler","progressHandlerElement","progressBarHandlerAfter","getSegmentIndex","splitStartDate","record","segmentIndex","ganttProp","sort","a","length_1","sDate","setDate","getDate","checkStartDate","eDate","getEndDate","durationUnit","setRecordValue","incrementSegments","mergeTask","taskId","segmentIndexes","mergeArrayLength","taskFields","mergeData","flatData","filter","x","firstSegmentIndex","arrayLength","firstSegment","secondSegment","secondSegmentIndex","insertIndex","splice","updateMappingData","refreshChartAfterSegment","requestType","setSegmentsInfo","updateWidthLeft","predecessorModule","dependency","updatedRecordsDateByPredecessor","connectorLineModule","removePreviousConnectorLines","connectorLineEditModule","refreshEditedRecordConnectorLine","parentItem","getParentTask","isInPredecessorValidation","updateParentItems","refreshRecords","currentViewData","refreshRow","indexOf","tr","querySelectorAll","args","rowData","triggerQueryTaskbarInfoByIndex","selectionModule","clearSelection","taskData","timezone","remove","trigger","contextMenuModule","splitTask","splitDates","splitDate","splitRecord","Date","segmentDuration","getDuration","isMilestone","splitSegmentedTaskbar","constructSegments","dates","segmentsArray","checkEndDate","push","ganttData","checkClickState","nonWorkingDayIndex","getDay","increment","segmentEndDate","offsetDuration","endDateState","mode","customTimelineSettings","bottomTier","unit","count","mode_1","timeIncrement","getIncrement","newTime","setTime","diff","getMilestoneNode","milestoneNode","milestoneTemplateFunction","traceMilestone","milestoneTop","unscheduledMilestoneTop","milestoneBottom","unscheduledMilestoneBottom","getTaskBaselineNode","baselineBar","baselineLeft","baselineWidth","baselineColor","getMilestoneBaselineNode","baselineMilestoneContainer","Math","floor","milestoneMarginTop","baselineMilestoneDiv","baselineMilestoneTop","baselineMilestoneBottom","getLeftLabelNode","leftLabelNode","leftLabelContainer","setAttribute","generateTaskLabelAriaLabel","leftLabelTemplateNode","leftTaskLabelTemplateFunction","field","leftLabel","getLableText","leftLabelInnerDiv","labelDiv","taskBarMarginTop","spanElem","property","disableHtmlEncode","div","childNodes","getRightLabelNode","rightLabelNode","rightLabelContainer","rightLabelTemplateNode","rightTaskLabelTemplateFunction","rightLabel","rightLabelInnerDiv","getManualTaskbar","taskbarHeight","innerDiv","manualParentTaskBar","traceManualUnscheduledTask","manualParentMainContainer","autoLeft","milestoneTemplate","manualParentMilestone","manualParentMilestoneTop","manualParentMilestoneBottom","getParentTaskbarNode","parentTaskbarNode","parentTaskbarTemplateFunction","tHeight","parentTaskBarInnerDiv","getExpandClass","traceParentTaskBar","autoWidth","progressBarInnerDiv","parentProgressBarInnerDiv","traceParentProgressBar","parentTaskLabelNode","parentMilestone","parentMilestoneTop","parentMilestoneBottom","getTableTrNode","table","gridLines","getRowClassName","chartRow","getExpandDisplayProp","chartRowCell","parentTaskbarTemplate","templateCompiler","isTemplate","taskbarTemplate","result","templateName","ganttID","leftLabelTempContainer","taskNameWidth","taskbarContainer","manualParent","editModule","editSettings","allowTaskbarEditing","taskbarEditModule","taskBarEditAction","taskBarMainContainer","getUnscheduledTaskClass","cssClass","hasChildRecords","rightLabelTempContainer","getRightLabelLeft","childTaskbarLeftResizer","childTaskbarRightResizer","childTaskbarProgressResizer","getLeftPointNode","pointerLeft","connectorPointWidth","mileStoneLeft","pointerTop","leftConnectorPointOuterDiv","connectorPointMargin","connectorPointLeft","getRightPointNode","pointerRight","rightConnectorPointOuterDiv","connectorPointRight","ganttColumns","resultString","resourceInfo","getResourceName","getFieldValue","toString","getExpandStatus","rowClass","level","getTaskbarHeight","allowUnscheduledTasks","autoStartDate","endLeft","autoEndDate","expanded","rowExpand","rowCollapse","resource","length_2","resourceName","resourceFields","name","resourceUnit","renderBaseline","height","round","getCurrentViewRecords","showOverAllocation","childRecords","mergeRangeCollections","workTimelineRanges","calculateRangeLeftWidth","renderRangeContainer","trs","collapsedResourceRecord","prevCurrentView","treeGridModule","enableImmutableMode","oldKeys","oldRowElements","key","getPrimaryKeyFieldNames","oldIndex","modifiedRecIndex","modifiedRecords","tRow","getGanttChartRow","tempTemplateData","enableMultiTaskbar","allowSelection","maintainSelectedRecords","parseInt","getAttribute","triggerQueryTaskbarInfo","j","chartRowsModule","renderTemplates","taskBaselineTemplateNode","parentTrNode","taskbarContainerNode","generateAriaLabel","rowUniqueID","connectorLineLeftNode","parentTaskbarTemplateNode","manualTaskbar","baselineStartDate","baselineEndDate","milestoneTemplateNode","scheduledTask","childTaskbarProgressResizeNode","childTaskbarRightResizeNode","childTaskbarLeftResizeNode","childTaskbarTemplateNode","length_3","connector","segmentConnector","i_1","connectorLineRightNode","indicators","taskIndicatorNode","taskIndicatorTextFunction","taskIndicatorTextNode","indicatorIndex","text","title","tooltip","setAriaRowIndex","dataSource","visualData","virtualScrollModule","enableVirtualization","queryTaskbarInfo","trElement","segmentLength","segmentedTasks","getElementsByClassName","segmentElement","taskbarElement","querySelector","rowElement","triggerTaskbarElement","taskbarType","classCollections","getClassName","milestoneColor","getComputedStyle","borderBottomColor","childTask","progressTask","taskbarBgColor","classList","contains","backgroundColor","taskbarBorderColor","borderColor","progressBarBgColor","taskLabelColor","color","rightLabelColor","leftLabelColor","taskbarArgs","updateQueryTaskbarInfoArgs","taskBarElement","borderTopColor","classCollection","document","trim","e","isValidateRange","selectedItem","replaceChild","getResourceParent","updateOverlappingValues","dataId","setRowData","row","getRowObjectFromUID","getDataRows","chartRows","getChartRows","collapseParent","tasks","setSortedChildTasks","updateOverlappingIndex","cloneElement","getRecordByID","zIndex","eOverlapIndex","cloneChildElement","cloneNode","items","sortedRecords","executeLocal","sortBy","updateLastRowBottomWidth","removeEventListener","isDestroyed","off","defaultValue","nameConstant","localeObj","getConstant","startDateConstant","endDateConstant","durationConstant","taskNameVal","taskName","startDateVal","endDateVal","durationVal","getFormatedDate","getDurationString","type"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { createElement, isNullOrUndefined, extend, compile, getValue, setValue } from '@syncfusion/ej2-base';\nimport { formatUnit, addClass } from '@syncfusion/ej2-base';\nimport { isScheduledTask } from '../base/utils';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as cls from '../base/css-constants';\nimport { DateProcessor } from '../base/date-processor';\n/**\n * To render the chart rows in Gantt\n */\nvar ChartRows = /** @class */ (function (_super) {\n    __extends(ChartRows, _super);\n    function ChartRows(ganttObj) {\n        var _this = _super.call(this, ganttObj) || this;\n        _this.taskBarHeight = 0;\n        _this.milestoneHeight = 0;\n        _this.milesStoneRadius = 0;\n        _this.baselineTop = 0;\n        _this.baselineHeight = 3;\n        _this.touchLeftConnectorpoint = '';\n        _this.touchRightConnectorpoint = '';\n        _this.dropSplit = false;\n        _this.refreshedTr = [];\n        _this.refreshedData = [];\n        _this.isUpdated = true;\n        _this.parent = ganttObj;\n        _this.initPublicProp();\n        _this.addEventListener();\n        return _this;\n    }\n    /**\n     * To initialize the public property.\n     *\n     * @returns {void}\n     * @private\n     */\n    ChartRows.prototype.initPublicProp = function () {\n        this.ganttChartTableBody = null;\n    };\n    ChartRows.prototype.addEventListener = function () {\n        this.parent.on('renderPanels', this.createChartTable, this);\n        this.parent.on('dataReady', this.initiateTemplates, this);\n        this.parent.on('destroy', this.destroy, this);\n    };\n    ChartRows.prototype.refreshChartByTimeline = function () {\n        this.taskTable.style.width = formatUnit(this.parent.timelineModule.totalTimelineWidth);\n        var prevDate = getValue('prevProjectStartDate', this.parent.dataOperation);\n        var isUpdated = false;\n        if (prevDate) {\n            isUpdated = prevDate.getTime() === this.parent.cloneProjectStartDate.getTime();\n        }\n        this.isUpdated = this.parent.isFromOnPropertyChange && isUpdated &&\n            getValue('mutableData', this.parent.treeGrid.grid.contentModule) ? true : false;\n        this.refreshGanttRows();\n        this.isUpdated = true;\n    };\n    /**\n     * To render chart rows.\n     *\n     * @returns {void}\n     * @private\n     */\n    ChartRows.prototype.createChartTable = function () {\n        this.taskTable = createElement('table', {\n            className: cls.taskTable + ' ' + cls.zeroSpacing, id: 'GanttTaskTable' + this.parent.element.id,\n            styles: 'z-index: 2;position: absolute;width:' + this.parent.timelineModule.totalTimelineWidth + 'px;',\n            attrs: { cellspacing: '0.25px' }\n        });\n        var colgroup = createElement('colgroup');\n        var column = createElement('col', { styles: 'width:' + this.parent.timelineModule.totalTimelineWidth + 'px;' });\n        colgroup.appendChild(column);\n        this.taskTable.appendChild(colgroup);\n        this.ganttChartTableBody = createElement('tbody', {\n            id: this.parent.element.id + 'GanttTaskTableBody'\n        });\n        this.taskTable.appendChild(this.ganttChartTableBody);\n        this.parent.ganttChartModule.chartBodyContent.appendChild(this.taskTable);\n    };\n    ChartRows.prototype.initiateTemplates = function () {\n        this.taskTable.style.width = formatUnit(this.parent.timelineModule.totalTimelineWidth);\n        this.initChartHelperPrivateVariable();\n        this.initializeChartTemplate();\n    };\n    /**\n     * To render chart rows.\n     *\n     * @returns {void}\n     * @private\n     */\n    ChartRows.prototype.renderChartRows = function () {\n        this.createTaskbarTemplate();\n        this.parent.isGanttChartRendered = true;\n    };\n    /**\n     * To get gantt Indicator.\n     *\n     * @param {IIndicator} indicator .\n     * @returns {NodeList} .\n     * @private\n     */\n    ChartRows.prototype.getIndicatorNode = function (indicator) {\n        var templateString = '<label class=\"' + cls.label + ' ' + cls.taskIndicatorDiv + '\"  style=\"line-height:'\n            + (this.parent.rowHeight) + 'px;' +\n            'left:' + this.getIndicatorleft(indicator.date) + 'px;\"><i class=\"' + indicator.iconClass + '\"></i> </label>';\n        return this.createDivElement(templateString);\n    };\n    /**\n     * To get gantt Indicator.\n     *\n     * @param {Date | string} date .\n     * @returns {number} .\n     * @private\n     */\n    ChartRows.prototype.getIndicatorleft = function (date) {\n        date = this.parent.dateValidationModule.getDateFromFormat(date);\n        var left = this.parent.dataOperation.getTaskLeft(date, false);\n        return left;\n    };\n    /**\n     * To get child taskbar Node.\n     *\n     *  @param {number} i .\n     * @param {NodeList} rootElement .\n     * @returns {NodeList} .\n     * @private\n     */\n    ChartRows.prototype.getChildTaskbarNode = function (i, rootElement) {\n        var childTaskbarNode = null;\n        var data = this.templateData;\n        if (this.childTaskbarTemplateFunction) {\n            childTaskbarNode = this.childTaskbarTemplateFunction(extend({ index: i }, data), this.parent, 'TaskbarTemplate', this.getTemplateID('TaskbarTemplate'), false, undefined, rootElement[0]);\n        }\n        else {\n            var labelString = '';\n            var taskLabel = '';\n            var taskbarInnerDiv = void 0;\n            var progressDiv = void 0;\n            if (data.ganttProperties.startDate && data.ganttProperties.endDate\n                && data.ganttProperties.duration) {\n                taskbarInnerDiv = this.createDivElement('<div class=\"' + cls.childTaskBarInnerDiv + ' ' + cls.traceChildTaskBar +\n                    ' ' + (data.ganttProperties.isAutoSchedule ? '' : cls.manualChildTaskBar) + '\"' +\n                    'style=\"width:' + data.ganttProperties.width + 'px;height:' +\n                    (this.taskBarHeight) + 'px;\"></div>');\n                progressDiv = this.createDivElement('<div class=\"' + cls.childProgressBarInnerDiv + ' ' +\n                    cls.traceChildProgressBar + ' ' + (data.ganttProperties.isAutoSchedule ?\n                    '' : cls.manualChildProgressBar) + '\"' +\n                    ' style=\"border-style:' + (data.ganttProperties.progressWidth ? 'solid;' : 'none;') +\n                    'width:' + data.ganttProperties.progressWidth + 'px;height:100%;' +\n                    'border-top-right-radius:' + this.getBorderRadius(data.ganttProperties) + 'px;' +\n                    'border-bottom-right-radius:' + this.getBorderRadius(data.ganttProperties) + 'px;\">' +\n                    '</div>');\n            }\n            if (this.taskLabelTemplateFunction && !isNullOrUndefined(progressDiv) && progressDiv.length > 0) {\n                var taskLabelTemplateNode = this.taskLabelTemplateFunction(extend({ index: i }, data), this.parent, 'TaskLabelTemplate', this.getTemplateID('TaskLabelTemplate'), false, undefined, progressDiv[0]);\n                if (taskLabelTemplateNode && taskLabelTemplateNode.length > 0) {\n                    var tempDiv = createElement('div');\n                    tempDiv.appendChild(taskLabelTemplateNode[0]);\n                    labelString = tempDiv.innerHTML;\n                }\n            }\n            else {\n                labelString = this.getTaskLabel(this.parent.labelSettings.taskLabel);\n                labelString = labelString === 'isCustomTemplate' ? this.parent.labelSettings.taskLabel : labelString;\n            }\n            if (labelString !== 'null') {\n                taskLabel = '<span class=\"' + cls.taskLabel + '\" style=\"line-height:' +\n                    (this.taskBarHeight - 1) + 'px; text-align:' + (this.parent.viewType === 'ResourceView' ? 'left;' : '') +\n                    'display:' + (this.parent.viewType === 'ResourceView' ? 'inline-flex;' : '') +\n                    'width:' + (this.parent.viewType === 'ResourceView' ? (data.ganttProperties.width - 10) : '') + 'px; height:' +\n                    this.taskBarHeight + 'px;\">' + labelString + '</span>';\n            }\n            var template = !isNullOrUndefined(data.ganttProperties.segments) && data.ganttProperties.segments.length > 0 ?\n                this.splitTaskbar(data, labelString) : (data.ganttProperties.startDate && data.ganttProperties.endDate\n                && data.ganttProperties.duration) ? (taskLabel) :\n                (data.ganttProperties.startDate && !data.ganttProperties.endDate && !data.ganttProperties.duration) ? ('<div class=\"' + cls.childProgressBarInnerDiv + ' ' + cls.traceChildTaskBar + ' ' +\n                    cls.unscheduledTaskbarLeft + ' ' + (data.ganttProperties.isAutoSchedule ?\n                    '' : cls.manualChildTaskBar) + '\"' +\n                    'style=\"left:' + data.ganttProperties.left + 'px; height:' + this.taskBarHeight + 'px;\"></div>') :\n                    (data.ganttProperties.endDate && !data.ganttProperties.startDate && !data.ganttProperties.duration) ?\n                        ('<div class=\"' + cls.childProgressBarInnerDiv + ' ' + cls.traceChildTaskBar + ' ' +\n                            cls.unscheduledTaskbarRight + ' ' + (data.ganttProperties.isAutoSchedule ?\n                            '' : cls.manualChildTaskBar) + '\"' +\n                            'style=\"left:' + data.ganttProperties.left + 'px; height:' + this.taskBarHeight + 'px;\"></div>') :\n                        (data.ganttProperties.duration && !data.ganttProperties.startDate && !data.ganttProperties.endDate) ?\n                            ('<div class=\"' + cls.childProgressBarInnerDiv + ' ' + cls.traceChildTaskBar + ' ' +\n                                cls.unscheduledTaskbar + ' ' + (data.ganttProperties.isAutoSchedule ?\n                                '' : cls.manualChildTaskBar) + '\"' +\n                                'style=\"left:' + data.ganttProperties.left + 'px; width:' + data.ganttProperties.width + 'px;' +\n                                ' height:' + this.taskBarHeight + 'px;\"></div>') : '';\n            if (data.ganttProperties.startDate && data.ganttProperties.endDate && data.ganttProperties.duration &&\n                (isNullOrUndefined(data.ganttProperties.segments) || (!isNullOrUndefined(data.ganttProperties.segments) &&\n                    data.ganttProperties.segments.length === 0))) {\n                if (template !== '' && !isNullOrUndefined(progressDiv) && progressDiv.length > 0) {\n                    progressDiv[0].appendChild([].slice.call(this.createDivElement(template))[0]);\n                }\n                if (!isNullOrUndefined(taskbarInnerDiv) && taskbarInnerDiv.length > 0) {\n                    taskbarInnerDiv[0].appendChild([].slice.call(progressDiv)[0]);\n                }\n                childTaskbarNode = taskbarInnerDiv;\n            }\n            else {\n                childTaskbarNode = this.createDivElement(template);\n            }\n        }\n        return childTaskbarNode;\n    };\n    ChartRows.prototype.splitTaskbar = function (data, labelString) {\n        var splitTasks = '';\n        for (var i = 0; i < data.ganttProperties.segments.length; i++) {\n            var segment = data.ganttProperties.segments[i];\n            var segmentPosition = (i === 0) ? 'e-segment-first' : (i === data.ganttProperties.segments.length - 1)\n                ? 'e-segment-last' : 'e-segment-inprogress';\n            splitTasks += (\n            //split taskbar\n            '<div class=\"' + cls.childTaskBarInnerDiv + ' ' + segmentPosition + ' ' + cls.traceChildTaskBar + ' ' +\n                ' e-segmented-taskbar' +\n                '\"style=\"width:' + segment.width + 'px;position: absolute; left:' + segment.left + 'px;height:' +\n                (this.taskBarHeight) + 'px; overflow: initial;\" data-segment-index = \"' + i + '\" aria-label = \"' +\n                this.generateSpiltTaskAriaLabel(segment, data.ganttProperties) + '\"> ' +\n                this.getSplitTaskbarLeftResizerNode() +\n                //split progress bar\n                '<div class=\"' + cls.childProgressBarInnerDiv + ' ' + cls.traceChildProgressBar + ' ' +\n                '\" style=\"border-style:' + (segment.progressWidth ? 'solid;' : 'none;') +\n                'display:' + (segment.progressWidth >= 0 ? 'block;' : 'none;') +\n                'width:' + segment.progressWidth + 'px;height:100%;' +\n                'border-top-right-radius:' + this.getSplitTaskBorderRadius(segment) + 'px;' +\n                'border-bottom-right-radius:' + this.getSplitTaskBorderRadius(segment) + 'px;\">' +\n                // progress label\n                '<span class=\"' + cls.taskLabel + '\" style=\"line-height:' +\n                (this.taskBarHeight - 1) + 'px;display:' + (segment.showProgress ? 'inline;' : 'none;') +\n                'height:' + this.taskBarHeight + 'px;\">' + labelString + '</span>' +\n                '</div>' +\n                this.getSplitTaskbarRightResizerNode(segment) +\n                (segment.showProgress ? this.getSplitProgressResizerNode(segment) : '') +\n                '</div></div>');\n        }\n        return splitTasks;\n    };\n    ChartRows.prototype.getSplitTaskbarLeftResizerNode = function () {\n        var lResizerLeft = -(this.parent.isAdaptive ? 12 : 2);\n        var template = '<div class=\"' + cls.taskBarLeftResizer + ' ' + cls.icon + '\"' +\n            ' style=\"left:' + lResizerLeft + 'px;height:' + (this.taskBarHeight) + 'px;\"></div>';\n        return template;\n    };\n    ChartRows.prototype.getSplitTaskbarRightResizerNode = function (segment) {\n        var rResizerLeft = this.parent.isAdaptive ? -2 : -10;\n        var template = '<div class=\"' + cls.taskBarRightResizer + ' ' + cls.icon + '\"' +\n            ' style=\"left:' + (segment.width + rResizerLeft) + 'px;' +\n            'height:' + (this.taskBarHeight) + 'px;\"></div>';\n        return template;\n    };\n    ChartRows.prototype.getSplitProgressResizerNode = function (segment) {\n        var template = '<div class=\"' + cls.childProgressResizer + '\"' +\n            ' style=\"left:' + (segment.progressWidth - 6) + 'px;margin-top:' +\n            (this.taskBarHeight - 4) + 'px;\"><div class=\"' + cls.progressBarHandler + '\"' +\n            '><div class=\"' + cls.progressHandlerElement + '\"></div>' +\n            '<div class=\"' + cls.progressBarHandlerAfter + '\"></div></div>';\n        return template;\n    };\n    ChartRows.prototype.getSegmentIndex = function (splitStartDate, record) {\n        var segmentIndex = -1;\n        var ganttProp = record.ganttProperties;\n        var segments = ganttProp.segments;\n        if (!isNullOrUndefined(segments)) {\n            segments.sort(function (a, b) {\n                return a.startDate.getTime() - b.startDate.getTime();\n            });\n            var length_1 = segments.length;\n            for (var i = 0; i < length_1; i++) {\n                var segment = segments[i];\n                // To find if user tend to split the start date of a main taskbar\n                // purpose of this to restrict the split action\n                if (splitStartDate.getTime() === ganttProp.startDate.getTime()) {\n                    this.dropSplit = true;\n                    segmentIndex = 0;\n                    // To find the if user tend to split the first date of already segmented task.\n                    // purpose of this to move on day of a segment\n                }\n                else if (splitStartDate.getTime() === segment.startDate.getTime()) {\n                    this.dropSplit = true;\n                    var sDate = segment.startDate;\n                    sDate.setDate(sDate.getDate() + 1);\n                    sDate = segment.startDate = this.parent.dataOperation.checkStartDate(sDate, ganttProp, false);\n                    segment.startDate = sDate;\n                    var eDate = segment.endDate;\n                    eDate = this.parent.dataOperation.getEndDate(sDate, segment.duration, ganttProp.durationUnit, ganttProp, false);\n                    segment.endDate = eDate;\n                    if (i === segments.length - 1) {\n                        this.parent.setRecordValue('endDate', eDate, ganttProp, true);\n                    }\n                    this.incrementSegments(segments, i, record);\n                    segmentIndex = segment.segmentIndex;\n                    // To find if the user tend to split the segment and find the segment index\n                }\n                else {\n                    segment.endDate = this.parent.dataOperation.getEndDate(segment.startDate, segment.duration, ganttProp.durationUnit, ganttProp, false);\n                    if (splitStartDate.getTime() >= segment.startDate.getTime() && splitStartDate.getTime() <= segment.endDate.getTime()) {\n                        segmentIndex = segment.segmentIndex;\n                    }\n                }\n                this.parent.setRecordValue('segments', ganttProp.segments, ganttProp, true);\n            }\n        }\n        if (segmentIndex === -1) {\n            this.dropSplit = true;\n        }\n        return segmentIndex;\n    };\n    ChartRows.prototype.mergeTask = function (taskId, segmentIndexes) {\n        var mergeArrayLength = segmentIndexes.length;\n        var taskFields = this.parent.taskFields;\n        var mergeData = this.parent.flatData.filter(function (x) {\n            if (x[taskFields.id] === taskId) {\n                return x;\n            }\n            else {\n                return null;\n            }\n        })[0];\n        var segments = mergeData.ganttProperties.segments;\n        segmentIndexes = segmentIndexes.sort(function (a, b) {\n            return b.firstSegmentIndex - a.firstSegmentIndex;\n        });\n        for (var arrayLength = 0; arrayLength < mergeArrayLength; arrayLength++) {\n            var firstSegment = segments[segmentIndexes[arrayLength].firstSegmentIndex];\n            var secondSegment = segments[segmentIndexes[arrayLength].secondSegmentIndex];\n            var duration = firstSegment.duration + secondSegment.duration;\n            var endDate = this.parent.dataOperation.getEndDate(firstSegment.startDate, duration, mergeData.ganttProperties.durationUnit, mergeData.ganttProperties, false);\n            var segment = {\n                startDate: firstSegment.startDate,\n                endDate: endDate,\n                duration: duration\n            };\n            var insertIndex = segmentIndexes[arrayLength].firstSegmentIndex;\n            segments.splice(insertIndex, 2, segment);\n            this.parent.setRecordValue('segments', segments, mergeData.ganttProperties, true);\n            this.parent.dataOperation.updateMappingData(mergeData, 'segments');\n            if (segments.length === 1) {\n                this.parent.setRecordValue('endDate', endDate, mergeData.ganttProperties, true);\n                this.parent.setRecordValue('segments', null, mergeData.ganttProperties, true);\n                this.parent.dataOperation.updateMappingData(mergeData, 'segments');\n            }\n            else if (mergeData.ganttProperties.endDate !== segments[segments.length - 1].endDate) {\n                this.parent.setRecordValue('endDate', segments[segments.length - 1].endDate, mergeData.ganttProperties, true);\n            }\n        }\n        this.refreshChartAfterSegment(mergeData, 'mergeSegment');\n    };\n    ChartRows.prototype.refreshChartAfterSegment = function (data, requestType) {\n        this.parent.setRecordValue('segments', this.parent.dataOperation.setSegmentsInfo(data, false), data.ganttProperties, true);\n        this.parent.dataOperation.updateMappingData(data, 'segments');\n        this.parent.dataOperation.updateWidthLeft(data);\n        if (this.parent.predecessorModule && this.parent.taskFields.dependency) {\n            this.parent.predecessorModule.updatedRecordsDateByPredecessor();\n            this.parent.connectorLineModule.removePreviousConnectorLines(this.parent.flatData);\n            this.parent.connectorLineEditModule.refreshEditedRecordConnectorLine(this.parent.flatData);\n            if (data.parentItem && this.parent.getParentTask(data.parentItem).ganttProperties.isAutoSchedule\n                && this.parent.isInPredecessorValidation) {\n                this.parent.dataOperation.updateParentItems(data.parentItem);\n            }\n            this.refreshRecords(this.parent.currentViewData);\n        }\n        else {\n            this.refreshRow(this.parent.currentViewData.indexOf(data));\n        }\n        var tr = this.ganttChartTableBody.querySelectorAll('tr')[this.parent.currentViewData.indexOf(data)];\n        var args = {\n            requestType: requestType,\n            rowData: data\n        };\n        this.triggerQueryTaskbarInfoByIndex(tr, data);\n        this.parent.selectionModule.clearSelection();\n        var segments = args.rowData.taskData[this.parent.taskFields.segments];\n        if (this.parent.timezone && segments != null) {\n            for (var i = 0; i < segments.length; i++) {\n                segments[i][this.parent.taskFields.startDate] = this.parent.dateValidationModule.remove(args.rowData.ganttProperties.segments[i].startDate, this.parent.timezone);\n                if (this.parent.taskFields.endDate) {\n                    segments[i][this.parent.taskFields.endDate] = this.parent.dateValidationModule.remove(args.rowData.ganttProperties.segments[i].endDate, this.parent.timezone);\n                }\n            }\n        }\n        this.parent.trigger('actionComplete', args);\n        setValue('isEdit', false, this.parent.contextMenuModule);\n        setValue('isEdit', false, this.parent);\n    };\n    /**\n     * public method to split task bar.\n     *\n     * @public\n     */\n    ChartRows.prototype.splitTask = function (taskId, splitDates) {\n        var taskFields = this.parent.taskFields;\n        var splitDate = splitDates;\n        var splitRecord = this.parent.flatData.filter(function (x) {\n            if (x[taskFields.id] === taskId) {\n                return x;\n            }\n            else {\n                return null;\n            }\n        })[0];\n        var ganttProp = splitRecord.ganttProperties;\n        this.dropSplit = false;\n        var segmentIndex = -1;\n        var segments = ganttProp.segments;\n        if (isNullOrUndefined(splitDates.length) || splitDates.length < 0) {\n            var splitStartDate = this.parent.dataOperation.checkStartDate(splitDate, ganttProp, false);\n            if (splitStartDate.getTime() !== ganttProp.startDate.getTime()) {\n                if (ganttProp.isAutoSchedule) {\n                    if (!isNullOrUndefined(segments)) {\n                        segmentIndex = this.getSegmentIndex(splitStartDate, splitRecord);\n                    }\n                    //check atleast one day difference is there to split\n                    if (this.dropSplit === false && splitDate.getTime() > ganttProp.startDate.getTime() &&\n                        splitDate.getTime() < ganttProp.endDate.getTime()) {\n                        segments = segmentIndex !== -1 ? segments : [];\n                        var startDate = segmentIndex !== -1 ?\n                            segments[segmentIndex].startDate : new Date(ganttProp.startDate.getTime());\n                        var endDate = segmentIndex !== -1 ? segments[segmentIndex].endDate : new Date(ganttProp.endDate.getTime());\n                        var segmentDuration = this.parent.dataOperation.getDuration(startDate, endDate, ganttProp.durationUnit, ganttProp.isAutoSchedule, ganttProp.isMilestone);\n                        this.parent.setRecordValue('segments', this.splitSegmentedTaskbar(startDate, endDate, splitDate, segmentIndex, segments, splitRecord, segmentDuration), ganttProp, true);\n                        if (segmentIndex !== -1) {\n                            this.incrementSegments(segments, segmentIndex + 1, splitRecord);\n                        }\n                        this.parent.setRecordValue('endDate', segments[segments.length - 1].endDate, ganttProp, true);\n                        if (this.parent.taskFields.endDate) {\n                            this.parent.dataOperation.updateMappingData(splitRecord, 'endDate');\n                        }\n                    }\n                    this.refreshChartAfterSegment(splitRecord, 'splitTaskbar');\n                }\n            }\n        }\n        else {\n            splitDates.sort(function (a, b) {\n                return a.getTime() - b.getTime();\n            });\n            this.parent.setRecordValue('segments', this.constructSegments(splitDates, splitRecord.ganttProperties), splitRecord.ganttProperties, true);\n            this.refreshChartAfterSegment(splitRecord, 'splitTask');\n        }\n    };\n    ChartRows.prototype.constructSegments = function (dates, taskData) {\n        var segmentsArray = [];\n        var segment;\n        var startDate = new Date();\n        var endDate;\n        var duration;\n        for (var i = 0; i < dates.length + 1; i++) {\n            startDate = i === 0 ? taskData.startDate : startDate;\n            startDate = this.parent.dataOperation.checkStartDate(startDate, taskData, false);\n            endDate = i !== dates.length ? new Date(dates[i].getTime()) > taskData.endDate ? taskData.endDate\n                : new Date(dates[i].getTime()) : taskData.endDate;\n            endDate = this.parent.dataOperation.checkEndDate(endDate, taskData, false);\n            duration = this.parent.dataOperation.getDuration(startDate, endDate, taskData.durationUnit, taskData.isAutoSchedule, taskData.isMilestone);\n            if (endDate.getTime() >= startDate.getTime()) {\n                segment = {\n                    startDate: startDate,\n                    endDate: endDate,\n                    duration: duration\n                };\n                segmentsArray.push(segment);\n            }\n            if (i === dates.length) {\n                break;\n            }\n            startDate = new Date(dates[i].getTime());\n            startDate.setDate(dates[i].getDate() + 1);\n        }\n        return segmentsArray;\n    };\n    ChartRows.prototype.splitSegmentedTaskbar = function (startDate, endDate, splitDate, segmentIndex, segments, ganttData, segmentDuration) {\n        var ganttProp = ganttData.ganttProperties;\n        var checkClickState = this.parent.nonWorkingDayIndex.indexOf(splitDate.getDay());\n        var increment = checkClickState === -1 ? 0 : checkClickState === 0 ? 1 : 2;\n        startDate = this.parent.dataOperation.checkStartDate(startDate, ganttProp, false);\n        var segmentEndDate = new Date(splitDate.getTime());\n        segmentEndDate = this.parent.dataOperation.checkEndDate(segmentEndDate, ganttProp, false);\n        for (var i = 0; i < 2; i++) {\n            var segment = {\n                startDate: startDate,\n                endDate: segmentEndDate,\n                duration: this.parent.dataOperation.getDuration(startDate, segmentEndDate, ganttProp.durationUnit, ganttProp.isAutoSchedule, ganttProp.isMilestone),\n                offsetDuration: 1\n            };\n            var endDateState = this.parent.nonWorkingDayIndex.indexOf(segmentEndDate.getDay());\n            if (segmentIndex !== -1) {\n                segments.splice(segmentIndex, 1);\n                segmentIndex = -1;\n            }\n            segments.push(segment);\n            var mode = this.parent.timelineModule.customTimelineSettings.bottomTier.unit;\n            if (mode === 'Hour' || mode === 'Minutes') {\n                startDate = new Date(splitDate.getTime());\n                startDate = this.parent.dataOperation.checkStartDate(startDate, ganttProp, false);\n                var count = this.parent.timelineModule.customTimelineSettings.bottomTier.count;\n                var mode_1 = this.parent.timelineModule.customTimelineSettings.bottomTier.unit;\n                var timeIncrement = this.parent.timelineModule.getIncrement(startDate, count, mode_1);\n                var newTime = startDate.getTime() + timeIncrement;\n                startDate.setTime(newTime + increment);\n                segmentEndDate = new Date(endDate.getTime());\n                timeIncrement = this.parent.timelineModule.getIncrement(segmentEndDate, count, mode_1);\n                newTime = segmentEndDate.getTime() + timeIncrement;\n                segmentEndDate.setTime(newTime + increment);\n            }\n            else {\n                startDate = new Date(splitDate.getTime());\n                startDate.setDate(startDate.getDate() + 1 + increment);\n                startDate = this.parent.dataOperation.checkStartDate(startDate, ganttProp, false);\n                segmentEndDate = new Date(endDate.getTime());\n                segmentEndDate.setDate(segmentEndDate.getDate() + 1);\n            }\n            if (endDateState !== -1) {\n                var diff = segmentDuration - segment.duration;\n                segmentEndDate =\n                    this.parent.dataOperation.getEndDate(startDate, diff, ganttProp.durationUnit, ganttProp, false);\n            }\n            else {\n                segmentEndDate = this.parent.dataOperation.checkEndDate(segmentEndDate, ganttProp, false);\n            }\n        }\n        segments.sort(function (a, b) {\n            return a.startDate.getTime() - b.startDate.getTime();\n        });\n        return segments;\n    };\n    ChartRows.prototype.incrementSegments = function (segments, segmentIndex, ganttData) {\n        var ganttProp = ganttData.ganttProperties;\n        for (var i = segmentIndex + 1; i < segments.length; i++) {\n            var segment = segments[i];\n            var startDate = i !== 0 ? new Date(segments[i - 1].endDate.getTime()) : new Date(segment.startDate.getTime());\n            startDate = this.parent.dataOperation.getEndDate(startDate, segment.offsetDuration, ganttProp.durationUnit, ganttProp, false);\n            startDate = this.parent.dataOperation.checkStartDate(startDate, ganttProp, false);\n            segment.startDate = startDate;\n            var endDate = segment.endDate = this.parent.dataOperation.getEndDate(startDate, segment.duration, ganttProp.durationUnit, ganttProp, false);\n            segment.endDate = endDate;\n            if (i === segments.length - 1) {\n                this.parent.setRecordValue('endDate', endDate, ganttProp, true);\n                if (this.parent.taskFields.endDate) {\n                    this.parent.dataOperation.updateMappingData(ganttData, 'endDate');\n                }\n            }\n        }\n        segments.sort(function (a, b) {\n            return a.startDate.getTime() - b.startDate.getTime();\n        });\n        this.parent.setRecordValue('segments', segments, ganttProp, true);\n        this.parent.dataOperation.updateMappingData(ganttData, 'segments');\n    };\n    /**\n     * To get milestone node.\n     *\n     * @param {number} i .\n     * @param {NodeList} rootElement .\n     * @returns {NodeList} .\n     * @private\n     */\n    ChartRows.prototype.getMilestoneNode = function (i, rootElement) {\n        var milestoneNode = null;\n        var data = this.templateData;\n        if (this.milestoneTemplateFunction) {\n            milestoneNode = this.milestoneTemplateFunction(extend({ index: i }, data), this.parent, 'MilestoneTemplate', this.getTemplateID('MilestoneTemplate'), false, undefined, rootElement[0]);\n        }\n        else {\n            var template = '<div class=\"' + cls.traceMilestone + '\" style=\"position:absolute;\">' +\n                '<div class=\"' + cls.milestoneTop + ' ' + ((!data.ganttProperties.startDate && !data.ganttProperties.endDate) ?\n                cls.unscheduledMilestoneTop : '') + '\" style=\"border-right-width:' +\n                this.milesStoneRadius + 'px;border-left-width:' + this.milesStoneRadius + 'px;border-bottom-width:' +\n                this.milesStoneRadius + 'px;\"></div>' +\n                '<div class=\"' + cls.milestoneBottom + ' ' + ((!data.ganttProperties.startDate && !data.ganttProperties.endDate) ?\n                cls.unscheduledMilestoneBottom : '') + '\" style=\"top:' +\n                (this.milesStoneRadius) + 'px;border-right-width:' + this.milesStoneRadius + 'px; border-left-width:' +\n                this.milesStoneRadius + 'px; border-top-width:' + this.milesStoneRadius + 'px;\"></div></div>';\n            milestoneNode = this.createDivElement(template);\n        }\n        return milestoneNode;\n    };\n    /**\n     * To get task baseline Node.\n     *\n     * @returns {NodeList} .\n     * @private\n     */\n    ChartRows.prototype.getTaskBaselineNode = function () {\n        var data = this.templateData;\n        var template = '<div class=\"' + cls.baselineBar + ' ' + '\" style=\"margin-top:' + this.baselineTop +\n            'px;left:' + data.ganttProperties.baselineLeft + 'px;' +\n            'width:' + data.ganttProperties.baselineWidth + 'px;height:' +\n            this.baselineHeight + 'px;' + (this.baselineColor ? 'background-color: ' + this.baselineColor + ';' : '') + '\"></div>';\n        return this.createDivElement(template);\n    };\n    /**\n     * To get milestone baseline node.\n     *\n     * @returns {NodeList} .\n     * @private\n     */\n    ChartRows.prototype.getMilestoneBaselineNode = function () {\n        var data = this.templateData;\n        var template = '<div class=\"' + cls.baselineMilestoneContainer + ' ' + '\" style=\"' +\n            'left:' + (data.ganttProperties.baselineLeft - this.milesStoneRadius) + 'px;' +\n            'margin-top:' + (-Math.floor(this.parent.rowHeight - this.milestoneMarginTop) + 2) +\n            'px\">' + '<div class=\"' + cls.baselineMilestoneDiv + '\">' + '<div class=\"' + cls.baselineMilestoneDiv +\n            ' ' + cls.baselineMilestoneTop + '\"  ' +\n            'style=\"top:' + (-this.milestoneHeight) + 'px;border-right:' + this.milesStoneRadius +\n            'px solid transparent;border-left:' + this.milesStoneRadius +\n            'px solid transparent;border-top:0px' +\n            'solid transparent;border-bottom-width:' + this.milesStoneRadius + 'px;' +\n            'border-bottom-style: solid;' + (this.baselineColor ? 'border-bottom-color: ' + this.baselineColor + ';' : '') +\n            '\"></div>' +\n            '<div class=\"' + cls.baselineMilestoneDiv + ' ' + cls.baselineMilestoneBottom + '\"  ' +\n            'style=\"top:' + (this.milesStoneRadius - this.milestoneHeight) + 'px;border-right:' + this.milesStoneRadius +\n            'px solid transparent;border-left:' + this.milesStoneRadius +\n            'px solid transparent;border-bottom:0px' +\n            'solid transparent;border-top-width:' + this.milesStoneRadius + 'px;' +\n            'border-top-style: solid;' +\n            (this.baselineColor ? 'border-top-color: ' + this.baselineColor + ';' : '') + '\"></div>' +\n            '</div></div>';\n        return this.createDivElement(template);\n    };\n    /**\n     * To get left label node.\n     *\n     * @param {number} i .\n     * @returns {NodeList} .\n     * @private\n     */\n    ChartRows.prototype.getLeftLabelNode = function (i) {\n        var leftLabelNode = this.leftLabelContainer();\n        leftLabelNode[0].setAttribute('aria-label', this.generateTaskLabelAriaLabel('left'));\n        var leftLabelTemplateNode = null;\n        if (this.leftTaskLabelTemplateFunction) {\n            leftLabelTemplateNode = this.leftTaskLabelTemplateFunction(extend({ index: i }, this.templateData), this.parent, 'LeftLabelTemplate', this.getTemplateID('LeftLabelTemplate'), false, undefined, leftLabelNode[0]);\n        }\n        else {\n            var field = this.parent.labelSettings.leftLabel;\n            var labelString = this.getTaskLabel(field);\n            if (labelString) {\n                labelString = labelString === 'isCustomTemplate' ? field : labelString;\n                leftLabelTemplateNode = this.getLableText(labelString, cls.leftLabelInnerDiv);\n            }\n        }\n        if (leftLabelTemplateNode && leftLabelTemplateNode.length > 0) {\n            leftLabelNode[0].appendChild([].slice.call(leftLabelTemplateNode)[0]);\n        }\n        return leftLabelNode;\n    };\n    ChartRows.prototype.getLableText = function (labelString, labelDiv) {\n        var templateString = createElement('div', {\n            className: labelDiv, styles: 'height:' + (this.taskBarHeight) + 'px;' +\n                'margin-top:' + this.taskBarMarginTop + 'px;'\n        });\n        var spanElem = createElement('span', { className: cls.label });\n        var property = this.parent.disableHtmlEncode ? 'textContent' : 'innerHTML';\n        spanElem[property] = labelString;\n        templateString.appendChild(spanElem);\n        var div = createElement('div');\n        div.appendChild(templateString);\n        return div.childNodes;\n    };\n    /**\n     * To get right label node.\n     *\n     * @param {number} i .\n     * @returns {NodeList} .\n     * @private\n     */\n    ChartRows.prototype.getRightLabelNode = function (i) {\n        var rightLabelNode = this.rightLabelContainer();\n        rightLabelNode[0].setAttribute('aria-label', this.generateTaskLabelAriaLabel('right'));\n        var rightLabelTemplateNode = null;\n        if (this.rightTaskLabelTemplateFunction) {\n            rightLabelTemplateNode = this.rightTaskLabelTemplateFunction(extend({ index: i }, this.templateData), this.parent, 'RightLabelTemplate', this.getTemplateID('RightLabelTemplate'), false, undefined, rightLabelNode[0]);\n        }\n        else {\n            var field = this.parent.labelSettings.rightLabel;\n            var labelString = this.getTaskLabel(field);\n            if (labelString) {\n                labelString = labelString === 'isCustomTemplate' ? field : labelString;\n                rightLabelTemplateNode = this.getLableText(labelString, cls.rightLabelInnerDiv);\n            }\n        }\n        if (rightLabelTemplateNode && rightLabelTemplateNode.length > 0) {\n            rightLabelNode[0].appendChild([].slice.call(rightLabelTemplateNode)[0]);\n        }\n        return rightLabelNode;\n    };\n    ChartRows.prototype.getManualTaskbar = function () {\n        var data = this.templateData;\n        var taskbarHeight = (this.taskBarHeight / 2 - 1);\n        var innerDiv = (data.ganttProperties.startDate && data.ganttProperties.endDate && data.ganttProperties.duration) ?\n            ('<div class=\"' + cls.manualParentTaskBar + '\" style=\"width:' + data.ganttProperties.width + 'px;' + 'height:' +\n                taskbarHeight / 5 + 'px;border-left-width:' + taskbarHeight / 5 +\n                'px; border-bottom:' + taskbarHeight / 5 + 'px solid transparent;\"></div>') :\n            (!data.ganttProperties.startDate && !data.ganttProperties.endDate && data.ganttProperties.duration) ?\n                ('<div class=\"' + cls.manualParentTaskBar + ' ' + cls.traceManualUnscheduledTask +\n                    '\" style=\"width:' + data.ganttProperties.width + 'px;' + 'height:' +\n                    (taskbarHeight / 5 + 1) + 'px;border-left-width:' + taskbarHeight / 5 +\n                    'px; border-bottom:' + taskbarHeight / 5 + 'px solid transparent;\"></div>') : ('<div class=\"' +\n                cls.manualParentTaskBar + ' ' + (data.ganttProperties.startDate ? cls.unscheduledTaskbarLeft : cls.unscheduledTaskbarRight) +\n                '\" style=\"width:' + data.ganttProperties.width + 'px;' + 'height:' +\n                taskbarHeight * 2 + 'px;border-left-width:' + taskbarHeight / 5 +\n                'px; border-bottom:' + taskbarHeight / 5 + 'px solid transparent;\"></div>');\n        var template = '<div class=\"' + cls.manualParentMainContainer + '\"' +\n            'style=left:' + (data.ganttProperties.left - data.ganttProperties.autoLeft) + 'px;' +\n            'width:' + data.ganttProperties.width + 'px;' +\n            'height:' + taskbarHeight + 'px;>' + innerDiv + ((data.ganttProperties.startDate && data.ganttProperties.endDate &&\n            data.ganttProperties.duration) || data.ganttProperties.duration ? '<div class=\"e-gantt-manualparenttaskbar-left\" style=' +\n            '\"height:' + taskbarHeight + 'px;border-left-width:' + taskbarHeight / 5 +\n            'px; border-bottom:' + taskbarHeight / 5 + 'px solid transparent;\"></div>' +\n            '<div class=\"e-gantt-manualparenttaskbar-right\" style=' +\n            'left:' + (data.ganttProperties.width - taskbarHeight / 5) + 'px;height:' +\n            (taskbarHeight) + 'px;border-right-width:' + taskbarHeight / 5 + 'px;border-bottom:' +\n            taskbarHeight / 5 + 'px solid transparent;>' + '</div></div>' : '');\n        var milestoneTemplate = '<div class=\"' + cls.manualParentMilestone + '\" style=\"position:absolute;left:' +\n            (data.ganttProperties.left - data.ganttProperties.autoLeft - (this.milestoneHeight / 2)) +\n            'px;width:' + (this.milesStoneRadius * 2) +\n            'px;\">' + '<div class=\"' + cls.manualParentMilestoneTop + '\" style=\"border-right-width:' +\n            this.milesStoneRadius + 'px;border-left-width:' + this.milesStoneRadius + 'px;border-bottom-width:' +\n            this.milesStoneRadius + 'px;\"></div>' +\n            '<div class=\"' + cls.manualParentMilestoneBottom + '\" style=\"top:' +\n            (this.milesStoneRadius) + 'px;border-right-width:' + this.milesStoneRadius + 'px; border-left-width:' +\n            this.milesStoneRadius + 'px; border-top-width:' + this.milesStoneRadius + 'px;\"></div></div>';\n        return this.createDivElement(data.ganttProperties.width === 0 ? milestoneTemplate : template);\n    };\n    /**\n     * To get parent taskbar node.\n     *\n     * @param {number} i .\n     * @param {NodeList} rootElement .\n     * @returns {NodeList} .\n     * @private\n     */\n    ChartRows.prototype.getParentTaskbarNode = function (i, rootElement) {\n        var parentTaskbarNode = null;\n        var data = this.templateData;\n        if (this.parentTaskbarTemplateFunction) {\n            parentTaskbarNode = this.parentTaskbarTemplateFunction(extend({ index: i }, data), this.parent, 'ParentTaskbarTemplate', this.getTemplateID('ParentTaskbarTemplate'), false, undefined, rootElement[0]);\n        }\n        else {\n            var labelString = '';\n            var labelDiv = void 0;\n            var tHeight = this.taskBarHeight / 5;\n            var template = this.createDivElement('<div class=\"' + cls.parentTaskBarInnerDiv + ' ' +\n                this.getExpandClass(data) + ' ' + cls.traceParentTaskBar + '\"' +\n                ' style=\"width:' + (data.ganttProperties.isAutoSchedule ? data.ganttProperties.width :\n                data.ganttProperties.autoWidth) + 'px;height:' + (data.ganttProperties.isAutoSchedule ? this.taskBarHeight :\n                (tHeight * 3)) + 'px;margin-top:' + (data.ganttProperties.isAutoSchedule ? '' :\n                (tHeight * 2)) + 'px;\">' +\n                '</div>');\n            var progressBarInnerDiv = this.createDivElement('<div class=\"' + cls.parentProgressBarInnerDiv + ' ' +\n                this.getExpandClass(data) + ' ' + cls.traceParentProgressBar + '\"' +\n                ' style=\"border-style:' + (data.ganttProperties.progressWidth ? 'solid;' : 'none;') +\n                'width:' + data.ganttProperties.progressWidth + 'px;' +\n                'border-top-right-radius:' + this.getBorderRadius(data) + 'px;' +\n                'border-bottom-right-radius:' + this.getBorderRadius(data) + 'px;height:100%;\"></div>');\n            if (this.taskLabelTemplateFunction) {\n                var parentTaskLabelNode = this.taskLabelTemplateFunction(extend({ index: i }, data), this.parent, 'TaskLabelTemplate', this.getTemplateID('TaskLabelTemplate'), false, undefined, progressBarInnerDiv[0]);\n                if (parentTaskLabelNode && parentTaskLabelNode.length > 0) {\n                    var div = createElement('div');\n                    div.appendChild(parentTaskLabelNode[0]);\n                    labelString = div.innerHTML;\n                }\n            }\n            else {\n                labelString = this.getTaskLabel(this.parent.labelSettings.taskLabel);\n                labelString = labelString === 'isCustomTemplate' ? this.parent.labelSettings.taskLabel : labelString;\n            }\n            if (labelString !== 'null') {\n                labelDiv = this.createDivElement('<span class=\"' +\n                    cls.taskLabel + '\" style=\"line-height:' +\n                    (this.taskBarHeight - 1) + 'px; display:' + (this.parent.viewType === 'ResourceView' ? 'inline-flex;' : '') + 'width:' +\n                    (this.parent.viewType === 'ResourceView' ? (data.ganttProperties.width - 10) : '') + 'px; height:' +\n                    this.taskBarHeight + 'px;\">' + labelString + '</span>');\n                progressBarInnerDiv[0].appendChild([].slice.call(labelDiv)[0]);\n            }\n            var milestoneTemplate = '<div class=\"' + cls.parentMilestone + '\" style=\"position:absolute;\">' +\n                '<div class=\"' + cls.parentMilestoneTop + '\" style=\"border-right-width:' +\n                this.milesStoneRadius + 'px;border-left-width:' + this.milesStoneRadius + 'px;border-bottom-width:' +\n                this.milesStoneRadius + 'px;\"></div>' +\n                '<div class=\"' + cls.parentMilestoneBottom + '\" style=\"top:' +\n                (this.milesStoneRadius) + 'px;border-right-width:' + this.milesStoneRadius + 'px; border-left-width:' +\n                this.milesStoneRadius + 'px; border-top-width:' + this.milesStoneRadius + 'px;\"></div></div>';\n            template[0].appendChild([].slice.call(progressBarInnerDiv)[0]);\n            parentTaskbarNode = data.ganttProperties.isMilestone ?\n                this.createDivElement(data.ganttProperties.isAutoSchedule ? milestoneTemplate : '') : template;\n        }\n        return parentTaskbarNode;\n    };\n    /**\n     * To get taskbar row('TR') node\n     *\n     * @returns {NodeList} .\n     * @private\n     */\n    ChartRows.prototype.getTableTrNode = function () {\n        var table = createElement('table');\n        var className = (this.parent.gridLines === 'Horizontal' || this.parent.gridLines === 'Both') ?\n            'e-chart-row-border' : '';\n        table.innerHTML = '<tr class=\"' + this.getRowClassName(this.templateData) + ' ' + cls.chartRow + '\"' +\n            'style=\"display:' + this.getExpandDisplayProp(this.templateData) + ';height:' +\n            this.parent.rowHeight + 'px;\">' +\n            '<td class=\"' + cls.chartRowCell + ' ' + className\n            + '\" style=\"width:' + this.parent.timelineModule.totalTimelineWidth + 'px;\"></td></tr>';\n        return table.childNodes;\n    };\n    /**\n     * To initialize chart templates.\n     *\n     * @returns {void}\n     * @private\n     */\n    ChartRows.prototype.initializeChartTemplate = function () {\n        if (!isNullOrUndefined(this.parent.parentTaskbarTemplate)) {\n            this.parentTaskbarTemplateFunction = this.templateCompiler(this.parent.parentTaskbarTemplate);\n        }\n        if (!isNullOrUndefined(this.parent.labelSettings.leftLabel) &&\n            this.isTemplate(this.parent.labelSettings.leftLabel)) {\n            this.leftTaskLabelTemplateFunction = this.templateCompiler(this.parent.labelSettings.leftLabel);\n        }\n        if (!isNullOrUndefined(this.parent.labelSettings.rightLabel) &&\n            this.isTemplate(this.parent.labelSettings.rightLabel)) {\n            this.rightTaskLabelTemplateFunction = this.templateCompiler(this.parent.labelSettings.rightLabel);\n        }\n        if (!isNullOrUndefined(this.parent.labelSettings.taskLabel) &&\n            this.isTemplate(this.parent.labelSettings.taskLabel)) {\n            this.taskLabelTemplateFunction = this.templateCompiler(this.parent.labelSettings.taskLabel);\n        }\n        if (!isNullOrUndefined(this.parent.taskbarTemplate)) {\n            this.childTaskbarTemplateFunction = this.templateCompiler(this.parent.taskbarTemplate);\n        }\n        if (!isNullOrUndefined(this.parent.milestoneTemplate)) {\n            this.milestoneTemplateFunction = this.templateCompiler(this.parent.milestoneTemplate);\n        }\n    };\n    ChartRows.prototype.createDivElement = function (template) {\n        var div = createElement('div');\n        div.innerHTML = template;\n        return div.childNodes;\n    };\n    ChartRows.prototype.isTemplate = function (template) {\n        var result = false;\n        if (typeof template !== 'string' || template.indexOf('#') === 0 || template.indexOf('<') > -1\n            || template.indexOf('$') > -1) {\n            result = true;\n        }\n        return result;\n    };\n    /**\n     * @param {string} templateName .\n     * @returns {string} .\n     * @private\n     */\n    ChartRows.prototype.getTemplateID = function (templateName) {\n        var ganttID = this.parent.element.id;\n        return ganttID + templateName;\n    };\n    ChartRows.prototype.leftLabelContainer = function () {\n        var template = '<div class=\"' + ((this.leftTaskLabelTemplateFunction) ? cls.leftLabelTempContainer :\n            cls.leftLabelContainer) + ' ' + '\" tabindex=\"-1\" style=\"height:' +\n            (this.parent.rowHeight - 1) + 'px;width:' + this.taskNameWidth(this.templateData) + '\"></div>';\n        return this.createDivElement(template);\n    };\n    ChartRows.prototype.taskbarContainer = function () {\n        var data = this.templateData;\n        var manualParent = this.parent.editModule && this.parent.editSettings.allowTaskbarEditing &&\n            this.parent.editModule.taskbarEditModule.taskBarEditAction === 'ParentResizing' ?\n            true : false;\n        var template = '<div class=\"' + cls.taskBarMainContainer + ' ' +\n            this.parent.getUnscheduledTaskClass(data.ganttProperties) + ' ' +\n            ((data.ganttProperties.cssClass) ? data.ganttProperties.cssClass : '') + '\" ' +\n            ' tabindex=\"-1\" style=\"' + ((data.ganttProperties.isMilestone && !manualParent) ?\n            ('width:' + this.milestoneHeight + 'px;height:' +\n                this.milestoneHeight + 'px;margin-top:' + this.milestoneMarginTop + 'px;left:' + (data.ganttProperties.left -\n                (this.milestoneHeight / 2)) + 'px;') : ('width:' + data.ganttProperties.width +\n            'px;margin-top:' + this.taskBarMarginTop + 'px;left:' + (!data.hasChildRecords || data.ganttProperties.isAutoSchedule ?\n            data.ganttProperties.left : data.ganttProperties.autoLeft) + 'px;height:' +\n            this.taskBarHeight + 'px;cursor:' + (data.ganttProperties.isAutoSchedule ? 'move;' : 'auto;'))) + '\"></div>';\n        return this.createDivElement(template);\n    };\n    ChartRows.prototype.rightLabelContainer = function () {\n        var template = '<div class=\"' + ((this.rightTaskLabelTemplateFunction) ? cls.rightLabelTempContainer :\n            cls.rightLabelContainer) + '\" ' + ' tabindex=\"-1\" style=\"left:' + this.getRightLabelLeft(this.templateData) + 'px;height:'\n            + (this.parent.rowHeight - 1) + 'px;\"></div>';\n        return this.createDivElement(template);\n    };\n    ChartRows.prototype.childTaskbarLeftResizer = function () {\n        var lResizerLeft = -(this.parent.isAdaptive ? 12 : 2);\n        var template = '<div class=\"' + cls.taskBarLeftResizer + ' ' + cls.icon + '\"' +\n            ' style=\"left:' + lResizerLeft + 'px;height:' + (this.taskBarHeight) + 'px;\"></div>';\n        return this.createDivElement(template);\n    };\n    ChartRows.prototype.childTaskbarRightResizer = function () {\n        var rResizerLeft = this.parent.isAdaptive ? -2 : -10;\n        var template = '<div class=\"' + cls.taskBarRightResizer + ' ' + cls.icon + '\"' +\n            ' style=\"left:' + (this.templateData.ganttProperties.width + rResizerLeft) + 'px;' +\n            'height:' + (this.taskBarHeight) + 'px;\"></div>';\n        return this.createDivElement(template);\n    };\n    ChartRows.prototype.childTaskbarProgressResizer = function () {\n        var template = '<div class=\"' + cls.childProgressResizer + '\"' +\n            ' style=\"left:' + (this.templateData.ganttProperties.progressWidth - 6) + 'px;margin-top:' +\n            (this.taskBarHeight - 4) + 'px;\"><div class=\"' + cls.progressBarHandler + '\"' +\n            '><div class=\"' + cls.progressHandlerElement + '\"></div>' +\n            '<div class=\"' + cls.progressBarHandlerAfter + '\"></div></div>';\n        return this.createDivElement(template);\n    };\n    ChartRows.prototype.getLeftPointNode = function () {\n        var data = this.templateData;\n        var pointerLeft = -((this.parent.isAdaptive ? 14 : 2) + this.connectorPointWidth);\n        var mileStoneLeft = -(this.connectorPointWidth + 2);\n        var pointerTop = Math.floor(this.milesStoneRadius - (this.connectorPointWidth / 2));\n        var template = '<div class=\"' + cls.leftConnectorPointOuterDiv + '\" style=\"' +\n            ((data.ganttProperties.isMilestone) ? ('margin-top:' + pointerTop + 'px;left:' + mileStoneLeft +\n                'px;') : ('margin-top:' + this.connectorPointMargin + 'px;left:' + pointerLeft + 'px;')) + '\">' +\n            '<div class=\"' + cls.connectorPointLeft + ' ' + this.parent.getUnscheduledTaskClass(data.ganttProperties) +\n            '\" style=\"width: ' + this.connectorPointWidth + 'px;' +\n            'height: ' + this.connectorPointWidth + 'px;\">' + this.touchLeftConnectorpoint + '</div></div>';\n        return this.createDivElement(template);\n    };\n    ChartRows.prototype.getRightPointNode = function () {\n        var data = this.templateData;\n        var pointerRight = this.parent.isAdaptive ? 10 : -2;\n        var pointerTop = Math.floor(this.milesStoneRadius - (this.connectorPointWidth / 2));\n        var template = '<div class=\"' + cls.rightConnectorPointOuterDiv + '\" style=\"' +\n            ((data.ganttProperties.isMilestone) ? ('left:' + (this.milestoneHeight - 2) + 'px;margin-top:' +\n                pointerTop + 'px;') : ('left:' + (data.ganttProperties.width + pointerRight) + 'px;margin-top:' +\n                this.connectorPointMargin + 'px;')) + '\">' +\n            '<div class=\"' + cls.connectorPointRight + ' ' + this.parent.getUnscheduledTaskClass(data.ganttProperties) +\n            '\" style=\"width:' + this.connectorPointWidth + 'px;height:' + this.connectorPointWidth + 'px;\">' +\n            this.touchRightConnectorpoint + '</div></div>';\n        return this.createDivElement(template);\n    };\n    /**\n     * To get task label.\n     *\n     * @param {string} field .\n     * @returns {string} .\n     * @private\n     */\n    ChartRows.prototype.getTaskLabel = function (field) {\n        var length = this.parent.ganttColumns.length;\n        var resultString = null;\n        if (!isNullOrUndefined(field) && field !== '') {\n            if (field === this.parent.taskFields.resourceInfo) {\n                resultString = this.getResourceName(this.templateData);\n            }\n            else {\n                for (var i = 0; i < length; i++) {\n                    if (field === this.parent.ganttColumns[i].field) {\n                        resultString = this.getFieldValue(this.templateData[field]).toString();\n                        break;\n                    }\n                }\n                if (isNullOrUndefined(resultString)) {\n                    return 'isCustomTemplate';\n                }\n            }\n        }\n        else {\n            resultString = '';\n        }\n        return resultString;\n    };\n    ChartRows.prototype.getExpandDisplayProp = function (data) {\n        data = this.templateData;\n        if (this.parent.getExpandStatus(data)) {\n            return 'table-row';\n        }\n        return 'none';\n    };\n    ChartRows.prototype.getRowClassName = function (data) {\n        data = this.templateData;\n        var rowClass = 'gridrowtaskId';\n        var parentItem = data.parentItem;\n        if (parentItem) {\n            rowClass += parentItem.taskId.toString();\n        }\n        rowClass += 'level';\n        rowClass += data.level.toString();\n        return rowClass;\n    };\n    ChartRows.prototype.getBorderRadius = function (data) {\n        data = this.templateData;\n        var diff = data.ganttProperties.width - data.ganttProperties.progressWidth;\n        if (diff <= 4) {\n            return 4 - diff;\n        }\n        else {\n            return 0;\n        }\n    };\n    ChartRows.prototype.getSplitTaskBorderRadius = function (data) {\n        var diff = data.width - data.progressWidth;\n        if (diff <= 4) {\n            return 4 - diff;\n        }\n        else {\n            return 0;\n        }\n    };\n    ChartRows.prototype.taskNameWidth = function (ganttData) {\n        ganttData = this.templateData;\n        var ganttProp = ganttData.ganttProperties;\n        var width;\n        if (ganttData.ganttProperties.isMilestone) {\n            width = (ganttData.ganttProperties.left - (this.parent.getTaskbarHeight() / 2));\n        }\n        else if (ganttData.hasChildRecords && !ganttProp.isAutoSchedule) {\n            if (!this.parent.allowUnscheduledTasks) {\n                width = (ganttProp.autoStartDate.getTime() < ganttProp.startDate.getTime()) ?\n                    ganttProp.autoLeft : ganttProp.left;\n            }\n            else {\n                width = ganttProp.left < ganttProp.autoLeft ? ganttProp.left : ganttProp.autoLeft;\n            }\n        }\n        else {\n            width = ganttData.ganttProperties.left;\n        }\n        if (width < 0) {\n            width = 0;\n        }\n        return width + 'px';\n    };\n    ChartRows.prototype.getRightLabelLeft = function (ganttData) {\n        ganttData = this.templateData;\n        var ganttProp = ganttData.ganttProperties;\n        var left;\n        var endLeft;\n        var width;\n        if (ganttData.ganttProperties.isMilestone) {\n            return ganttData.ganttProperties.left + (this.parent.getTaskbarHeight() / 2);\n        }\n        else if (ganttData.hasChildRecords && !ganttProp.isAutoSchedule) {\n            if (!this.parent.allowUnscheduledTasks) {\n                left = ganttProp.autoStartDate.getTime() < ganttProp.startDate.getTime() ? ganttProp.autoLeft : ganttProp.left;\n                endLeft = ganttProp.autoEndDate.getTime() < ganttProp.endDate.getTime() ?\n                    this.parent.dataOperation.getTaskLeft(ganttProp.endDate, ganttProp.isMilestone) :\n                    this.parent.dataOperation.getTaskLeft(ganttProp.autoEndDate, ganttProp.isMilestone);\n                width = endLeft - left;\n            }\n            else {\n                left = ganttProp.left < ganttProp.autoLeft ? ganttProp.left : ganttProp.autoLeft;\n                width = ganttProp.autoWidth;\n            }\n            return left + width;\n        }\n        else {\n            return ganttData.ganttProperties.left + ganttData.ganttProperties.width;\n        }\n    };\n    ChartRows.prototype.getExpandClass = function (data) {\n        data = this.templateData;\n        if (data.expanded) {\n            return cls.rowExpand;\n        }\n        else if (!data.expanded && data.hasChildRecords) {\n            return cls.rowCollapse;\n        }\n        return '';\n    };\n    ChartRows.prototype.getFieldValue = function (field) {\n        return isNullOrUndefined(field) ? '' : field;\n    };\n    ChartRows.prototype.getResourceName = function (ganttData) {\n        ganttData = this.templateData;\n        var resource = null;\n        if (!isNullOrUndefined(ganttData.ganttProperties.resourceInfo)) {\n            var length_2 = ganttData.ganttProperties.resourceInfo.length;\n            if (length_2 > 0) {\n                for (var i = 0; i < length_2; i++) {\n                    var resourceName = ganttData.ganttProperties.resourceInfo[i][this.parent.resourceFields.name];\n                    var resourceUnit = ganttData.ganttProperties.resourceInfo[i][this.parent.resourceFields.unit];\n                    if (resourceUnit !== 100) {\n                        resourceName += '[' + resourceUnit + '%' + ']';\n                    }\n                    if (isNullOrUndefined(resource)) {\n                        resource = resourceName;\n                    }\n                    else {\n                        resource += ' , ' + resourceName;\n                    }\n                }\n                return resource;\n            }\n            else {\n                return '';\n            }\n        }\n        return '';\n    };\n    /**\n     * To initialize private variable help to render task bars.\n     *\n     * @returns {void}\n     * @private\n     */\n    ChartRows.prototype.initChartHelperPrivateVariable = function () {\n        this.baselineColor = !isNullOrUndefined(this.parent.baselineColor) &&\n            this.parent.baselineColor !== '' ? this.parent.baselineColor : null;\n        this.taskBarHeight = isNullOrUndefined(this.parent.taskbarHeight) || this.parent.taskbarHeight >= this.parent.rowHeight ?\n            Math.floor(this.parent.rowHeight * 0.62) : this.parent.taskbarHeight; // 0.62 -- Standard Ratio.\n        if (this.parent.renderBaseline) {\n            var height = void 0;\n            if ((this.taskBarHeight + this.baselineHeight) <= this.parent.rowHeight) {\n                height = this.taskBarHeight;\n            }\n            else {\n                height = this.taskBarHeight - (this.baselineHeight + 1);\n            }\n            this.taskBarHeight = height;\n        }\n        this.milestoneHeight = Math.floor(this.taskBarHeight * 0.82); // 0.82 -- Standard Ratio.\n        this.taskBarMarginTop = Math.floor((this.parent.rowHeight - this.taskBarHeight) / 2);\n        this.milestoneMarginTop = Math.floor((this.parent.rowHeight - this.milestoneHeight) / 2);\n        this.milesStoneRadius = Math.floor((this.milestoneHeight) / 2);\n        this.baselineTop = -(Math.floor((this.parent.rowHeight - (this.taskBarHeight + this.taskBarMarginTop))) - 1);\n        this.connectorPointWidth = this.parent.isAdaptive ? Math.round(this.taskBarHeight / 2) : 8;\n        this.connectorPointMargin = Math.floor((this.taskBarHeight / 2) - (this.connectorPointWidth / 2));\n    };\n    /**\n     * Function used to refresh Gantt rows.\n     *\n     * @returns {void}\n     * @private\n     */\n    ChartRows.prototype.refreshGanttRows = function () {\n        this.parent.currentViewData = this.parent.treeGrid.getCurrentViewRecords().slice();\n        this.createTaskbarTemplate();\n        if (this.parent.viewType === 'ResourceView' && this.parent.showOverAllocation) {\n            for (var i = 0; i < this.parent.currentViewData.length; i++) {\n                var data = this.parent.currentViewData[i];\n                if (data.childRecords.length > 0) {\n                    this.parent.setRecordValue('workTimelineRanges', this.parent.dataOperation.mergeRangeCollections(data.ganttProperties.workTimelineRanges, true), data.ganttProperties, true);\n                    this.parent.dataOperation.calculateRangeLeftWidth(data.ganttProperties.workTimelineRanges);\n                }\n            }\n            this.parent.ganttChartModule.renderRangeContainer(this.parent.currentViewData);\n        }\n    };\n    /**\n     * To render taskbars.\n     *\n     * @returns {void}\n     * @private\n     */\n    ChartRows.prototype.createTaskbarTemplate = function () {\n        var trs = [].slice.call(this.ganttChartTableBody.querySelectorAll('tr'));\n        this.ganttChartTableBody.innerHTML = '';\n        var collapsedResourceRecord = [];\n        var prevCurrentView = this.parent.treeGridModule.prevCurrentView;\n        this.refreshedTr = [];\n        this.refreshedData = [];\n        if (this.parent.enableImmutableMode && prevCurrentView && prevCurrentView.length > 0 && this.isUpdated) {\n            var oldKeys = {};\n            var oldRowElements = [];\n            var key = this.parent.treeGrid.getPrimaryKeyFieldNames()[0];\n            for (var i = 0; i < prevCurrentView.length; i++) {\n                oldRowElements[i] = trs[i];\n                oldKeys[prevCurrentView[i][key]] = i;\n            }\n            for (var index = 0; index < this.parent.currentViewData.length; index++) {\n                var oldIndex = oldKeys[this.parent.currentViewData[index][key]];\n                var modifiedRecIndex = this.parent.modifiedRecords.indexOf(this.parent.currentViewData[index]);\n                if (isNullOrUndefined(oldIndex) || modifiedRecIndex !== -1) {\n                    var tRow = this.getGanttChartRow(index, this.parent.currentViewData[index]);\n                    this.ganttChartTableBody.appendChild(tRow);\n                    this.refreshedTr.push(this.ganttChartTableBody.querySelectorAll('tr')[index]);\n                    this.refreshedData.push(this.parent.currentViewData[index]);\n                }\n                else {\n                    this.ganttChartTableBody.appendChild(oldRowElements[oldIndex]);\n                }\n                this.ganttChartTableBody.querySelectorAll('tr')[index].setAttribute('aria-rowindex', index.toString());\n            }\n        }\n        else {\n            for (var i = 0; i < this.parent.currentViewData.length; i++) {\n                var tempTemplateData = this.parent.currentViewData[i];\n                if (this.parent.viewType === 'ResourceView' && !tempTemplateData.expanded && this.parent.enableMultiTaskbar) {\n                    collapsedResourceRecord.push(tempTemplateData);\n                }\n                var tRow = this.getGanttChartRow(i, tempTemplateData);\n                this.ganttChartTableBody.appendChild(tRow);\n                if (this.parent.enableImmutableMode) {\n                    this.refreshedTr.push(this.ganttChartTableBody.querySelectorAll('tr')[i]);\n                    this.refreshedData.push(this.parent.currentViewData[i]);\n                }\n                // To maintain selection when virtualization is enabled\n                if (this.parent.selectionModule && this.parent.allowSelection) {\n                    this.parent.selectionModule.maintainSelectedRecords(parseInt(tRow.getAttribute('aria-rowindex'), 10));\n                }\n            }\n        }\n        this.triggerQueryTaskbarInfo();\n        this.parent.modifiedRecords = [];\n        if (collapsedResourceRecord.length) {\n            for (var j = 0; j < collapsedResourceRecord.length; j++) {\n                if (collapsedResourceRecord[j].hasChildRecords) {\n                    this.parent.isGanttChartRendered = true;\n                    this.parent.chartRowsModule.refreshRecords([collapsedResourceRecord[j]]);\n                }\n            }\n        }\n        this.parent.renderTemplates();\n    };\n    /**\n     * To render taskbars.\n     *\n     * @param {number} i .\n     * @param {IGanttData} tempTemplateData .\n     * @returns {Node} .\n     * @private\n     */\n    ChartRows.prototype.getGanttChartRow = function (i, tempTemplateData) {\n        this.templateData = tempTemplateData;\n        var taskBaselineTemplateNode = null;\n        var parentTrNode = this.getTableTrNode();\n        var leftLabelNode = this.getLeftLabelNode(i);\n        var taskbarContainerNode = this.taskbarContainer();\n        taskbarContainerNode[0].setAttribute('aria-label', this.generateAriaLabel(this.templateData));\n        taskbarContainerNode[0].setAttribute('rowUniqueId', this.templateData.ganttProperties.rowUniqueID);\n        if (!this.templateData.hasChildRecords) {\n            var connectorLineLeftNode = this.getLeftPointNode();\n            taskbarContainerNode[0].appendChild([].slice.call(connectorLineLeftNode)[0]);\n        }\n        if (this.templateData.hasChildRecords) {\n            var parentTaskbarTemplateNode = this.getParentTaskbarNode(i, taskbarContainerNode);\n            if (!this.templateData.ganttProperties.isAutoSchedule) {\n                var manualTaskbar = this.getManualTaskbar();\n                taskbarContainerNode[0].appendChild([].slice.call(manualTaskbar)[0]);\n            }\n            if (parentTaskbarTemplateNode && parentTaskbarTemplateNode.length > 0) {\n                taskbarContainerNode[0].appendChild([].slice.call(parentTaskbarTemplateNode)[0]);\n            }\n            if (this.parent.renderBaseline && this.templateData.ganttProperties.baselineStartDate &&\n                this.templateData.ganttProperties.baselineEndDate) {\n                taskBaselineTemplateNode = this.getTaskBaselineNode();\n            }\n        }\n        else if (this.templateData.ganttProperties.isMilestone) {\n            var milestoneTemplateNode = this.getMilestoneNode(i, taskbarContainerNode);\n            if (milestoneTemplateNode && milestoneTemplateNode.length > 0) {\n                taskbarContainerNode[0].appendChild([].slice.call(milestoneTemplateNode)[0]);\n            }\n            if (this.parent.renderBaseline && this.templateData.ganttProperties.baselineStartDate &&\n                this.templateData.ganttProperties.baselineEndDate) {\n                taskBaselineTemplateNode = this.getMilestoneBaselineNode();\n            }\n        }\n        else {\n            var scheduledTask = isScheduledTask(this.templateData.ganttProperties); // eslint-disable-line\n            var childTaskbarProgressResizeNode = null;\n            var childTaskbarRightResizeNode = null;\n            var childTaskbarLeftResizeNode = null;\n            if (!isNullOrUndefined(scheduledTask)) {\n                if (scheduledTask || this.templateData.ganttProperties.duration) {\n                    if (scheduledTask && (isNullOrUndefined(this.templateData.ganttProperties.segments)\n                        || this.templateData.ganttProperties.segments.length <= 0)) {\n                        childTaskbarProgressResizeNode = this.childTaskbarProgressResizer();\n                        childTaskbarLeftResizeNode = this.childTaskbarLeftResizer();\n                        childTaskbarRightResizeNode = this.childTaskbarRightResizer();\n                    }\n                }\n                var childTaskbarTemplateNode = this.getChildTaskbarNode(i, taskbarContainerNode);\n                if (childTaskbarLeftResizeNode) {\n                    taskbarContainerNode[0].appendChild([].slice.call(childTaskbarLeftResizeNode)[0]);\n                }\n                if (childTaskbarTemplateNode && childTaskbarTemplateNode.length > 0) {\n                    if (this.templateData.ganttProperties.segments && this.templateData.ganttProperties.segments.length > 0) {\n                        var length_3 = this.templateData.ganttProperties.segments.length;\n                        var connector = ('<div class=\"e-gantt-split-container-line\"></div>');\n                        var segmentConnector = null;\n                        segmentConnector = this.createDivElement(connector);\n                        taskbarContainerNode[0].appendChild([].slice.call(segmentConnector)[0]);\n                        for (var i_1 = 0; i_1 < length_3; i_1++) {\n                            taskbarContainerNode[0].appendChild([].slice.call(childTaskbarTemplateNode)[0]);\n                        }\n                    }\n                    else {\n                        taskbarContainerNode[0].appendChild([].slice.call(childTaskbarTemplateNode)[0]);\n                    }\n                }\n                if (childTaskbarProgressResizeNode) {\n                    taskbarContainerNode[0].appendChild([].slice.call(childTaskbarProgressResizeNode)[0]);\n                }\n                if (childTaskbarRightResizeNode) {\n                    taskbarContainerNode[0].appendChild([].slice.call(childTaskbarRightResizeNode)[0]);\n                }\n            }\n            if (this.parent.renderBaseline && this.templateData.ganttProperties.baselineStartDate &&\n                this.templateData.ganttProperties.baselineEndDate) {\n                taskBaselineTemplateNode = this.getTaskBaselineNode();\n            }\n        }\n        if (!this.templateData.hasChildRecords) {\n            var connectorLineRightNode = this.getRightPointNode();\n            taskbarContainerNode[0].appendChild([].slice.call(connectorLineRightNode)[0]);\n        }\n        var rightLabelNode = this.getRightLabelNode(i);\n        parentTrNode[0].childNodes[0].childNodes[0].appendChild([].slice.call(leftLabelNode)[0]);\n        parentTrNode[0].childNodes[0].childNodes[0].appendChild([].slice.call(taskbarContainerNode)[0]);\n        if (this.templateData.ganttProperties.indicators && this.templateData.ganttProperties.indicators.length > 0) {\n            var taskIndicatorNode = void 0;\n            var taskIndicatorTextFunction = void 0;\n            var taskIndicatorTextNode = void 0;\n            var indicators = this.templateData.ganttProperties.indicators;\n            for (var indicatorIndex = 0; indicatorIndex < indicators.length; indicatorIndex++) {\n                taskIndicatorNode = this.getIndicatorNode(indicators[indicatorIndex]);\n                if (indicators[indicatorIndex].name.indexOf('$') > -1 || indicators[indicatorIndex].name.indexOf('#') > -1) {\n                    taskIndicatorTextFunction = this.templateCompiler(indicators[indicatorIndex].name);\n                    taskIndicatorTextNode = taskIndicatorTextFunction(extend({ index: i }, this.templateData), this.parent, 'indicatorLabelText');\n                }\n                else {\n                    var text = createElement('Text');\n                    text.innerHTML = indicators[indicatorIndex].name;\n                    taskIndicatorTextNode = text.childNodes;\n                }\n                taskIndicatorNode[0].appendChild([].slice.call(taskIndicatorTextNode)[0]);\n                taskIndicatorNode[0].title =\n                    !isNullOrUndefined(indicators[indicatorIndex].tooltip) ? indicators[indicatorIndex].tooltip : '';\n                parentTrNode[0].childNodes[0].childNodes[0].appendChild([].slice.call(taskIndicatorNode)[0]);\n            }\n        }\n        if (rightLabelNode && rightLabelNode.length > 0) {\n            parentTrNode[0].childNodes[0].childNodes[0].appendChild([].slice.call(rightLabelNode)[0]);\n        }\n        if (!isNullOrUndefined(taskBaselineTemplateNode)) {\n            parentTrNode[0].childNodes[0].childNodes[0].appendChild([].slice.call(taskBaselineTemplateNode)[0]);\n        }\n        var tRow = parentTrNode[0].childNodes[0];\n        this.setAriaRowIndex(tempTemplateData, tRow);\n        return tRow;\n    };\n    /**\n     * To set aria-rowindex for chart rows\n     *\n     * @returns {void} .\n     * @private\n     */\n    ChartRows.prototype.setAriaRowIndex = function (tempTemplateData, tRow) {\n        var dataSource = this.parent.treeGrid.getCurrentViewRecords();\n        var visualData = this.parent.virtualScrollModule && this.parent.enableVirtualization ?\n            getValue('virtualScrollModule.visualData', this.parent.treeGrid) : dataSource;\n        var index = visualData.indexOf(tempTemplateData);\n        tRow.setAttribute('aria-rowindex', index.toString());\n    };\n    /**\n     * To trigger query taskbar info event.\n     *\n     * @returns {void}\n     * @private\n     */\n    ChartRows.prototype.triggerQueryTaskbarInfo = function () {\n        if (!this.parent.queryTaskbarInfo) {\n            return;\n        }\n        var length = this.parent.enableImmutableMode ?\n            this.refreshedTr.length : this.ganttChartTableBody.querySelectorAll('tr').length;\n        var trElement;\n        var data;\n        for (var index = 0; index < length; index++) {\n            trElement = this.parent.enableImmutableMode ? this.refreshedTr[index] : this.ganttChartTableBody.querySelectorAll('tr')[index];\n            data = this.refreshedData.length > 0 ? this.refreshedData[index] : this.parent.currentViewData[index];\n            var segmentLength = !isNullOrUndefined(data.ganttProperties.segments) && data.ganttProperties.segments.length;\n            if (segmentLength > 0) {\n                for (var i = 0; i < segmentLength; i++) {\n                    var segmentedTasks = trElement.getElementsByClassName('e-segmented-taskbar');\n                    var segmentElement = segmentedTasks[i];\n                    this.triggerQueryTaskbarInfoByIndex(segmentElement, data);\n                }\n            }\n            else if (trElement) {\n                this.triggerQueryTaskbarInfoByIndex(trElement, data);\n            }\n        }\n    };\n    /**\n     *\n     * @param {Element} trElement .\n     * @param {IGanttData} data .\n     * @returns {void} .\n     * @private\n     */\n    ChartRows.prototype.triggerQueryTaskbarInfoByIndex = function (trElement, data) {\n        var _this = this;\n        // eslint-disable-next-line\n        var taskbarElement = !isNullOrUndefined(data.ganttProperties.segments) && data.ganttProperties.segments.length > 0 ? trElement :\n            trElement.querySelector('.' + cls.taskBarMainContainer);\n        var rowElement;\n        var triggerTaskbarElement;\n        var args = {\n            data: data,\n            rowElement: trElement,\n            taskbarElement: taskbarElement,\n            taskbarType: data.hasChildRecords ? 'ParentTask' : data.ganttProperties.isMilestone ? 'Milestone' : 'ChildTask'\n        };\n        var classCollections = this.getClassName(args);\n        if (args.taskbarType === 'Milestone') {\n            args.milestoneColor = taskbarElement.querySelector(classCollections[0]) ?\n                getComputedStyle(taskbarElement.querySelector(classCollections[0])).borderBottomColor : null;\n            args.baselineColor = trElement.querySelector(classCollections[1]) ?\n                getComputedStyle(trElement.querySelector(classCollections[1])).borderBottomColor : null;\n        }\n        else {\n            var childTask = taskbarElement.querySelector(classCollections[0]);\n            var progressTask = taskbarElement.querySelector(classCollections[1]);\n            args.taskbarBgColor = isNullOrUndefined(childTask) ? null : taskbarElement.classList.contains(cls.traceChildTaskBar) ?\n                getComputedStyle(taskbarElement).backgroundColor :\n                getComputedStyle(taskbarElement.querySelector(classCollections[0])).backgroundColor;\n            args.taskbarBorderColor = isNullOrUndefined(childTask) ? null : taskbarElement.classList.contains(cls.traceChildTaskBar) ?\n                getComputedStyle(taskbarElement).backgroundColor :\n                getComputedStyle(taskbarElement.querySelector(classCollections[0])).borderColor;\n            args.progressBarBgColor = isNullOrUndefined(progressTask) ? null :\n                taskbarElement.classList.contains(cls.traceChildProgressBar) ?\n                    getComputedStyle(taskbarElement).backgroundColor :\n                    getComputedStyle(taskbarElement.querySelector(classCollections[1])).backgroundColor;\n            // args.progressBarBorderColor = taskbarElement.querySelector(progressBarClass) ?\n            //     getComputedStyle(taskbarElement.querySelector(progressBarClass)).borderColor : null;\n            args.baselineColor = trElement.querySelector('.' + cls.baselineBar) ?\n                getComputedStyle(trElement.querySelector('.' + cls.baselineBar)).backgroundColor : null;\n            args.taskLabelColor = taskbarElement.querySelector('.' + cls.taskLabel) ?\n                getComputedStyle(taskbarElement.querySelector('.' + cls.taskLabel)).color : null;\n        }\n        args.rightLabelColor = trElement.querySelector('.' + cls.rightLabelContainer) &&\n            (trElement.querySelector('.' + cls.rightLabelContainer)).querySelector('.' + cls.label) ?\n            getComputedStyle((trElement.querySelector('.' + cls.rightLabelContainer)).querySelector('.' + cls.label)).color : null;\n        args.leftLabelColor = trElement.querySelector('.' + cls.leftLabelContainer) &&\n            (trElement.querySelector('.' + cls.leftLabelContainer)).querySelector('.' + cls.label) ?\n            getComputedStyle((trElement.querySelector('.' + cls.leftLabelContainer)).querySelector('.' + cls.label)).color : null;\n        this.parent.trigger('queryTaskbarInfo', args, function (taskbarArgs) {\n            _this.updateQueryTaskbarInfoArgs(taskbarArgs, rowElement, triggerTaskbarElement);\n        });\n    };\n    /**\n     * To update query taskbar info args.\n     *\n     * @param {IQueryTaskbarInfoEventArgs} args .\n     * @param {Element} rowElement .\n     * @param {Element} taskBarElement .\n     * @returns {void}\n     * @private\n     */\n    ChartRows.prototype.updateQueryTaskbarInfoArgs = function (args, rowElement, taskBarElement) {\n        var trElement = args.rowElement;\n        var taskbarElement = args.taskbarElement;\n        var classCollections = this.getClassName(args);\n        if (args.taskbarType === 'Milestone') {\n            if (taskbarElement.querySelector(classCollections[0]) &&\n                getComputedStyle(taskbarElement.querySelector(classCollections[0])).borderBottomColor !== args.milestoneColor) {\n                taskbarElement.querySelector(classCollections[0]).style.borderBottomColor = args.milestoneColor;\n                taskbarElement.querySelector('.' + cls.milestoneBottom).style.borderTopColor = args.milestoneColor;\n            }\n            if (trElement.querySelector(classCollections[1]) &&\n                getComputedStyle(trElement.querySelector(classCollections[1])).borderTopColor !== args.baselineColor) {\n                trElement.querySelector(classCollections[1]).style.borderBottomColor = args.baselineColor;\n                trElement.querySelector('.' + cls.baselineMilestoneBottom).style.borderTopColor = args.baselineColor;\n            }\n        }\n        else {\n            if (taskbarElement.querySelector(classCollections[0]) &&\n                getComputedStyle(taskbarElement.querySelector(classCollections[0])).backgroundColor !== args.taskbarBgColor) {\n                taskbarElement.querySelector(classCollections[0]).style.backgroundColor = args.taskbarBgColor;\n            }\n            if (taskbarElement.querySelector(classCollections[0]) &&\n                getComputedStyle(taskbarElement.querySelector(classCollections[0])).borderColor !== args.taskbarBorderColor) {\n                taskbarElement.querySelector(classCollections[0]).style.borderColor = args.taskbarBorderColor;\n            }\n            if (taskbarElement.querySelector(classCollections[1]) &&\n                getComputedStyle(taskbarElement.querySelector(classCollections[1])).backgroundColor !== args.progressBarBgColor) {\n                taskbarElement.querySelector(classCollections[1]).style.backgroundColor = args.progressBarBgColor;\n            }\n            if (taskbarElement.classList.contains(cls.traceChildTaskBar) &&\n                getComputedStyle(taskbarElement).backgroundColor !== args.taskbarBgColor) {\n                taskbarElement.style.backgroundColor = args.taskbarBgColor;\n            }\n            if (taskbarElement.classList.contains(cls.traceChildTaskBar) &&\n                getComputedStyle(taskbarElement).borderColor !== args.taskbarBorderColor) {\n                taskbarElement.style.borderColor = args.taskbarBorderColor;\n            }\n            if (taskbarElement.classList.contains(cls.traceChildProgressBar) &&\n                getComputedStyle(taskbarElement).backgroundColor !== args.progressBarBgColor) {\n                taskbarElement.style.backgroundColor = args.progressBarBgColor;\n            }\n            // if (taskbarElement.querySelector(progressBarClass) &&\n            //     getComputedStyle(taskbarElement.querySelector(progressBarClass)).borderColor !== args.progressBarBorderColor) {\n            //     (taskbarElement.querySelector(progressBarClass) as HTMLElement).style.borderColor = args.progressBarBorderColor;\n            // }\n            if (taskbarElement.querySelector('.' + cls.taskLabel) &&\n                getComputedStyle(taskbarElement.querySelector('.' + cls.taskLabel)).color !== args.taskLabelColor) {\n                taskbarElement.querySelector('.' + cls.taskLabel).style.color = args.taskLabelColor;\n            }\n            if (trElement.querySelector('.' + cls.baselineBar) &&\n                getComputedStyle(trElement.querySelector('.' + cls.baselineBar)).backgroundColor !== args.baselineColor) {\n                trElement.querySelector('.' + cls.baselineBar).style.backgroundColor = args.baselineColor;\n            }\n        }\n        if (trElement.querySelector('.' + cls.leftLabelContainer) &&\n            (trElement.querySelector('.' + cls.leftLabelContainer)).querySelector('.' + cls.label) &&\n            getComputedStyle((trElement.querySelector('.' + cls.leftLabelContainer)).querySelector('.' + cls.label)).color !== args.leftLabelColor) {\n            (trElement.querySelector('.' + cls.leftLabelContainer)).querySelector('.' + cls.label).style.color = args.leftLabelColor;\n        }\n        if (trElement.querySelector('.' + cls.rightLabelContainer) &&\n            (trElement.querySelector('.' + cls.rightLabelContainer)).querySelector('.' + cls.label) &&\n            getComputedStyle((trElement.querySelector('.' + cls.rightLabelContainer)).querySelector('.' + cls.label)).color !== args.rightLabelColor) {\n            (trElement.querySelector('.' + cls.rightLabelContainer)).querySelector('.' + cls.label).style.color = args.rightLabelColor;\n        }\n    };\n    ChartRows.prototype.getClassName = function (args) {\n        var classCollection = [];\n        classCollection.push('.' + (args.taskbarType === 'ParentTask' ?\n            cls.traceParentTaskBar : args.taskbarType === 'ChildTask' ? cls.traceChildTaskBar : cls.milestoneTop));\n        classCollection.push('.' + (args.taskbarType === 'ParentTask' ?\n            cls.traceParentProgressBar : args.taskbarType === 'ChildTask' ? cls.traceChildProgressBar : cls.baselineMilestoneTop));\n        return classCollection;\n    };\n    /**\n     * To compile template string.\n     *\n     * @param {string} template .\n     * @returns {Function} .\n     * @private\n     */\n    ChartRows.prototype.templateCompiler = function (template) {\n        if (!isNullOrUndefined(template) && template !== '') {\n            try {\n                if (document.querySelectorAll(template).length) {\n                    return compile(document.querySelector(template).innerHTML.trim(), this.parent);\n                }\n                else {\n                    return compile(template, this.parent);\n                }\n            }\n            catch (e) {\n                return compile(template, this.parent);\n            }\n        }\n        return null;\n    };\n    /**\n     * To refresh edited TR\n     *\n     * @param {number} index .\n     * @param {boolean} isValidateRange .\n     * @returns {void} .\n     * @private\n     */\n    ChartRows.prototype.refreshRow = function (index, isValidateRange) {\n        var tr = this.ganttChartTableBody.childNodes[index];\n        var selectedItem = this.parent.currentViewData[index];\n        if (index !== -1 && selectedItem) {\n            var data = selectedItem;\n            if (this.parent.viewType === 'ResourceView' && data.hasChildRecords && !data.expanded && this.parent.enableMultiTaskbar) {\n                tr.replaceChild(this.getResourceParent(data).childNodes[0], tr.childNodes[0]);\n            }\n            else {\n                tr.replaceChild(this.getGanttChartRow(index, data).childNodes[0], tr.childNodes[0]);\n            }\n            if (this.parent.viewType === 'ResourceView' && data.hasChildRecords && this.parent.showOverAllocation) {\n                if (isValidateRange) {\n                    this.parent.ganttChartModule.renderRangeContainer(this.parent.currentViewData);\n                }\n                else {\n                    this.parent.dataOperation.updateOverlappingValues(data);\n                    this.parent.ganttChartModule.renderRangeContainer([data]);\n                }\n            }\n            var segmentLength = !isNullOrUndefined(data.ganttProperties.segments) && data.ganttProperties.segments.length;\n            if (segmentLength > 0) {\n                for (var i = 0; i < segmentLength; i++) {\n                    var segmentedTasks = tr.getElementsByClassName('e-segmented-taskbar');\n                    var segmentElement = segmentedTasks[i];\n                    this.triggerQueryTaskbarInfoByIndex(segmentElement, data);\n                }\n            }\n            else {\n                this.triggerQueryTaskbarInfoByIndex(tr, data);\n            }\n            var dataId = this.parent.viewType === 'ProjectView' ? data.ganttProperties.taskId : data.ganttProperties.rowUniqueID;\n            this.parent.treeGrid.grid.setRowData(dataId, data);\n            var row = this.parent.treeGrid.grid.getRowObjectFromUID(this.parent.treeGrid.grid.getDataRows()[index].getAttribute('data-uid'));\n            row.data = data;\n        }\n    };\n    ChartRows.prototype.getResourceParent = function (record) {\n        var chartRows = this.parent.ganttChartModule.getChartRows();\n        this.templateData = record;\n        var parentTrNode = this.getTableTrNode();\n        var leftLabelNode = this.leftLabelContainer();\n        var collapseParent = createElement('div', {\n            className: 'e-collapse-parent'\n        });\n        parentTrNode[0].childNodes[0].childNodes[0].appendChild(collapseParent);\n        var tasks = this.parent.dataOperation.setSortedChildTasks(record);\n        this.parent.dataOperation.updateOverlappingIndex(tasks);\n        for (var i = 0; i < chartRows.length; i++) {\n            if (chartRows[i].classList.contains('gridrowtaskId'\n                + record.ganttProperties.rowUniqueID + 'level' + (record.level + 1))) {\n                var cloneElement = chartRows[i].querySelector('.e-taskbar-main-container');\n                addClass([cloneElement], 'collpse-parent-border');\n                var id = chartRows[i].querySelector('.' + cls.taskBarMainContainer).getAttribute('rowUniqueId');\n                var ganttData = this.parent.getRecordByID(id);\n                var zIndex = (ganttData.ganttProperties.eOverlapIndex).toString();\n                var cloneChildElement = cloneElement.cloneNode(true);\n                cloneChildElement.style.zIndex = zIndex;\n                parentTrNode[0].childNodes[0].childNodes[0].childNodes[0].appendChild(cloneChildElement);\n            }\n        }\n        parentTrNode[0].childNodes[0].childNodes[0].appendChild([].slice.call(leftLabelNode)[0]);\n        return parentTrNode[0].childNodes[0];\n    };\n    /**\n     * To refresh all edited records\n     *\n     * @param {IGanttData} items .\n     * @param {boolean} isValidateRange .\n     * @returns {void} .\n     * @private\n     */\n    ChartRows.prototype.refreshRecords = function (items, isValidateRange) {\n        if (this.parent.isGanttChartRendered) {\n            this.parent.renderTemplates();\n            if (this.parent.viewType === 'ResourceView' && this.parent.enableMultiTaskbar) {\n                var sortedRecords = [];\n                sortedRecords = new DataManager(items).executeLocal(new Query()\n                    .sortBy('expanded', 'Descending'));\n                items = sortedRecords;\n            }\n            for (var i = 0; i < items.length; i++) {\n                var index = this.parent.currentViewData.indexOf(items[i]);\n                this.refreshRow(index, isValidateRange);\n            }\n            this.parent.ganttChartModule.updateLastRowBottomWidth();\n        }\n    };\n    ChartRows.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('renderPanels', this.createChartTable);\n        this.parent.off('dataReady', this.initiateTemplates);\n        this.parent.off('destroy', this.destroy);\n    };\n    ChartRows.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    ChartRows.prototype.generateAriaLabel = function (data) {\n        data = this.templateData;\n        var defaultValue = '';\n        var nameConstant = this.parent.localeObj.getConstant('name');\n        var startDateConstant = this.parent.localeObj.getConstant('startDate');\n        var endDateConstant = this.parent.localeObj.getConstant('endDate');\n        var durationConstant = this.parent.localeObj.getConstant('duration');\n        var taskNameVal = data.ganttProperties.taskName;\n        var startDateVal = data.ganttProperties.startDate;\n        var endDateVal = data.ganttProperties.endDate;\n        var durationVal = data.ganttProperties.duration;\n        if (data.ganttProperties.isMilestone) {\n            defaultValue = nameConstant + ' ' + taskNameVal + ' ' + startDateConstant + ' '\n                + this.parent.getFormatedDate(startDateVal);\n        }\n        else {\n            if (taskNameVal) {\n                defaultValue += nameConstant + ' ' + taskNameVal + ' ';\n            }\n            if (startDateVal) {\n                defaultValue += startDateConstant + ' ' + this.parent.getFormatedDate(startDateVal) + ' ';\n            }\n            if (endDateVal) {\n                defaultValue += endDateConstant + ' ' + this.parent.getFormatedDate(endDateVal) + ' ';\n            }\n            if (durationVal) {\n                defaultValue += durationConstant + ' '\n                    + this.parent.getDurationString(durationVal, data.ganttProperties.durationUnit);\n            }\n        }\n        return defaultValue;\n    };\n    ChartRows.prototype.generateSpiltTaskAriaLabel = function (data, ganttProp) {\n        var defaultValue = '';\n        var startDateConstant = this.parent.localeObj.getConstant('startDate');\n        var endDateConstant = this.parent.localeObj.getConstant('endDate');\n        var durationConstant = this.parent.localeObj.getConstant('duration');\n        var startDateVal = data.startDate;\n        var endDateVal = data.endDate;\n        var durationVal = data.duration;\n        if (startDateVal) {\n            defaultValue += startDateConstant + ' ' + this.parent.getFormatedDate(startDateVal) + ' ';\n        }\n        if (endDateVal) {\n            defaultValue += endDateConstant + ' ' + this.parent.getFormatedDate(endDateVal) + ' ';\n        }\n        if (durationVal) {\n            defaultValue += durationConstant + ' '\n                + this.parent.getDurationString(durationVal, ganttProp.durationUnit);\n        }\n        return defaultValue;\n    };\n    ChartRows.prototype.generateTaskLabelAriaLabel = function (type) {\n        var label = '';\n        if (type === 'left' && this.parent.labelSettings.leftLabel && !this.leftTaskLabelTemplateFunction) {\n            label += this.parent.localeObj.getConstant('leftTaskLabel') +\n                ' ' + this.getTaskLabel(this.parent.labelSettings.leftLabel);\n        }\n        else if (type === 'right' && this.parent.labelSettings.rightLabel && !this.rightTaskLabelTemplateFunction) {\n            label += this.parent.localeObj.getConstant('rightTaskLabel') +\n                ' ' + this.getTaskLabel(this.parent.labelSettings.rightLabel);\n        }\n        return label;\n    };\n    return ChartRows;\n}(DateProcessor));\nexport { ChartRows };\n"]},"metadata":{},"sourceType":"module"}