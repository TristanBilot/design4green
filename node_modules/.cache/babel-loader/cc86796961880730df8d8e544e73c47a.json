{"ast":null,"code":"import { createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as cls from '../base/css-constants';\nimport { Splitter as SplitterLayout } from '@syncfusion/ej2-layouts';\nimport { Deferred } from '@syncfusion/ej2-data';\n/**\n * Splitter module is used to define the splitter position in Gantt layout.\n */\n\nvar Splitter =\n/** @class */\nfunction () {\n  function Splitter(ganttObj) {\n    this.parent = ganttObj;\n    this.parent.on('destroy', this.destroy, this);\n  }\n  /**\n   * @returns {void} .\n   * @private\n   */\n\n\n  Splitter.prototype.renderSplitter = function () {\n    var _this = this;\n\n    var splitterPosition = this.calculateSplitterPosition(this.parent.splitterSettings);\n    this.parent.splitterElement = createElement('div', {\n      className: cls.splitter\n    });\n    this.parent.treeGridPane = createElement('div', {\n      className: cls.treeGridPane\n    });\n    this.parent.chartPane = createElement('div', {\n      className: cls.ganttChartPane\n    });\n    this.parent.splitterElement.appendChild(this.parent.treeGridPane);\n    this.parent.splitterElement.appendChild(this.parent.chartPane);\n    this.splitterObject = new SplitterLayout({\n      height: null,\n      width: this.parent.ganttWidth.toString(),\n      separatorSize: this.parent.splitterSettings.separatorSize,\n      paneSettings: [{\n        resizable: true,\n        size: splitterPosition,\n        min: this.getSpliterPositionInPercentage(this.parent.splitterSettings.minimum)\n      }, {\n        resizable: true\n      }],\n      orientation: 'Horizontal',\n      resizeStart: function (args) {\n        var leftPane = args.pane[0];\n        var rightPane = args.pane[1];\n        _this.splitterPreviousPositionGrid = leftPane.scrollWidth + 1 + 'px';\n        _this.splitterPreviousPositionChart = rightPane.scrollWidth + 1 + 'px';\n        var callBackPromise = new Deferred();\n\n        _this.parent.trigger('splitterResizeStart', args, function (resizeStartArgs) {\n          callBackPromise.resolve(resizeStartArgs);\n        });\n\n        return callBackPromise;\n      },\n      resizing: function (args) {\n        _this.parent.trigger('splitterResizing', args);\n      },\n      resizeStop: function (args) {\n        var callBackPromise = new Deferred();\n\n        _this.parent.trigger('splitterResized', args, function (splitterResizedArgs) {\n          if (splitterResizedArgs.cancel === true) {\n            _this.splitterObject.paneSettings[0].size = null;\n            _this.splitterObject.paneSettings[0].size = _this.getSpliterPositionInPercentage(_this.splitterPreviousPositionGrid);\n            _this.splitterObject.paneSettings[1].size = null;\n            _this.splitterObject.paneSettings[1].size = _this.getSpliterPositionInPercentage(_this.splitterPreviousPositionChart);\n          }\n\n          callBackPromise.resolve(splitterResizedArgs);\n        });\n\n        return callBackPromise;\n      }\n    });\n    this.parent.element.appendChild(this.parent.splitterElement);\n    this.splitterObject.appendTo(this.parent.splitterElement);\n  };\n  /**\n   * @param {SplitterSettingsModel} splitter .\n   * @param {boolean} isDynamic .\n   * @returns {string} .\n   * @private\n   */\n\n\n  Splitter.prototype.calculateSplitterPosition = function (splitter, isDynamic) {\n    if (splitter.view === 'Grid') {\n      return '100%';\n    } else if (splitter.view === 'Chart') {\n      return '0%';\n    } else {\n      if (!isNullOrUndefined(splitter.position) && splitter.position !== '') {\n        return this.getSpliterPositionInPercentage(splitter.position);\n      } else if (!isNullOrUndefined(splitter.columnIndex) && splitter.columnIndex >= 0) {\n        if (splitter.columnIndex * 150 < this.parent.ganttWidth || !this.parent.element.classList.contains('e-device')) {\n          return isDynamic ? this.getSpliterPositionInPercentage(this.getTotalColumnWidthByIndex(splitter.columnIndex).toString() + 'px') : this.getSpliterPositionInPercentage(splitter.columnIndex * 150 + 'px');\n        } else {\n          return this.getSpliterPositionInPercentage(splitter.columnIndex * 130 + 'px');\n        }\n      } else {\n        return this.getSpliterPositionInPercentage('250px');\n      }\n    }\n  };\n  /**\n   * @param {string} position .\n   * @returns {string} .\n   */\n\n\n  Splitter.prototype.getSpliterPositionInPercentage = function (position) {\n    var value = !isNullOrUndefined(position) && position !== '' ? position : null;\n\n    if (!isNullOrUndefined(value)) {\n      if (position.indexOf('px') !== -1) {\n        var intValue = parseInt(position, 10);\n        value = intValue / this.parent.ganttWidth * 100 <= 100 ? intValue / this.parent.ganttWidth * 100 + '%' : '25%';\n      } else {\n        value = position.indexOf('%') === -1 ? position + '%' : position;\n      }\n    }\n\n    return value;\n  };\n  /**\n   * @param {number} index .\n   * @returns {number} .\n   */\n\n\n  Splitter.prototype.getTotalColumnWidthByIndex = function (index) {\n    var width = 0;\n    var tr = this.parent.treeGrid.element.querySelectorAll('.e-headercell');\n    index = tr.length > index ? index : tr.length;\n\n    for (var column = 0; column < index; column++) {\n      width = width + tr[column].offsetWidth;\n    }\n\n    return width;\n  };\n  /**\n   * @returns {void} .\n   * @private\n   */\n\n\n  Splitter.prototype.updateSplitterPosition = function () {\n    this.splitterObject.separatorSize = this.parent.splitterSettings.separatorSize >= 4 ? this.parent.splitterSettings.separatorSize : 4;\n    var splitterPosition = this.calculateSplitterPosition(this.parent.splitterSettings, true);\n    this.splitterObject.paneSettings[0].min = this.getSpliterPositionInPercentage(this.parent.splitterSettings.minimum);\n    this.splitterObject.dataBind();\n    this.splitterObject.paneSettings[0].size = splitterPosition;\n  };\n  /**\n   * @returns {void} .\n   * @private\n   */\n\n\n  Splitter.prototype.triggerCustomResizedEvent = function () {\n    var pane1 = this.splitterObject.element.querySelectorAll('.e-pane')[0];\n    var pane2 = this.splitterObject.element.querySelectorAll('.e-pane')[1];\n    var eventArgs = {\n      event: null,\n      element: this.splitterObject.element,\n      pane: [pane1, pane2],\n      index: [0, 1],\n      separator: this.splitterObject.element.querySelector('.e-split-bar'),\n      paneSize: [pane1.offsetWidth, pane2.offsetWidth]\n    };\n    this.parent.trigger('splitterResized', eventArgs);\n\n    if (eventArgs.cancel === true) {\n      this.splitterObject.paneSettings[0].size = this.getSpliterPositionInPercentage(this.splitterPreviousPositionGrid);\n      this.splitterObject.paneSettings[1].size = this.getSpliterPositionInPercentage(this.splitterPreviousPositionChart);\n    }\n  };\n\n  Splitter.prototype.destroy = function () {\n    this.splitterObject.destroy();\n    this.parent.off('destroy', this.destroy);\n  };\n\n  return Splitter;\n}();\n\nexport { Splitter };","map":{"version":3,"sources":["/Users/tristanbilot/Desktop/Design4green/design4green/node_modules/@syncfusion/ej2-gantt/src/gantt/base/splitter.js"],"names":["createElement","isNullOrUndefined","cls","Splitter","SplitterLayout","Deferred","ganttObj","parent","on","destroy","prototype","renderSplitter","_this","splitterPosition","calculateSplitterPosition","splitterSettings","splitterElement","className","splitter","treeGridPane","chartPane","ganttChartPane","appendChild","splitterObject","height","width","ganttWidth","toString","separatorSize","paneSettings","resizable","size","min","getSpliterPositionInPercentage","minimum","orientation","resizeStart","args","leftPane","pane","rightPane","splitterPreviousPositionGrid","scrollWidth","splitterPreviousPositionChart","callBackPromise","trigger","resizeStartArgs","resolve","resizing","resizeStop","splitterResizedArgs","cancel","element","appendTo","isDynamic","view","position","columnIndex","classList","contains","getTotalColumnWidthByIndex","value","indexOf","intValue","parseInt","index","tr","treeGrid","querySelectorAll","length","column","offsetWidth","updateSplitterPosition","dataBind","triggerCustomResizedEvent","pane1","pane2","eventArgs","event","separator","querySelector","paneSize","off"],"mappings":"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","sourcesContent":["import { createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as cls from '../base/css-constants';\nimport { Splitter as SplitterLayout } from '@syncfusion/ej2-layouts';\nimport { Deferred } from '@syncfusion/ej2-data';\n/**\n * Splitter module is used to define the splitter position in Gantt layout.\n */\nvar Splitter = /** @class */ (function () {\n    function Splitter(ganttObj) {\n        this.parent = ganttObj;\n        this.parent.on('destroy', this.destroy, this);\n    }\n    /**\n     * @returns {void} .\n     * @private\n     */\n    Splitter.prototype.renderSplitter = function () {\n        var _this = this;\n        var splitterPosition = this.calculateSplitterPosition(this.parent.splitterSettings);\n        this.parent.splitterElement = createElement('div', { className: cls.splitter });\n        this.parent.treeGridPane = createElement('div', { className: cls.treeGridPane });\n        this.parent.chartPane = createElement('div', { className: cls.ganttChartPane });\n        this.parent.splitterElement.appendChild(this.parent.treeGridPane);\n        this.parent.splitterElement.appendChild(this.parent.chartPane);\n        this.splitterObject = new SplitterLayout({\n            height: null,\n            width: this.parent.ganttWidth.toString(),\n            separatorSize: this.parent.splitterSettings.separatorSize,\n            paneSettings: [\n                {\n                    resizable: true,\n                    size: splitterPosition,\n                    min: this.getSpliterPositionInPercentage(this.parent.splitterSettings.minimum)\n                },\n                {\n                    resizable: true\n                }\n            ],\n            orientation: 'Horizontal',\n            resizeStart: function (args) {\n                var leftPane = args.pane[0];\n                var rightPane = args.pane[1];\n                _this.splitterPreviousPositionGrid = leftPane.scrollWidth + 1 + 'px';\n                _this.splitterPreviousPositionChart = rightPane.scrollWidth + 1 + 'px';\n                var callBackPromise = new Deferred();\n                _this.parent.trigger('splitterResizeStart', args, function (resizeStartArgs) {\n                    callBackPromise.resolve(resizeStartArgs);\n                });\n                return callBackPromise;\n            },\n            resizing: function (args) {\n                _this.parent.trigger('splitterResizing', args);\n            },\n            resizeStop: function (args) {\n                var callBackPromise = new Deferred();\n                _this.parent.trigger('splitterResized', args, function (splitterResizedArgs) {\n                    if (splitterResizedArgs.cancel === true) {\n                        _this.splitterObject.paneSettings[0].size = null;\n                        _this.splitterObject.paneSettings[0].size = _this.getSpliterPositionInPercentage(_this.splitterPreviousPositionGrid);\n                        _this.splitterObject.paneSettings[1].size = null;\n                        _this.splitterObject.paneSettings[1].size = _this.getSpliterPositionInPercentage(_this.splitterPreviousPositionChart);\n                    }\n                    callBackPromise.resolve(splitterResizedArgs);\n                });\n                return callBackPromise;\n            }\n        });\n        this.parent.element.appendChild(this.parent.splitterElement);\n        this.splitterObject.appendTo(this.parent.splitterElement);\n    };\n    /**\n     * @param {SplitterSettingsModel} splitter .\n     * @param {boolean} isDynamic .\n     * @returns {string} .\n     * @private\n     */\n    Splitter.prototype.calculateSplitterPosition = function (splitter, isDynamic) {\n        if (splitter.view === 'Grid') {\n            return '100%';\n        }\n        else if (splitter.view === 'Chart') {\n            return '0%';\n        }\n        else {\n            if (!isNullOrUndefined(splitter.position) && splitter.position !== '') {\n                return this.getSpliterPositionInPercentage(splitter.position);\n            }\n            else if (!isNullOrUndefined(splitter.columnIndex) && splitter.columnIndex >= 0) {\n                if ((splitter.columnIndex * 150) < this.parent.ganttWidth || !this.parent.element.classList.contains('e-device')) {\n                    return isDynamic ? this.getSpliterPositionInPercentage(this.getTotalColumnWidthByIndex(splitter.columnIndex).toString() + 'px') :\n                        this.getSpliterPositionInPercentage((splitter.columnIndex * 150) + 'px');\n                }\n                else {\n                    return this.getSpliterPositionInPercentage((splitter.columnIndex * 130) + 'px');\n                }\n            }\n            else {\n                return this.getSpliterPositionInPercentage('250px');\n            }\n        }\n    };\n    /**\n     * @param {string} position .\n     * @returns {string} .\n     */\n    Splitter.prototype.getSpliterPositionInPercentage = function (position) {\n        var value = !isNullOrUndefined(position) && position !== '' ? position : null;\n        if (!isNullOrUndefined(value)) {\n            if (position.indexOf('px') !== -1) {\n                var intValue = parseInt(position, 10);\n                value = (((intValue / this.parent.ganttWidth) * 100) <= 100 ? ((intValue / this.parent.ganttWidth) * 100) + '%' :\n                    '25%');\n            }\n            else {\n                value = position.indexOf('%') === -1 ?\n                    position + '%' : position;\n            }\n        }\n        return value;\n    };\n    /**\n     * @param {number} index .\n     * @returns {number} .\n     */\n    Splitter.prototype.getTotalColumnWidthByIndex = function (index) {\n        var width = 0;\n        var tr = this.parent.treeGrid.element.querySelectorAll('.e-headercell');\n        index = tr.length > index ? index : tr.length;\n        for (var column = 0; column < index; column++) {\n            width = width + tr[column].offsetWidth;\n        }\n        return width;\n    };\n    /**\n     * @returns {void} .\n     * @private\n     */\n    Splitter.prototype.updateSplitterPosition = function () {\n        this.splitterObject.separatorSize = this.parent.splitterSettings.separatorSize >= 4 ?\n            this.parent.splitterSettings.separatorSize : 4;\n        var splitterPosition = this.calculateSplitterPosition(this.parent.splitterSettings, true);\n        this.splitterObject.paneSettings[0].min = this.getSpliterPositionInPercentage(this.parent.splitterSettings.minimum);\n        this.splitterObject.dataBind();\n        this.splitterObject.paneSettings[0].size = splitterPosition;\n    };\n    /**\n     * @returns {void} .\n     * @private\n     */\n    Splitter.prototype.triggerCustomResizedEvent = function () {\n        var pane1 = this.splitterObject.element.querySelectorAll('.e-pane')[0];\n        var pane2 = this.splitterObject.element.querySelectorAll('.e-pane')[1];\n        var eventArgs = {\n            event: null,\n            element: this.splitterObject.element,\n            pane: [pane1, pane2],\n            index: [0, 1],\n            separator: this.splitterObject.element.querySelector('.e-split-bar'),\n            paneSize: [pane1.offsetWidth, pane2.offsetWidth]\n        };\n        this.parent.trigger('splitterResized', eventArgs);\n        if (eventArgs.cancel === true) {\n            this.splitterObject.paneSettings[0].size = this.getSpliterPositionInPercentage(this.splitterPreviousPositionGrid);\n            this.splitterObject.paneSettings[1].size = this.getSpliterPositionInPercentage(this.splitterPreviousPositionChart);\n        }\n    };\n    Splitter.prototype.destroy = function () {\n        this.splitterObject.destroy();\n        this.parent.off('destroy', this.destroy);\n    };\n    return Splitter;\n}());\nexport { Splitter };\n"]},"metadata":{},"sourceType":"module"}