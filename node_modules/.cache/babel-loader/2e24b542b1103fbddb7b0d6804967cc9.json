{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { PointF, PdfStringLayouter, PdfPen, PdfSolidBrush, RectangleF, SizeF, PdfStandardFont, PdfFontStyle, PdfStringFormat, PdfVerticalAlignment, PdfTextAlignment, PdfWordWrapType } from '@syncfusion/ej2-pdf-export';\nimport { pixelToPoint } from '../base/utils';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * @hidden\n */\n\nvar PdfGanttTaskbarCollection =\n/** @class */\nfunction () {\n  function PdfGanttTaskbarCollection(parent) {\n    /**\n     * @private\n     */\n    this.leftTaskLabel = {};\n    /**\n     * @private\n     */\n\n    this.rightTaskLabel = {};\n    this.startPage = -1;\n    this.endPage = -1;\n    this.parent = parent;\n  }\n\n  PdfGanttTaskbarCollection.prototype.add = function () {\n    return new PdfGanttTaskbarCollection(this.parent);\n  };\n  /**\n   * @param {PdfPage} page .\n   * @returns {PdfPage} .\n   * Get the next PDF page\n   */\n\n\n  PdfGanttTaskbarCollection.prototype.GetNextPage = function (page) {\n    var section = page.section;\n    var index = section.indexOf(page);\n    var nextPage = null;\n\n    if (index === section.count - 1) {\n      nextPage = section.add();\n    } else {\n      nextPage = section.getPages()[index + 1];\n    }\n\n    return nextPage;\n  };\n  /**\n   * Draw the taskbar, chart back ground\n   *\n   * @private\n   */\n\n  /* eslint-disable */\n\n\n  PdfGanttTaskbarCollection.prototype.drawTaskbar = function (page, startPoint, detail, cumulativeWidth, rowHeight, taskbar) {\n    var taskGraphics = page.graphics;\n    var isNextPage = false;\n    var pageSize = page.getClientSize();\n    var yPoint = startPoint.y + rowHeight; //code for while current pdf page is exceed\n\n    if (yPoint > pageSize.height) {\n      page = this.GetNextPage(page);\n      taskGraphics = page.graphics;\n      startPoint.y = 0;\n\n      if (this.parent.pdfExportModule.gantt.enableHeader) {\n        this.parent.pdfExportModule.gantt.chartHeader.drawPageTimeline(page, startPoint, detail);\n        startPoint.y = pixelToPoint(this.parent.timelineModule.isSingleTier ? 45 : 60);\n      }\n\n      isNextPage = true;\n    }\n\n    this.drawLeftLabel(page, startPoint, detail, cumulativeWidth); //Draw Taskbar\n\n    var font = new PdfStandardFont(this.fontFamily, 9, PdfFontStyle.Regular);\n    var fontColor = null;\n    var fontBrush = new PdfSolidBrush(this.progressFontColor);\n    var progressFormat = new PdfStringFormat();\n    progressFormat.lineAlignment = PdfVerticalAlignment.Middle;\n    progressFormat.alignment = PdfTextAlignment.Right;\n    var pageIndex = -1;\n\n    if (!taskbar.isMilestone) {\n      var taskbarPen = new PdfPen(taskbar.taskBorderColor);\n      var taskBrush = new PdfSolidBrush(taskbar.taskColor);\n      var progressPen = new PdfPen(taskbar.progressColor);\n      var progressBrush = new PdfSolidBrush(taskbar.progressColor);\n      var adjustHeight = pixelToPoint((this.parent.rowHeight - this.height) / 2.0);\n      pageIndex = page.section.indexOf(page);\n      var startDate = isNullOrUndefined(this.unscheduleStarteDate) ? this.startDate : this.unscheduleStarteDate;\n      var endDate = isNullOrUndefined(this.unscheduleEndDate) ? this.endDate : this.unscheduleEndDate; //Task start and end date both are in the range of header split up start and end date\n\n      if (detail.startDate <= startDate && endDate <= detail.endDate) {\n        if (!this.isStartPoint) {\n          this.taskStartPoint = __assign({}, startPoint);\n          this.isStartPoint = true;\n        }\n\n        if (!this.isScheduledTask && this.unscheduledTaskBy !== 'duration') {\n          this.drawUnscheduledTask(taskGraphics, startPoint, cumulativeWidth, adjustHeight);\n        } else {\n          taskGraphics.drawRectangle(taskbarPen, taskBrush, startPoint.x + pixelToPoint(this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight, pixelToPoint(taskbar.width), pixelToPoint(taskbar.height));\n\n          if (this.progress > 0 && this.progressWidth > 0 && this.isScheduledTask) {\n            taskGraphics.drawRectangle(progressPen, progressBrush, startPoint.x + pixelToPoint(this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight, pixelToPoint(taskbar.progressWidth), pixelToPoint(taskbar.height));\n\n            if (!isNullOrUndefined(this.parent.taskFields.progress) && !isNullOrUndefined(this.parent.labelSettings.taskLabel)) {\n              taskGraphics.drawString(this.progress.toString(), font, fontColor, fontBrush, startPoint.x + pixelToPoint(this.left - cumulativeWidth), startPoint.y + adjustHeight, pixelToPoint(this.progressWidth), pixelToPoint(this.height), progressFormat);\n            }\n          }\n        }\n\n        this.isCompleted = true;\n        this.startPage = pageIndex;\n        this.endPage = pageIndex;\n      } //Task start date is in the range of header split up start and end date\n      else if (detail.startDate <= startDate && detail.endDate >= startDate && endDate >= detail.endDate) {\n          if (!this.isStartPoint) {\n            this.taskStartPoint = __assign({}, startPoint);\n            this.isStartPoint = true;\n          }\n\n          var renderWidth = 0;\n          this.width = this.width - (detail.totalWidth - (this.left - cumulativeWidth));\n          renderWidth = detail.totalWidth - (this.left - cumulativeWidth);\n\n          if (!this.isScheduledTask && this.unscheduledTaskBy !== 'duration') {\n            this.drawUnscheduledTask(taskGraphics, startPoint, cumulativeWidth, adjustHeight);\n          } else {\n            taskGraphics.drawRectangle(taskbarPen, taskBrush, startPoint.x + pixelToPoint(this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight, pixelToPoint(renderWidth), pixelToPoint(taskbar.height));\n\n            if (this.progress > 0 && this.progressWidth > 0 && this.isScheduledTask) {\n              var progressBoundsWidth = 0;\n\n              if (this.progressWidth <= renderWidth) {\n                progressBoundsWidth = this.progressWidth;\n              } else {\n                progressBoundsWidth = renderWidth;\n              }\n\n              taskGraphics.drawRectangle(progressPen, progressBrush, startPoint.x + pixelToPoint(this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight, pixelToPoint(progressBoundsWidth), pixelToPoint(taskbar.height));\n              this.progressWidth -= progressBoundsWidth;\n\n              if (this.progressWidth === 0 && this.progress !== 0 && this.parent.labelSettings.taskLabel) {\n                taskGraphics.drawString(this.progress.toString(), font, fontColor, fontBrush, startPoint.x + pixelToPoint(this.left - cumulativeWidth), startPoint.y + adjustHeight, pixelToPoint(progressBoundsWidth), pixelToPoint(this.height), progressFormat);\n              }\n            }\n          }\n\n          this.left = 0;\n          this.isCompleted = false;\n          this.startPage = pageIndex;\n        } //Task end date is in the range of header split up start and end date\n        else if (endDate <= detail.endDate && detail.startDate <= endDate && !this.isCompleted) {\n            if (!this.isStartPoint) {\n              this.taskStartPoint = __assign({}, startPoint);\n              this.isStartPoint = true;\n            }\n\n            taskGraphics.drawRectangle(taskbarPen, taskBrush, startPoint.x + pixelToPoint(taskbar.left + 0.5), startPoint.y + adjustHeight, pixelToPoint(taskbar.width), pixelToPoint(taskbar.height));\n\n            if (this.isScheduledTask) {\n              taskGraphics.drawRectangle(progressPen, progressBrush, startPoint.x + pixelToPoint(taskbar.left + 0.5), startPoint.y + adjustHeight, pixelToPoint(taskbar.progressWidth), pixelToPoint(taskbar.height));\n\n              if (this.progressWidth === 0 && this.progress !== 0) {\n                taskGraphics.drawString(this.progress.toString(), font, fontColor, fontBrush, startPoint.x + pixelToPoint(this.left), startPoint.y + adjustHeight, pixelToPoint(this.progressWidth), pixelToPoint(this.height), progressFormat);\n              }\n            }\n\n            this.isCompleted = true;\n            this.endPage = pageIndex;\n          } //Header splitup start and end date with in the task start and end date.\n          //So the task is takes entire width of page.\n          else if (startDate < detail.startDate && endDate > detail.endDate) {\n              if (!this.isStartPoint) {\n                this.taskStartPoint = __assign({}, startPoint);\n                this.isStartPoint = true;\n              }\n\n              taskGraphics.drawRectangle(taskbarPen, taskBrush, startPoint.x + pixelToPoint(taskbar.left) + 0.5, startPoint.y + adjustHeight, pixelToPoint(detail.totalWidth), pixelToPoint(taskbar.height));\n\n              if (this.progress > 0 && this.progressWidth > 0 && this.isScheduledTask) {\n                var progressBoundsWidth = 0;\n\n                if (this.progressWidth <= detail.totalWidth) {\n                  progressBoundsWidth = this.progressWidth;\n                } else {\n                  progressBoundsWidth = detail.totalWidth;\n                }\n\n                taskGraphics.drawRectangle(progressPen, progressBrush, startPoint.x + pixelToPoint(taskbar.left) + 0.5, startPoint.y + adjustHeight, pixelToPoint(progressBoundsWidth), pixelToPoint(taskbar.height));\n                this.progressWidth -= progressBoundsWidth;\n\n                if (this.progressWidth === 0 && this.progress !== 0) {\n                  taskGraphics.drawString(this.progress.toString(), font, fontColor, fontBrush, startPoint.x + pixelToPoint(this.left), startPoint.y + adjustHeight, pixelToPoint(progressBoundsWidth), pixelToPoint(this.height), progressFormat);\n                }\n              }\n\n              this.isCompleted = false;\n              this.width -= detail.totalWidth;\n            }\n    } else {\n      this.drawMilestone(page, startPoint, detail, cumulativeWidth);\n    }\n\n    this.drawRightLabel(page, startPoint, detail, cumulativeWidth);\n    return isNextPage;\n  };\n  /* eslint-enable */\n\n  /**\n   * @param {PdfPage} page .\n   * @param {PointF} startPoint .\n   * @param {TimelineDetails} detail .\n   * @param {number} cumulativeWidth .\n   * @returns {void}\n   * Draw task right side label\n   */\n\n\n  PdfGanttTaskbarCollection.prototype.drawRightLabel = function (page, startPoint, detail, cumulativeWidth) {\n    var left;\n    var graphics = page.graphics;\n\n    if (this.rightTaskLabel.isLeftCalculated) {\n      left = this.rightTaskLabel.left;\n    } else {\n      left = pixelToPoint(this.rightTaskLabel.left);\n    }\n\n    var actualLeft = left - pixelToPoint(cumulativeWidth) + startPoint.x;\n\n    if (detail.startPoint <= left && left < detail.endPoint && !isNullOrUndefined(this.rightTaskLabel.value) && !this.rightTaskLabel.isCompleted) {\n      var result = this.getWidth(this.rightTaskLabel.value, detail.endPoint - left, 15);\n      var font = new PdfStandardFont(this.fontFamily, 9);\n      var adjustHeight = (pixelToPoint(this.parent.rowHeight) - result.actualSize.height) / 2;\n      var point = new PointF(actualLeft, startPoint.y + adjustHeight);\n      var size = new SizeF(result.actualSize.width, result.actualSize.height);\n      var labelBounds = new RectangleF(point, size);\n      var labelFormat = new PdfStringFormat();\n      labelFormat.alignment = PdfTextAlignment.Right;\n      labelFormat.lineAlignment = PdfVerticalAlignment.Middle;\n\n      if (result.actualSize.width > 0) {\n        var fontColor = null;\n        var fontBrush = new PdfSolidBrush(this.labelColor);\n        /* eslint-disable-next-line */\n\n        graphics.drawString(result.lines[0].text, font, fontColor, fontBrush, labelBounds.x, labelBounds.y, result.actualSize.width, result.actualSize.height, labelFormat);\n\n        if (result.remainder !== null) {\n          this.rightTaskLabel.value = result.remainder;\n          this.rightTaskLabel.left = detail.endPoint;\n          this.rightTaskLabel.isLeftCalculated = true;\n        } else {\n          this.rightTaskLabel.isCompleted = true;\n        }\n      } else {\n        this.rightTaskLabel.left = detail.endPoint;\n      }\n    }\n  };\n  /**\n   * @param {PdfPage} page .\n   * @param {PointF} startPoint .\n   * @param {TimelineDetails} detail .\n   * @param {number} cumulativeWidth .\n   * @returns {void}\n   * Draw task left task label\n   */\n\n\n  PdfGanttTaskbarCollection.prototype.drawLeftLabel = function (page, startPoint, detail, cumulativeWidth) {\n    var graphics = page.graphics;\n    var left;\n\n    if (!isNullOrUndefined(this.leftTaskLabel.value)) {\n      var labelLeft = 0;\n      labelLeft = this.left;\n\n      if (!this.leftTaskLabel.isLeftCalculated) {\n        var result = this.getWidth(this.leftTaskLabel.value, Number.MAX_VALUE, 15);\n        var reduceLeft = this.isMilestone ? Math.floor(this.parent.chartRowsModule.taskBarHeight / 2) + 33 : 33; // 33 indicates default timeline cell width\n\n        left = pixelToPoint(labelLeft - reduceLeft) - result.actualSize.width;\n        this.leftTaskLabel.left = left;\n        this.leftTaskLabel.isLeftCalculated = true;\n      } else {\n        left = this.leftTaskLabel.left;\n      }\n\n      var actualLeft = left - pixelToPoint(cumulativeWidth) + startPoint.x;\n\n      if (detail.startPoint <= left && left < detail.endPoint && !isNullOrUndefined(this.leftTaskLabel.value) && !this.leftTaskLabel.isCompleted) {\n        var result = this.getWidth(this.leftTaskLabel.value, detail.endPoint - left, 15);\n        var font = new PdfStandardFont(this.fontFamily, 9);\n        var adjustHeight = (pixelToPoint(this.parent.rowHeight) - result.actualSize.height) / 2;\n        var rightLabelpoint = new PointF(actualLeft, startPoint.y + adjustHeight);\n        var rightLabelSize = new SizeF(result.actualSize.width, result.actualSize.height);\n        var rightLabelBounds = new RectangleF(rightLabelpoint, rightLabelSize);\n        var rightLabelFormat = new PdfStringFormat();\n        rightLabelFormat.alignment = PdfTextAlignment.Right;\n        rightLabelFormat.lineAlignment = PdfVerticalAlignment.Middle;\n\n        if (result.actualSize.width > 0) {\n          var fontColor = null;\n          var fontBrush = new PdfSolidBrush(this.labelColor);\n          /* eslint-disable-next-line */\n\n          graphics.drawString(result.lines[0].text, font, fontColor, fontBrush, rightLabelBounds.x, rightLabelBounds.y, result.actualSize.width, result.actualSize.height, rightLabelFormat);\n\n          if (result.remainder !== null) {\n            this.leftTaskLabel.value = result.remainder;\n            this.leftTaskLabel.left = detail.endPoint;\n          } else {\n            this.leftTaskLabel.isCompleted = true;\n          }\n        } else {\n          this.leftTaskLabel.left = detail.endPoint;\n        }\n      }\n    }\n  };\n\n  PdfGanttTaskbarCollection.prototype.getWidth = function (value, width, height) {\n    var font = new PdfStandardFont(this.fontFamily, 9);\n    var layouter = new PdfStringLayouter();\n    var progressFormat = new PdfStringFormat();\n    progressFormat.alignment = PdfTextAlignment.Left;\n    progressFormat.wordWrap = PdfWordWrapType.Character;\n    progressFormat.lineAlignment = PdfVerticalAlignment.Middle;\n    /* eslint-disable-next-line */\n\n    var result = layouter.layout(value, font, progressFormat, new SizeF(width, height), false, new SizeF(width, height));\n    return result;\n  };\n  /**\n   * @param {PdfGraphics} taskGraphics .\n   * @param {PointF} startPoint .\n   * @param {number} cumulativeWidth .\n   * @param {number} adjustHeight .\n   * @returns {void}\n   * Draw Unscheduled Task\n   */\n\n\n  PdfGanttTaskbarCollection.prototype.drawUnscheduledTask = function (taskGraphics, startPoint, cumulativeWidth, adjustHeight) {\n    var taskBrush = new PdfSolidBrush(this.taskColor);\n    /* eslint-disable-next-line */\n\n    taskGraphics.drawRectangle(taskBrush, startPoint.x + pixelToPoint(this.left - cumulativeWidth), startPoint.y + adjustHeight, pixelToPoint(3), pixelToPoint(this.height));\n  };\n  /**\n   * @param {PdfPage} page .\n   * @param {PointF} startPoint .\n   * @param {TimelineDetails} detail .\n   * @param {number} cumulativeWidth .\n   * @returns {void}\n   * Draw milestone task\n   */\n\n\n  PdfGanttTaskbarCollection.prototype.drawMilestone = function (page, startPoint, detail, cumulativeWidth) {\n    if (detail.startDate <= this.startDate && this.startDate <= detail.endDate) {\n      var taskGraphics = page.graphics;\n      var pageIndex = page.section.indexOf(page);\n      this.taskStartPoint = __assign({}, startPoint);\n      var milestonePen = new PdfPen(this.milestoneColor);\n      var adjustHeight = pixelToPoint((this.parent.rowHeight - this.height) / 2.0);\n      var milestoneBrush = new PdfSolidBrush(this.milestoneColor);\n      taskGraphics.save(); //saving graphics state\n\n      var height = Math.floor(this.parent.chartRowsModule.taskBarHeight * 0.6);\n      /* eslint-disable-next-line */\n\n      taskGraphics.translateTransform(startPoint.x + pixelToPoint(this.left - cumulativeWidth), startPoint.y + adjustHeight - this.parent.chartRowsModule.taskBarHeight * 0.7 / 2);\n      taskGraphics.rotateTransform(45); //apply rotation\n\n      taskGraphics.drawRectangle(milestonePen, milestoneBrush, 0, 0, pixelToPoint(height), pixelToPoint(height));\n      taskGraphics.restore(); //restoring graphics state\n\n      this.endPage = this.startPage = pageIndex;\n    }\n  };\n\n  return PdfGanttTaskbarCollection;\n}();\n\nexport { PdfGanttTaskbarCollection };","map":{"version":3,"sources":["/Users/tristanbilot/Desktop/Design4green/design4green/node_modules/@syncfusion/ej2-gantt/src/gantt/export/pdf-taskbar.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","PointF","PdfStringLayouter","PdfPen","PdfSolidBrush","RectangleF","SizeF","PdfStandardFont","PdfFontStyle","PdfStringFormat","PdfVerticalAlignment","PdfTextAlignment","PdfWordWrapType","pixelToPoint","isNullOrUndefined","PdfGanttTaskbarCollection","parent","leftTaskLabel","rightTaskLabel","startPage","endPage","add","GetNextPage","page","section","index","indexOf","nextPage","count","getPages","drawTaskbar","startPoint","detail","cumulativeWidth","rowHeight","taskbar","taskGraphics","graphics","isNextPage","pageSize","getClientSize","yPoint","y","height","pdfExportModule","gantt","enableHeader","chartHeader","drawPageTimeline","timelineModule","isSingleTier","drawLeftLabel","font","fontFamily","Regular","fontColor","fontBrush","progressFontColor","progressFormat","lineAlignment","Middle","alignment","Right","pageIndex","isMilestone","taskbarPen","taskBorderColor","taskBrush","taskColor","progressPen","progressColor","progressBrush","adjustHeight","startDate","unscheduleStarteDate","endDate","unscheduleEndDate","isStartPoint","taskStartPoint","isScheduledTask","unscheduledTaskBy","drawUnscheduledTask","drawRectangle","x","left","width","progress","progressWidth","taskFields","labelSettings","taskLabel","drawString","toString","isCompleted","renderWidth","totalWidth","progressBoundsWidth","drawMilestone","drawRightLabel","isLeftCalculated","actualLeft","endPoint","value","result","getWidth","actualSize","point","size","labelBounds","labelFormat","labelColor","lines","text","remainder","labelLeft","Number","MAX_VALUE","reduceLeft","Math","floor","chartRowsModule","taskBarHeight","rightLabelpoint","rightLabelSize","rightLabelBounds","rightLabelFormat","layouter","Left","wordWrap","Character","layout","milestonePen","milestoneColor","milestoneBrush","save","translateTransform","rotateTransform","restore"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { PointF, PdfStringLayouter, PdfPen, PdfSolidBrush, RectangleF, SizeF, PdfStandardFont, PdfFontStyle, PdfStringFormat, PdfVerticalAlignment, PdfTextAlignment, PdfWordWrapType } from '@syncfusion/ej2-pdf-export';\nimport { pixelToPoint } from '../base/utils';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * @hidden\n */\nvar PdfGanttTaskbarCollection = /** @class */ (function () {\n    function PdfGanttTaskbarCollection(parent) {\n        /**\n         * @private\n         */\n        this.leftTaskLabel = {};\n        /**\n         * @private\n         */\n        this.rightTaskLabel = {};\n        this.startPage = -1;\n        this.endPage = -1;\n        this.parent = parent;\n    }\n    PdfGanttTaskbarCollection.prototype.add = function () {\n        return new PdfGanttTaskbarCollection(this.parent);\n    };\n    /**\n     * @param {PdfPage} page .\n     * @returns {PdfPage} .\n     * Get the next PDF page\n     */\n    PdfGanttTaskbarCollection.prototype.GetNextPage = function (page) {\n        var section = page.section;\n        var index = section.indexOf(page);\n        var nextPage = null;\n        if (index === section.count - 1) {\n            nextPage = section.add();\n        }\n        else {\n            nextPage = section.getPages()[index + 1];\n        }\n        return nextPage;\n    };\n    /**\n     * Draw the taskbar, chart back ground\n     *\n     * @private\n     */\n    /* eslint-disable */\n    PdfGanttTaskbarCollection.prototype.drawTaskbar = function (page, startPoint, detail, cumulativeWidth, rowHeight, taskbar) {\n        var taskGraphics = page.graphics;\n        var isNextPage = false;\n        var pageSize = page.getClientSize();\n        var yPoint = startPoint.y + rowHeight;\n        //code for while current pdf page is exceed\n        if (yPoint > pageSize.height) {\n            page = this.GetNextPage(page);\n            taskGraphics = page.graphics;\n            startPoint.y = 0;\n            if (this.parent.pdfExportModule.gantt.enableHeader) {\n                this.parent.pdfExportModule.gantt.chartHeader.drawPageTimeline(page, startPoint, detail);\n                startPoint.y = pixelToPoint(this.parent.timelineModule.isSingleTier ? 45 : 60);\n            }\n            isNextPage = true;\n        }\n        this.drawLeftLabel(page, startPoint, detail, cumulativeWidth);\n        //Draw Taskbar\n        var font = new PdfStandardFont(this.fontFamily, 9, PdfFontStyle.Regular);\n        var fontColor = null;\n        var fontBrush = new PdfSolidBrush(this.progressFontColor);\n        var progressFormat = new PdfStringFormat();\n        progressFormat.lineAlignment = PdfVerticalAlignment.Middle;\n        progressFormat.alignment = PdfTextAlignment.Right;\n        var pageIndex = -1;\n        if (!taskbar.isMilestone) {\n            var taskbarPen = new PdfPen(taskbar.taskBorderColor);\n            var taskBrush = new PdfSolidBrush(taskbar.taskColor);\n            var progressPen = new PdfPen(taskbar.progressColor);\n            var progressBrush = new PdfSolidBrush(taskbar.progressColor);\n            var adjustHeight = pixelToPoint((this.parent.rowHeight - this.height) / 2.0);\n            pageIndex = page.section.indexOf(page);\n            var startDate = isNullOrUndefined(this.unscheduleStarteDate) ? this.startDate : this.unscheduleStarteDate;\n            var endDate = isNullOrUndefined(this.unscheduleEndDate) ? this.endDate : this.unscheduleEndDate;\n            //Task start and end date both are in the range of header split up start and end date\n            if (detail.startDate <= startDate && endDate <= detail.endDate) {\n                if (!this.isStartPoint) {\n                    this.taskStartPoint = __assign({}, startPoint);\n                    this.isStartPoint = true;\n                }\n                if (!this.isScheduledTask && this.unscheduledTaskBy !== 'duration') {\n                    this.drawUnscheduledTask(taskGraphics, startPoint, cumulativeWidth, adjustHeight);\n                }\n                else {\n                    taskGraphics.drawRectangle(taskbarPen, taskBrush, startPoint.x + pixelToPoint(this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight, pixelToPoint(taskbar.width), pixelToPoint(taskbar.height));\n                    if (this.progress > 0 && this.progressWidth > 0 && this.isScheduledTask) {\n                        taskGraphics.drawRectangle(progressPen, progressBrush, startPoint.x + pixelToPoint(this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight, pixelToPoint(taskbar.progressWidth), pixelToPoint(taskbar.height));\n                        if (!isNullOrUndefined(this.parent.taskFields.progress) && !isNullOrUndefined(this.parent.labelSettings.taskLabel)) {\n                            taskGraphics.drawString(this.progress.toString(), font, fontColor, fontBrush, startPoint.x + pixelToPoint(this.left - cumulativeWidth), startPoint.y + adjustHeight, pixelToPoint(this.progressWidth), pixelToPoint(this.height), progressFormat);\n                        }\n                    }\n                }\n                this.isCompleted = true;\n                this.startPage = pageIndex;\n                this.endPage = pageIndex;\n            }\n            //Task start date is in the range of header split up start and end date\n            else if (detail.startDate <= startDate && detail.endDate >= startDate && (endDate >= detail.endDate)) {\n                if (!this.isStartPoint) {\n                    this.taskStartPoint = __assign({}, startPoint);\n                    this.isStartPoint = true;\n                }\n                var renderWidth = 0;\n                this.width = this.width - (detail.totalWidth - (this.left - cumulativeWidth));\n                renderWidth = (detail.totalWidth - (this.left - cumulativeWidth));\n                if (!this.isScheduledTask && this.unscheduledTaskBy !== 'duration') {\n                    this.drawUnscheduledTask(taskGraphics, startPoint, cumulativeWidth, adjustHeight);\n                }\n                else {\n                    taskGraphics.drawRectangle(taskbarPen, taskBrush, startPoint.x + pixelToPoint(this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight, pixelToPoint(renderWidth), pixelToPoint(taskbar.height));\n                    if (this.progress > 0 && this.progressWidth > 0 && this.isScheduledTask) {\n                        var progressBoundsWidth = 0;\n                        if (this.progressWidth <= renderWidth) {\n                            progressBoundsWidth = this.progressWidth;\n                        }\n                        else {\n                            progressBoundsWidth = renderWidth;\n                        }\n                        taskGraphics.drawRectangle(progressPen, progressBrush, startPoint.x + pixelToPoint(this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight, pixelToPoint(progressBoundsWidth), pixelToPoint(taskbar.height));\n                        this.progressWidth -= progressBoundsWidth;\n                        if (this.progressWidth === 0 && this.progress !== 0 && this.parent.labelSettings.taskLabel) {\n                            taskGraphics.drawString(this.progress.toString(), font, fontColor, fontBrush, startPoint.x + pixelToPoint(this.left - cumulativeWidth), (startPoint.y + adjustHeight), pixelToPoint(progressBoundsWidth), pixelToPoint(this.height), progressFormat);\n                        }\n                    }\n                }\n                this.left = 0;\n                this.isCompleted = false;\n                this.startPage = pageIndex;\n            }\n            //Task end date is in the range of header split up start and end date\n            else if (endDate <= detail.endDate && detail.startDate <= endDate && !this.isCompleted) {\n                if (!this.isStartPoint) {\n                    this.taskStartPoint = __assign({}, startPoint);\n                    this.isStartPoint = true;\n                }\n                taskGraphics.drawRectangle(taskbarPen, taskBrush, startPoint.x + pixelToPoint(taskbar.left + 0.5), startPoint.y + adjustHeight, pixelToPoint(taskbar.width), pixelToPoint(taskbar.height));\n                if (this.isScheduledTask) {\n                    taskGraphics.drawRectangle(progressPen, progressBrush, startPoint.x + pixelToPoint(taskbar.left + 0.5), startPoint.y + adjustHeight, pixelToPoint(taskbar.progressWidth), pixelToPoint(taskbar.height));\n                    if (this.progressWidth === 0 && this.progress !== 0) {\n                        taskGraphics.drawString(this.progress.toString(), font, fontColor, fontBrush, startPoint.x + pixelToPoint(this.left), (startPoint.y + adjustHeight), pixelToPoint(this.progressWidth), pixelToPoint(this.height), progressFormat);\n                    }\n                }\n                this.isCompleted = true;\n                this.endPage = pageIndex;\n            }\n            //Header splitup start and end date with in the task start and end date.\n            //So the task is takes entire width of page.\n            else if (startDate < detail.startDate && endDate > detail.endDate) {\n                if (!this.isStartPoint) {\n                    this.taskStartPoint = __assign({}, startPoint);\n                    this.isStartPoint = true;\n                }\n                taskGraphics.drawRectangle(taskbarPen, taskBrush, startPoint.x + pixelToPoint(taskbar.left) + 0.5, startPoint.y + adjustHeight, pixelToPoint(detail.totalWidth), pixelToPoint(taskbar.height));\n                if (this.progress > 0 && this.progressWidth > 0 && this.isScheduledTask) {\n                    var progressBoundsWidth = 0;\n                    if (this.progressWidth <= detail.totalWidth) {\n                        progressBoundsWidth = this.progressWidth;\n                    }\n                    else {\n                        progressBoundsWidth = detail.totalWidth;\n                    }\n                    taskGraphics.drawRectangle(progressPen, progressBrush, startPoint.x + pixelToPoint(taskbar.left) + 0.5, startPoint.y + adjustHeight, pixelToPoint(progressBoundsWidth), pixelToPoint(taskbar.height));\n                    this.progressWidth -= progressBoundsWidth;\n                    if (this.progressWidth === 0 && this.progress !== 0) {\n                        taskGraphics.drawString(this.progress.toString(), font, fontColor, fontBrush, startPoint.x + pixelToPoint(this.left), (startPoint.y + adjustHeight), pixelToPoint(progressBoundsWidth), pixelToPoint(this.height), progressFormat);\n                    }\n                }\n                this.isCompleted = false;\n                this.width -= detail.totalWidth;\n            }\n        }\n        else {\n            this.drawMilestone(page, startPoint, detail, cumulativeWidth);\n        }\n        this.drawRightLabel(page, startPoint, detail, cumulativeWidth);\n        return isNextPage;\n    };\n    /* eslint-enable */\n    /**\n     * @param {PdfPage} page .\n     * @param {PointF} startPoint .\n     * @param {TimelineDetails} detail .\n     * @param {number} cumulativeWidth .\n     * @returns {void}\n     * Draw task right side label\n     */\n    PdfGanttTaskbarCollection.prototype.drawRightLabel = function (page, startPoint, detail, cumulativeWidth) {\n        var left;\n        var graphics = page.graphics;\n        if (this.rightTaskLabel.isLeftCalculated) {\n            left = this.rightTaskLabel.left;\n        }\n        else {\n            left = pixelToPoint(this.rightTaskLabel.left);\n        }\n        var actualLeft = left - pixelToPoint(cumulativeWidth) + startPoint.x;\n        if (detail.startPoint <= left && left < detail.endPoint &&\n            !isNullOrUndefined(this.rightTaskLabel.value) && !this.rightTaskLabel.isCompleted) {\n            var result = this.getWidth(this.rightTaskLabel.value, detail.endPoint - left, 15);\n            var font = new PdfStandardFont(this.fontFamily, 9);\n            var adjustHeight = (pixelToPoint(this.parent.rowHeight) - result.actualSize.height) / 2;\n            var point = new PointF(actualLeft, startPoint.y + adjustHeight);\n            var size = new SizeF(result.actualSize.width, result.actualSize.height);\n            var labelBounds = new RectangleF(point, size);\n            var labelFormat = new PdfStringFormat();\n            labelFormat.alignment = PdfTextAlignment.Right;\n            labelFormat.lineAlignment = PdfVerticalAlignment.Middle;\n            if (result.actualSize.width > 0) {\n                var fontColor = null;\n                var fontBrush = new PdfSolidBrush(this.labelColor);\n                /* eslint-disable-next-line */\n                graphics.drawString(result.lines[0].text, font, fontColor, fontBrush, labelBounds.x, labelBounds.y, result.actualSize.width, result.actualSize.height, labelFormat);\n                if (result.remainder !== null) {\n                    this.rightTaskLabel.value = result.remainder;\n                    this.rightTaskLabel.left = detail.endPoint;\n                    this.rightTaskLabel.isLeftCalculated = true;\n                }\n                else {\n                    this.rightTaskLabel.isCompleted = true;\n                }\n            }\n            else {\n                this.rightTaskLabel.left = detail.endPoint;\n            }\n        }\n    };\n    /**\n     * @param {PdfPage} page .\n     * @param {PointF} startPoint .\n     * @param {TimelineDetails} detail .\n     * @param {number} cumulativeWidth .\n     * @returns {void}\n     * Draw task left task label\n     */\n    PdfGanttTaskbarCollection.prototype.drawLeftLabel = function (page, startPoint, detail, cumulativeWidth) {\n        var graphics = page.graphics;\n        var left;\n        if (!isNullOrUndefined(this.leftTaskLabel.value)) {\n            var labelLeft = 0;\n            labelLeft = this.left;\n            if (!this.leftTaskLabel.isLeftCalculated) {\n                var result = this.getWidth(this.leftTaskLabel.value, Number.MAX_VALUE, 15);\n                var reduceLeft = this.isMilestone ? Math.floor(this.parent.chartRowsModule.taskBarHeight / 2) + 33 : 33; // 33 indicates default timeline cell width\n                left = pixelToPoint(labelLeft - reduceLeft) - result.actualSize.width;\n                this.leftTaskLabel.left = left;\n                this.leftTaskLabel.isLeftCalculated = true;\n            }\n            else {\n                left = this.leftTaskLabel.left;\n            }\n            var actualLeft = left - pixelToPoint(cumulativeWidth) + startPoint.x;\n            if (detail.startPoint <= left && left < detail.endPoint && !isNullOrUndefined(this.leftTaskLabel.value)\n                && !this.leftTaskLabel.isCompleted) {\n                var result = this.getWidth(this.leftTaskLabel.value, detail.endPoint - left, 15);\n                var font = new PdfStandardFont(this.fontFamily, 9);\n                var adjustHeight = (pixelToPoint(this.parent.rowHeight) - result.actualSize.height) / 2;\n                var rightLabelpoint = new PointF(actualLeft, startPoint.y + adjustHeight);\n                var rightLabelSize = new SizeF(result.actualSize.width, result.actualSize.height);\n                var rightLabelBounds = new RectangleF(rightLabelpoint, rightLabelSize);\n                var rightLabelFormat = new PdfStringFormat();\n                rightLabelFormat.alignment = PdfTextAlignment.Right;\n                rightLabelFormat.lineAlignment = PdfVerticalAlignment.Middle;\n                if (result.actualSize.width > 0) {\n                    var fontColor = null;\n                    var fontBrush = new PdfSolidBrush(this.labelColor);\n                    /* eslint-disable-next-line */\n                    graphics.drawString(result.lines[0].text, font, fontColor, fontBrush, rightLabelBounds.x, rightLabelBounds.y, result.actualSize.width, result.actualSize.height, rightLabelFormat);\n                    if (result.remainder !== null) {\n                        this.leftTaskLabel.value = result.remainder;\n                        this.leftTaskLabel.left = detail.endPoint;\n                    }\n                    else {\n                        this.leftTaskLabel.isCompleted = true;\n                    }\n                }\n                else {\n                    this.leftTaskLabel.left = detail.endPoint;\n                }\n            }\n        }\n    };\n    PdfGanttTaskbarCollection.prototype.getWidth = function (value, width, height) {\n        var font = new PdfStandardFont(this.fontFamily, 9);\n        var layouter = new PdfStringLayouter();\n        var progressFormat = new PdfStringFormat();\n        progressFormat.alignment = PdfTextAlignment.Left;\n        progressFormat.wordWrap = PdfWordWrapType.Character;\n        progressFormat.lineAlignment = PdfVerticalAlignment.Middle;\n        /* eslint-disable-next-line */\n        var result = layouter.layout(value, font, progressFormat, new SizeF(width, height), false, new SizeF(width, height));\n        return result;\n    };\n    /**\n     * @param {PdfGraphics} taskGraphics .\n     * @param {PointF} startPoint .\n     * @param {number} cumulativeWidth .\n     * @param {number} adjustHeight .\n     * @returns {void}\n     * Draw Unscheduled Task\n     */\n    PdfGanttTaskbarCollection.prototype.drawUnscheduledTask = function (taskGraphics, startPoint, cumulativeWidth, adjustHeight) {\n        var taskBrush = new PdfSolidBrush(this.taskColor);\n        /* eslint-disable-next-line */\n        taskGraphics.drawRectangle(taskBrush, startPoint.x + pixelToPoint(this.left - cumulativeWidth), startPoint.y + adjustHeight, pixelToPoint(3), pixelToPoint(this.height));\n    };\n    /**\n     * @param {PdfPage} page .\n     * @param {PointF} startPoint .\n     * @param {TimelineDetails} detail .\n     * @param {number} cumulativeWidth .\n     * @returns {void}\n     * Draw milestone task\n     */\n    PdfGanttTaskbarCollection.prototype.drawMilestone = function (page, startPoint, detail, cumulativeWidth) {\n        if (detail.startDate <= this.startDate && this.startDate <= detail.endDate) {\n            var taskGraphics = page.graphics;\n            var pageIndex = page.section.indexOf(page);\n            this.taskStartPoint = __assign({}, startPoint);\n            var milestonePen = new PdfPen(this.milestoneColor);\n            var adjustHeight = pixelToPoint(((this.parent.rowHeight - this.height) / 2.0));\n            var milestoneBrush = new PdfSolidBrush(this.milestoneColor);\n            taskGraphics.save(); //saving graphics state\n            var height = Math.floor(this.parent.chartRowsModule.taskBarHeight * 0.6);\n            /* eslint-disable-next-line */\n            taskGraphics.translateTransform(startPoint.x + pixelToPoint(this.left - cumulativeWidth), startPoint.y + adjustHeight - (this.parent.chartRowsModule.taskBarHeight * 0.7) / 2);\n            taskGraphics.rotateTransform(45); //apply rotation\n            taskGraphics.drawRectangle(milestonePen, milestoneBrush, 0, 0, pixelToPoint(height), pixelToPoint(height));\n            taskGraphics.restore(); //restoring graphics state\n            this.endPage = this.startPage = pageIndex;\n        }\n    };\n    return PdfGanttTaskbarCollection;\n}());\nexport { PdfGanttTaskbarCollection };\n"]},"metadata":{},"sourceType":"module"}