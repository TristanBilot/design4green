{"ast":null,"code":"import { TreeGrid, Filter as TreeGridFilter } from '@syncfusion/ej2-treegrid';\nimport { filterAfterOpen, getFilterMenuPostion } from '@syncfusion/ej2-grids';\nimport { getActualProperties, getCustomDateFormat } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined, remove, createElement, addClass, closest } from '@syncfusion/ej2-base';\nimport { TextBox } from '@syncfusion/ej2-inputs';\nimport { DatePicker, DateTimePicker } from '@syncfusion/ej2-calendars';\n/**\n * The Filter module is used to handle filter action.\n */\n\nvar Filter =\n/** @class */\nfunction () {\n  function Filter(gantt) {\n    this.parent = gantt;\n    TreeGrid.Inject(TreeGridFilter);\n    this.parent.treeGrid.allowFiltering = this.parent.allowFiltering;\n    this.updateCustomFilters();\n    this.parent.treeGrid.filterSettings = getActualProperties(this.parent.filterSettings);\n    this.addEventListener();\n  }\n\n  Filter.prototype.getModuleName = function () {\n    return 'filter';\n  };\n  /**\n   * Update custom filter for default Gantt columns\n   *\n   * @returns {void} .\n   */\n\n\n  Filter.prototype.updateCustomFilters = function () {\n    var settings = this.parent.taskFields;\n\n    for (var i = 0; i < this.parent.ganttColumns.length; i++) {\n      var column = this.parent.ganttColumns[i];\n\n      if ((column.editType === 'datepickeredit' || column.editType === 'datetimepickeredit') && (column.field === settings.startDate || column.field === settings.endDate || column.field === settings.baselineStartDate || column.field === settings.baselineEndDate) || column.field === settings.duration && column.editType === 'stringedit') {\n        this.initiateFiltering(this.parent.ganttColumns[i]);\n      }\n    }\n  };\n\n  Filter.prototype.updateModel = function () {\n    this.parent.filterSettings = this.parent.treeGrid.filterSettings;\n  };\n\n  Filter.prototype.addEventListener = function () {\n    this.parent.on('updateModel', this.updateModel, this);\n    this.parent.on('actionBegin', this.actionBegin, this);\n    this.parent.on('actionComplete', this.actionComplete, this);\n    this.parent.on('columnMenuOpen', this.columnMenuOpen, this);\n  };\n\n  Filter.prototype.initiateFiltering = function (column) {\n    var treeColumn = this.parent.getColumnByField(column.field, this.parent.treeGridModule.treeGridColumns);\n    column.allowFiltering = column.allowFiltering === false ? false : true;\n\n    if (column.allowFiltering && this.parent.filterSettings.type === 'Menu' && !column.filter) {\n      column.filter = {\n        ui: this.getCustomFilterUi(column)\n      };\n    }\n\n    if (treeColumn) {\n      treeColumn.allowFiltering = column.allowFiltering;\n      treeColumn.filter = column.allowFiltering ? column.filter : {};\n    }\n  };\n  /**\n   * To get filter menu UI\n   *\n   * @param {ColumnModel} column .\n   * @returns {IFilterMUI} .\n   */\n\n\n  Filter.prototype.getCustomFilterUi = function (column) {\n    var settings = this.parent.taskFields;\n    var filterUI = {};\n\n    if (column.editType === 'datepickeredit' && (column.field === settings.startDate || column.field === settings.endDate || column.field === settings.baselineStartDate || column.field === settings.baselineEndDate)) {\n      filterUI = this.getDatePickerFilter(column.field);\n    } else if (column.editType === 'datetimepickeredit' && (column.field === settings.startDate || column.field === settings.endDate || column.field === settings.baselineStartDate || column.field === settings.baselineEndDate)) {\n      filterUI = this.getDateTimePickerFilter();\n    } else if (column.field === settings.duration && column.editType === 'stringedit') {\n      filterUI = this.getDurationFilter();\n    }\n\n    return filterUI;\n  };\n\n  Filter.prototype.getDatePickerFilter = function (columnName) {\n    var _this = this;\n\n    var parent = this.parent;\n    var timeValue = columnName === parent.taskFields.startDate || columnName === parent.taskFields.baselineStartDate ? parent.defaultStartTime : parent.defaultEndTime;\n    var dropDateInstance;\n    var filterDateUI = {\n      create: function (args) {\n        var format = getCustomDateFormat(args.column.format, args.column.type);\n        var flValInput = createElement('input', {\n          className: 'flm-input'\n        });\n        args.target.appendChild(flValInput);\n        dropDateInstance = new DatePicker({\n          placeholder: _this.parent.localeObj.getConstant('enterValue'),\n          format: format\n        });\n        dropDateInstance.appendTo(flValInput);\n      },\n      write: function (args) {\n        dropDateInstance.value = args.filteredValue;\n      },\n      read: function (args) {\n        if (dropDateInstance.value) {\n          dropDateInstance.value.setSeconds(timeValue);\n        }\n\n        args.fltrObj.filterByColumn(args.column.field, args.operator, dropDateInstance.value);\n      }\n    };\n    return filterDateUI;\n  };\n\n  Filter.prototype.getDateTimePickerFilter = function () {\n    var _this = this;\n\n    var dropInstance;\n    var filterDateTimeUI = {\n      create: function (args) {\n        var format = getCustomDateFormat(args.column.format, args.column.type);\n        var flValInput = createElement('input', {\n          className: 'flm-input'\n        });\n        args.target.appendChild(flValInput);\n        dropInstance = new DateTimePicker({\n          placeholder: _this.parent.localeObj.getConstant('enterValue'),\n          format: format\n        });\n        dropInstance.appendTo(flValInput);\n      },\n      write: function (args) {\n        dropInstance.value = args.filteredValue;\n      },\n      read: function (args) {\n        args.fltrObj.filterByColumn(args.column.field, args.operator, dropInstance.value);\n      }\n    };\n    return filterDateTimeUI;\n  };\n\n  Filter.prototype.getDurationFilter = function () {\n    var _this = this;\n\n    var parent = this.parent;\n    var textBoxInstance;\n    var textValue = '';\n    var filterDurationUI = {\n      create: function (args) {\n        var flValInput = createElement('input', {\n          className: 'e-input'\n        });\n        flValInput.setAttribute('placeholder', _this.parent.localeObj.getConstant('enterValue'));\n        args.target.appendChild(flValInput);\n        textBoxInstance = new TextBox();\n        textBoxInstance.appendTo(flValInput);\n      },\n      write: function (args) {\n        textBoxInstance.value = args.filteredValue ? textValue : '';\n      },\n      read: function (args) {\n        var durationObj = _this.parent.dataOperation.getDurationValue(textBoxInstance.value);\n\n        var intVal = getValue('duration', durationObj);\n        var unit = getValue('durationUnit', durationObj);\n\n        if (intVal >= 0) {\n          var dayVal = void 0;\n\n          if (unit === 'minute') {\n            dayVal = intVal * 60 / parent.secondsPerDay;\n          } else if (unit === 'hour') {\n            dayVal = intVal * 60 * 60 / parent.secondsPerDay;\n          } else {\n            //Consider it as day unit\n            dayVal = intVal;\n            unit = 'day';\n          }\n\n          args.fltrObj.filterByColumn(args.column.field, args.operator, dayVal);\n          textValue = _this.parent.dataOperation.getDurationString(intVal, unit);\n        } else {\n          args.fltrObj.filterByColumn(args.column.field, args.operator, null);\n          textValue = null;\n        }\n      }\n    };\n    return filterDurationUI;\n  };\n  /**\n   * Remove filter menu while opening column chooser menu\n   *\n   * @param {ColumnMenuOpenEventArgs} args .\n   * @returns {void} .\n   */\n\n\n  Filter.prototype.columnMenuOpen = function (args) {\n    if (this.filterMenuElement && document.body.contains(this.filterMenuElement)) {\n      remove(this.filterMenuElement);\n    }\n\n    this.filterMenuElement = null;\n  }; // eslint-disable-next-line\n\n\n  Filter.prototype.actionBegin = function (args) {// ...\n  };\n\n  Filter.prototype.closeFilterOnContextClick = function (element) {\n    if (this.filterMenuElement && document.body.contains(this.filterMenuElement)) {\n      var ganttElement = closest(element, '#' + this.parent.element.id) || element.querySelector('#' + this.parent.element.id);\n\n      if (!this.filterMenuElement.contains(element) && !isNullOrUndefined(ganttElement) || element.nodeName === 'HTML' || element.nodeName === 'DIV') {\n        remove(this.filterMenuElement);\n        this.parent.treeGrid.grid.notify('filter-menu-close', {\n          isOpen: false\n        });\n        this.filterMenuElement = null;\n      }\n    }\n  };\n\n  Filter.prototype.actionComplete = function (args) {\n    if (args.requestType === filterAfterOpen) {\n      if (this.parent.treeGrid.filterSettings.type === 'Menu') {\n        this.filterMenuElement = getValue('filterModel.dlgObj.element', args);\n      } else {\n        this.filterMenuElement = getValue('filterModel.dialogObj.element', args);\n      }\n\n      this.updateFilterMenuPosition(this.filterMenuElement, args); // To set default values as 'contains' in filter dialog\n\n      var taskID = this.parent.taskFields.id;\n      var predecessor = this.parent.taskFields.dependency;\n      var resource = this.parent.taskFields.resourceInfo;\n      var filterObj = this.parent.treeGrid.grid.filterModule;\n      var filterValues = getValue('values', filterObj);\n\n      if (args.columnName === predecessor && isNullOrUndefined(getValue(predecessor, filterValues)) || args.columnName === resource && isNullOrUndefined(getValue(resource, filterValues))) {\n        var element = this.filterMenuElement.querySelector('.e-dropdownlist');\n        var instanceObj = getValue('ej2_instances[0]', element);\n        instanceObj.index = 2;\n        instanceObj.dataBind();\n      } else if (args.columnName === taskID && isNullOrUndefined(getValue(taskID, filterValues)) && this.parent.treeGrid.filterSettings.type === 'Menu') {\n        var element = this.filterMenuElement.querySelector('.e-numerictextbox');\n        var instanceObj = getValue('ej2_instances[0]', element);\n\n        if (!isNullOrUndefined(instanceObj) && isNullOrUndefined(this.parent.columnByField[args.columnName].format)) {\n          instanceObj.format = 'n';\n        }\n      }\n    }\n  };\n\n  Filter.prototype.setPosition = function (li, ul) {\n    var gridPos = this.parent.element.getBoundingClientRect();\n    var liPos = li.getBoundingClientRect();\n    var left = liPos.right + window.scrollX;\n    var top = liPos.top + window.scrollY;\n\n    if (gridPos.right < left + ul.offsetWidth) {\n      if (liPos.left - ul.offsetWidth > gridPos.left) {\n        left = liPos.left - ul.offsetWidth;\n      } else {\n        left -= left + ul.offsetWidth - gridPos.right;\n      }\n    }\n\n    ul.style.top = top + 'px';\n    ul.style.left = left + 'px';\n  };\n\n  Filter.prototype.updateFilterMenuPosition = function (element, args) {\n    addClass([element], 'e-gantt');\n    document.body.appendChild(element);\n    var targetElement;\n\n    if (this.parent.showColumnMenu) {\n      targetElement = document.querySelector('#treeGrid' + this.parent.controlId + '_gridcontrol_colmenu_Filter');\n      element.style.zIndex = targetElement.parentElement.style.zIndex;\n\n      if (this.parent.treeGrid.filterSettings.type === 'Menu') {\n        this.setPosition(targetElement, getValue('filterModel.dlgObj.element', args));\n      } else {\n        this.setPosition(targetElement, getValue('filterModel.dialogObj.element', args));\n      }\n    } else {\n      targetElement = this.parent.treeGrid.grid.getColumnHeaderByField(args.columnName).querySelector('.e-filtermenudiv');\n\n      if (this.parent.treeGrid.filterSettings.type === 'Menu') {\n        getFilterMenuPostion(targetElement, getValue('filterModel.dlgObj', args));\n      } else {\n        getFilterMenuPostion(targetElement, getValue('filterModel.dialogObj', args));\n      }\n    }\n\n    if (this.parent.treeGrid.filterSettings.type === 'Menu') {\n      element.querySelector('.e-valid-input').focus();\n    }\n  };\n\n  Filter.prototype.removeEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    this.parent.off('updateModel', this.updateModel);\n    this.parent.off('actionBegin', this.actionBegin);\n    this.parent.off('actionComplete', this.actionComplete);\n    this.parent.off('columnMenuOpen', this.columnMenuOpen);\n  };\n  /**\n   * To destroy module\n   *\n   * @returns {void} .\n   */\n\n\n  Filter.prototype.destroy = function () {\n    this.removeEventListener();\n  };\n\n  return Filter;\n}();\n\nexport { Filter };","map":{"version":3,"sources":["/Users/tristanbilot/Desktop/Design4green/design4green/node_modules/@syncfusion/ej2-gantt/src/gantt/actions/filter.js"],"names":["TreeGrid","Filter","TreeGridFilter","filterAfterOpen","getFilterMenuPostion","getActualProperties","getCustomDateFormat","getValue","isNullOrUndefined","remove","createElement","addClass","closest","TextBox","DatePicker","DateTimePicker","gantt","parent","Inject","treeGrid","allowFiltering","updateCustomFilters","filterSettings","addEventListener","prototype","getModuleName","settings","taskFields","i","ganttColumns","length","column","editType","field","startDate","endDate","baselineStartDate","baselineEndDate","duration","initiateFiltering","updateModel","on","actionBegin","actionComplete","columnMenuOpen","treeColumn","getColumnByField","treeGridModule","treeGridColumns","type","filter","ui","getCustomFilterUi","filterUI","getDatePickerFilter","getDateTimePickerFilter","getDurationFilter","columnName","_this","timeValue","defaultStartTime","defaultEndTime","dropDateInstance","filterDateUI","create","args","format","flValInput","className","target","appendChild","placeholder","localeObj","getConstant","appendTo","write","value","filteredValue","read","setSeconds","fltrObj","filterByColumn","operator","dropInstance","filterDateTimeUI","textBoxInstance","textValue","filterDurationUI","setAttribute","durationObj","dataOperation","getDurationValue","intVal","unit","dayVal","secondsPerDay","getDurationString","filterMenuElement","document","body","contains","closeFilterOnContextClick","element","ganttElement","id","querySelector","nodeName","grid","notify","isOpen","requestType","updateFilterMenuPosition","taskID","predecessor","dependency","resource","resourceInfo","filterObj","filterModule","filterValues","instanceObj","index","dataBind","columnByField","setPosition","li","ul","gridPos","getBoundingClientRect","liPos","left","right","window","scrollX","top","scrollY","offsetWidth","style","targetElement","showColumnMenu","controlId","zIndex","parentElement","getColumnHeaderByField","focus","removeEventListener","isDestroyed","off","destroy"],"mappings":"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","sourcesContent":["import { TreeGrid, Filter as TreeGridFilter } from '@syncfusion/ej2-treegrid';\nimport { filterAfterOpen, getFilterMenuPostion } from '@syncfusion/ej2-grids';\nimport { getActualProperties, getCustomDateFormat } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined, remove, createElement, addClass, closest } from '@syncfusion/ej2-base';\nimport { TextBox } from '@syncfusion/ej2-inputs';\nimport { DatePicker, DateTimePicker } from '@syncfusion/ej2-calendars';\n/**\n * The Filter module is used to handle filter action.\n */\nvar Filter = /** @class */ (function () {\n    function Filter(gantt) {\n        this.parent = gantt;\n        TreeGrid.Inject(TreeGridFilter);\n        this.parent.treeGrid.allowFiltering = this.parent.allowFiltering;\n        this.updateCustomFilters();\n        this.parent.treeGrid.filterSettings = getActualProperties(this.parent.filterSettings);\n        this.addEventListener();\n    }\n    Filter.prototype.getModuleName = function () {\n        return 'filter';\n    };\n    /**\n     * Update custom filter for default Gantt columns\n     *\n     * @returns {void} .\n     */\n    Filter.prototype.updateCustomFilters = function () {\n        var settings = this.parent.taskFields;\n        for (var i = 0; i < this.parent.ganttColumns.length; i++) {\n            var column = this.parent.ganttColumns[i];\n            if (((column.editType === 'datepickeredit' || column.editType === 'datetimepickeredit') &&\n                (column.field === settings.startDate || column.field === settings.endDate\n                    || column.field === settings.baselineStartDate || column.field === settings.baselineEndDate)) ||\n                (column.field === settings.duration && column.editType === 'stringedit')) {\n                this.initiateFiltering(this.parent.ganttColumns[i]);\n            }\n        }\n    };\n    Filter.prototype.updateModel = function () {\n        this.parent.filterSettings = this.parent.treeGrid.filterSettings;\n    };\n    Filter.prototype.addEventListener = function () {\n        this.parent.on('updateModel', this.updateModel, this);\n        this.parent.on('actionBegin', this.actionBegin, this);\n        this.parent.on('actionComplete', this.actionComplete, this);\n        this.parent.on('columnMenuOpen', this.columnMenuOpen, this);\n    };\n    Filter.prototype.initiateFiltering = function (column) {\n        var treeColumn = this.parent.getColumnByField(column.field, this.parent.treeGridModule.treeGridColumns);\n        column.allowFiltering = column.allowFiltering === false ? false : true;\n        if (column.allowFiltering && this.parent.filterSettings.type === 'Menu' && !column.filter) {\n            column.filter = { ui: this.getCustomFilterUi(column) };\n        }\n        if (treeColumn) {\n            treeColumn.allowFiltering = column.allowFiltering;\n            treeColumn.filter = column.allowFiltering ? column.filter : {};\n        }\n    };\n    /**\n     * To get filter menu UI\n     *\n     * @param {ColumnModel} column .\n     * @returns {IFilterMUI} .\n     */\n    Filter.prototype.getCustomFilterUi = function (column) {\n        var settings = this.parent.taskFields;\n        var filterUI = {};\n        if (column.editType === 'datepickeredit' && (column.field === settings.startDate || column.field === settings.endDate\n            || column.field === settings.baselineStartDate || column.field === settings.baselineEndDate)) {\n            filterUI = this.getDatePickerFilter(column.field);\n        }\n        else if (column.editType === 'datetimepickeredit' && (column.field === settings.startDate || column.field === settings.endDate\n            || column.field === settings.baselineStartDate || column.field === settings.baselineEndDate)) {\n            filterUI = this.getDateTimePickerFilter();\n        }\n        else if (column.field === settings.duration && column.editType === 'stringedit') {\n            filterUI = this.getDurationFilter();\n        }\n        return filterUI;\n    };\n    Filter.prototype.getDatePickerFilter = function (columnName) {\n        var _this = this;\n        var parent = this.parent;\n        var timeValue = (columnName === parent.taskFields.startDate) || (columnName === parent.taskFields.baselineStartDate)\n            ? parent.defaultStartTime : parent.defaultEndTime;\n        var dropDateInstance;\n        var filterDateUI = {\n            create: function (args) {\n                var format = getCustomDateFormat(args.column.format, args.column.type);\n                var flValInput = createElement('input', { className: 'flm-input' });\n                args.target.appendChild(flValInput);\n                dropDateInstance = new DatePicker({ placeholder: _this.parent.localeObj.getConstant('enterValue'), format: format });\n                dropDateInstance.appendTo(flValInput);\n            },\n            write: function (args) {\n                dropDateInstance.value = args.filteredValue;\n            },\n            read: function (args) {\n                if (dropDateInstance.value) {\n                    dropDateInstance.value.setSeconds(timeValue);\n                }\n                args.fltrObj.filterByColumn(args.column.field, args.operator, dropDateInstance.value);\n            }\n        };\n        return filterDateUI;\n    };\n    Filter.prototype.getDateTimePickerFilter = function () {\n        var _this = this;\n        var dropInstance;\n        var filterDateTimeUI = {\n            create: function (args) {\n                var format = getCustomDateFormat(args.column.format, args.column.type);\n                var flValInput = createElement('input', { className: 'flm-input' });\n                args.target.appendChild(flValInput);\n                dropInstance = new DateTimePicker({ placeholder: _this.parent.localeObj.getConstant('enterValue'), format: format });\n                dropInstance.appendTo(flValInput);\n            },\n            write: function (args) {\n                dropInstance.value = args.filteredValue;\n            },\n            read: function (args) {\n                args.fltrObj.filterByColumn(args.column.field, args.operator, dropInstance.value);\n            }\n        };\n        return filterDateTimeUI;\n    };\n    Filter.prototype.getDurationFilter = function () {\n        var _this = this;\n        var parent = this.parent;\n        var textBoxInstance;\n        var textValue = '';\n        var filterDurationUI = {\n            create: function (args) {\n                var flValInput = createElement('input', { className: 'e-input' });\n                flValInput.setAttribute('placeholder', _this.parent.localeObj.getConstant('enterValue'));\n                args.target.appendChild(flValInput);\n                textBoxInstance = new TextBox();\n                textBoxInstance.appendTo(flValInput);\n            },\n            write: function (args) {\n                textBoxInstance.value = args.filteredValue ? textValue : '';\n            },\n            read: function (args) {\n                var durationObj = _this.parent.dataOperation.getDurationValue(textBoxInstance.value);\n                var intVal = getValue('duration', durationObj);\n                var unit = getValue('durationUnit', durationObj);\n                if (intVal >= 0) {\n                    var dayVal = void 0;\n                    if (unit === 'minute') {\n                        dayVal = (intVal * 60) / parent.secondsPerDay;\n                    }\n                    else if (unit === 'hour') {\n                        dayVal = (intVal * 60 * 60) / parent.secondsPerDay;\n                    }\n                    else {\n                        //Consider it as day unit\n                        dayVal = intVal;\n                        unit = 'day';\n                    }\n                    args.fltrObj.filterByColumn(args.column.field, args.operator, dayVal);\n                    textValue = _this.parent.dataOperation.getDurationString(intVal, unit);\n                }\n                else {\n                    args.fltrObj.filterByColumn(args.column.field, args.operator, null);\n                    textValue = null;\n                }\n            }\n        };\n        return filterDurationUI;\n    };\n    /**\n     * Remove filter menu while opening column chooser menu\n     *\n     * @param {ColumnMenuOpenEventArgs} args .\n     * @returns {void} .\n     */\n    Filter.prototype.columnMenuOpen = function (args) {\n        if (this.filterMenuElement && document.body.contains(this.filterMenuElement)) {\n            remove(this.filterMenuElement);\n        }\n        this.filterMenuElement = null;\n    };\n    // eslint-disable-next-line\n    Filter.prototype.actionBegin = function (args) {\n        // ...\n    };\n    Filter.prototype.closeFilterOnContextClick = function (element) {\n        if (this.filterMenuElement && document.body.contains(this.filterMenuElement)) {\n            var ganttElement = closest(element, '#' + this.parent.element.id)\n                || element.querySelector('#' + this.parent.element.id);\n            if ((!(this.filterMenuElement.contains(element)) && !isNullOrUndefined(ganttElement)) || element.nodeName === 'HTML'\n                || element.nodeName === 'DIV') {\n                remove(this.filterMenuElement);\n                this.parent.treeGrid.grid.notify('filter-menu-close', { isOpen: false });\n                this.filterMenuElement = null;\n            }\n        }\n    };\n    Filter.prototype.actionComplete = function (args) {\n        if (args.requestType === filterAfterOpen) {\n            if (this.parent.treeGrid.filterSettings.type === 'Menu') {\n                this.filterMenuElement = getValue('filterModel.dlgObj.element', args);\n            }\n            else {\n                this.filterMenuElement = getValue('filterModel.dialogObj.element', args);\n            }\n            this.updateFilterMenuPosition(this.filterMenuElement, args);\n            // To set default values as 'contains' in filter dialog\n            var taskID = this.parent.taskFields.id;\n            var predecessor = this.parent.taskFields.dependency;\n            var resource = this.parent.taskFields.resourceInfo;\n            var filterObj = this.parent.treeGrid.grid.filterModule;\n            var filterValues = getValue('values', filterObj);\n            if ((args.columnName === predecessor && isNullOrUndefined(getValue(predecessor, filterValues)))\n                || (args.columnName === resource && isNullOrUndefined(getValue(resource, filterValues)))) {\n                var element = this.filterMenuElement.querySelector('.e-dropdownlist');\n                var instanceObj = getValue('ej2_instances[0]', element);\n                instanceObj.index = 2;\n                instanceObj.dataBind();\n            }\n            else if (args.columnName === taskID && isNullOrUndefined(getValue(taskID, filterValues)) && this.parent.treeGrid.filterSettings.type === 'Menu') {\n                var element = this.filterMenuElement.querySelector('.e-numerictextbox');\n                var instanceObj = getValue('ej2_instances[0]', element);\n                if (!isNullOrUndefined(instanceObj) && isNullOrUndefined(this.parent.columnByField[args.columnName].format)) {\n                    instanceObj.format = 'n';\n                }\n            }\n        }\n    };\n    Filter.prototype.setPosition = function (li, ul) {\n        var gridPos = this.parent.element.getBoundingClientRect();\n        var liPos = li.getBoundingClientRect();\n        var left = liPos.right + window.scrollX;\n        var top = liPos.top + window.scrollY;\n        if (gridPos.right < (left + ul.offsetWidth)) {\n            if ((liPos.left - ul.offsetWidth) > gridPos.left) {\n                left = (liPos.left - ul.offsetWidth);\n            }\n            else {\n                left -= (left + ul.offsetWidth) - gridPos.right;\n            }\n        }\n        ul.style.top = top + 'px';\n        ul.style.left = left + 'px';\n    };\n    Filter.prototype.updateFilterMenuPosition = function (element, args) {\n        addClass([element], 'e-gantt');\n        document.body.appendChild(element);\n        var targetElement;\n        if (this.parent.showColumnMenu) {\n            targetElement = document.querySelector('#treeGrid' + this.parent.controlId + '_gridcontrol_colmenu_Filter');\n            element.style.zIndex = targetElement.parentElement.style.zIndex;\n            if (this.parent.treeGrid.filterSettings.type === 'Menu') {\n                this.setPosition(targetElement, getValue('filterModel.dlgObj.element', args));\n            }\n            else {\n                this.setPosition(targetElement, getValue('filterModel.dialogObj.element', args));\n            }\n        }\n        else {\n            targetElement = this.parent.treeGrid.grid.getColumnHeaderByField(args.columnName).querySelector('.e-filtermenudiv');\n            if (this.parent.treeGrid.filterSettings.type === 'Menu') {\n                getFilterMenuPostion(targetElement, getValue('filterModel.dlgObj', args));\n            }\n            else {\n                getFilterMenuPostion(targetElement, getValue('filterModel.dialogObj', args));\n            }\n        }\n        if (this.parent.treeGrid.filterSettings.type === 'Menu') {\n            element.querySelector('.e-valid-input').focus();\n        }\n    };\n    Filter.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateModel', this.updateModel);\n        this.parent.off('actionBegin', this.actionBegin);\n        this.parent.off('actionComplete', this.actionComplete);\n        this.parent.off('columnMenuOpen', this.columnMenuOpen);\n    };\n    /**\n     * To destroy module\n     *\n     * @returns {void} .\n     */\n    Filter.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Filter;\n}());\nexport { Filter };\n"]},"metadata":{},"sourceType":"module"}