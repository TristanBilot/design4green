{"ast":null,"code":"import { isNullOrUndefined, getValue, setValue } from '@syncfusion/ej2-base';\n/**\n *  Date processor is used to handle date of task data.\n */\n\nvar DateProcessor =\n/** @class */\nfunction () {\n  function DateProcessor(parent) {\n    this.parent = parent;\n  }\n  /**\n   * @param {ITaskData} ganttProp .\n   * @returns {boolean} .\n   */\n\n\n  DateProcessor.prototype.isValidateNonWorkDays = function (ganttProp) {\n    return !isNullOrUndefined(ganttProp) && ganttProp.isAutoSchedule && (!this.parent.includeWeekend || this.parent.totalHolidayDates.length > 0) || isNullOrUndefined(ganttProp) && (!this.parent.includeWeekend || this.parent.totalHolidayDates.length > 0);\n  };\n  /**\n   * Method to convert given date value as valid start date\n   *\n   * @param {Date} date .\n   * @param {ITaskData} ganttProp .\n   * @param {boolean} validateAsMilestone .\n   * @param {boolean} isLoad .\n   * @returns {Date} .\n   * @private\n   */\n\n\n  DateProcessor.prototype.checkStartDate = function (date, ganttProp, validateAsMilestone, isLoad) {\n    if (isNullOrUndefined(date)) {\n      return null;\n    }\n\n    var cloneStartDate = new Date(date.getTime());\n    var hour = this.getSecondsInDecimal(cloneStartDate);\n    validateAsMilestone = isNullOrUndefined(validateAsMilestone) ? !isNullOrUndefined(ganttProp) ? ganttProp.isMilestone : false : validateAsMilestone;\n\n    if (hour < this.parent.defaultStartTime && (!validateAsMilestone || isLoad)) {\n      this.setTime(this.parent.defaultStartTime, cloneStartDate);\n    } else if (hour < this.parent.defaultStartTime && validateAsMilestone) {\n      this.setTime(this.parent.defaultEndTime, cloneStartDate);\n    } else if (hour === this.parent.defaultEndTime && (!ganttProp || !validateAsMilestone) || hour > this.parent.defaultEndTime) {\n      cloneStartDate.setDate(cloneStartDate.getDate() + 1);\n      this.setTime(this.parent.defaultStartTime, cloneStartDate);\n    } else if (hour > this.parent.defaultStartTime && hour < this.parent.defaultEndTime) {\n      for (var index = 0; index < this.parent.workingTimeRanges.length; index++) {\n        var value = this.parent.workingTimeRanges[index];\n\n        if (hour >= value.to && this.parent.workingTimeRanges[index + 1] && hour < this.parent.workingTimeRanges[index + 1].from) {\n          // milestone can fall at end any interval time\n          if (hour === value.to && (!ganttProp || !validateAsMilestone) || hour !== value.to) {\n            this.setTime(this.parent.workingTimeRanges[index + 1].from, cloneStartDate);\n          }\n\n          break;\n        }\n      }\n    }\n\n    var tStartDate;\n\n    do {\n      tStartDate = new Date(cloneStartDate.getTime());\n      var holidayLength = this.parent.totalHolidayDates.length; // check holidays and weekends\n\n      if (this.isValidateNonWorkDays(ganttProp)) {\n        var startTime = !validateAsMilestone || isLoad ? this.parent.defaultStartTime : this.parent.defaultEndTime;\n\n        if (!this.parent.includeWeekend) {\n          var tempDate = new Date(cloneStartDate.getTime());\n          cloneStartDate = this.getNextWorkingDay(cloneStartDate);\n\n          if (tempDate.getTime() !== cloneStartDate.getTime()) {\n            this.setTime(startTime, cloneStartDate);\n          }\n        }\n\n        for (var count = 0; count < holidayLength; count++) {\n          var holidayFrom = this.getDateFromFormat(new Date(this.parent.totalHolidayDates[count]));\n          var holidayTo = new Date(holidayFrom.getTime());\n          holidayFrom.setHours(0, 0, 0, 0);\n          holidayTo.setHours(23, 59, 59, 59);\n\n          if (cloneStartDate.getTime() >= holidayFrom.getTime() && cloneStartDate.getTime() < holidayTo.getTime()) {\n            cloneStartDate.setDate(cloneStartDate.getDate() + 1);\n            this.setTime(startTime, cloneStartDate);\n          }\n        }\n      }\n    } while (tStartDate.getTime() !== cloneStartDate.getTime());\n\n    return new Date(cloneStartDate.getTime());\n  };\n  /**\n   * To update given date value to valid end date\n   *\n   * @param {Date} date .\n   * @param {ITaskData} ganttProp .\n   * @param {boolean} validateAsMilestone .\n   * @returns {Date} .\n   * @private\n   */\n\n\n  DateProcessor.prototype.checkEndDate = function (date, ganttProp, validateAsMilestone) {\n    if (isNullOrUndefined(date)) {\n      return null;\n    }\n\n    var cloneEndDate = new Date(date.getTime());\n    var hour = this.getSecondsInDecimal(cloneEndDate);\n\n    if (hour > this.parent.defaultEndTime) {\n      this.setTime(this.parent.defaultEndTime, cloneEndDate);\n    } else if (hour <= this.parent.defaultStartTime && !validateAsMilestone) {\n      cloneEndDate.setDate(cloneEndDate.getDate() - 1);\n      this.setTime(this.parent.defaultEndTime, cloneEndDate);\n    } else if (hour > this.parent.defaultStartTime && hour < this.parent.defaultEndTime) {\n      for (var index = 0; index < this.parent.workingTimeRanges.length; index++) {\n        var value = this.parent.workingTimeRanges[index];\n\n        if (hour > value.to && this.parent.workingTimeRanges[index + 1] && hour <= this.parent.workingTimeRanges[index + 1].from) {\n          this.setTime(this.parent.workingTimeRanges[index].to, cloneEndDate);\n          break;\n        }\n      }\n    }\n\n    var tempCheckDate;\n\n    do {\n      tempCheckDate = new Date(cloneEndDate.getTime());\n      var holidayLength = this.parent.totalHolidayDates.length;\n\n      if (this.isValidateNonWorkDays(ganttProp)) {\n        if (!this.parent.includeWeekend) {\n          var tempDate = new Date(cloneEndDate.getTime());\n          cloneEndDate = this.getPreviousWorkingDay(cloneEndDate);\n\n          if (tempDate.getTime() !== cloneEndDate.getTime()) {\n            this.setTime(this.parent.defaultEndTime, cloneEndDate);\n          }\n        }\n\n        for (var count = 0; count < holidayLength; count++) {\n          var holidayFrom = this.getDateFromFormat(new Date(this.parent.totalHolidayDates[count]));\n          var holidayTo = new Date(holidayFrom.getTime());\n          var tempHoliday = new Date(cloneEndDate.getTime());\n          tempHoliday.setMinutes(cloneEndDate.getMilliseconds() - 2);\n          holidayFrom.setHours(0, 0, 0, 0);\n          holidayTo.setHours(23, 59, 59, 59);\n\n          if (cloneEndDate.getTime() >= holidayFrom.getTime() && cloneEndDate.getTime() < holidayTo.getTime() || tempHoliday.getTime() >= holidayFrom.getTime() && tempHoliday.getTime() < holidayTo.getTime()) {\n            cloneEndDate.setDate(cloneEndDate.getDate() - 1);\n\n            if (!(cloneEndDate.getTime() === holidayFrom.getTime() && this.parent.defaultEndTime === 86400 && this.getSecondsInDecimal(cloneEndDate) === 0)) {\n              this.setTime(this.parent.defaultEndTime, cloneEndDate);\n            }\n          }\n        }\n      }\n    } while (tempCheckDate.getTime() !== cloneEndDate.getTime());\n\n    return new Date(cloneEndDate.getTime());\n  };\n  /**\n   * To validate the baseline start date\n   *\n   * @param {Date} date .\n   * @returns {Date} .\n   * @private\n   */\n\n\n  DateProcessor.prototype.checkBaselineStartDate = function (date) {\n    if (isNullOrUndefined(date)) {\n      return null;\n    } else {\n      var cloneDate = new Date(date.getTime());\n      var hour = this.getSecondsInDecimal(cloneDate);\n\n      if (hour < this.parent.defaultStartTime) {\n        this.setTime(this.parent.defaultStartTime, cloneDate);\n      } else if (hour >= this.parent.defaultEndTime) {\n        cloneDate.setDate(cloneDate.getDate() + 1);\n        this.setTime(this.parent.defaultStartTime, cloneDate);\n      } else if (hour > this.parent.defaultStartTime && hour < this.parent.defaultEndTime) {\n        for (var i = 0; i < this.parent.workingTimeRanges.length; i++) {\n          var value = this.parent.workingTimeRanges[i];\n\n          if (hour >= value.to && this.parent.workingTimeRanges[i + 1] && hour < this.parent.workingTimeRanges[i + 1].from) {\n            this.setTime(this.parent.workingTimeRanges[i + 1].from, cloneDate);\n            break;\n          }\n        }\n      }\n\n      return cloneDate;\n    }\n  };\n  /**\n   * To validate baseline end date\n   *\n   * @param {Date} date .\n   * @returns {Date} .\n   * @private\n   */\n\n\n  DateProcessor.prototype.checkBaselineEndDate = function (date) {\n    if (isNullOrUndefined(date)) {\n      return null;\n    } else {\n      var cloneDate = new Date(date.getTime());\n      var hour = this.getSecondsInDecimal(cloneDate);\n\n      if (hour > this.parent.defaultEndTime) {\n        this.setTime(this.parent.defaultEndTime, cloneDate);\n      } else if (hour <= this.parent.defaultStartTime) {\n        cloneDate.setDate(cloneDate.getDate() - 1);\n        this.setTime(this.parent.defaultEndTime, cloneDate);\n      } else if (hour > this.parent.defaultStartTime && hour < this.parent.defaultEndTime) {\n        for (var i = 0; i < this.parent.workingTimeRanges.length; i++) {\n          var value = this.parent.workingTimeRanges[i];\n\n          if (hour > value.to && this.parent.workingTimeRanges[i + 1] && hour <= this.parent.workingTimeRanges[i + 1].from) {\n            this.setTime(this.parent.workingTimeRanges[i].to, cloneDate);\n            break;\n          }\n        }\n      }\n\n      return cloneDate;\n    }\n  };\n  /**\n   * To calculate start date value from duration and end date\n   *\n   * @param {IGanttData} ganttData - Defines the gantt data.\n   * @returns {void} .\n   * @private\n   */\n\n\n  DateProcessor.prototype.calculateStartDate = function (ganttData) {\n    var ganttProp = ganttData.ganttProperties;\n    var tempStartDate = null;\n\n    if (!isNullOrUndefined(ganttProp.endDate) && !isNullOrUndefined(ganttProp.duration)) {\n      tempStartDate = this.getStartDate(ganttProp.endDate, ganttProp.duration, ganttProp.durationUnit, ganttProp);\n    }\n\n    this.parent.setRecordValue('startDate', tempStartDate, ganttProp, true);\n\n    if (this.parent.taskFields.startDate) {\n      this.parent.dataOperation.updateMappingData(ganttData, 'startDate');\n    }\n  };\n  /**\n   *\n   * @param {IGanttData} ganttData - Defines the gantt data.\n   * @returns {void} .\n   * @private\n   */\n\n\n  DateProcessor.prototype.calculateEndDate = function (ganttData) {\n    var ganttProp = ganttData.ganttProperties;\n    var tempEndDate = null;\n\n    if (!isNullOrUndefined(ganttProp.startDate)) {\n      if (!isNullOrUndefined(ganttProp.endDate) && isNullOrUndefined(ganttProp.duration)) {\n        if (this.compareDates(ganttProp.startDate, ganttProp.endDate) === 1) {\n          this.parent.setRecordValue('startDate', new Date(ganttProp.endDate.getTime()), ganttProp, true);\n          this.setTime(this.parent.defaultStartTime, ganttProp.startDate);\n        }\n\n        this.calculateDuration(ganttData);\n      }\n\n      if (!isNullOrUndefined(ganttProp.duration)) {\n        var duration = !isNullOrUndefined(ganttProp.segments) && ganttProp.segments.length > 0 ? this.totalDuration(ganttProp.segments) : ganttProp.duration;\n        tempEndDate = this.getEndDate(ganttProp.startDate, duration, ganttProp.durationUnit, ganttProp, false);\n      }\n\n      this.parent.setRecordValue('endDate', tempEndDate, ganttProp, true);\n    }\n\n    if (this.parent.taskFields.endDate) {\n      this.parent.dataOperation.updateMappingData(ganttData, 'endDate');\n    }\n  };\n\n  DateProcessor.prototype.totalDuration = function (segments) {\n    var duration = 0;\n\n    for (var i = 0; i < segments.length; i++) {\n      duration += segments[i].duration + segments[i].offsetDuration;\n    }\n\n    return duration;\n  };\n  /**\n   * To calculate duration from start date and end date\n   *\n   * @param {IGanttData} ganttData - Defines the gantt data.\n   * @returns {void} .\n   */\n\n\n  DateProcessor.prototype.calculateDuration = function (ganttData) {\n    var ganttProperties = ganttData.ganttProperties;\n    var tDuration;\n\n    if (!isNullOrUndefined(ganttProperties.segments) && ganttProperties.segments.length > 0) {\n      tDuration = this.parent.editModule.taskbarEditModule.sumOfDuration(ganttProperties.segments);\n    } else {\n      tDuration = this.getDuration(ganttProperties.startDate, ganttProperties.endDate, ganttProperties.durationUnit, ganttProperties.isAutoSchedule, ganttProperties.isMilestone);\n    }\n\n    this.parent.setRecordValue('duration', tDuration, ganttProperties, true);\n    var col = this.parent.columnByField[this.parent.columnMapping.duration];\n\n    if (!isNullOrUndefined(this.parent.editModule) && !isNullOrUndefined(this.parent.editModule.cellEditModule) && !this.parent.editModule.cellEditModule.isCellEdit && !isNullOrUndefined(col)) {\n      if (!isNullOrUndefined(col.edit) && !isNullOrUndefined(col.edit.read)) {\n        var dialog = this.parent.editModule.dialogModule.dialog;\n\n        if (!isNullOrUndefined(dialog)) {\n          var textBox = dialog.querySelector('#' + this.parent.element.id + 'Duration').ej2_instances[0];\n\n          if (!isNullOrUndefined(textBox) && textBox.value !== tDuration.toString()) {\n            textBox.value = tDuration.toString();\n            textBox.dataBind();\n          }\n        }\n      }\n\n      if (this.parent.taskFields.duration) {\n        this.parent.dataOperation.updateMappingData(ganttData, 'duration');\n\n        if (this.parent.taskFields.durationUnit) {\n          this.parent.dataOperation.updateMappingData(ganttData, 'durationUnit');\n        }\n      }\n    }\n  };\n  /**\n   *\n   * @param {Date} sDate Method to get total nonworking time between two date values\n   * @param {Date} eDate .\n   * @param {boolean} isAutoSchedule .\n   * @param {boolean} isCheckTimeZone .\n   * @returns {number} .\n   */\n\n\n  DateProcessor.prototype.getNonworkingTime = function (sDate, eDate, isAutoSchedule, isCheckTimeZone) {\n    isCheckTimeZone = isNullOrUndefined(isCheckTimeZone) ? true : isCheckTimeZone;\n    var weekendCount = !this.parent.includeWeekend && isAutoSchedule ? this.getWeekendCount(sDate, eDate) : 0;\n    var totalHours = this.getNumberOfSeconds(sDate, eDate, isCheckTimeZone);\n    var holidaysCount = isAutoSchedule ? this.getHolidaysCount(sDate, eDate) : 0;\n    var totWorkDays = (totalHours - weekendCount * 86400 - holidaysCount * 86400) / 86400; // working days between two dates\n\n    var nonWorkHours = this.getNonWorkingSecondsOnDate(sDate, eDate, isAutoSchedule);\n    var totalNonWorkTime = totWorkDays * (86400 - this.parent.secondsPerDay) + weekendCount * 86400 + holidaysCount * 86400 + nonWorkHours;\n    return totalNonWorkTime;\n  };\n  /**\n   *\n   * @param {Date} startDate .\n   * @param {Date} endDate .\n   * @param {string} durationUnit .\n   * @param {boolean} isAutoSchedule .\n   * @param {boolean} isMilestone .\n   * @param {boolean} isCheckTimeZone .\n   * @returns {number} .\n   * @private\n   */\n\n\n  DateProcessor.prototype.getDuration = function (startDate, endDate, durationUnit, isAutoSchedule, isMilestone, isCheckTimeZone) {\n    if (isNullOrUndefined(startDate) || isNullOrUndefined(endDate)) {\n      return null;\n    }\n\n    isCheckTimeZone = isNullOrUndefined(isCheckTimeZone) ? true : isCheckTimeZone;\n    var durationValue = 0;\n    var timeDiff = this.getTimeDifference(startDate, endDate, isCheckTimeZone) / 1000;\n    var nonWorkHours = this.getNonworkingTime(startDate, endDate, isAutoSchedule, isCheckTimeZone);\n    var durationHours = timeDiff - nonWorkHours;\n\n    if (isMilestone && this.parent.getFormatedDate(startDate) === this.parent.getFormatedDate(endDate)) {\n      durationValue = 0;\n    } else {\n      if (!durationUnit || durationUnit === 'day') {\n        durationValue = durationHours / this.parent.secondsPerDay;\n      } else if (durationUnit === 'minute') {\n        durationValue = durationHours / 60;\n      } else {\n        durationValue = durationHours / 3600;\n      }\n    }\n\n    return parseFloat(durationValue.toString());\n  };\n  /**\n   *\n   * @param {number} duration .\n   * @param {string} durationUnit .\n   * @returns {number} .\n   */\n\n\n  DateProcessor.prototype.getDurationAsSeconds = function (duration, durationUnit) {\n    var value = 0;\n\n    if (!durationUnit || durationUnit === 'day') {\n      value = this.parent.secondsPerDay * duration;\n    } else if (durationUnit === 'hour') {\n      value = duration * 3600;\n    } else {\n      value = duration * 60;\n    }\n\n    return value;\n  };\n  /**\n   * To get date from start date and duration\n   *\n   * @param {Date} startDate .\n   * @param {number} duration .\n   * @param {string} durationUnit .\n   * @param {ITaskData} ganttProp .\n   * @param {boolean} validateAsMilestone .\n   * @returns {Date} .\n   * @private\n   */\n\n\n  DateProcessor.prototype.getEndDate = function (startDate, duration, durationUnit, ganttProp, validateAsMilestone) {\n    var tempStart = new Date(startDate.getTime());\n    var endDate = new Date(startDate.getTime());\n    var secondDuration = this.getDurationAsSeconds(duration, durationUnit);\n    var nonWork = 0;\n    var workHours = 0;\n\n    while (secondDuration > 0) {\n      endDate.setSeconds(endDate.getSeconds() + secondDuration);\n      nonWork = this.getNonworkingTime(tempStart, endDate, ganttProp.isAutoSchedule, true);\n      workHours = secondDuration - nonWork;\n      secondDuration = secondDuration - workHours;\n\n      if (secondDuration > 0) {\n        endDate = this.checkStartDate(endDate, ganttProp, validateAsMilestone);\n      }\n\n      tempStart = new Date(endDate.getTime());\n    }\n\n    return endDate;\n  };\n  /**\n   *\n   * @param {Date} endDate To calculate start date vale from end date and duration\n   * @param {number} duration .\n   * @param {string} durationUnit .\n   * @param {ITaskData} ganttProp .\n   * @returns {Date} .\n   * @private\n   */\n\n\n  DateProcessor.prototype.getStartDate = function (endDate, duration, durationUnit, ganttProp) {\n    var tempEnd = new Date(endDate.getTime());\n    var startDate = new Date(endDate.getTime());\n    var secondDuration = this.getDurationAsSeconds(duration, durationUnit);\n    var nonWork = 0;\n    var workHours = 0;\n\n    while (secondDuration > 0) {\n      startDate.setSeconds(startDate.getSeconds() - secondDuration);\n      nonWork = this.getNonworkingTime(startDate, tempEnd, ganttProp.isAutoSchedule, true);\n      workHours = secondDuration - nonWork;\n      secondDuration = secondDuration - workHours;\n\n      if (secondDuration > 0) {\n        tempEnd = this.checkEndDate(startDate, ganttProp);\n      }\n\n      tempEnd = new Date(startDate.getTime());\n    }\n\n    return startDate;\n  };\n  /**\n   * @param {ITaskData} ganttProp .\n   * @param {boolean} isLoad .\n   * @returns {Date} .\n   * @private\n   */\n\n\n  DateProcessor.prototype.getProjectStartDate = function (ganttProp, isLoad) {\n    if (!isNullOrUndefined(this.parent.cloneProjectStartDate)) {\n      var cloneStartDate = this.checkStartDate(this.parent.cloneProjectStartDate);\n      this.parent.cloneProjectStartDate = cloneStartDate;\n      return new Date(cloneStartDate.getTime());\n    } else if (!isNullOrUndefined(this.parent.projectStartDate)) {\n      var cloneStartDate = this.getDateFromFormat(this.parent.projectStartDate);\n      this.parent.cloneProjectStartDate = this.checkStartDate(cloneStartDate);\n    } else if (!isNullOrUndefined(isLoad)) {\n      var flatData = this.parent.flatData;\n      var minStartDate = void 0;\n\n      if (flatData.length > 0) {\n        minStartDate = flatData[0].ganttProperties.startDate;\n      } else {\n        minStartDate = new Date();\n        minStartDate.setHours(0, 0, 0, 0);\n      }\n\n      for (var index = 1; index < flatData.length; index++) {\n        var startDate = flatData[index].ganttProperties.startDate;\n\n        if (!isNullOrUndefined(startDate) && this.compareDates(startDate, minStartDate) === -1) {\n          minStartDate = startDate;\n        }\n      }\n\n      this.parent.cloneProjectStartDate = this.checkStartDate(minStartDate, ganttProp);\n    } else {\n      return null;\n    }\n\n    return new Date(this.parent.cloneProjectStartDate.getTime());\n  };\n  /**\n   * @param {ITaskData} ganttProp .\n   * @param {boolean} isAuto .\n   * @returns {Date} .\n   * @private\n   */\n\n\n  DateProcessor.prototype.getValidStartDate = function (ganttProp, isAuto) {\n    var sDate = null;\n    var startDate = isAuto ? ganttProp.autoStartDate : ganttProp.startDate;\n    var endDate = isAuto ? ganttProp.autoEndDate : ganttProp.endDate;\n    var duration = !ganttProp.isAutoSchedule && ganttProp.autoDuration ? ganttProp.autoDuration : ganttProp.duration;\n\n    if (isNullOrUndefined(startDate)) {\n      if (!isNullOrUndefined(endDate)) {\n        sDate = new Date(endDate.getTime());\n        this.setTime(this.parent.defaultStartTime, sDate);\n      } else if (!isNullOrUndefined(duration)) {\n        sDate = this.getProjectStartDate(ganttProp);\n      }\n    } else {\n      sDate = new Date(startDate.getTime());\n    }\n\n    return sDate;\n  };\n  /**\n   *\n   * @param {ITaskData} ganttProp .\n   * @param {boolean} isAuto .\n   * @returns {Date} .\n   * @private\n   */\n\n\n  DateProcessor.prototype.getValidEndDate = function (ganttProp, isAuto) {\n    var eDate = null;\n    var startDate = isAuto ? ganttProp.autoStartDate : ganttProp.startDate;\n    var endDate = isAuto ? ganttProp.autoEndDate : ganttProp.endDate;\n    var duration = isAuto ? ganttProp.autoDuration : ganttProp.duration;\n\n    if (isNullOrUndefined(endDate)) {\n      if (!isNullOrUndefined(startDate)) {\n        if (ganttProp.isMilestone) {\n          eDate = this.checkStartDate(startDate);\n        } else {\n          eDate = new Date(startDate.getTime());\n          this.setTime(this.parent.defaultEndTime, eDate);\n        }\n      } else if (!isNullOrUndefined(duration)) {\n        var sDate = this.getValidStartDate(ganttProp);\n\n        if (sDate) {\n          eDate = this.getEndDate(sDate, duration, ganttProp.durationUnit, ganttProp, false);\n        }\n      }\n    } else {\n      eDate = new Date(endDate.getTime());\n    }\n\n    return eDate;\n  };\n  /**\n   * @returns {number} .\n   * @private\n   */\n\n\n  DateProcessor.prototype.getSecondsPerDay = function () {\n    var dayWorkingTime = this.parent.dayWorkingTime;\n    var length = dayWorkingTime.length;\n    var totalSeconds = 0;\n    var startDate = new Date('10/11/2018');\n    this.parent.nonWorkingHours = [];\n    var nonWorkingHours = this.parent.nonWorkingHours;\n    this.parent.workingTimeRanges = [];\n    var workingTimeRanges = this.parent.workingTimeRanges;\n    this.parent.nonWorkingTimeRanges = [];\n    var nonWorkingTimeRanges = this.parent.nonWorkingTimeRanges;\n\n    for (var count = 0; count < length; count++) {\n      var currentRange = dayWorkingTime[count];\n\n      if (!isNullOrUndefined(currentRange.from) && !isNullOrUndefined(currentRange.to)) {\n        startDate.setHours(0, 0, 0, 0);\n        var tempDate = new Date(startDate.getTime());\n        startDate.setTime(startDate.getTime() + currentRange.from * 3600000);\n        var startHour = new Date(startDate.getTime());\n        tempDate.setTime(tempDate.getTime() + currentRange.to * 3600000);\n        var endHour = new Date(tempDate.getTime());\n        var timeDiff = endHour.getTime() - startHour.getTime();\n        var sdSeconds = this.getSecondsInDecimal(startHour);\n        var edSeconds = this.getSecondsInDecimal(endHour);\n\n        if (edSeconds === 0) {\n          edSeconds = 86400;\n        }\n\n        totalSeconds += timeDiff / 1000;\n\n        if (count === 0) {\n          this.parent.defaultStartTime = sdSeconds;\n        }\n\n        if (count === length - 1) {\n          this.parent.defaultEndTime = edSeconds;\n        }\n\n        if (count > 0) {\n          nonWorkingHours.push(nonWorkingHours[nonWorkingHours.length - 1] + sdSeconds - workingTimeRanges[count - 1].to);\n\n          if (workingTimeRanges[count - 1].to < sdSeconds) {\n            nonWorkingTimeRanges.push({\n              from: workingTimeRanges[count - 1].to,\n              to: sdSeconds,\n              isWorking: false,\n              interval: sdSeconds - workingTimeRanges[count - 1].to\n            });\n          }\n        } else {\n          nonWorkingHours.push(0);\n          nonWorkingTimeRanges.push({\n            from: 0,\n            to: sdSeconds,\n            isWorking: false,\n            interval: sdSeconds\n          });\n        }\n\n        workingTimeRanges.push({\n          from: sdSeconds,\n          to: edSeconds\n        });\n        nonWorkingTimeRanges.push({\n          from: sdSeconds,\n          to: edSeconds,\n          isWorking: true,\n          interval: edSeconds - sdSeconds\n        });\n      }\n    }\n\n    if (this.parent.defaultEndTime / 3600 !== 24) {\n      nonWorkingTimeRanges.push({\n        from: this.parent.defaultEndTime,\n        to: 86400,\n        isWorking: false,\n        interval: 86400 - this.parent.defaultEndTime\n      });\n    }\n\n    return totalSeconds;\n  };\n  /**\n   *\n   * @param {string} value .\n   * @param {boolean} isFromDialog .\n   * @returns {object} .\n   * @private\n   */\n  // eslint-disable-next-line\n\n\n  DateProcessor.prototype.getDurationValue = function (value, isFromDialog) {\n    var durationUnit = null;\n    var duration = null;\n\n    if (typeof value === 'string') {\n      var values = value.match(/(\\d*\\.*\\d+|.+$)/g);\n\n      if (values && values.length <= 2) {\n        duration = parseFloat(values[0].toString().trim());\n        var unit = values[1] ? values[1].toString().trim().toLowerCase() : null;\n\n        if (getValue('minute', this.parent.durationUnitEditText).indexOf(unit) !== -1) {\n          durationUnit = 'minute';\n        } else if (getValue('hour', this.parent.durationUnitEditText).indexOf(unit) !== -1) {\n          durationUnit = 'hour';\n        } else if (getValue('day', this.parent.durationUnitEditText).indexOf(unit) !== -1) {\n          durationUnit = 'day';\n        }\n      }\n    } else {\n      duration = value;\n      durationUnit = null;\n    }\n\n    var output = {\n      duration: duration,\n      durationUnit: durationUnit\n    };\n    return output;\n  };\n  /**\n   *\n   * @param {Date} date .\n   * @returns {Date} .\n   */\n\n\n  DateProcessor.prototype.getNextWorkingDay = function (date) {\n    var dayIndex = date.getDay();\n\n    if (this.parent.nonWorkingDayIndex.indexOf(dayIndex) !== -1) {\n      date.setDate(date.getDate() + 1);\n      date = this.getNextWorkingDay(date);\n      return date;\n    } else {\n      return date;\n    }\n  };\n  /**\n   * get weekend days between two dates without including args dates\n   *\n   * @param {Date} startDate .\n   * @param {Date} endDate .\n   * @returns {number} .\n   */\n\n\n  DateProcessor.prototype.getWeekendCount = function (startDate, endDate) {\n    var weekendCount = 0;\n    var sDate = new Date(startDate.getTime());\n    var eDate = new Date(endDate.getTime());\n    sDate.setHours(0, 0, 0, 0);\n    sDate.setDate(sDate.getDate() + 1);\n    eDate.setHours(0, 0, 0, 0);\n\n    while (sDate.getTime() < eDate.getTime()) {\n      if (this.parent.nonWorkingDayIndex.indexOf(sDate.getDay()) !== -1) {\n        weekendCount += 1;\n      }\n\n      sDate.setDate(sDate.getDate() + 1);\n    }\n\n    return weekendCount;\n  };\n  /**\n   *\n   * @param {Date} startDate .\n   * @param {Date} endDate .\n   * @param {boolean} isCheckTimeZone .\n   * @returns {number} .\n   */\n\n\n  DateProcessor.prototype.getNumberOfSeconds = function (startDate, endDate, isCheckTimeZone) {\n    var sDate = new Date(startDate.getTime());\n    var eDate = new Date(endDate.getTime());\n    var timeDiff = 0;\n    sDate.setDate(sDate.getDate() + 1);\n    sDate.setHours(0, 0, 0, 0);\n    eDate.setHours(0, 0, 0, 0);\n\n    if (sDate.getTime() < eDate.getTime()) {\n      timeDiff = this.getTimeDifference(sDate, eDate, isCheckTimeZone) / 1000;\n    }\n\n    if (timeDiff % 86400 !== 0) {\n      timeDiff = timeDiff - timeDiff % 86400 + 86400;\n    }\n\n    return timeDiff;\n  };\n  /**\n   *\n   * @param {Date} startDate .\n   * @param {Date} endDate .\n   * @returns {number} .\n   */\n\n\n  DateProcessor.prototype.getHolidaysCount = function (startDate, endDate) {\n    var holidaysCount = 0;\n    var holidays = this.parent.totalHolidayDates;\n    var sDate = new Date(startDate.getTime());\n    var eDate = new Date(endDate.getTime());\n    sDate.setDate(sDate.getDate() + 1);\n    sDate.setHours(0, 0, 0, 0);\n    eDate.setHours(0, 0, 0, 0);\n\n    if (sDate.getTime() < eDate.getTime()) {\n      for (var i = 0; i < holidays.length; i++) {\n        var currentHoliday = this.getDateFromFormat(new Date(holidays[i]));\n\n        if (sDate.getTime() <= currentHoliday.getTime() && eDate.getTime() > currentHoliday.getTime()) {\n          if (!this.parent.includeWeekend && this.parent.nonWorkingDayIndex.indexOf(currentHoliday.getDay()) === -1 || this.parent.includeWeekend) {\n            holidaysCount += 1;\n          }\n        }\n      }\n    }\n\n    return holidaysCount;\n  };\n  /**\n   * @returns {number[]} .\n   * @private\n   */\n\n\n  DateProcessor.prototype.getHolidayDates = function () {\n    var holidays = this.parent.holidays;\n    var holidayDates = [];\n\n    for (var i = 0; i < holidays.length; i++) {\n      var from = this.getDateFromFormat(holidays[i].from);\n      var to = this.getDateFromFormat(holidays[i].to);\n\n      if (isNullOrUndefined(from) && isNullOrUndefined(to)) {\n        continue;\n      } else if (isNullOrUndefined(from) || isNullOrUndefined(to)) {\n        var tempDate = from ? from : to;\n        tempDate.setHours(0, 0, 0, 0);\n\n        if (holidayDates.indexOf(tempDate.getTime()) === -1) {\n          holidayDates.push(tempDate.getTime());\n        }\n      } else {\n        while (from <= to) {\n          from.setHours(0, 0, 0, 0);\n\n          if (holidayDates.indexOf(from.getTime()) === -1) {\n            holidayDates.push(from.getTime());\n          }\n\n          from.setDate(from.getDate() + 1);\n        }\n      }\n    }\n\n    return holidayDates;\n  };\n  /**\n   * @param {Date} date .\n   * @param {boolean} checkWeekEnd .\n   * @returns {boolean} .\n   * @private\n   */\n\n  /*Check given date is on holidays*/\n\n\n  DateProcessor.prototype.isOnHolidayOrWeekEnd = function (date, checkWeekEnd) {\n    checkWeekEnd = !isNullOrUndefined(checkWeekEnd) ? checkWeekEnd : this.parent.includeWeekend;\n\n    if (!checkWeekEnd && this.parent.nonWorkingDayIndex.indexOf(date.getDay()) !== -1) {\n      return true;\n    }\n\n    var holidays = this.parent.totalHolidayDates;\n\n    for (var count = 0; count < holidays.length; count++) {\n      var holidayFrom = this.getDateFromFormat(new Date(holidays[count]));\n      var holidayTo = new Date(holidayFrom.getTime());\n      holidayFrom.setHours(0, 0, 0, 0);\n      holidayTo.setHours(23, 59, 59, 59);\n\n      if (date.getTime() >= holidayFrom.getTime() && date.getTime() < holidayTo.getTime()) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n  /**\n   * To calculate non working times in given date\n   *\n   * @param {Date} startDate .\n   * @param {Date} endDate .\n   * @param {boolean} isAutoSchedule .\n   * @returns {number} .\n   */\n\n\n  DateProcessor.prototype.getNonWorkingSecondsOnDate = function (startDate, endDate, isAutoSchedule) {\n    var sHour = this.getSecondsInDecimal(startDate);\n    var eHour = this.getSecondsInDecimal(endDate);\n    var startRangeIndex = -1;\n    var endRangeIndex = -1;\n    var totNonWrkSecs = 0;\n    var startOnHoliday = isAutoSchedule ? this.isOnHolidayOrWeekEnd(startDate, null) : false;\n    var endOnHoliday = isAutoSchedule ? this.isOnHolidayOrWeekEnd(endDate, null) : false;\n\n    for (var i = 0; i < this.parent.nonWorkingTimeRanges.length; i++) {\n      var val = this.parent.nonWorkingTimeRanges[i];\n\n      if (sHour >= val.from && sHour <= val.to) {\n        startRangeIndex = i;\n      }\n\n      if (eHour >= val.from && eHour <= val.to) {\n        endRangeIndex = i;\n      }\n    }\n\n    if (startDate.getDate() !== endDate.getDate() || startDate.getMonth() !== endDate.getMonth() || startDate.getFullYear() !== endDate.getFullYear()) {\n      if (!startOnHoliday) {\n        for (var i = startRangeIndex; i < this.parent.nonWorkingTimeRanges.length; i++) {\n          if (!this.parent.nonWorkingTimeRanges[i].isWorking) {\n            if (i === startRangeIndex) {\n              totNonWrkSecs += this.parent.nonWorkingTimeRanges[i].to - sHour;\n            } else {\n              totNonWrkSecs += this.parent.nonWorkingTimeRanges[i].interval;\n            }\n          }\n        }\n      } else {\n        totNonWrkSecs += 86400 - sHour;\n      }\n\n      if (!endOnHoliday) {\n        for (var i = 0; i <= endRangeIndex; i++) {\n          if (!this.parent.nonWorkingTimeRanges[i].isWorking) {\n            if (i === endRangeIndex) {\n              totNonWrkSecs += eHour - this.parent.nonWorkingTimeRanges[i].from;\n            } else {\n              totNonWrkSecs += this.parent.nonWorkingTimeRanges[i].interval;\n            }\n          }\n        }\n      } else {\n        totNonWrkSecs += eHour;\n      }\n    } else {\n      if (startRangeIndex !== endRangeIndex) {\n        if (!endOnHoliday) {\n          for (var i = startRangeIndex; i <= endRangeIndex; i++) {\n            if (!this.parent.nonWorkingTimeRanges[i].isWorking) {\n              if (i === startRangeIndex) {\n                totNonWrkSecs += this.parent.nonWorkingTimeRanges[i].to - sHour;\n              } else if (i === endRangeIndex) {\n                totNonWrkSecs += eHour - this.parent.nonWorkingTimeRanges[i].from;\n              } else {\n                totNonWrkSecs += this.parent.nonWorkingTimeRanges[i].interval;\n              }\n            }\n          }\n        } else {\n          totNonWrkSecs += eHour - sHour;\n        }\n      } else {\n        if (!endOnHoliday) {\n          var range = this.parent.nonWorkingTimeRanges[startRangeIndex];\n\n          if (!range.isWorking) {\n            totNonWrkSecs = eHour - sHour;\n          }\n        } else {\n          totNonWrkSecs += eHour - sHour;\n        }\n      }\n    }\n\n    return totNonWrkSecs;\n  };\n  /**\n   *\n   * @param {Date} date .\n   * @returns {Date} .\n   */\n\n\n  DateProcessor.prototype.getPreviousWorkingDay = function (date) {\n    var dayIndex = date.getDay();\n    var previousIndex = dayIndex === 0 ? 6 : dayIndex - 1;\n\n    if (this.parent.nonWorkingDayIndex.indexOf(dayIndex) !== -1 || this.parent.nonWorkingDayIndex.indexOf(previousIndex) !== -1 && this.parent.defaultEndTime === 86400 && this.getSecondsInDecimal(date) === 0) {\n      date.setDate(date.getDate() - 1);\n\n      if (this.parent.nonWorkingDayIndex.indexOf(date.getDay()) !== -1) {\n        date = this.getPreviousWorkingDay(date);\n      }\n\n      return date;\n    } else {\n      return date;\n    }\n  };\n  /**\n   * To get non-working day indexes.\n   *\n   * @returns {void} .\n   * @private\n   */\n\n\n  DateProcessor.prototype.getNonWorkingDayIndex = function () {\n    var weekDay = ['sunday', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday'];\n    var weekDayLength = weekDay.length;\n\n    if (this.parent.workWeek.length === 0) {\n      this.parent.workWeek = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'];\n    }\n\n    var workWeek = this.parent.workWeek.slice();\n    var length = workWeek.length;\n\n    for (var i = 0; i < length; i++) {\n      workWeek[i] = workWeek[i].toLowerCase();\n    }\n\n    this.parent.nonWorkingDayIndex = [];\n\n    for (var i = 0; i < weekDayLength; i++) {\n      if (workWeek.indexOf(weekDay[i]) === -1) {\n        this.parent.nonWorkingDayIndex.push(i);\n      }\n    }\n  };\n  /**\n   *\n   * @param {number} seconds .\n   * @param {Date} date .\n   * @returns {void} .\n   * @private\n   */\n\n\n  DateProcessor.prototype.setTime = function (seconds, date) {\n    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n    var hour = seconds / 3600;\n    hour = parseInt(hour, 10);\n    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n\n    var min = (seconds - hour * 3600) / 60;\n    min = parseInt(min, 10);\n    var sec = seconds - hour * 3600 - min * 60;\n    date.setHours(hour, min, sec);\n  };\n  /**\n   * @param {Date} startDate .\n   * @param {Date} endDate .\n   * @param {boolean} isCheckTimeZone .\n   * @returns {number} .\n   */\n\n\n  DateProcessor.prototype.getTimeDifference = function (startDate, endDate, isCheckTimeZone) {\n    var sDate = new Date(startDate.getTime());\n    var eDate = new Date(endDate.getTime());\n\n    if (isCheckTimeZone) {\n      this.updateDateWithTimeZone(sDate, eDate);\n    }\n\n    return eDate.getTime() - sDate.getTime();\n  };\n  /**\n   * @param {Date} sDate .\n   * @param {Date} eDate .\n   * @returns {void} .\n   */\n\n\n  DateProcessor.prototype.updateDateWithTimeZone = function (sDate, eDate) {\n    var sTZ = sDate.getTimezoneOffset();\n    var eTZ = eDate.getTimezoneOffset();\n    var uTZ;\n    var uDate;\n\n    if (sTZ !== eTZ) {\n      var standardTZ = new Date(new Date().getFullYear(), 0, 1).getTimezoneOffset();\n\n      if (standardTZ !== sTZ) {\n        uDate = sDate;\n        uTZ = sTZ;\n      } else if (standardTZ !== eTZ) {\n        uDate = eDate;\n        uTZ = eTZ;\n      }\n\n      if (standardTZ < 0) {\n        var tzDiff = standardTZ - uTZ;\n        uDate.setTime(uDate.getTime() + tzDiff * 60 * 1000);\n      } else if (standardTZ >= 0) {\n        var tzDiff = uTZ - standardTZ;\n        uDate.setTime(uDate.getTime() - tzDiff * 60 * 1000);\n      }\n    }\n  };\n  /**\n   *\n   * @param {Date} date .\n   * @returns {number} .\n   */\n\n\n  DateProcessor.prototype.getSecondsInDecimal = function (date) {\n    return date.getHours() * 60 * 60 + date.getMinutes() * 60 + date.getSeconds() + date.getMilliseconds() / 1000;\n  };\n  /**\n   * @param {Date} date .\n   * @param {number} localOffset .\n   * @param {string} timezone .\n   * @returns {number} .\n   * @private\n   */\n\n\n  DateProcessor.prototype.offset = function (date, timezone) {\n    var localOffset = date.getTimezoneOffset();\n\n    try {\n      var convertedDate = new Date(date.toLocaleString('en-US', {\n        timeZone: timezone\n      }));\n\n      if (!isNaN(convertedDate.getTime())) {\n        return (date.getTime() - convertedDate.getTime()) / 60000 + localOffset;\n      }\n\n      return 0;\n    } catch (error) {\n      return 0;\n    }\n  };\n\n  DateProcessor.prototype.remove = function (date, timezone) {\n    if (!isNullOrUndefined(date)) {\n      date = this.reverse(date, timezone, date.getTimezoneOffset());\n    }\n\n    return date;\n  };\n\n  DateProcessor.prototype.reverse = function (date, fromOffset, toOffset) {\n    if (typeof fromOffset === 'string') {\n      fromOffset = this.offset(date, fromOffset);\n    }\n\n    if (typeof toOffset === 'string') {\n      toOffset = this.offset(date, toOffset);\n    }\n\n    var fromLocalOffset = date.getTimezoneOffset();\n    date = new Date(date.getTime() + (fromOffset - toOffset) * 60000);\n    var toLocalOffset = date.getTimezoneOffset();\n    return new Date(date.getTime() + (toLocalOffset - fromLocalOffset) * 60000);\n  };\n  /**\n   * @param {Date} date .\n   * @param {string} timezone .\n   * @returns {Date} .\n   * @private\n   */\n\n\n  DateProcessor.prototype.convert = function (date, timezone) {\n    var fromOffset = date.getTimezoneOffset();\n    var toOffset = this.offset(date, timezone);\n    date = new Date(date.getTime() + (fromOffset - toOffset) * 60000);\n    var toLocalOffset = date.getTimezoneOffset();\n    return new Date(date.getTime() + (toLocalOffset - fromOffset) * 60000);\n  };\n  /**\n   * @param {string | Date} date .\n   * @param {boolean} toConvert .\n   * @returns {Date} .\n   * @private\n   */\n\n\n  DateProcessor.prototype.getDateFromFormat = function (date, toConvert) {\n    var updatedDate;\n\n    if (isNullOrUndefined(date)) {\n      return null;\n    } else if (date instanceof Date) {\n      updatedDate = new Date(date.getTime());\n    } else {\n      var dateObject = this.parent.globalize.parseDate(date, {\n        format: this.parent.getDateFormat(),\n        type: 'dateTime'\n      });\n      updatedDate = isNullOrUndefined(dateObject) && !isNaN(new Date(date).getTime()) ? new Date(date) : dateObject;\n    }\n\n    if (!isNullOrUndefined(this.parent.timezone) && toConvert) {\n      var convertedDate = this.convert(updatedDate, this.parent.timezone);\n      return convertedDate;\n    } else {\n      return updatedDate;\n    }\n  };\n  /**\n   * @param {Date} date1 .\n   * @param {Date} date2 .\n   * @returns {number} .\n   * @private\n   */\n\n\n  DateProcessor.prototype.compareDates = function (date1, date2) {\n    if (!isNullOrUndefined(date1) && !isNullOrUndefined(date2)) {\n      return date1.getTime() > date2.getTime() ? 1 : date1.getTime() < date2.getTime() ? -1 : 0;\n    } else if (!isNullOrUndefined(date1) && isNullOrUndefined(date2)) {\n      return 1;\n    } else if (isNullOrUndefined(date1) && !isNullOrUndefined(date2)) {\n      return -1;\n    } else {\n      return null;\n    }\n  };\n  /**\n   *\n   * @param {number} duration .\n   * @param {string} durationUnit .\n   * @returns {string} .\n   * @private\n   */\n\n\n  DateProcessor.prototype.getDurationString = function (duration, durationUnit) {\n    var value = '';\n\n    if (!isNullOrUndefined(duration)) {\n      value += parseFloat(duration.toFixed(2)) + ' ';\n\n      if (!isNullOrUndefined(durationUnit)) {\n        var plural = duration !== 1;\n\n        if (durationUnit === 'day') {\n          value += plural ? this.parent.localeObj.getConstant('days') : this.parent.localeObj.getConstant('day');\n        } else if (durationUnit === 'hour') {\n          value += plural ? this.parent.localeObj.getConstant('hours') : this.parent.localeObj.getConstant('hour');\n        } else if (durationUnit === 'minute') {\n          value += plural ? this.parent.localeObj.getConstant('minutes') : this.parent.localeObj.getConstant('minute');\n        }\n      }\n    }\n\n    return value;\n  };\n  /**\n   * Method to get work with value and unit.\n   *\n   * @param {number} work .\n   * @param {string} workUnit .\n   * @returns {string} .\n   * @private\n   */\n\n\n  DateProcessor.prototype.getWorkString = function (work, workUnit) {\n    var value = '';\n\n    if (!isNullOrUndefined(work)) {\n      value += parseFloat(work).toFixed(2) + ' ';\n\n      if (!isNullOrUndefined(workUnit)) {\n        var plural = work !== 1;\n\n        if (workUnit === 'day') {\n          value += plural ? this.parent.localeObj.getConstant('days') : this.parent.localeObj.getConstant('day');\n        } else if (workUnit === 'hour') {\n          value += plural ? this.parent.localeObj.getConstant('hours') : this.parent.localeObj.getConstant('hour');\n        } else if (workUnit === 'minute') {\n          value += plural ? this.parent.localeObj.getConstant('minutes') : this.parent.localeObj.getConstant('minute');\n        }\n      }\n    }\n\n    return value;\n  };\n  /**\n   *\n   * @param {object} editArgs .\n   * @returns {void} .\n   * @private\n   */\n  // eslint-disable-next-line\n\n\n  DateProcessor.prototype.calculateProjectDatesForValidatedTasks = function (editArgs) {\n    var _this = this;\n\n    var projectStartDate = typeof this.parent.projectStartDate === 'string' ? new Date(this.parent.projectStartDate) : this.parent.projectStartDate;\n    var projectEndDate = typeof this.parent.projectEndDate === 'string' ? new Date(this.parent.projectEndDate) : this.parent.projectEndDate;\n    var minStartDate = null;\n    var maxEndDate = null;\n    var flatData = getValue('dataOperation.dataArray', this.parent);\n\n    if ((!projectStartDate || !projectEndDate) && flatData && flatData.length === 0) {\n      minStartDate = this.getDateFromFormat(new Date());\n      maxEndDate = this.getDateFromFormat(new Date(minStartDate.getTime()));\n    } else if (flatData.length > 0) {\n      var sortedStartDate = flatData.slice().sort(function (a, b) {\n        return new Date(a[_this.parent.taskFields.startDate]).getTime() - new Date(b[_this.parent.taskFields.startDate]).getTime();\n      });\n      var sortedEndDate = flatData.slice().sort(function (a, b) {\n        return new Date(b[_this.parent.taskFields.endDate]).getTime() - new Date(a[_this.parent.taskFields.endDate]).getTime();\n      });\n      minStartDate = sortedStartDate[0][this.parent.taskFields.startDate];\n      maxEndDate = sortedEndDate[sortedEndDate.length - 1][this.parent.taskFields.endDate];\n    }\n\n    this.parent.cloneProjectStartDate = projectStartDate ? new Date(projectStartDate.getTime()) : typeof minStartDate === 'string' ? new Date(minStartDate) : minStartDate;\n    this.parent.cloneProjectEndDate = projectEndDate ? new Date(projectEndDate.getTime()) : typeof maxEndDate === 'string' ? new Date(maxEndDate) : maxEndDate;\n  };\n  /**\n   *\n   * @param {object} editArgs .\n   * @returns {void} .\n   * @private\n   */\n\n\n  DateProcessor.prototype.calculateProjectDates = function (editArgs) {\n    var _this = this;\n\n    var sDate = typeof this.parent.projectStartDate === 'string' ? new Date(this.parent.projectStartDate) : this.parent.projectStartDate;\n    var eDate = typeof this.parent.projectEndDate === 'string' ? new Date(this.parent.projectEndDate) : this.parent.projectEndDate;\n    var projectStartDate = this.parent.timelineModule.isZooming && this.parent.cloneProjectStartDate ? this.getDateFromFormat(this.parent.cloneProjectStartDate) : this.getDateFromFormat(sDate);\n    var projectEndDate = this.parent.timelineModule.isZooming && this.parent.cloneProjectEndDate ? this.getDateFromFormat(this.parent.cloneProjectEndDate) : this.getDateFromFormat(eDate);\n    var minStartDate = null;\n    var maxEndDate = null;\n    var flatData = this.parent.flatData;\n    var currentViewData = this.parent.currentViewData;\n    var taskRange = [];\n\n    var addDateToList = function (date) {\n      if (!isNullOrUndefined(date)) {\n        taskRange.push(date);\n      }\n    };\n\n    var sortDates = function (dates) {\n      if (dates.length > 0) {\n        dates.sort(function (a, b) {\n          return a.getTime() - b.getTime();\n        });\n        minStartDate = new Date(dates[0].getTime());\n        maxEndDate = dates.length > 1 ? new Date(dates[dates.length - 1].getTime()) : null;\n      }\n    };\n\n    if ((!projectStartDate || !projectEndDate) && flatData.length > 0 || editArgs || this.parent.timelineModule.isZoomToFit) {\n      var viewData = void 0;\n\n      if (currentViewData.length > 0 && this.parent.timelineModule.isZoomToFit && this.parent.treeGrid.filterModule && this.parent.treeGrid.filterModule.filteredResult.length > 0) {\n        viewData = currentViewData;\n      } else {\n        viewData = flatData;\n      }\n\n      viewData.forEach(function (data) {\n        taskRange = [];\n        var task = data.ganttProperties;\n\n        var tempStartDate = _this.getValidStartDate(task);\n\n        var tempEndDate = _this.getValidEndDate(task);\n\n        addDateToList(minStartDate);\n        addDateToList(maxEndDate);\n        addDateToList(tempStartDate);\n        addDateToList(tempEndDate);\n\n        if (_this.parent.renderBaseline && !_this.parent.timelineModule.isZoomToFit) {\n          addDateToList(task.baselineStartDate);\n          addDateToList(task.baselineEndDate);\n        }\n\n        if (task.indicators && task.indicators.length > 0 && !_this.parent.timelineModule.isZoomToFit) {\n          task.indicators.forEach(function (item) {\n            addDateToList(_this.getDateFromFormat(item.date));\n          });\n        }\n\n        sortDates(taskRange);\n      });\n      taskRange = [];\n      addDateToList(minStartDate);\n      addDateToList(maxEndDate); //update schedule dates as per holiday and strip line collection\n\n      if (this.parent.eventMarkers.length > 0 && !this.parent.timelineModule.isZoomToFit) {\n        var eventMarkers = this.parent.eventMarkers; // eslint-disable-next-line\n\n        eventMarkers.forEach(function (marker, index) {\n          addDateToList(_this.getDateFromFormat(marker.day));\n        });\n      }\n\n      if (this.parent.totalHolidayDates.length > 0 && !this.parent.timelineModule.isZoomToFit) {\n        var holidays = this.parent.totalHolidayDates; // eslint-disable-next-line\n\n        holidays.forEach(function (holiday, index) {\n          addDateToList(new Date(holiday));\n        });\n      }\n\n      sortDates(taskRange);\n\n      if (!minStartDate || !maxEndDate) {\n        minStartDate = isNullOrUndefined(minStartDate) ? this.getDateFromFormat(new Date()) : minStartDate;\n        maxEndDate = this.getDateFromFormat(new Date(minStartDate.getTime()));\n        maxEndDate.setDate(maxEndDate.getDate() + 20);\n      }\n    } else if ((!projectStartDate || !projectEndDate) && flatData.length === 0) {\n      minStartDate = this.getDateFromFormat(new Date());\n      maxEndDate = this.getDateFromFormat(new Date(minStartDate.getTime()));\n    }\n\n    if (!editArgs) {\n      this.prevProjectStartDate = this.parent.cloneProjectStartDate;\n      this.parent.cloneProjectStartDate = minStartDate ? minStartDate : new Date(projectStartDate.getTime());\n      this.parent.cloneProjectEndDate = maxEndDate ? maxEndDate : new Date(projectEndDate.getTime());\n    } else {\n      setValue('minStartDate', minStartDate, editArgs);\n      setValue('maxEndDate', maxEndDate, editArgs);\n    }\n  };\n  /**\n   *\n   * @param {ITaskSegment} segments .\n   * @returns {number} .\n   * @private\n   */\n\n\n  DateProcessor.prototype.splitTasksDuration = function (segments) {\n    var duration = 0;\n\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n      var sDate = segment.startDate;\n      var eDate = segment.endDate;\n      duration += Math.ceil(this.getTimeDifference(sDate, eDate) / (1000 * 60 * 60 * 24));\n    }\n\n    return duration;\n  };\n\n  return DateProcessor;\n}();\n\nexport { DateProcessor };","map":{"version":3,"sources":["/Users/tristanbilot/Desktop/Design4green/design4green/node_modules/@syncfusion/ej2-gantt/src/gantt/base/date-processor.js"],"names":["isNullOrUndefined","getValue","setValue","DateProcessor","parent","prototype","isValidateNonWorkDays","ganttProp","isAutoSchedule","includeWeekend","totalHolidayDates","length","checkStartDate","date","validateAsMilestone","isLoad","cloneStartDate","Date","getTime","hour","getSecondsInDecimal","isMilestone","defaultStartTime","setTime","defaultEndTime","setDate","getDate","index","workingTimeRanges","value","to","from","tStartDate","holidayLength","startTime","tempDate","getNextWorkingDay","count","holidayFrom","getDateFromFormat","holidayTo","setHours","checkEndDate","cloneEndDate","tempCheckDate","getPreviousWorkingDay","tempHoliday","setMinutes","getMilliseconds","checkBaselineStartDate","cloneDate","i","checkBaselineEndDate","calculateStartDate","ganttData","ganttProperties","tempStartDate","endDate","duration","getStartDate","durationUnit","setRecordValue","taskFields","startDate","dataOperation","updateMappingData","calculateEndDate","tempEndDate","compareDates","calculateDuration","segments","totalDuration","getEndDate","offsetDuration","tDuration","editModule","taskbarEditModule","sumOfDuration","getDuration","col","columnByField","columnMapping","cellEditModule","isCellEdit","edit","read","dialog","dialogModule","textBox","querySelector","element","id","ej2_instances","toString","dataBind","getNonworkingTime","sDate","eDate","isCheckTimeZone","weekendCount","getWeekendCount","totalHours","getNumberOfSeconds","holidaysCount","getHolidaysCount","totWorkDays","nonWorkHours","getNonWorkingSecondsOnDate","totalNonWorkTime","secondsPerDay","durationValue","timeDiff","getTimeDifference","durationHours","getFormatedDate","parseFloat","getDurationAsSeconds","tempStart","secondDuration","nonWork","workHours","setSeconds","getSeconds","tempEnd","getProjectStartDate","cloneProjectStartDate","projectStartDate","flatData","minStartDate","getValidStartDate","isAuto","autoStartDate","autoEndDate","autoDuration","getValidEndDate","getSecondsPerDay","dayWorkingTime","totalSeconds","nonWorkingHours","nonWorkingTimeRanges","currentRange","startHour","endHour","sdSeconds","edSeconds","push","isWorking","interval","getDurationValue","isFromDialog","values","match","trim","unit","toLowerCase","durationUnitEditText","indexOf","output","dayIndex","getDay","nonWorkingDayIndex","holidays","currentHoliday","getHolidayDates","holidayDates","isOnHolidayOrWeekEnd","checkWeekEnd","sHour","eHour","startRangeIndex","endRangeIndex","totNonWrkSecs","startOnHoliday","endOnHoliday","val","getMonth","getFullYear","range","previousIndex","getNonWorkingDayIndex","weekDay","weekDayLength","workWeek","slice","seconds","parseInt","min","sec","updateDateWithTimeZone","sTZ","getTimezoneOffset","eTZ","uTZ","uDate","standardTZ","tzDiff","getHours","getMinutes","offset","timezone","localOffset","convertedDate","toLocaleString","timeZone","isNaN","error","remove","reverse","fromOffset","toOffset","fromLocalOffset","toLocalOffset","convert","toConvert","updatedDate","dateObject","globalize","parseDate","format","getDateFormat","type","date1","date2","getDurationString","toFixed","plural","localeObj","getConstant","getWorkString","work","workUnit","calculateProjectDatesForValidatedTasks","editArgs","_this","projectEndDate","maxEndDate","sortedStartDate","sort","a","b","sortedEndDate","cloneProjectEndDate","calculateProjectDates","timelineModule","isZooming","currentViewData","taskRange","addDateToList","sortDates","dates","isZoomToFit","viewData","treeGrid","filterModule","filteredResult","forEach","data","task","renderBaseline","baselineStartDate","baselineEndDate","indicators","item","eventMarkers","marker","day","holiday","prevProjectStartDate","splitTasksDuration","segment","Math","ceil"],"mappings":"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","sourcesContent":["import { isNullOrUndefined, getValue, setValue } from '@syncfusion/ej2-base';\n/**\n *  Date processor is used to handle date of task data.\n */\nvar DateProcessor = /** @class */ (function () {\n    function DateProcessor(parent) {\n        this.parent = parent;\n    }\n    /**\n     * @param {ITaskData} ganttProp .\n     * @returns {boolean} .\n     */\n    DateProcessor.prototype.isValidateNonWorkDays = function (ganttProp) {\n        return (!isNullOrUndefined(ganttProp) && ganttProp.isAutoSchedule &&\n            (!this.parent.includeWeekend || this.parent.totalHolidayDates.length > 0)) ||\n            (isNullOrUndefined(ganttProp) && (!this.parent.includeWeekend || this.parent.totalHolidayDates.length > 0));\n    };\n    /**\n     * Method to convert given date value as valid start date\n     *\n     * @param {Date} date .\n     * @param {ITaskData} ganttProp .\n     * @param {boolean} validateAsMilestone .\n     * @param {boolean} isLoad .\n     * @returns {Date} .\n     * @private\n     */\n    DateProcessor.prototype.checkStartDate = function (date, ganttProp, validateAsMilestone, isLoad) {\n        if (isNullOrUndefined(date)) {\n            return null;\n        }\n        var cloneStartDate = new Date(date.getTime());\n        var hour = this.getSecondsInDecimal(cloneStartDate);\n        validateAsMilestone = isNullOrUndefined(validateAsMilestone) ? !isNullOrUndefined(ganttProp) ?\n            ganttProp.isMilestone : false : validateAsMilestone;\n        if (hour < this.parent.defaultStartTime && (!validateAsMilestone || isLoad)) {\n            this.setTime(this.parent.defaultStartTime, cloneStartDate);\n        }\n        else if (hour < this.parent.defaultStartTime && validateAsMilestone) {\n            this.setTime(this.parent.defaultEndTime, cloneStartDate);\n        }\n        else if ((hour === this.parent.defaultEndTime && (!ganttProp || !validateAsMilestone)) || hour > this.parent.defaultEndTime) {\n            cloneStartDate.setDate(cloneStartDate.getDate() + 1);\n            this.setTime(this.parent.defaultStartTime, cloneStartDate);\n        }\n        else if (hour > this.parent.defaultStartTime && hour < this.parent.defaultEndTime) {\n            for (var index = 0; index < this.parent.workingTimeRanges.length; index++) {\n                var value = this.parent.workingTimeRanges[index];\n                if (hour >= value.to && (this.parent.workingTimeRanges[index + 1] &&\n                    hour < this.parent.workingTimeRanges[index + 1].from)) {\n                    // milestone can fall at end any interval time\n                    if ((hour === value.to && (!ganttProp || !validateAsMilestone)) || hour !== value.to) {\n                        this.setTime(this.parent.workingTimeRanges[index + 1].from, cloneStartDate);\n                    }\n                    break;\n                }\n            }\n        }\n        var tStartDate;\n        do {\n            tStartDate = new Date(cloneStartDate.getTime());\n            var holidayLength = this.parent.totalHolidayDates.length;\n            // check holidays and weekends\n            if (this.isValidateNonWorkDays(ganttProp)) {\n                var startTime = (!validateAsMilestone || isLoad) ? this.parent.defaultStartTime : this.parent.defaultEndTime;\n                if (!this.parent.includeWeekend) {\n                    var tempDate = new Date(cloneStartDate.getTime());\n                    cloneStartDate = this.getNextWorkingDay(cloneStartDate);\n                    if (tempDate.getTime() !== cloneStartDate.getTime()) {\n                        this.setTime(startTime, cloneStartDate);\n                    }\n                }\n                for (var count = 0; count < holidayLength; count++) {\n                    var holidayFrom = this.getDateFromFormat(new Date(this.parent.totalHolidayDates[count]));\n                    var holidayTo = new Date(holidayFrom.getTime());\n                    holidayFrom.setHours(0, 0, 0, 0);\n                    holidayTo.setHours(23, 59, 59, 59);\n                    if (cloneStartDate.getTime() >= holidayFrom.getTime() && cloneStartDate.getTime() < holidayTo.getTime()) {\n                        cloneStartDate.setDate(cloneStartDate.getDate() + 1);\n                        this.setTime(startTime, cloneStartDate);\n                    }\n                }\n            }\n        } while (tStartDate.getTime() !== cloneStartDate.getTime());\n        return new Date(cloneStartDate.getTime());\n    };\n    /**\n     * To update given date value to valid end date\n     *\n     * @param {Date} date .\n     * @param {ITaskData} ganttProp .\n     * @param {boolean} validateAsMilestone .\n     * @returns {Date} .\n     * @private\n     */\n    DateProcessor.prototype.checkEndDate = function (date, ganttProp, validateAsMilestone) {\n        if (isNullOrUndefined(date)) {\n            return null;\n        }\n        var cloneEndDate = new Date(date.getTime());\n        var hour = this.getSecondsInDecimal(cloneEndDate);\n        if (hour > this.parent.defaultEndTime) {\n            this.setTime(this.parent.defaultEndTime, cloneEndDate);\n        }\n        else if (hour <= this.parent.defaultStartTime && !validateAsMilestone) {\n            cloneEndDate.setDate(cloneEndDate.getDate() - 1);\n            this.setTime(this.parent.defaultEndTime, cloneEndDate);\n        }\n        else if (hour > this.parent.defaultStartTime && hour < this.parent.defaultEndTime) {\n            for (var index = 0; index < this.parent.workingTimeRanges.length; index++) {\n                var value = this.parent.workingTimeRanges[index];\n                if (hour > value.to && (this.parent.workingTimeRanges[index + 1] &&\n                    hour <= this.parent.workingTimeRanges[index + 1].from)) {\n                    this.setTime(this.parent.workingTimeRanges[index].to, cloneEndDate);\n                    break;\n                }\n            }\n        }\n        var tempCheckDate;\n        do {\n            tempCheckDate = new Date(cloneEndDate.getTime());\n            var holidayLength = this.parent.totalHolidayDates.length;\n            if (this.isValidateNonWorkDays(ganttProp)) {\n                if (!this.parent.includeWeekend) {\n                    var tempDate = new Date(cloneEndDate.getTime());\n                    cloneEndDate = this.getPreviousWorkingDay(cloneEndDate);\n                    if (tempDate.getTime() !== cloneEndDate.getTime()) {\n                        this.setTime(this.parent.defaultEndTime, cloneEndDate);\n                    }\n                }\n                for (var count = 0; count < holidayLength; count++) {\n                    var holidayFrom = this.getDateFromFormat(new Date(this.parent.totalHolidayDates[count]));\n                    var holidayTo = new Date(holidayFrom.getTime());\n                    var tempHoliday = new Date(cloneEndDate.getTime());\n                    tempHoliday.setMinutes(cloneEndDate.getMilliseconds() - 2);\n                    holidayFrom.setHours(0, 0, 0, 0);\n                    holidayTo.setHours(23, 59, 59, 59);\n                    if (cloneEndDate.getTime() >= holidayFrom.getTime() && cloneEndDate.getTime() < holidayTo.getTime() ||\n                        tempHoliday.getTime() >= holidayFrom.getTime() && tempHoliday.getTime() < holidayTo.getTime()) {\n                        cloneEndDate.setDate(cloneEndDate.getDate() - 1);\n                        if (!(cloneEndDate.getTime() === holidayFrom.getTime() && this.parent.defaultEndTime === 86400 &&\n                            this.getSecondsInDecimal(cloneEndDate) === 0)) {\n                            this.setTime(this.parent.defaultEndTime, cloneEndDate);\n                        }\n                    }\n                }\n            }\n        } while (tempCheckDate.getTime() !== cloneEndDate.getTime());\n        return new Date(cloneEndDate.getTime());\n    };\n    /**\n     * To validate the baseline start date\n     *\n     * @param {Date} date .\n     * @returns {Date} .\n     * @private\n     */\n    DateProcessor.prototype.checkBaselineStartDate = function (date) {\n        if (isNullOrUndefined(date)) {\n            return null;\n        }\n        else {\n            var cloneDate = new Date(date.getTime());\n            var hour = this.getSecondsInDecimal(cloneDate);\n            if (hour < this.parent.defaultStartTime) {\n                this.setTime(this.parent.defaultStartTime, cloneDate);\n            }\n            else if (hour >= this.parent.defaultEndTime) {\n                cloneDate.setDate(cloneDate.getDate() + 1);\n                this.setTime(this.parent.defaultStartTime, cloneDate);\n            }\n            else if (hour > this.parent.defaultStartTime && hour < this.parent.defaultEndTime) {\n                for (var i = 0; i < this.parent.workingTimeRanges.length; i++) {\n                    var value = this.parent.workingTimeRanges[i];\n                    if (hour >= value.to && (this.parent.workingTimeRanges[i + 1] &&\n                        hour < this.parent.workingTimeRanges[i + 1].from)) {\n                        this.setTime(this.parent.workingTimeRanges[i + 1].from, cloneDate);\n                        break;\n                    }\n                }\n            }\n            return cloneDate;\n        }\n    };\n    /**\n     * To validate baseline end date\n     *\n     * @param {Date} date .\n     * @returns {Date} .\n     * @private\n     */\n    DateProcessor.prototype.checkBaselineEndDate = function (date) {\n        if (isNullOrUndefined(date)) {\n            return null;\n        }\n        else {\n            var cloneDate = new Date(date.getTime());\n            var hour = this.getSecondsInDecimal(cloneDate);\n            if (hour > this.parent.defaultEndTime) {\n                this.setTime(this.parent.defaultEndTime, cloneDate);\n            }\n            else if (hour <= this.parent.defaultStartTime) {\n                cloneDate.setDate(cloneDate.getDate() - 1);\n                this.setTime(this.parent.defaultEndTime, cloneDate);\n            }\n            else if (hour > this.parent.defaultStartTime && hour < this.parent.defaultEndTime) {\n                for (var i = 0; i < this.parent.workingTimeRanges.length; i++) {\n                    var value = this.parent.workingTimeRanges[i];\n                    if (hour > value.to && (this.parent.workingTimeRanges[i + 1] && hour <= this.parent.workingTimeRanges[i + 1].from)) {\n                        this.setTime(this.parent.workingTimeRanges[i].to, cloneDate);\n                        break;\n                    }\n                }\n            }\n            return cloneDate;\n        }\n    };\n    /**\n     * To calculate start date value from duration and end date\n     *\n     * @param {IGanttData} ganttData - Defines the gantt data.\n     * @returns {void} .\n     * @private\n     */\n    DateProcessor.prototype.calculateStartDate = function (ganttData) {\n        var ganttProp = ganttData.ganttProperties;\n        var tempStartDate = null;\n        if (!isNullOrUndefined(ganttProp.endDate) && !isNullOrUndefined(ganttProp.duration)) {\n            tempStartDate = this.getStartDate(ganttProp.endDate, ganttProp.duration, ganttProp.durationUnit, ganttProp);\n        }\n        this.parent.setRecordValue('startDate', tempStartDate, ganttProp, true);\n        if (this.parent.taskFields.startDate) {\n            this.parent.dataOperation.updateMappingData(ganttData, 'startDate');\n        }\n    };\n    /**\n     *\n     * @param {IGanttData} ganttData - Defines the gantt data.\n     * @returns {void} .\n     * @private\n     */\n    DateProcessor.prototype.calculateEndDate = function (ganttData) {\n        var ganttProp = ganttData.ganttProperties;\n        var tempEndDate = null;\n        if (!isNullOrUndefined(ganttProp.startDate)) {\n            if (!isNullOrUndefined(ganttProp.endDate) && isNullOrUndefined(ganttProp.duration)) {\n                if (this.compareDates(ganttProp.startDate, ganttProp.endDate) === 1) {\n                    this.parent.setRecordValue('startDate', new Date(ganttProp.endDate.getTime()), ganttProp, true);\n                    this.setTime(this.parent.defaultStartTime, ganttProp.startDate);\n                }\n                this.calculateDuration(ganttData);\n            }\n            if (!isNullOrUndefined(ganttProp.duration)) {\n                var duration = !isNullOrUndefined(ganttProp.segments) && ganttProp.segments.length > 0 ?\n                    this.totalDuration(ganttProp.segments) : ganttProp.duration;\n                tempEndDate = this.getEndDate(ganttProp.startDate, duration, ganttProp.durationUnit, ganttProp, false);\n            }\n            this.parent.setRecordValue('endDate', tempEndDate, ganttProp, true);\n        }\n        if (this.parent.taskFields.endDate) {\n            this.parent.dataOperation.updateMappingData(ganttData, 'endDate');\n        }\n    };\n    DateProcessor.prototype.totalDuration = function (segments) {\n        var duration = 0;\n        for (var i = 0; i < segments.length; i++) {\n            duration += segments[i].duration + segments[i].offsetDuration;\n        }\n        return duration;\n    };\n    /**\n     * To calculate duration from start date and end date\n     *\n     * @param {IGanttData} ganttData - Defines the gantt data.\n     * @returns {void} .\n     */\n    DateProcessor.prototype.calculateDuration = function (ganttData) {\n        var ganttProperties = ganttData.ganttProperties;\n        var tDuration;\n        if (!isNullOrUndefined(ganttProperties.segments) && ganttProperties.segments.length > 0) {\n            tDuration = this.parent.editModule.taskbarEditModule.sumOfDuration(ganttProperties.segments);\n        }\n        else {\n            tDuration = this.getDuration(ganttProperties.startDate, ganttProperties.endDate, ganttProperties.durationUnit, ganttProperties.isAutoSchedule, ganttProperties.isMilestone);\n        }\n        this.parent.setRecordValue('duration', tDuration, ganttProperties, true);\n        var col = this.parent.columnByField[this.parent.columnMapping.duration];\n        if (!isNullOrUndefined(this.parent.editModule) && !isNullOrUndefined(this.parent.editModule.cellEditModule) &&\n            !this.parent.editModule.cellEditModule.isCellEdit && !isNullOrUndefined(col)) {\n            if (!isNullOrUndefined(col.edit) && !isNullOrUndefined(col.edit.read)) {\n                var dialog = this.parent.editModule.dialogModule.dialog;\n                if (!isNullOrUndefined(dialog)) {\n                    var textBox = dialog.querySelector('#' + this.parent.element.id + 'Duration')\n                        .ej2_instances[0];\n                    if (!isNullOrUndefined(textBox) && textBox.value !== tDuration.toString()) {\n                        textBox.value = tDuration.toString();\n                        textBox.dataBind();\n                    }\n                }\n            }\n            if (this.parent.taskFields.duration) {\n                this.parent.dataOperation.updateMappingData(ganttData, 'duration');\n                if (this.parent.taskFields.durationUnit) {\n                    this.parent.dataOperation.updateMappingData(ganttData, 'durationUnit');\n                }\n            }\n        }\n    };\n    /**\n     *\n     * @param {Date} sDate Method to get total nonworking time between two date values\n     * @param {Date} eDate .\n     * @param {boolean} isAutoSchedule .\n     * @param {boolean} isCheckTimeZone .\n     * @returns {number} .\n     */\n    DateProcessor.prototype.getNonworkingTime = function (sDate, eDate, isAutoSchedule, isCheckTimeZone) {\n        isCheckTimeZone = isNullOrUndefined(isCheckTimeZone) ? true : isCheckTimeZone;\n        var weekendCount = !this.parent.includeWeekend && isAutoSchedule ? this.getWeekendCount(sDate, eDate) : 0;\n        var totalHours = this.getNumberOfSeconds(sDate, eDate, isCheckTimeZone);\n        var holidaysCount = isAutoSchedule ? this.getHolidaysCount(sDate, eDate) : 0;\n        var totWorkDays = (totalHours - (weekendCount * 86400) - (holidaysCount * 86400)) / 86400; // working days between two dates\n        var nonWorkHours = this.getNonWorkingSecondsOnDate(sDate, eDate, isAutoSchedule);\n        var totalNonWorkTime = (totWorkDays * (86400 - this.parent.secondsPerDay)) +\n            (weekendCount * 86400) + (holidaysCount * 86400) + nonWorkHours;\n        return totalNonWorkTime;\n    };\n    /**\n     *\n     * @param {Date} startDate .\n     * @param {Date} endDate .\n     * @param {string} durationUnit .\n     * @param {boolean} isAutoSchedule .\n     * @param {boolean} isMilestone .\n     * @param {boolean} isCheckTimeZone .\n     * @returns {number} .\n     * @private\n     */\n    DateProcessor.prototype.getDuration = function (startDate, endDate, durationUnit, isAutoSchedule, isMilestone, isCheckTimeZone) {\n        if (isNullOrUndefined(startDate) || isNullOrUndefined(endDate)) {\n            return null;\n        }\n        isCheckTimeZone = isNullOrUndefined(isCheckTimeZone) ? true : isCheckTimeZone;\n        var durationValue = 0;\n        var timeDiff = this.getTimeDifference(startDate, endDate, isCheckTimeZone) / 1000;\n        var nonWorkHours = this.getNonworkingTime(startDate, endDate, isAutoSchedule, isCheckTimeZone);\n        var durationHours = timeDiff - nonWorkHours;\n        if (isMilestone && this.parent.getFormatedDate(startDate) === this.parent.getFormatedDate(endDate)) {\n            durationValue = 0;\n        }\n        else {\n            if (!durationUnit || durationUnit === 'day') {\n                durationValue = durationHours / this.parent.secondsPerDay;\n            }\n            else if (durationUnit === 'minute') {\n                durationValue = durationHours / 60;\n            }\n            else {\n                durationValue = durationHours / 3600;\n            }\n        }\n        return parseFloat(durationValue.toString());\n    };\n    /**\n     *\n     * @param {number} duration .\n     * @param {string} durationUnit .\n     * @returns {number} .\n     */\n    DateProcessor.prototype.getDurationAsSeconds = function (duration, durationUnit) {\n        var value = 0;\n        if (!durationUnit || durationUnit === 'day') {\n            value = this.parent.secondsPerDay * duration;\n        }\n        else if (durationUnit === 'hour') {\n            value = duration * 3600;\n        }\n        else {\n            value = duration * 60;\n        }\n        return value;\n    };\n    /**\n     * To get date from start date and duration\n     *\n     * @param {Date} startDate .\n     * @param {number} duration .\n     * @param {string} durationUnit .\n     * @param {ITaskData} ganttProp .\n     * @param {boolean} validateAsMilestone .\n     * @returns {Date} .\n     * @private\n     */\n    DateProcessor.prototype.getEndDate = function (startDate, duration, durationUnit, ganttProp, validateAsMilestone) {\n        var tempStart = new Date(startDate.getTime());\n        var endDate = new Date(startDate.getTime());\n        var secondDuration = this.getDurationAsSeconds(duration, durationUnit);\n        var nonWork = 0;\n        var workHours = 0;\n        while (secondDuration > 0) {\n            endDate.setSeconds(endDate.getSeconds() + secondDuration);\n            nonWork = this.getNonworkingTime(tempStart, endDate, ganttProp.isAutoSchedule, true);\n            workHours = secondDuration - nonWork;\n            secondDuration = secondDuration - workHours;\n            if (secondDuration > 0) {\n                endDate = this.checkStartDate(endDate, ganttProp, validateAsMilestone);\n            }\n            tempStart = new Date(endDate.getTime());\n        }\n        return endDate;\n    };\n    /**\n     *\n     * @param {Date} endDate To calculate start date vale from end date and duration\n     * @param {number} duration .\n     * @param {string} durationUnit .\n     * @param {ITaskData} ganttProp .\n     * @returns {Date} .\n     * @private\n     */\n    DateProcessor.prototype.getStartDate = function (endDate, duration, durationUnit, ganttProp) {\n        var tempEnd = new Date(endDate.getTime());\n        var startDate = new Date(endDate.getTime());\n        var secondDuration = this.getDurationAsSeconds(duration, durationUnit);\n        var nonWork = 0;\n        var workHours = 0;\n        while (secondDuration > 0) {\n            startDate.setSeconds(startDate.getSeconds() - secondDuration);\n            nonWork = this.getNonworkingTime(startDate, tempEnd, ganttProp.isAutoSchedule, true);\n            workHours = secondDuration - nonWork;\n            secondDuration = secondDuration - workHours;\n            if (secondDuration > 0) {\n                tempEnd = this.checkEndDate(startDate, ganttProp);\n            }\n            tempEnd = new Date(startDate.getTime());\n        }\n        return startDate;\n    };\n    /**\n     * @param {ITaskData} ganttProp .\n     * @param {boolean} isLoad .\n     * @returns {Date} .\n     * @private\n     */\n    DateProcessor.prototype.getProjectStartDate = function (ganttProp, isLoad) {\n        if (!isNullOrUndefined(this.parent.cloneProjectStartDate)) {\n            var cloneStartDate = this.checkStartDate(this.parent.cloneProjectStartDate);\n            this.parent.cloneProjectStartDate = cloneStartDate;\n            return new Date(cloneStartDate.getTime());\n        }\n        else if (!isNullOrUndefined(this.parent.projectStartDate)) {\n            var cloneStartDate = this.getDateFromFormat(this.parent.projectStartDate);\n            this.parent.cloneProjectStartDate = this.checkStartDate(cloneStartDate);\n        }\n        else if (!isNullOrUndefined(isLoad)) {\n            var flatData = this.parent.flatData;\n            var minStartDate = void 0;\n            if (flatData.length > 0) {\n                minStartDate = flatData[0].ganttProperties.startDate;\n            }\n            else {\n                minStartDate = new Date();\n                minStartDate.setHours(0, 0, 0, 0);\n            }\n            for (var index = 1; index < flatData.length; index++) {\n                var startDate = flatData[index].ganttProperties.startDate;\n                if (!isNullOrUndefined(startDate) && this.compareDates(startDate, minStartDate) === -1) {\n                    minStartDate = startDate;\n                }\n            }\n            this.parent.cloneProjectStartDate = this.checkStartDate(minStartDate, ganttProp);\n        }\n        else {\n            return null;\n        }\n        return new Date(this.parent.cloneProjectStartDate.getTime());\n    };\n    /**\n     * @param {ITaskData} ganttProp .\n     * @param {boolean} isAuto .\n     * @returns {Date} .\n     * @private\n     */\n    DateProcessor.prototype.getValidStartDate = function (ganttProp, isAuto) {\n        var sDate = null;\n        var startDate = isAuto ? ganttProp.autoStartDate : ganttProp.startDate;\n        var endDate = isAuto ? ganttProp.autoEndDate : ganttProp.endDate;\n        var duration = !ganttProp.isAutoSchedule && ganttProp.autoDuration ? ganttProp.autoDuration : ganttProp.duration;\n        if (isNullOrUndefined(startDate)) {\n            if (!isNullOrUndefined(endDate)) {\n                sDate = new Date(endDate.getTime());\n                this.setTime(this.parent.defaultStartTime, sDate);\n            }\n            else if (!isNullOrUndefined(duration)) {\n                sDate = this.getProjectStartDate(ganttProp);\n            }\n        }\n        else {\n            sDate = new Date(startDate.getTime());\n        }\n        return sDate;\n    };\n    /**\n     *\n     * @param {ITaskData} ganttProp .\n     * @param {boolean} isAuto .\n     * @returns {Date} .\n     * @private\n     */\n    DateProcessor.prototype.getValidEndDate = function (ganttProp, isAuto) {\n        var eDate = null;\n        var startDate = isAuto ? ganttProp.autoStartDate : ganttProp.startDate;\n        var endDate = isAuto ? ganttProp.autoEndDate : ganttProp.endDate;\n        var duration = isAuto ? ganttProp.autoDuration : ganttProp.duration;\n        if (isNullOrUndefined(endDate)) {\n            if (!isNullOrUndefined(startDate)) {\n                if (ganttProp.isMilestone) {\n                    eDate = this.checkStartDate(startDate);\n                }\n                else {\n                    eDate = new Date(startDate.getTime());\n                    this.setTime(this.parent.defaultEndTime, eDate);\n                }\n            }\n            else if (!isNullOrUndefined(duration)) {\n                var sDate = this.getValidStartDate(ganttProp);\n                if (sDate) {\n                    eDate = this.getEndDate(sDate, duration, ganttProp.durationUnit, ganttProp, false);\n                }\n            }\n        }\n        else {\n            eDate = new Date(endDate.getTime());\n        }\n        return eDate;\n    };\n    /**\n     * @returns {number} .\n     * @private\n     */\n    DateProcessor.prototype.getSecondsPerDay = function () {\n        var dayWorkingTime = this.parent.dayWorkingTime;\n        var length = dayWorkingTime.length;\n        var totalSeconds = 0;\n        var startDate = new Date('10/11/2018');\n        this.parent.nonWorkingHours = [];\n        var nonWorkingHours = this.parent.nonWorkingHours;\n        this.parent.workingTimeRanges = [];\n        var workingTimeRanges = this.parent.workingTimeRanges;\n        this.parent.nonWorkingTimeRanges = [];\n        var nonWorkingTimeRanges = this.parent.nonWorkingTimeRanges;\n        for (var count = 0; count < length; count++) {\n            var currentRange = dayWorkingTime[count];\n            if (!isNullOrUndefined(currentRange.from) && !isNullOrUndefined(currentRange.to)) {\n                startDate.setHours(0, 0, 0, 0);\n                var tempDate = new Date(startDate.getTime());\n                startDate.setTime(startDate.getTime() + (currentRange.from * 3600000));\n                var startHour = new Date(startDate.getTime());\n                tempDate.setTime(tempDate.getTime() + (currentRange.to * 3600000));\n                var endHour = new Date(tempDate.getTime());\n                var timeDiff = endHour.getTime() - startHour.getTime();\n                var sdSeconds = this.getSecondsInDecimal(startHour);\n                var edSeconds = this.getSecondsInDecimal(endHour);\n                if (edSeconds === 0) {\n                    edSeconds = 86400;\n                }\n                totalSeconds += timeDiff / 1000;\n                if (count === 0) {\n                    this.parent.defaultStartTime = sdSeconds;\n                }\n                if (count === length - 1) {\n                    this.parent.defaultEndTime = edSeconds;\n                }\n                if (count > 0) {\n                    nonWorkingHours.push(nonWorkingHours[nonWorkingHours.length - 1] +\n                        sdSeconds - workingTimeRanges[count - 1].to);\n                    if (workingTimeRanges[count - 1].to < sdSeconds) {\n                        nonWorkingTimeRanges.push({\n                            from: workingTimeRanges[count - 1].to, to: sdSeconds, isWorking: false,\n                            interval: (sdSeconds - workingTimeRanges[count - 1].to)\n                        });\n                    }\n                }\n                else {\n                    nonWorkingHours.push(0);\n                    nonWorkingTimeRanges.push({ from: 0, to: sdSeconds, isWorking: false, interval: sdSeconds });\n                }\n                workingTimeRanges.push({ from: sdSeconds, to: edSeconds });\n                nonWorkingTimeRanges.push({\n                    from: sdSeconds, to: edSeconds, isWorking: true, interval: (edSeconds - sdSeconds)\n                });\n            }\n        }\n        if (this.parent.defaultEndTime / 3600 !== 24) {\n            nonWorkingTimeRanges.push({\n                from: this.parent.defaultEndTime, to: 86400,\n                isWorking: false, interval: 86400 - this.parent.defaultEndTime\n            });\n        }\n        return totalSeconds;\n    };\n    /**\n     *\n     * @param {string} value .\n     * @param {boolean} isFromDialog .\n     * @returns {object} .\n     * @private\n     */\n    // eslint-disable-next-line\n    DateProcessor.prototype.getDurationValue = function (value, isFromDialog) {\n        var durationUnit = null;\n        var duration = null;\n        if (typeof value === 'string') {\n            var values = value.match(/(\\d*\\.*\\d+|.+$)/g);\n            if (values && values.length <= 2) {\n                duration = parseFloat(values[0].toString().trim());\n                var unit = values[1] ? values[1].toString().trim().toLowerCase() : null;\n                if (getValue('minute', this.parent.durationUnitEditText).indexOf(unit) !== -1) {\n                    durationUnit = 'minute';\n                }\n                else if (getValue('hour', this.parent.durationUnitEditText).indexOf(unit) !== -1) {\n                    durationUnit = 'hour';\n                }\n                else if (getValue('day', this.parent.durationUnitEditText).indexOf(unit) !== -1) {\n                    durationUnit = 'day';\n                }\n            }\n        }\n        else {\n            duration = value;\n            durationUnit = null;\n        }\n        var output = {\n            duration: duration,\n            durationUnit: durationUnit\n        };\n        return output;\n    };\n    /**\n     *\n     * @param {Date} date .\n     * @returns {Date} .\n     */\n    DateProcessor.prototype.getNextWorkingDay = function (date) {\n        var dayIndex = date.getDay();\n        if (this.parent.nonWorkingDayIndex.indexOf(dayIndex) !== -1) {\n            date.setDate(date.getDate() + 1);\n            date = this.getNextWorkingDay(date);\n            return date;\n        }\n        else {\n            return date;\n        }\n    };\n    /**\n     * get weekend days between two dates without including args dates\n     *\n     * @param {Date} startDate .\n     * @param {Date} endDate .\n     * @returns {number} .\n     */\n    DateProcessor.prototype.getWeekendCount = function (startDate, endDate) {\n        var weekendCount = 0;\n        var sDate = new Date(startDate.getTime());\n        var eDate = new Date(endDate.getTime());\n        sDate.setHours(0, 0, 0, 0);\n        sDate.setDate(sDate.getDate() + 1);\n        eDate.setHours(0, 0, 0, 0);\n        while (sDate.getTime() < eDate.getTime()) {\n            if (this.parent.nonWorkingDayIndex.indexOf(sDate.getDay()) !== -1) {\n                weekendCount += 1;\n            }\n            sDate.setDate(sDate.getDate() + 1);\n        }\n        return weekendCount;\n    };\n    /**\n     *\n     * @param {Date} startDate .\n     * @param {Date} endDate .\n     * @param {boolean} isCheckTimeZone .\n     * @returns {number} .\n     */\n    DateProcessor.prototype.getNumberOfSeconds = function (startDate, endDate, isCheckTimeZone) {\n        var sDate = new Date(startDate.getTime());\n        var eDate = new Date(endDate.getTime());\n        var timeDiff = 0;\n        sDate.setDate(sDate.getDate() + 1);\n        sDate.setHours(0, 0, 0, 0);\n        eDate.setHours(0, 0, 0, 0);\n        if (sDate.getTime() < eDate.getTime()) {\n            timeDiff = (this.getTimeDifference(sDate, eDate, isCheckTimeZone)) / 1000;\n        }\n        if (timeDiff % 86400 !== 0) {\n            timeDiff = timeDiff - (timeDiff % 86400) + 86400;\n        }\n        return timeDiff;\n    };\n    /**\n     *\n     * @param {Date} startDate .\n     * @param {Date} endDate .\n     * @returns {number} .\n     */\n    DateProcessor.prototype.getHolidaysCount = function (startDate, endDate) {\n        var holidaysCount = 0;\n        var holidays = this.parent.totalHolidayDates;\n        var sDate = new Date(startDate.getTime());\n        var eDate = new Date(endDate.getTime());\n        sDate.setDate(sDate.getDate() + 1);\n        sDate.setHours(0, 0, 0, 0);\n        eDate.setHours(0, 0, 0, 0);\n        if (sDate.getTime() < eDate.getTime()) {\n            for (var i = 0; i < holidays.length; i++) {\n                var currentHoliday = this.getDateFromFormat(new Date(holidays[i]));\n                if (sDate.getTime() <= currentHoliday.getTime() && eDate.getTime() > currentHoliday.getTime()) {\n                    if ((!this.parent.includeWeekend && this.parent.nonWorkingDayIndex.indexOf(currentHoliday.getDay()) === -1) ||\n                        this.parent.includeWeekend) {\n                        holidaysCount += 1;\n                    }\n                }\n            }\n        }\n        return holidaysCount;\n    };\n    /**\n     * @returns {number[]} .\n     * @private\n     */\n    DateProcessor.prototype.getHolidayDates = function () {\n        var holidays = this.parent.holidays;\n        var holidayDates = [];\n        for (var i = 0; i < holidays.length; i++) {\n            var from = this.getDateFromFormat(holidays[i].from);\n            var to = this.getDateFromFormat(holidays[i].to);\n            if (isNullOrUndefined(from) && isNullOrUndefined(to)) {\n                continue;\n            }\n            else if (isNullOrUndefined(from) || isNullOrUndefined(to)) {\n                var tempDate = from ? from : to;\n                tempDate.setHours(0, 0, 0, 0);\n                if (holidayDates.indexOf(tempDate.getTime()) === -1) {\n                    holidayDates.push(tempDate.getTime());\n                }\n            }\n            else {\n                while (from <= to) {\n                    from.setHours(0, 0, 0, 0);\n                    if (holidayDates.indexOf(from.getTime()) === -1) {\n                        holidayDates.push(from.getTime());\n                    }\n                    from.setDate(from.getDate() + 1);\n                }\n            }\n        }\n        return holidayDates;\n    };\n    /**\n     * @param {Date} date .\n     * @param {boolean} checkWeekEnd .\n     * @returns {boolean} .\n     * @private\n     */\n    /*Check given date is on holidays*/\n    DateProcessor.prototype.isOnHolidayOrWeekEnd = function (date, checkWeekEnd) {\n        checkWeekEnd = !isNullOrUndefined(checkWeekEnd) ? checkWeekEnd : this.parent.includeWeekend;\n        if (!checkWeekEnd && this.parent.nonWorkingDayIndex.indexOf(date.getDay()) !== -1) {\n            return true;\n        }\n        var holidays = this.parent.totalHolidayDates;\n        for (var count = 0; count < holidays.length; count++) {\n            var holidayFrom = this.getDateFromFormat(new Date(holidays[count]));\n            var holidayTo = new Date(holidayFrom.getTime());\n            holidayFrom.setHours(0, 0, 0, 0);\n            holidayTo.setHours(23, 59, 59, 59);\n            if (date.getTime() >= holidayFrom.getTime() && date.getTime() < holidayTo.getTime()) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * To calculate non working times in given date\n     *\n     * @param {Date} startDate .\n     * @param {Date} endDate .\n     * @param {boolean} isAutoSchedule .\n     * @returns {number} .\n     */\n    DateProcessor.prototype.getNonWorkingSecondsOnDate = function (startDate, endDate, isAutoSchedule) {\n        var sHour = this.getSecondsInDecimal(startDate);\n        var eHour = this.getSecondsInDecimal(endDate);\n        var startRangeIndex = -1;\n        var endRangeIndex = -1;\n        var totNonWrkSecs = 0;\n        var startOnHoliday = isAutoSchedule ? this.isOnHolidayOrWeekEnd(startDate, null) : false;\n        var endOnHoliday = isAutoSchedule ? this.isOnHolidayOrWeekEnd(endDate, null) : false;\n        for (var i = 0; i < this.parent.nonWorkingTimeRanges.length; i++) {\n            var val = this.parent.nonWorkingTimeRanges[i];\n            if (sHour >= val.from && sHour <= val.to) {\n                startRangeIndex = i;\n            }\n            if (eHour >= val.from && eHour <= val.to) {\n                endRangeIndex = i;\n            }\n        }\n        if (startDate.getDate() !== endDate.getDate() || startDate.getMonth() !== endDate.getMonth() ||\n            startDate.getFullYear() !== endDate.getFullYear()) {\n            if (!startOnHoliday) {\n                for (var i = startRangeIndex; i < this.parent.nonWorkingTimeRanges.length; i++) {\n                    if (!this.parent.nonWorkingTimeRanges[i].isWorking) {\n                        if (i === startRangeIndex) {\n                            totNonWrkSecs += (this.parent.nonWorkingTimeRanges[i].to - sHour);\n                        }\n                        else {\n                            totNonWrkSecs += (this.parent.nonWorkingTimeRanges[i].interval);\n                        }\n                    }\n                }\n            }\n            else {\n                totNonWrkSecs += (86400 - sHour);\n            }\n            if (!endOnHoliday) {\n                for (var i = 0; i <= endRangeIndex; i++) {\n                    if (!this.parent.nonWorkingTimeRanges[i].isWorking) {\n                        if (i === endRangeIndex) {\n                            totNonWrkSecs += (eHour - this.parent.nonWorkingTimeRanges[i].from);\n                        }\n                        else {\n                            totNonWrkSecs += this.parent.nonWorkingTimeRanges[i].interval;\n                        }\n                    }\n                }\n            }\n            else {\n                totNonWrkSecs += eHour;\n            }\n        }\n        else {\n            if (startRangeIndex !== endRangeIndex) {\n                if (!endOnHoliday) {\n                    for (var i = startRangeIndex; i <= endRangeIndex; i++) {\n                        if (!this.parent.nonWorkingTimeRanges[i].isWorking) {\n                            if (i === startRangeIndex) {\n                                totNonWrkSecs += (this.parent.nonWorkingTimeRanges[i].to - sHour);\n                            }\n                            else if (i === endRangeIndex) {\n                                totNonWrkSecs += (eHour - this.parent.nonWorkingTimeRanges[i].from);\n                            }\n                            else {\n                                totNonWrkSecs += this.parent.nonWorkingTimeRanges[i].interval;\n                            }\n                        }\n                    }\n                }\n                else {\n                    totNonWrkSecs += (eHour - sHour);\n                }\n            }\n            else {\n                if (!endOnHoliday) {\n                    var range = this.parent.nonWorkingTimeRanges[startRangeIndex];\n                    if (!range.isWorking) {\n                        totNonWrkSecs = eHour - sHour;\n                    }\n                }\n                else {\n                    totNonWrkSecs += (eHour - sHour);\n                }\n            }\n        }\n        return totNonWrkSecs;\n    };\n    /**\n     *\n     * @param {Date} date .\n     * @returns {Date} .\n     */\n    DateProcessor.prototype.getPreviousWorkingDay = function (date) {\n        var dayIndex = date.getDay();\n        var previousIndex = (dayIndex === 0) ? 6 : dayIndex - 1;\n        if (this.parent.nonWorkingDayIndex.indexOf(dayIndex) !== -1 || (this.parent.nonWorkingDayIndex.indexOf(previousIndex) !== -1\n            && this.parent.defaultEndTime === 86400 && this.getSecondsInDecimal(date) === 0)) {\n            date.setDate(date.getDate() - 1);\n            if (this.parent.nonWorkingDayIndex.indexOf(date.getDay()) !== -1) {\n                date = this.getPreviousWorkingDay(date);\n            }\n            return date;\n        }\n        else {\n            return date;\n        }\n    };\n    /**\n     * To get non-working day indexes.\n     *\n     * @returns {void} .\n     * @private\n     */\n    DateProcessor.prototype.getNonWorkingDayIndex = function () {\n        var weekDay = ['sunday', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday'];\n        var weekDayLength = weekDay.length;\n        if (this.parent.workWeek.length === 0) {\n            this.parent.workWeek = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'];\n        }\n        var workWeek = this.parent.workWeek.slice();\n        var length = workWeek.length;\n        for (var i = 0; i < length; i++) {\n            workWeek[i] = workWeek[i].toLowerCase();\n        }\n        this.parent.nonWorkingDayIndex = [];\n        for (var i = 0; i < weekDayLength; i++) {\n            if (workWeek.indexOf(weekDay[i]) === -1) {\n                this.parent.nonWorkingDayIndex.push(i);\n            }\n        }\n    };\n    /**\n     *\n     * @param {number} seconds .\n     * @param {Date} date .\n     * @returns {void} .\n     * @private\n     */\n    DateProcessor.prototype.setTime = function (seconds, date) {\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        var hour = seconds / 3600;\n        hour = parseInt(hour, 10);\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        var min = (seconds - (hour * 3600)) / 60;\n        min = parseInt(min, 10);\n        var sec = seconds - (hour * 3600) - (min * 60);\n        date.setHours(hour, min, sec);\n    };\n    /**\n     * @param {Date} startDate .\n     * @param {Date} endDate .\n     * @param {boolean} isCheckTimeZone .\n     * @returns {number} .\n     */\n    DateProcessor.prototype.getTimeDifference = function (startDate, endDate, isCheckTimeZone) {\n        var sDate = new Date(startDate.getTime());\n        var eDate = new Date(endDate.getTime());\n        if (isCheckTimeZone) {\n            this.updateDateWithTimeZone(sDate, eDate);\n        }\n        return eDate.getTime() - sDate.getTime();\n    };\n    /**\n     * @param {Date} sDate .\n     * @param {Date} eDate .\n     * @returns {void} .\n     */\n    DateProcessor.prototype.updateDateWithTimeZone = function (sDate, eDate) {\n        var sTZ = sDate.getTimezoneOffset();\n        var eTZ = eDate.getTimezoneOffset();\n        var uTZ;\n        var uDate;\n        if (sTZ !== eTZ) {\n            var standardTZ = new Date(new Date().getFullYear(), 0, 1).getTimezoneOffset();\n            if (standardTZ !== sTZ) {\n                uDate = sDate;\n                uTZ = sTZ;\n            }\n            else if (standardTZ !== eTZ) {\n                uDate = eDate;\n                uTZ = eTZ;\n            }\n            if (standardTZ < 0) {\n                var tzDiff = standardTZ - uTZ;\n                uDate.setTime(uDate.getTime() + (tzDiff * 60 * 1000));\n            }\n            else if (standardTZ >= 0) {\n                var tzDiff = uTZ - standardTZ;\n                uDate.setTime(uDate.getTime() - (tzDiff * 60 * 1000));\n            }\n        }\n    };\n    /**\n     *\n     * @param {Date} date .\n     * @returns {number} .\n     */\n    DateProcessor.prototype.getSecondsInDecimal = function (date) {\n        return (date.getHours() * 60 * 60) + (date.getMinutes() * 60) + date.getSeconds() + (date.getMilliseconds() / 1000);\n    };\n    /**\n     * @param {Date} date .\n     * @param {number} localOffset .\n     * @param {string} timezone .\n     * @returns {number} .\n     * @private\n     */\n    DateProcessor.prototype.offset = function (date, timezone) {\n        var localOffset = date.getTimezoneOffset();\n        try {\n            var convertedDate = new Date(date.toLocaleString('en-US', { timeZone: timezone }));\n            if (!isNaN(convertedDate.getTime())) {\n                return ((date.getTime() - convertedDate.getTime()) / 60000) + localOffset;\n            }\n            return 0;\n        }\n        catch (error) {\n            return 0;\n        }\n    };\n    DateProcessor.prototype.remove = function (date, timezone) {\n        if (!isNullOrUndefined(date)) {\n            date = this.reverse(date, timezone, date.getTimezoneOffset());\n        }\n        return date;\n    };\n    DateProcessor.prototype.reverse = function (date, fromOffset, toOffset) {\n        if (typeof fromOffset === 'string') {\n            fromOffset = this.offset(date, fromOffset);\n        }\n        if (typeof toOffset === 'string') {\n            toOffset = this.offset(date, toOffset);\n        }\n        var fromLocalOffset = date.getTimezoneOffset();\n        date = new Date(date.getTime() + (fromOffset - toOffset) * 60000);\n        var toLocalOffset = date.getTimezoneOffset();\n        return new Date(date.getTime() + (toLocalOffset - fromLocalOffset) * 60000);\n    };\n    /**\n     * @param {Date} date .\n     * @param {string} timezone .\n     * @returns {Date} .\n     * @private\n     */\n    DateProcessor.prototype.convert = function (date, timezone) {\n        var fromOffset = date.getTimezoneOffset();\n        var toOffset = this.offset(date, timezone);\n        date = new Date(date.getTime() + (fromOffset - toOffset) * 60000);\n        var toLocalOffset = date.getTimezoneOffset();\n        return new Date(date.getTime() + (toLocalOffset - fromOffset) * 60000);\n    };\n    /**\n     * @param {string | Date} date .\n     * @param {boolean} toConvert .\n     * @returns {Date} .\n     * @private\n     */\n    DateProcessor.prototype.getDateFromFormat = function (date, toConvert) {\n        var updatedDate;\n        if (isNullOrUndefined(date)) {\n            return null;\n        }\n        else if (date instanceof Date) {\n            updatedDate = new Date(date.getTime());\n        }\n        else {\n            var dateObject = this.parent.globalize.parseDate(date, { format: this.parent.getDateFormat(), type: 'dateTime' });\n            updatedDate = isNullOrUndefined(dateObject) && !isNaN(new Date(date).getTime()) ? new Date(date) : dateObject;\n        }\n        if (!isNullOrUndefined(this.parent.timezone) && toConvert) {\n            var convertedDate = this.convert(updatedDate, this.parent.timezone);\n            return convertedDate;\n        }\n        else {\n            return updatedDate;\n        }\n    };\n    /**\n     * @param {Date} date1 .\n     * @param {Date} date2 .\n     * @returns {number} .\n     * @private\n     */\n    DateProcessor.prototype.compareDates = function (date1, date2) {\n        if (!isNullOrUndefined(date1) && !isNullOrUndefined(date2)) {\n            return (date1.getTime() > date2.getTime()) ? 1 : (date1.getTime() < date2.getTime()) ? -1 : 0;\n        }\n        else if (!isNullOrUndefined(date1) && isNullOrUndefined(date2)) {\n            return 1;\n        }\n        else if (isNullOrUndefined(date1) && !isNullOrUndefined(date2)) {\n            return -1;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     *\n     * @param {number} duration .\n     * @param {string} durationUnit .\n     * @returns {string} .\n     * @private\n     */\n    DateProcessor.prototype.getDurationString = function (duration, durationUnit) {\n        var value = '';\n        if (!isNullOrUndefined(duration)) {\n            value += parseFloat(duration.toFixed(2)) + ' ';\n            if (!isNullOrUndefined(durationUnit)) {\n                var plural = duration !== 1;\n                if (durationUnit === 'day') {\n                    value += plural ? this.parent.localeObj.getConstant('days') : this.parent.localeObj.getConstant('day');\n                }\n                else if (durationUnit === 'hour') {\n                    value += plural ? this.parent.localeObj.getConstant('hours') : this.parent.localeObj.getConstant('hour');\n                }\n                else if (durationUnit === 'minute') {\n                    value += plural ? this.parent.localeObj.getConstant('minutes') :\n                        this.parent.localeObj.getConstant('minute');\n                }\n            }\n        }\n        return value;\n    };\n    /**\n     * Method to get work with value and unit.\n     *\n     * @param {number} work .\n     * @param {string} workUnit .\n     * @returns {string} .\n     * @private\n     */\n    DateProcessor.prototype.getWorkString = function (work, workUnit) {\n        var value = '';\n        if (!isNullOrUndefined(work)) {\n            value += parseFloat(work).toFixed(2) + ' ';\n            if (!isNullOrUndefined(workUnit)) {\n                var plural = work !== 1;\n                if (workUnit === 'day') {\n                    value += plural ? this.parent.localeObj.getConstant('days') : this.parent.localeObj.getConstant('day');\n                }\n                else if (workUnit === 'hour') {\n                    value += plural ? this.parent.localeObj.getConstant('hours') : this.parent.localeObj.getConstant('hour');\n                }\n                else if (workUnit === 'minute') {\n                    value += plural ? this.parent.localeObj.getConstant('minutes') :\n                        this.parent.localeObj.getConstant('minute');\n                }\n            }\n        }\n        return value;\n    };\n    /**\n     *\n     * @param {object} editArgs .\n     * @returns {void} .\n     * @private\n     */\n    // eslint-disable-next-line\n    DateProcessor.prototype.calculateProjectDatesForValidatedTasks = function (editArgs) {\n        var _this = this;\n        var projectStartDate = typeof this.parent.projectStartDate === 'string' ?\n            new Date(this.parent.projectStartDate) : this.parent.projectStartDate;\n        var projectEndDate = typeof this.parent.projectEndDate === 'string' ?\n            new Date(this.parent.projectEndDate) : this.parent.projectEndDate;\n        var minStartDate = null;\n        var maxEndDate = null;\n        var flatData = (getValue('dataOperation.dataArray', this.parent));\n        if ((!projectStartDate || !projectEndDate) && (flatData && flatData.length === 0)) {\n            minStartDate = this.getDateFromFormat(new Date());\n            maxEndDate = this.getDateFromFormat(new Date(minStartDate.getTime()));\n        }\n        else if (flatData.length > 0) {\n            var sortedStartDate = flatData.slice().sort(function (a, b) {\n                return ((new Date(a[_this.parent.taskFields.startDate])).getTime() -\n                    (new Date(b[_this.parent.taskFields.startDate])).getTime());\n            });\n            var sortedEndDate = flatData.slice().sort(function (a, b) {\n                return ((new Date(b[_this.parent.taskFields.endDate])).getTime() - (new Date(a[_this.parent.taskFields.endDate])).getTime());\n            });\n            minStartDate = sortedStartDate[0][this.parent.taskFields.startDate];\n            maxEndDate = sortedEndDate[sortedEndDate.length - 1][this.parent.taskFields.endDate];\n        }\n        this.parent.cloneProjectStartDate = projectStartDate ? new Date(projectStartDate.getTime()) :\n            typeof minStartDate === 'string' ? new Date(minStartDate) : minStartDate;\n        this.parent.cloneProjectEndDate = projectEndDate ? new Date(projectEndDate.getTime()) :\n            typeof maxEndDate === 'string' ? new Date(maxEndDate) : maxEndDate;\n    };\n    /**\n     *\n     * @param {object} editArgs .\n     * @returns {void} .\n     * @private\n     */\n    DateProcessor.prototype.calculateProjectDates = function (editArgs) {\n        var _this = this;\n        var sDate = typeof this.parent.projectStartDate === 'string' ?\n            new Date(this.parent.projectStartDate) : this.parent.projectStartDate;\n        var eDate = typeof this.parent.projectEndDate === 'string' ?\n            new Date(this.parent.projectEndDate) : this.parent.projectEndDate;\n        var projectStartDate = this.parent.timelineModule.isZooming && this.parent.cloneProjectStartDate\n            ? this.getDateFromFormat(this.parent.cloneProjectStartDate) : this.getDateFromFormat(sDate);\n        var projectEndDate = this.parent.timelineModule.isZooming && this.parent.cloneProjectEndDate\n            ? this.getDateFromFormat(this.parent.cloneProjectEndDate) : this.getDateFromFormat(eDate);\n        var minStartDate = null;\n        var maxEndDate = null;\n        var flatData = this.parent.flatData;\n        var currentViewData = this.parent.currentViewData;\n        var taskRange = [];\n        var addDateToList = function (date) {\n            if (!isNullOrUndefined(date)) {\n                taskRange.push(date);\n            }\n        };\n        var sortDates = function (dates) {\n            if (dates.length > 0) {\n                dates.sort(function (a, b) {\n                    return a.getTime() - b.getTime();\n                });\n                minStartDate = new Date(dates[0].getTime());\n                maxEndDate = dates.length > 1 ? new Date(dates[dates.length - 1].getTime()) : null;\n            }\n        };\n        if (((!projectStartDate || !projectEndDate) && flatData.length > 0) || editArgs || this.parent.timelineModule.isZoomToFit) {\n            var viewData = void 0;\n            if (currentViewData.length > 0 && this.parent.timelineModule.isZoomToFit &&\n                this.parent.treeGrid.filterModule &&\n                this.parent.treeGrid.filterModule.filteredResult.length > 0) {\n                viewData = currentViewData;\n            }\n            else {\n                viewData = flatData;\n            }\n            viewData.forEach(function (data) {\n                taskRange = [];\n                var task = data.ganttProperties;\n                var tempStartDate = _this.getValidStartDate(task);\n                var tempEndDate = _this.getValidEndDate(task);\n                addDateToList(minStartDate);\n                addDateToList(maxEndDate);\n                addDateToList(tempStartDate);\n                addDateToList(tempEndDate);\n                if (_this.parent.renderBaseline && !_this.parent.timelineModule.isZoomToFit) {\n                    addDateToList(task.baselineStartDate);\n                    addDateToList(task.baselineEndDate);\n                }\n                if (task.indicators && task.indicators.length > 0 && !_this.parent.timelineModule.isZoomToFit) {\n                    task.indicators.forEach(function (item) {\n                        addDateToList(_this.getDateFromFormat(item.date));\n                    });\n                }\n                sortDates(taskRange);\n            });\n            taskRange = [];\n            addDateToList(minStartDate);\n            addDateToList(maxEndDate);\n            //update schedule dates as per holiday and strip line collection\n            if (this.parent.eventMarkers.length > 0 && !this.parent.timelineModule.isZoomToFit) {\n                var eventMarkers = this.parent.eventMarkers;\n                // eslint-disable-next-line\n                eventMarkers.forEach(function (marker, index) {\n                    addDateToList(_this.getDateFromFormat(marker.day));\n                });\n            }\n            if (this.parent.totalHolidayDates.length > 0 && !this.parent.timelineModule.isZoomToFit) {\n                var holidays = this.parent.totalHolidayDates;\n                // eslint-disable-next-line\n                holidays.forEach(function (holiday, index) {\n                    addDateToList(new Date(holiday));\n                });\n            }\n            sortDates(taskRange);\n            if (!minStartDate || !maxEndDate) {\n                minStartDate = isNullOrUndefined(minStartDate) ? this.getDateFromFormat(new Date()) : minStartDate;\n                maxEndDate = this.getDateFromFormat(new Date(minStartDate.getTime()));\n                maxEndDate.setDate(maxEndDate.getDate() + 20);\n            }\n        }\n        else if ((!projectStartDate || !projectEndDate) && flatData.length === 0) {\n            minStartDate = this.getDateFromFormat(new Date());\n            maxEndDate = this.getDateFromFormat(new Date(minStartDate.getTime()));\n        }\n        if (!editArgs) {\n            this.prevProjectStartDate = this.parent.cloneProjectStartDate;\n            this.parent.cloneProjectStartDate = minStartDate ? minStartDate : new Date(projectStartDate.getTime());\n            this.parent.cloneProjectEndDate = maxEndDate ? maxEndDate : new Date(projectEndDate.getTime());\n        }\n        else {\n            setValue('minStartDate', minStartDate, editArgs);\n            setValue('maxEndDate', maxEndDate, editArgs);\n        }\n    };\n    /**\n     *\n     * @param {ITaskSegment} segments .\n     * @returns {number} .\n     * @private\n     */\n    DateProcessor.prototype.splitTasksDuration = function (segments) {\n        var duration = 0;\n        for (var i = 0; i < segments.length; i++) {\n            var segment = segments[i];\n            var sDate = segment.startDate;\n            var eDate = segment.endDate;\n            duration += Math.ceil(this.getTimeDifference(sDate, eDate) / (1000 * 60 * 60 * 24));\n        }\n        return duration;\n    };\n    return DateProcessor;\n}());\nexport { DateProcessor };\n"]},"metadata":{},"sourceType":"module"}