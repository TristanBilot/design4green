{"ast":null,"code":"var _jsxFileName = \"/Users/tristanbilot/Desktop/Design4green/design4green/src/Components/SchemaPage.js\";\nimport React, { Component } from 'react';\nimport Chart from \"react-google-charts\";\nimport '../Styles/articles.scss';\nimport csvFile from '../INR.csv';\nimport DataFrame from \"dataframe-js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Papa = require('papaparse'); // const puppeteer = require('puppeteer');\n\n\nclass SchemaPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      csv: null\n    };\n  }\n\n  async componentWillMount() {\n    await this.loadCsv(); // await this.take_screen()\n  }\n\n  async loadCsv() {\n    if (this.state.csv == null) {\n      var binded = this.loadCsvBinded.bind(this);\n      Papa.parse(csvFile, {\n        download: true,\n        complete: binded,\n        encoding: 'UTF-8'\n      });\n    }\n  }\n\n  loadCsvBinded(input) {\n    this.state.csv = input.data;\n    console.log(this.state.csv);\n    this.build_dataframe();\n  }\n\n  build_dataframe() {\n    let columns = this.state.csv[0];\n    let data = this.state.csv.slice(1);\n    const df = new DataFrame(data, columns);\n    let cols = df.filter(row => row.get(\"Etape Cycle de Vie\") === \"Conception\").select(\"JUSTIFICATIONS\");\n    console.log(df);\n  } // async take_screen() {\n  //   const browser = await puppeteer.launch();\n  //   const page = await browser.newPage();\n  //   await page.goto('/');\n  //   await page.screenshot({ path: 'example.png' });\n  //   await browser.close();\n  // } \n  // timeout(delay) {\n  //     return new Promise( res => setTimeout(res, delay) );\n  // }\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-sm-2 col-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-sm-8 col-10\",\n            children: /*#__PURE__*/_jsxDEV(Chart, {\n              width: '100%',\n              height: '400px',\n              chartType: \"Gantt\",\n              loader: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Loading Chart\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 25\n              }, this),\n              data: [[{\n                type: 'string',\n                label: 'Task ID'\n              }, {\n                type: 'string',\n                label: 'Task Name'\n              }, {\n                type: 'date',\n                label: 'Start Date'\n              }, {\n                type: 'date',\n                label: 'End Date'\n              }, {\n                type: 'number',\n                label: 'Duration'\n              }, {\n                type: 'number',\n                label: 'Percent Complete'\n              }, {\n                type: 'string',\n                label: 'Dependencies'\n              }], ['Research', 'Find sources', new Date(2015, 0, 1), new Date(2015, 0, 5), null, 100, null], ['Write', 'Write paper', null, new Date(2015, 0, 9), 3 * 24 * 60 * 60 * 1000, 25, 'Research,Outline'], ['Cite', 'Create bibliography', null, new Date(2015, 0, 7), 1 * 24 * 60 * 60 * 1000, 20, 'Research'], ['Complete', 'Hand in paper', null, new Date(2015, 0, 10), 1 * 24 * 60 * 60 * 1000, 0, 'Cite,Write'], ['Outline', 'Outline paper', null, new Date(2015, 0, 6), 1 * 24 * 60 * 60 * 1000, 100, 'Research']],\n              rootProps: {\n                'data-testid': '1'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-sm-2 col-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default SchemaPage;","map":{"version":3,"sources":["/Users/tristanbilot/Desktop/Design4green/design4green/src/Components/SchemaPage.js"],"names":["React","Component","Chart","csvFile","DataFrame","Papa","require","SchemaPage","constructor","props","state","csv","componentWillMount","loadCsv","binded","loadCsvBinded","bind","parse","download","complete","encoding","input","data","console","log","build_dataframe","columns","slice","df","cols","filter","row","get","select","render","type","label","Date"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAO,yBAAP;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,SAAP,MAAsB,cAAtB;;;AACA,MAAMC,IAAI,GAAGC,OAAO,CAAC,WAAD,CAApB,C,CACA;;;AAGA,MAAMC,UAAN,SAAyBN,SAAzB,CAAmC;AAEjCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,GAAG,EAAE;AADM,KAAb;AAGD;;AAEuB,QAAlBC,kBAAkB,GAAG;AACvB,UAAM,KAAKC,OAAL,EAAN,CADuB,CAEvB;AACH;;AAEY,QAAPA,OAAO,GAAG;AACd,QAAI,KAAKH,KAAL,CAAWC,GAAX,IAAkB,IAAtB,EAA4B;AAC1B,UAAIG,MAAM,GAAG,KAAKC,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAAb;AACAX,MAAAA,IAAI,CAACY,KAAL,CAAWd,OAAX,EAAoB;AAClBe,QAAAA,QAAQ,EAAE,IADQ;AAElBC,QAAAA,QAAQ,EAAEL,MAFQ;AAGlBM,QAAAA,QAAQ,EAAE;AAHQ,OAApB;AAKH;AACA;;AAEDL,EAAAA,aAAa,CAACM,KAAD,EAAQ;AACnB,SAAKX,KAAL,CAAWC,GAAX,GAAiBU,KAAK,CAACC,IAAvB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKd,KAAL,CAAWC,GAAvB;AACA,SAAKc,eAAL;AACD;;AAEDA,EAAAA,eAAe,GAAG;AAChB,QAAIC,OAAO,GAAG,KAAKhB,KAAL,CAAWC,GAAX,CAAe,CAAf,CAAd;AACA,QAAIW,IAAI,GAAG,KAAKZ,KAAL,CAAWC,GAAX,CAAegB,KAAf,CAAqB,CAArB,CAAX;AACA,UAAMC,EAAE,GAAG,IAAIxB,SAAJ,CAAckB,IAAd,EAAoBI,OAApB,CAAX;AACA,QAAIG,IAAI,GAAGD,EAAE,CAACE,MAAH,CAAUC,GAAG,IAAIA,GAAG,CAC5BC,GADyB,CACrB,oBADqB,MACK,YADtB,EAERC,MAFQ,CAED,gBAFC,CAAX;AAGAV,IAAAA,OAAO,CAACC,GAAR,CAAYI,EAAZ;AACD,GAvCgC,CAyCjC;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;;;AAEAM,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,YAAA,SAAS,EAAC,iBAAf;AAAA,mCAEA,QAAC,KAAD;AACI,cAAA,KAAK,EAAE,MADX;AAEI,cAAA,MAAM,EAAE,OAFZ;AAGI,cAAA,SAAS,EAAC,OAHd;AAII,cAAA,MAAM,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJZ;AAKI,cAAA,IAAI,EAAE,CACF,CACA;AAAEC,gBAAAA,IAAI,EAAE,QAAR;AAAkBC,gBAAAA,KAAK,EAAE;AAAzB,eADA,EAEA;AAAED,gBAAAA,IAAI,EAAE,QAAR;AAAkBC,gBAAAA,KAAK,EAAE;AAAzB,eAFA,EAGA;AAAED,gBAAAA,IAAI,EAAE,MAAR;AAAgBC,gBAAAA,KAAK,EAAE;AAAvB,eAHA,EAIA;AAAED,gBAAAA,IAAI,EAAE,MAAR;AAAgBC,gBAAAA,KAAK,EAAE;AAAvB,eAJA,EAKA;AAAED,gBAAAA,IAAI,EAAE,QAAR;AAAkBC,gBAAAA,KAAK,EAAE;AAAzB,eALA,EAMA;AAAED,gBAAAA,IAAI,EAAE,QAAR;AAAkBC,gBAAAA,KAAK,EAAE;AAAzB,eANA,EAOA;AAAED,gBAAAA,IAAI,EAAE,QAAR;AAAkBC,gBAAAA,KAAK,EAAE;AAAzB,eAPA,CADE,EAUF,CACA,UADA,EAEA,cAFA,EAGA,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CAHA,EAIA,IAAIA,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CAJA,EAKA,IALA,EAMA,GANA,EAOA,IAPA,CAVE,EAmBF,CACA,OADA,EAEA,aAFA,EAGA,IAHA,EAIA,IAAIA,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CAJA,EAKA,IAAI,EAAJ,GAAS,EAAT,GAAc,EAAd,GAAmB,IALnB,EAMA,EANA,EAOA,kBAPA,CAnBE,EA4BF,CACA,MADA,EAEA,qBAFA,EAGA,IAHA,EAIA,IAAIA,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CAJA,EAKA,IAAI,EAAJ,GAAS,EAAT,GAAc,EAAd,GAAmB,IALnB,EAMA,EANA,EAOA,UAPA,CA5BE,EAqCF,CACA,UADA,EAEA,eAFA,EAGA,IAHA,EAIA,IAAIA,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB,CAJA,EAKA,IAAI,EAAJ,GAAS,EAAT,GAAc,EAAd,GAAmB,IALnB,EAMA,CANA,EAOA,YAPA,CArCE,EA8CF,CACA,SADA,EAEA,eAFA,EAGA,IAHA,EAIA,IAAIA,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CAJA,EAKA,IAAI,EAAJ,GAAS,EAAT,GAAc,EAAd,GAAmB,IALnB,EAMA,GANA,EAOA,UAPA,CA9CE,CALV;AA6DI,cAAA,SAAS,EAAE;AAAE,+BAAe;AAAjB;AA7Df;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAoEE;AAAK,YAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,kBApEF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AA4ED;;AAnIgC;;AAsInC,eAAe9B,UAAf","sourcesContent":["import React, { Component } from 'react';\nimport Chart from \"react-google-charts\";\nimport '../Styles/articles.scss';\nimport csvFile from '../INR.csv'\nimport DataFrame from \"dataframe-js\";\nconst Papa = require('papaparse');\n// const puppeteer = require('puppeteer');\n\n\nclass SchemaPage extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      csv: null,\n    }\n  }\n\n  async componentWillMount() {\n      await this.loadCsv()\n      // await this.take_screen()\n  }\n\n  async loadCsv() {\n    if (this.state.csv == null)Â {\n      var binded = this.loadCsvBinded.bind(this)\n      Papa.parse(csvFile, {\n        download: true,\n        complete: binded,\n        encoding: 'UTF-8'\n    });\n  }\n  }\n\n  loadCsvBinded(input) {\n    this.state.csv = input.data;\n    console.log(this.state.csv)\n    this.build_dataframe()\n  }\n\n  build_dataframe() {\n    let columns = this.state.csv[0]\n    let data = this.state.csv.slice(1)\n    const df = new DataFrame(data, columns);\n    let cols = df.filter(row => row\n      .get(\"Etape Cycle de Vie\") === \"Conception\")\n      .select(\"JUSTIFICATIONS\");\n    console.log(df)\n  }\n\n  // async take_screen() {\n  //   const browser = await puppeteer.launch();\n  //   const page = await browser.newPage();\n  //   await page.goto('/');\n  //   await page.screenshot({ path: 'example.png' });\n  \n  //   await browser.close();\n  // } \n\n  // timeout(delay) {\n  //     return new Promise( res => setTimeout(res, delay) );\n  // }\n\n  render() {\n    return (\n      <div className=\"header\">\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-sm-2 col-1\"></div>\n            <div className=\"col-sm-8 col-10\">\n                \n            <Chart\n                width={'100%'}\n                height={'400px'}\n                chartType=\"Gantt\"\n                loader={<div>Loading Chart</div>}\n                data={[\n                    [\n                    { type: 'string', label: 'Task ID' },\n                    { type: 'string', label: 'Task Name' },\n                    { type: 'date', label: 'Start Date' },\n                    { type: 'date', label: 'End Date' },\n                    { type: 'number', label: 'Duration' },\n                    { type: 'number', label: 'Percent Complete' },\n                    { type: 'string', label: 'Dependencies' },\n                    ],\n                    [\n                    'Research',\n                    'Find sources',\n                    new Date(2015, 0, 1),\n                    new Date(2015, 0, 5),\n                    null,\n                    100,\n                    null,\n                    ],\n                    [\n                    'Write',\n                    'Write paper',\n                    null,\n                    new Date(2015, 0, 9),\n                    3 * 24 * 60 * 60 * 1000,\n                    25,\n                    'Research,Outline',\n                    ],\n                    [\n                    'Cite',\n                    'Create bibliography',\n                    null,\n                    new Date(2015, 0, 7),\n                    1 * 24 * 60 * 60 * 1000,\n                    20,\n                    'Research',\n                    ],\n                    [\n                    'Complete',\n                    'Hand in paper',\n                    null,\n                    new Date(2015, 0, 10),\n                    1 * 24 * 60 * 60 * 1000,\n                    0,\n                    'Cite,Write',\n                    ],\n                    [\n                    'Outline',\n                    'Outline paper',\n                    null,\n                    new Date(2015, 0, 6),\n                    1 * 24 * 60 * 60 * 1000,\n                    100,\n                    'Research',\n                    ],\n                ]}\n                rootProps={{ 'data-testid': '1' }}\n                />\n            </div>\n            <div className=\"col-sm-2 col-1\"></div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SchemaPage;\n"]},"metadata":{},"sourceType":"module"}