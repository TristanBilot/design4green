{"ast":null,"code":"import { isNullOrUndefined, isUndefined, addClass } from '@syncfusion/ej2-base';\nimport { removeClass, getValue, createElement, extend } from '@syncfusion/ej2-base';\nimport * as cls from '../base/css-constants';\nimport { parentsUntil, formatString, isScheduledTask, getIndex } from '../base/utils';\nimport { Dialog } from '@syncfusion/ej2-popups';\n/**\n * File for handling connector line edit operation in Gantt.\n *\n */\n\nvar ConnectorLineEdit =\n/** @class */\nfunction () {\n  function ConnectorLineEdit(ganttObj) {\n    /**\n     * @private\n     */\n    this.validationPredecessor = null;\n    /** @private */\n\n    this.confirmPredecessorDialog = null;\n    /** @private */\n\n    this.predecessorIndex = null;\n    /** @private */\n\n    this.childRecord = null;\n    this.parent = ganttObj;\n    this.dateValidateModule = this.parent.dateValidationModule;\n    this.parent.on('initPredessorDialog', this.initPredecessorValidationDialog, this);\n  }\n  /**\n   * To update connector line edit element.\n   *\n   * @param {PointerEvent} e .\n   * @returns {void} .\n   * @private\n   */\n\n\n  ConnectorLineEdit.prototype.updateConnectorLineEditElement = function (e) {\n    var element = this.getConnectorLineHoverElement(e.target);\n\n    if (!getValue('editModule.taskbarEditModule.taskBarEditAction', this.parent)) {\n      this.highlightConnectorLineElements(element);\n    }\n  };\n  /**\n   * To get hovered connector line element.\n   *\n   * @param {EventTarget} target .\n   * @returns {void} .\n   * @private\n   */\n\n\n  ConnectorLineEdit.prototype.getConnectorLineHoverElement = function (target) {\n    var isOnLine = parentsUntil(target, cls.connectorLine);\n    var isOnRightArrow = parentsUntil(target, cls.connectorLineRightArrow);\n    var isOnLeftArrow = parentsUntil(target, cls.connectorLineLeftArrow);\n\n    if (isOnLine || isOnRightArrow || isOnLeftArrow) {\n      return parentsUntil(target, cls.connectorLineContainer);\n    } else {\n      return null;\n    }\n  };\n  /**\n   * To highlight connector line while hover.\n   *\n   * @param {Element} element .\n   * @returns {void} .\n   * @private\n   */\n\n\n  ConnectorLineEdit.prototype.highlightConnectorLineElements = function (element) {\n    if (element) {\n      if (element !== this.connectorLineElement) {\n        this.removeHighlight();\n        this.addHighlight(element);\n      }\n    } else {\n      this.removeHighlight();\n    }\n  };\n  /**\n   * To add connector line highlight class.\n   *\n   * @param {Element} element .\n   * @returns {void} .\n   * @private\n   */\n\n\n  ConnectorLineEdit.prototype.addHighlight = function (element) {\n    this.connectorLineElement = element;\n    addClass([element], [cls.connectorLineHoverZIndex]);\n    addClass(element.querySelectorAll('.' + cls.connectorLine), [cls.connectorLineHover]);\n    addClass(element.querySelectorAll('.' + cls.connectorLineRightArrow), [cls.connectorLineRightArrowHover]);\n    addClass(element.querySelectorAll('.' + cls.connectorLineLeftArrow), [cls.connectorLineLeftArrowHover]);\n  };\n  /**\n   * To remove connector line highlight class.\n   *\n   * @returns {void} .\n   * @private\n   */\n\n\n  ConnectorLineEdit.prototype.removeHighlight = function () {\n    if (!isNullOrUndefined(this.connectorLineElement)) {\n      removeClass([this.connectorLineElement], [cls.connectorLineHoverZIndex]);\n      removeClass(this.connectorLineElement.querySelectorAll('.' + cls.connectorLine), [cls.connectorLineHover]);\n      removeClass(this.connectorLineElement.querySelectorAll('.' + cls.connectorLineRightArrow), [cls.connectorLineRightArrowHover]);\n      removeClass(this.connectorLineElement.querySelectorAll('.' + cls.connectorLineLeftArrow), [cls.connectorLineLeftArrowHover]);\n      this.connectorLineElement = null;\n    }\n  };\n  /**\n   * To remove connector line highlight class.\n   *\n   * @param {IGanttData[]} records .\n   * @returns {string} .\n   * @private\n   */\n\n\n  ConnectorLineEdit.prototype.getEditedConnectorLineString = function (records) {\n    var ganttRecord;\n    var predecessorsCollection;\n    var predecessor;\n    var parentGanttRecord;\n    var childGanttRecord;\n    var connectorObj;\n    var idArray = [];\n    var lineArray = [];\n    var editedConnectorLineString = '';\n\n    for (var count = 0; count < records.length; count++) {\n      ganttRecord = records[count];\n      predecessorsCollection = ganttRecord.ganttProperties.predecessor;\n\n      if (predecessorsCollection) {\n        for (var predecessorCount = 0; predecessorCount < predecessorsCollection.length; predecessorCount++) {\n          predecessor = predecessorsCollection[predecessorCount];\n          var from = 'from';\n          var to = 'to';\n          this.parent.connectorLineModule.removeConnectorLineById('parent' + predecessor[from] + 'child' + predecessor[to]);\n          parentGanttRecord = this.parent.connectorLineModule.getRecordByID(predecessor[from]);\n          childGanttRecord = this.parent.connectorLineModule.getRecordByID(predecessor[to]);\n\n          if (parentGanttRecord && parentGanttRecord.expanded === true || childGanttRecord && childGanttRecord.expanded === true) {\n            connectorObj = this.parent.predecessorModule.updateConnectorLineObject(parentGanttRecord, childGanttRecord, predecessor);\n\n            if (!isNullOrUndefined(connectorObj)) {\n              var lineIndex = idArray.indexOf(connectorObj.connectorLineId);\n              var lineString = this.parent.connectorLineModule.getConnectorLineTemplate(connectorObj);\n\n              if (lineIndex !== -1) {\n                lineArray[lineIndex] = lineString;\n              } else {\n                idArray.push(connectorObj.connectorLineId);\n                lineArray.push(lineString);\n              }\n            }\n          }\n        }\n\n        editedConnectorLineString = lineArray.join('');\n      }\n    }\n\n    return editedConnectorLineString;\n  };\n  /**\n   * Tp refresh connector lines of edited records\n   *\n   * @param {IGanttData[]} editedRecord .\n   * @returns {void} .\n   * @private\n   */\n\n\n  ConnectorLineEdit.prototype.refreshEditedRecordConnectorLine = function (editedRecord) {\n    this.parent.connectorLineModule.removePreviousConnectorLines(this.parent.previousRecords);\n    this.parent.connectorLineModule.expandedRecords = this.parent.virtualScrollModule && this.parent.enableVirtualization ? this.parent.updatedRecords : this.parent.getExpandedRecords(this.parent.updatedRecords);\n    var editedConnectorLineString = this.getEditedConnectorLineString(editedRecord);\n    this.parent.connectorLineModule.dependencyViewContainer.innerHTML = this.parent.connectorLineModule.dependencyViewContainer.innerHTML + editedConnectorLineString;\n  };\n\n  ConnectorLineEdit.prototype.idFromPredecessor = function (pre) {\n    var preArray = pre.split(',');\n    var preIdArray = [];\n\n    for (var j = 0; j < preArray.length; j++) {\n      var strArray = [];\n\n      for (var i = 0; i < preArray[j].length; i++) {\n        if (!isNullOrUndefined(preArray[j].charAt(i)) && parseInt(preArray[j].charAt(i), 10).toString() !== 'NaN') {\n          strArray.push(preArray[j].charAt(i));\n        } else {\n          break;\n        }\n      }\n\n      preIdArray.push(strArray.join(''));\n    }\n\n    return preIdArray;\n  };\n\n  ConnectorLineEdit.prototype.predecessorValidation = function (predecessor, record) {\n    var recordId = record.rowUniqueID;\n    var currentId;\n    var currentRecord;\n\n    for (var count = 0; count < predecessor.length; count++) {\n      currentId = predecessor[count];\n      var visitedIdArray = [];\n      var predecessorCollection = predecessor.slice(0);\n      predecessorCollection.splice(count, 1);\n\n      var _loop_1 = function () {\n        var currentIdArray = [];\n\n        if (visitedIdArray.indexOf(currentId) === -1) {\n          //Predecessor id not in records collection\n          if (isNullOrUndefined(this_1.parent.connectorLineModule.getRecordByID(currentId))) {\n            return {\n              value: false\n            };\n          }\n\n          currentRecord = this_1.parent.connectorLineModule.getRecordByID(currentId).ganttProperties;\n\n          if (!isNullOrUndefined(currentRecord.predecessor) && currentRecord.predecessor.length > 0) {\n            currentRecord.predecessor.forEach(function (value) {\n              if (currentRecord.rowUniqueID.toString() !== value.from) {\n                currentIdArray.push(value.from.toString());\n              }\n            });\n          }\n          /* eslint-disable-next-line */\n\n\n          if (recordId.toString() === currentRecord.rowUniqueID.toString() || currentIdArray.indexOf(recordId.toString()) !== -1) {\n            return {\n              value: false\n            };\n          }\n\n          visitedIdArray.push(currentId);\n\n          if (!isNullOrUndefined(currentRecord.predecessor) && currentRecord.predecessor.length > 0) {\n            currentId = currentRecord.predecessor[0].from;\n          } else {\n            return \"break\";\n          }\n        } else {\n          return \"break\";\n        }\n      };\n\n      var this_1 = this;\n\n      while (currentId !== null) {\n        var state_1 = _loop_1();\n\n        if (typeof state_1 === \"object\") return state_1.value;\n        if (state_1 === \"break\") break;\n      }\n    }\n\n    return true;\n  };\n  /**\n   * To validate predecessor relations\n   *\n   * @param {IGanttData} ganttRecord .\n   * @param {string} predecessorString .\n   * @returns {boolean} .\n   * @private\n   */\n\n\n  ConnectorLineEdit.prototype.validatePredecessorRelation = function (ganttRecord, predecessorString) {\n    var flag = true;\n    var recordId = this.parent.viewType === 'ResourceView' ? ganttRecord.ganttProperties.taskId : ganttRecord.ganttProperties.rowUniqueID;\n    var predecessorIdArray;\n    var currentId;\n\n    if (!isNullOrUndefined(predecessorString) && predecessorString.length > 0) {\n      predecessorIdArray = this.idFromPredecessor(predecessorString);\n\n      var _loop_2 = function (count) {\n        //Check edited item has parent item in predecessor collection\n        var checkParent = this_2.checkParentRelation(ganttRecord, predecessorIdArray);\n\n        if (!checkParent) {\n          return {\n            value: false\n          };\n        } // Check if predecessor exist more then one\n\n\n        var tempIdArray = predecessorIdArray.slice(0);\n        var checkArray = [];\n        var countFlag = true;\n        tempIdArray.forEach(function (value) {\n          if (checkArray.indexOf(value) === -1) {\n            checkArray.push(value);\n          } else {\n            countFlag = false;\n          }\n        });\n\n        if (!countFlag) {\n          return {\n            value: false\n          };\n        } //Cyclick check\n\n\n        currentId = predecessorIdArray[count];\n        var visitedIdArray = [];\n        var predecessorCollection = predecessorIdArray.slice(0);\n        predecessorCollection.splice(count, 1);\n\n        var _loop_3 = function () {\n          var currentIdArray = [];\n          var currentIdIndex;\n          var currentRecord;\n\n          if (visitedIdArray.indexOf(currentId) === -1) {\n            //Predecessor id not in records collection\n            if (isNullOrUndefined(this_2.parent.connectorLineModule.getRecordByID(currentId.toString()))) {\n              return {\n                value: false\n              };\n            }\n\n            currentRecord = this_2.parent.connectorLineModule.getRecordByID(currentId.toString()).ganttProperties; //  let currentPredecessor='';\n\n            if (!isNullOrUndefined(currentRecord.predecessor) && currentRecord.predecessor.length > 0) {\n              currentRecord.predecessor.forEach(function (value, index) {\n                if (currentRecord.rowUniqueID.toString() !== value.from) {\n                  currentIdArray.push(value.from.toString());\n                  currentIdIndex = index;\n                }\n              }); //    currentPredecessor=currentRecord.predecessor[0].from\n            }\n\n            if (recordId.toString() === currentRecord.rowUniqueID.toString() || currentIdArray.indexOf(recordId.toString()) !== -1) {\n              return {\n                value: false\n              };\n            }\n\n            visitedIdArray.push(currentId);\n\n            if (!isNullOrUndefined(currentRecord.predecessor) && currentRecord.predecessor.length > 0) {\n              var result = void 0;\n\n              if (currentIdArray.length > 1) {\n                result = this_2.predecessorValidation(currentIdArray, ganttRecord.ganttProperties);\n              } else if (currentIdArray.length === 1) {\n                currentId = currentRecord.predecessor[currentIdIndex].from;\n              }\n\n              if (result === false) {\n                return {\n                  value: false\n                };\n              }\n            } else {\n              return \"break\";\n            }\n          } else {\n            return \"break\";\n          }\n        };\n\n        while (currentId !== null) {\n          var state_3 = _loop_3();\n\n          if (typeof state_3 === \"object\") return state_3;\n          if (state_3 === \"break\") break;\n        }\n      };\n\n      var this_2 = this;\n\n      for (var count = 0; count < predecessorIdArray.length; count++) {\n        var state_2 = _loop_2(count);\n\n        if (typeof state_2 === \"object\") return state_2.value;\n      }\n    }\n\n    return flag;\n  };\n  /**\n   * To add dependency for Task\n   *\n   * @param {IGanttData} ganttRecord .\n   * @param {string} predecessorString .\n   * @returns {void} .\n   * @private\n   */\n\n\n  ConnectorLineEdit.prototype.addPredecessor = function (ganttRecord, predecessorString) {\n    var tempPredecessorString = isNullOrUndefined(ganttRecord.ganttProperties.predecessorsName) || ganttRecord.ganttProperties.predecessorsName === '' ? predecessorString : ganttRecord.ganttProperties.predecessorsName + ',' + predecessorString;\n    this.updatePredecessorHelper(ganttRecord, tempPredecessorString);\n  };\n  /**\n   * To remove dependency from task\n   *\n   * @param {IGanttData} ganttRecord .\n   * @returns {void} .\n   * @private\n   */\n\n\n  ConnectorLineEdit.prototype.removePredecessor = function (ganttRecord) {\n    this.updatePredecessorHelper(ganttRecord, null);\n  };\n  /**\n   * To modify current dependency values of Task\n   *\n   * @param {IGanttData} ganttRecord .\n   * @param {string} predecessorString .\n   * @param {ITaskbarEditedEventArgs} editedArgs .\n   * @returns {boolean} .\n   * @private\n   */\n\n\n  ConnectorLineEdit.prototype.updatePredecessor = function (ganttRecord, predecessorString, editedArgs) {\n    return this.updatePredecessorHelper(ganttRecord, predecessorString, editedArgs);\n  };\n\n  ConnectorLineEdit.prototype.updatePredecessorHelper = function (ganttRecord, predecessorString, editedArgs) {\n    if (isUndefined(predecessorString) || this.validatePredecessorRelation(ganttRecord, predecessorString)) {\n      this.parent.isOnEdit = true;\n      var predecessorCollection = [];\n\n      if (!isNullOrUndefined(predecessorString) && predecessorString !== '') {\n        predecessorCollection = this.parent.predecessorModule.calculatePredecessor(predecessorString, ganttRecord);\n      }\n\n      this.parent.setRecordValue('predecessor', predecessorCollection, ganttRecord.ganttProperties, true);\n      var stringValue = this.parent.predecessorModule.getPredecessorStringValue(ganttRecord);\n      this.parent.setRecordValue('predecessorsName', stringValue, ganttRecord.ganttProperties, true);\n      this.parent.setRecordValue('taskData.' + this.parent.taskFields.dependency, stringValue, ganttRecord);\n      this.parent.setRecordValue(this.parent.taskFields.dependency, stringValue, ganttRecord);\n      var args = {};\n      args.action = editedArgs && editedArgs.action && editedArgs.action === 'CellEditing' ? editedArgs.action : 'DrawConnectorLine';\n      args.data = ganttRecord;\n      this.parent.editModule.initiateUpdateAction(args);\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  ConnectorLineEdit.prototype.checkParentRelation = function (ganttRecord, predecessorIdArray) {\n    var editingData = ganttRecord;\n    var checkParent = true;\n\n    if (editingData && editingData.parentItem) {\n      if (predecessorIdArray.indexOf(editingData.parentItem.taskId.toString()) !== -1) {\n        return false;\n      }\n    }\n\n    var _loop_4 = function (p) {\n      var record = this_3.parent.currentViewData.filter(function (item) {\n        return item && item.ganttProperties.rowUniqueID.toString() === predecessorIdArray[p].toString();\n      });\n\n      if (record[0] && record[0].hasChildRecords) {\n        return {\n          value: false\n        };\n      }\n    };\n\n    var this_3 = this;\n\n    for (var p = 0; p < predecessorIdArray.length; p++) {\n      var state_4 = _loop_4(p);\n\n      if (typeof state_4 === \"object\") return state_4.value;\n    }\n\n    return checkParent;\n  };\n\n  ConnectorLineEdit.prototype.initPredecessorValidationDialog = function () {\n    if (this.parent.taskFields.dependency && this.parent.isInPredecessorValidation) {\n      var dialogElement = createElement('div', {\n        id: this.parent.element.id + '_dialogValidationRule'\n      });\n      this.parent.element.appendChild(dialogElement);\n      this.renderValidationDialog();\n    }\n  };\n  /**\n   * To render validation dialog\n   *\n   * @returns {void} .\n   * @private\n   */\n\n\n  ConnectorLineEdit.prototype.renderValidationDialog = function () {\n    var validationDialog = new Dialog({\n      header: 'Validate Editing',\n      isModal: true,\n      visible: false,\n      width: '50%',\n      showCloseIcon: true,\n      close: this.validationDialogClose.bind(this),\n      content: '',\n      buttons: [{\n        click: this.validationDialogOkButton.bind(this),\n        buttonModel: {\n          content: this.parent.localeObj.getConstant('okText'),\n          isPrimary: true\n        }\n      }, {\n        click: this.validationDialogCancelButton.bind(this),\n        buttonModel: {\n          content: this.parent.localeObj.getConstant('cancel')\n        }\n      }],\n      target: this.parent.element,\n      animationSettings: {\n        effect: 'None'\n      }\n    });\n    document.getElementById(this.parent.element.id + '_dialogValidationRule').innerHTML = '';\n    validationDialog.isStringTemplate = true;\n    validationDialog.appendTo('#' + this.parent.element.id + '_dialogValidationRule');\n    this.parent.validationDialogElement = validationDialog;\n  };\n\n  ConnectorLineEdit.prototype.validationDialogOkButton = function () {\n    var currentArgs = this.parent.currentEditedArgs;\n    currentArgs.validateMode.preserveLinkWithEditing = document.getElementById(this.parent.element.id + '_ValidationAddlineOffset').checked;\n    currentArgs.validateMode.removeLink = document.getElementById(this.parent.element.id + '_ValidationRemoveline').checked;\n    currentArgs.validateMode.respectLink = document.getElementById(this.parent.element.id + '_ValidationCancel').checked;\n    this.applyPredecessorOption();\n    this.parent.validationDialogElement.hide();\n  };\n\n  ConnectorLineEdit.prototype.validationDialogCancelButton = function () {\n    this.parent.currentEditedArgs.validateMode.respectLink = true;\n    this.applyPredecessorOption();\n    this.parent.validationDialogElement.hide();\n  };\n\n  ConnectorLineEdit.prototype.validationDialogClose = function (e) {\n    if (getValue('isInteraction', e)) {\n      this.parent.currentEditedArgs.validateMode.respectLink = true;\n      this.applyPredecessorOption();\n    }\n  };\n  /**\n   * Validate and apply the predecessor option from validation dialog\n   *\n   * @returns {void} .\n   * @private\n   */\n\n\n  ConnectorLineEdit.prototype.applyPredecessorOption = function () {\n    var args = this.parent.currentEditedArgs;\n    var ganttRecord = args.data;\n\n    if (args.validateMode.respectLink) {\n      this.parent.editModule.reUpdatePreviousRecords();\n      this.parent.chartRowsModule.refreshRecords([args.data]);\n    } else if (args.validateMode.removeLink) {\n      this.removePredecessors(ganttRecord, this.validationPredecessor);\n      this.parent.editModule.updateEditedTask(args.editEventArgs);\n    } else if (args.validateMode.preserveLinkWithEditing) {\n      this.calculateOffset(ganttRecord);\n      this.parent.editModule.updateEditedTask(args.editEventArgs);\n    }\n  };\n\n  ConnectorLineEdit.prototype.calculateOffset = function (record) {\n    var prevPredecessor = extend([], record.ganttProperties.predecessor, [], true);\n    var validPredecessor = this.parent.predecessorModule.getValidPredecessor(record);\n\n    for (var i = 0; i < validPredecessor.length; i++) {\n      var predecessor = validPredecessor[i];\n      var parentTask = this.parent.connectorLineModule.getRecordByID(predecessor.from);\n      var offset = void 0;\n\n      if (isScheduledTask(parentTask.ganttProperties) && isScheduledTask(record.ganttProperties)) {\n        var tempStartDate = void 0;\n        var tempEndDate = void 0;\n        var tempDuration = void 0;\n        var isNegativeOffset = void 0;\n\n        switch (predecessor.type) {\n          case 'FS':\n            tempStartDate = new Date(parentTask.ganttProperties.endDate.getTime());\n            tempEndDate = new Date(record.ganttProperties.startDate.getTime());\n            break;\n\n          case 'SS':\n            tempStartDate = new Date(parentTask.ganttProperties.startDate.getTime());\n            tempEndDate = new Date(record.ganttProperties.startDate.getTime());\n            break;\n\n          case 'SF':\n            tempStartDate = new Date(parentTask.ganttProperties.startDate.getTime());\n            tempEndDate = new Date(record.ganttProperties.endDate.getTime());\n            break;\n\n          case 'FF':\n            tempStartDate = new Date(parentTask.ganttProperties.endDate.getTime());\n            tempEndDate = new Date(record.ganttProperties.endDate.getTime());\n            break;\n        }\n\n        if (tempStartDate.getTime() < tempEndDate.getTime()) {\n          tempStartDate = this.dateValidateModule.checkStartDate(tempStartDate);\n          tempEndDate = this.dateValidateModule.checkEndDate(tempEndDate, null);\n          isNegativeOffset = false;\n        } else {\n          var tempDate = new Date(tempStartDate.getTime());\n          tempStartDate = this.dateValidateModule.checkStartDate(tempEndDate);\n          tempEndDate = this.dateValidateModule.checkEndDate(tempDate, null);\n          isNegativeOffset = true;\n        }\n\n        if (tempStartDate.getTime() < tempEndDate.getTime()) {\n          tempDuration = this.dateValidateModule.getDuration(tempStartDate, tempEndDate, predecessor.offsetUnit, true, false);\n          offset = isNegativeOffset ? tempDuration * -1 : tempDuration;\n        } else {\n          offset = 0;\n        }\n      } else {\n        offset = 0;\n      }\n\n      var preIndex = getIndex(predecessor, 'from', prevPredecessor, 'to');\n      prevPredecessor[preIndex].offset = offset; // Update predecessor in predecessor task\n\n      var parentPredecessors = extend([], parentTask.ganttProperties.predecessor, [], true);\n      var parentPreIndex = getIndex(predecessor, 'from', parentPredecessors, 'to');\n      parentPredecessors[parentPreIndex].offset = offset;\n      this.parent.setRecordValue('predecessor', parentPredecessors, parentTask.ganttProperties, true);\n    }\n\n    this.parent.setRecordValue('predecessor', prevPredecessor, record.ganttProperties, true);\n    var predecessorString = this.parent.predecessorModule.getPredecessorStringValue(record);\n    this.parent.setRecordValue('taskData.' + this.parent.taskFields.dependency, predecessorString, record);\n    this.parent.setRecordValue(this.parent.taskFields.dependency, predecessorString, record);\n    this.parent.setRecordValue('predecessorsName', predecessorString, record.ganttProperties, true);\n  };\n  /**\n   * Update predecessor value with user selection option in predecessor validation dialog\n   *\n   * @param {IGanttData} ganttRecord .\n   * @param {IPredecessor[]} predecessor .\n   * @returns {void} .\n   */\n\n\n  ConnectorLineEdit.prototype.removePredecessors = function (ganttRecord, predecessor) {\n    var prevPredecessor = extend([], [], ganttRecord.ganttProperties.predecessor, true);\n    var preLength = predecessor.length;\n\n    for (var i = 0; i < preLength; i++) {\n      var parentGanttRecord = this.parent.connectorLineModule.getRecordByID(predecessor[i].from);\n      var parentPredecessor = extend([], [], parentGanttRecord.ganttProperties.predecessor, true);\n      var index = getIndex(predecessor[i], 'from', prevPredecessor, 'to');\n      prevPredecessor.splice(index, 1);\n      var parentIndex = getIndex(predecessor[i], 'from', parentPredecessor, 'to');\n      parentPredecessor.splice(parentIndex, 1);\n      this.parent.setRecordValue('predecessor', parentPredecessor, parentGanttRecord.ganttProperties, true);\n    }\n\n    if (prevPredecessor.length !== ganttRecord.ganttProperties.predecessor.length) {\n      this.parent.setRecordValue('predecessor', prevPredecessor, ganttRecord.ganttProperties, true);\n      var predecessorString = this.parent.predecessorModule.getPredecessorStringValue(ganttRecord);\n      this.parent.setRecordValue('predecessorsName', predecessorString, ganttRecord.ganttProperties, true);\n      this.parent.setRecordValue('taskData.' + this.parent.taskFields.dependency, predecessorString, ganttRecord);\n      this.parent.setRecordValue(this.parent.taskFields.dependency, predecessorString, ganttRecord);\n    }\n  };\n  /**\n   * To open predecessor validation dialog\n   *\n   * @param {object} args .\n   * @returns {void} .\n   * @private\n   */\n\n\n  ConnectorLineEdit.prototype.openValidationDialog = function (args) {\n    var contentTemplate = this.validationDialogTemplate(args);\n    this.parent.validationDialogElement.setProperties({\n      content: contentTemplate\n    });\n    this.parent.validationDialogElement.show();\n  };\n  /**\n   * Predecessor link validation dialog template\n   *\n   * @param {object} args .\n   * @returns {HTMLElement} .\n   * @private\n   */\n\n\n  ConnectorLineEdit.prototype.validationDialogTemplate = function (args) {\n    var ganttId = this.parent.element.id;\n    var contentdiv = createElement('div', {\n      className: 'e-ValidationContent'\n    });\n    var taskData = getValue('task', args);\n    var parenttaskData = getValue('parentTask', args);\n    var violationType = getValue('violationType', args);\n    var recordName = taskData.ganttProperties.taskName;\n    var recordNewStartDate = this.parent.getFormatedDate(taskData.ganttProperties.startDate, 'MM/dd/yyyy');\n    var parentName = parenttaskData.ganttProperties.taskName;\n    var recordArgs = [recordName, parentName];\n    var topContentText;\n\n    if (violationType === 'taskBeforePredecessor_FS') {\n      topContentText = this.parent.localeObj.getConstant('taskBeforePredecessor_FS');\n    } else if (violationType === 'taskAfterPredecessor_FS') {\n      topContentText = this.parent.localeObj.getConstant('taskAfterPredecessor_FS');\n    } else if (violationType === 'taskBeforePredecessor_SS') {\n      topContentText = this.parent.localeObj.getConstant('taskBeforePredecessor_SS');\n    } else if (violationType === 'taskAfterPredecessor_SS') {\n      topContentText = this.parent.localeObj.getConstant('taskAfterPredecessor_SS');\n    } else if (violationType === 'taskBeforePredecessor_FF') {\n      topContentText = this.parent.localeObj.getConstant('taskBeforePredecessor_FF');\n    } else if (violationType === 'taskAfterPredecessor_FF') {\n      topContentText = this.parent.localeObj.getConstant('taskAfterPredecessor_FF');\n    } else if (violationType === 'taskBeforePredecessor_SF') {\n      topContentText = this.parent.localeObj.getConstant('taskBeforePredecessor_SF');\n    } else if (violationType === 'taskAfterPredecessor_SF') {\n      topContentText = this.parent.localeObj.getConstant('taskAfterPredecessor_SF');\n    }\n\n    topContentText = formatString(topContentText, recordArgs);\n    var topContent = '<div id=\"' + ganttId + '_ValidationText\">' + topContentText + '<div>';\n    var innerTable = '<table>' + '<tr><td><input type=\"radio\" id=\"' + ganttId + '_ValidationCancel\" name=\"ValidationRule\" checked/><label for=\"' + ganttId + '_ValidationCancel\" id= \"' + ganttId + '_cancelLink\">Cancel, keep the existing link</label></td></tr>' + '<tr><td><input type=\"radio\" id=\"' + ganttId + '_ValidationRemoveline\" name=\"ValidationRule\"/><label for=\"' + ganttId + '_ValidationRemoveline\" id=\"' + ganttId + '_removeLink\">Remove the link and move <b>' + recordName + '</b> to start on <b>' + recordNewStartDate + '</b>.</label></td></tr>' + '<tr><td><input type=\"radio\" id=\"' + ganttId + '_ValidationAddlineOffset\" name=\"ValidationRule\"/><label for=\"' + ganttId + '_ValidationAddlineOffset\" id=\"' + ganttId + '_preserveLink\">Move the <b>' + recordName + '</b> to start on <b>' + recordNewStartDate + '</b> and keep the link.</label></td></tr></table>';\n    contentdiv.innerHTML = topContent + innerTable;\n    return contentdiv;\n  };\n  /**\n   * To validate the types while editing the taskbar\n   *\n   * @param {IGanttData} ganttRecord .\n   * @returns {boolean} .\n   * @private\n   */\n\n\n  ConnectorLineEdit.prototype.validateTypes = function (ganttRecord) {\n    var predecessor = this.parent.predecessorModule.getValidPredecessor(ganttRecord);\n    var parentGanttRecord;\n    this.validationPredecessor = [];\n    var violatedParent;\n    var violateType;\n    var startDate = this.parent.predecessorModule.getPredecessorDate(ganttRecord, predecessor);\n    var ganttTaskData = ganttRecord.ganttProperties;\n    var endDate = this.parent.allowUnscheduledTasks && isNullOrUndefined(startDate) ? ganttTaskData.endDate : this.dateValidateModule.getEndDate(startDate, ganttTaskData.duration, ganttTaskData.durationUnit, ganttTaskData, false);\n\n    for (var i = 0; i < predecessor.length; i++) {\n      parentGanttRecord = this.parent.connectorLineModule.getRecordByID(predecessor[i].from);\n      var violationType = null;\n\n      if (predecessor[i].type === 'FS') {\n        if (ganttTaskData.startDate < startDate) {\n          this.validationPredecessor.push(predecessor[i]);\n          violationType = 'taskBeforePredecessor_FS';\n        } else if (ganttTaskData.startDate > startDate) {\n          this.validationPredecessor.push(predecessor[i]);\n          violationType = 'taskAfterPredecessor_FS';\n        }\n      } else if (predecessor[i].type === 'SS') {\n        if (ganttTaskData.startDate < startDate) {\n          this.validationPredecessor.push(predecessor[i]);\n          violationType = 'taskBeforePredecessor_SS';\n        } else if (ganttTaskData.startDate > startDate) {\n          this.validationPredecessor.push(predecessor[i]);\n          violationType = 'taskAfterPredecessor_SS';\n        }\n      } else if (predecessor[i].type === 'FF') {\n        if (endDate <= parentGanttRecord.ganttProperties.endDate) {\n          this.validationPredecessor.push(predecessor[i]);\n          violationType = 'taskBeforePredecessor_FF';\n        } else if (endDate > parentGanttRecord.ganttProperties.endDate) {\n          this.validationPredecessor.push(predecessor[i]);\n          violationType = 'taskAfterPredecessor_FF';\n        }\n      } else if (predecessor[i].type === 'SF') {\n        if (endDate < parentGanttRecord.ganttProperties.startDate) {\n          this.validationPredecessor.push(predecessor[i]);\n          violationType = 'taskBeforePredecessor_SF';\n        } else if (endDate >= parentGanttRecord.ganttProperties.startDate) {\n          this.validationPredecessor.push(predecessor[i]);\n          violationType = 'taskAfterPredecessor_SF';\n        }\n      }\n\n      if (!isNullOrUndefined(violationType) && isNullOrUndefined(violateType)) {\n        violatedParent = parentGanttRecord;\n        violateType = violationType;\n      }\n    }\n\n    var validateArgs = {\n      parentTask: violatedParent,\n      task: ganttRecord,\n      violationType: violateType\n    };\n    return validateArgs;\n  };\n  /**\n   * Method to remove and update new predecessor collection in successor record\n   *\n   * @param {IGanttData} data .\n   * @returns {void} .\n   * @private\n   */\n\n\n  ConnectorLineEdit.prototype.addRemovePredecessor = function (data) {\n    var prevData = this.parent.previousRecords[data.uniqueID];\n    var newPredecessor = data.ganttProperties.predecessor.slice(); // eslint-disable-next-line\n\n    if (prevData && prevData.ganttProperties && prevData.ganttProperties.hasOwnProperty('predecessor')) {\n      var prevPredecessor = prevData.ganttProperties.predecessor;\n\n      if (!isNullOrUndefined(prevPredecessor)) {\n        for (var p = 0; p < prevPredecessor.length; p++) {\n          var parentGanttRecord = this.parent.connectorLineModule.getRecordByID(prevPredecessor[p].from);\n\n          if (parentGanttRecord === data) {\n            data.ganttProperties.predecessor.push(prevPredecessor[p]);\n          } else {\n            var parentPredecessor = extend([], [], parentGanttRecord.ganttProperties.predecessor, true);\n            var parentIndex = getIndex(prevPredecessor[p], 'from', parentPredecessor, 'to');\n\n            if (parentIndex !== -1) {\n              parentPredecessor.splice(parentIndex, 1);\n              this.parent.setRecordValue('predecessor', parentPredecessor, parentGanttRecord.ganttProperties, true);\n            }\n          }\n        }\n      }\n\n      if (!isNullOrUndefined(newPredecessor)) {\n        for (var n = 0; n < newPredecessor.length; n++) {\n          var parentGanttRecord = this.parent.connectorLineModule.getRecordByID(newPredecessor[n].from);\n          var parentPredecessor = extend([], [], parentGanttRecord.ganttProperties.predecessor, true);\n          parentPredecessor.push(newPredecessor[n]);\n          this.parent.setRecordValue('predecessor', parentPredecessor, parentGanttRecord.ganttProperties, true);\n        }\n      }\n    }\n  };\n  /**\n   * Method to remove a predecessor from a record.\n   *\n   * @param {IGanttData} childRecord .\n   * @param {number} index .\n   * @returns {void} .\n   * @private\n   */\n\n\n  ConnectorLineEdit.prototype.removePredecessorByIndex = function (childRecord, index) {\n    var childPredecessor = childRecord.ganttProperties.predecessor;\n    var predecessor = childPredecessor.splice(index, 1);\n    var parentRecord = this.parent.connectorLineModule.getRecordByID(predecessor[0].from);\n    var parentPredecessor = parentRecord.ganttProperties.predecessor;\n    var parentIndex = getIndex(predecessor[0], 'from', parentPredecessor, 'to');\n    parentPredecessor.splice(parentIndex, 1);\n    var predecessorString = this.parent.predecessorModule.getPredecessorStringValue(childRecord);\n    childPredecessor.push(predecessor[0]);\n    this.parent.connectorLineEditModule.updatePredecessor(childRecord, predecessorString);\n  };\n  /**\n   * To render predecessor delete confirmation dialog\n   *\n   * @returns {void} .\n   * @private\n   */\n\n\n  ConnectorLineEdit.prototype.renderPredecessorDeleteConfirmDialog = function () {\n    this.confirmPredecessorDialog = new Dialog({\n      width: '320px',\n      isModal: true,\n      content: this.parent.localeObj.getConstant('confirmPredecessorDelete'),\n      buttons: [{\n        click: this.confirmOkDeleteButton.bind(this),\n        buttonModel: {\n          content: this.parent.localeObj.getConstant('okText'),\n          isPrimary: true\n        }\n      }, {\n        click: this.confirmCloseDialog.bind(this),\n        buttonModel: {\n          content: this.parent.localeObj.getConstant('cancel')\n        }\n      }],\n      target: this.parent.element,\n      animationSettings: {\n        effect: 'None'\n      }\n    });\n    var confirmDialog = createElement('div', {\n      id: this.parent.element.id + '_deletePredecessorConfirmDialog'\n    });\n    this.parent.element.appendChild(confirmDialog);\n    this.confirmPredecessorDialog.isStringTemplate = true;\n    this.confirmPredecessorDialog.appendTo(confirmDialog);\n  };\n\n  ConnectorLineEdit.prototype.confirmCloseDialog = function () {\n    this.confirmPredecessorDialog.destroy();\n  };\n\n  ConnectorLineEdit.prototype.confirmOkDeleteButton = function () {\n    this.removePredecessorByIndex(this.childRecord, this.predecessorIndex);\n    this.confirmPredecessorDialog.destroy();\n  };\n\n  return ConnectorLineEdit;\n}();\n\nexport { ConnectorLineEdit };","map":{"version":3,"sources":["/Users/tristanbilot/Desktop/Design4green/design4green/node_modules/@syncfusion/ej2-gantt/src/gantt/actions/connector-line-edit.js"],"names":["isNullOrUndefined","isUndefined","addClass","removeClass","getValue","createElement","extend","cls","parentsUntil","formatString","isScheduledTask","getIndex","Dialog","ConnectorLineEdit","ganttObj","validationPredecessor","confirmPredecessorDialog","predecessorIndex","childRecord","parent","dateValidateModule","dateValidationModule","on","initPredecessorValidationDialog","prototype","updateConnectorLineEditElement","e","element","getConnectorLineHoverElement","target","highlightConnectorLineElements","isOnLine","connectorLine","isOnRightArrow","connectorLineRightArrow","isOnLeftArrow","connectorLineLeftArrow","connectorLineContainer","connectorLineElement","removeHighlight","addHighlight","connectorLineHoverZIndex","querySelectorAll","connectorLineHover","connectorLineRightArrowHover","connectorLineLeftArrowHover","getEditedConnectorLineString","records","ganttRecord","predecessorsCollection","predecessor","parentGanttRecord","childGanttRecord","connectorObj","idArray","lineArray","editedConnectorLineString","count","length","ganttProperties","predecessorCount","from","to","connectorLineModule","removeConnectorLineById","getRecordByID","expanded","predecessorModule","updateConnectorLineObject","lineIndex","indexOf","connectorLineId","lineString","getConnectorLineTemplate","push","join","refreshEditedRecordConnectorLine","editedRecord","removePreviousConnectorLines","previousRecords","expandedRecords","virtualScrollModule","enableVirtualization","updatedRecords","getExpandedRecords","dependencyViewContainer","innerHTML","idFromPredecessor","pre","preArray","split","preIdArray","j","strArray","i","charAt","parseInt","toString","predecessorValidation","record","recordId","rowUniqueID","currentId","currentRecord","visitedIdArray","predecessorCollection","slice","splice","_loop_1","currentIdArray","this_1","value","forEach","state_1","validatePredecessorRelation","predecessorString","flag","viewType","taskId","predecessorIdArray","_loop_2","checkParent","this_2","checkParentRelation","tempIdArray","checkArray","countFlag","_loop_3","currentIdIndex","index","result","state_3","state_2","addPredecessor","tempPredecessorString","predecessorsName","updatePredecessorHelper","removePredecessor","updatePredecessor","editedArgs","isOnEdit","calculatePredecessor","setRecordValue","stringValue","getPredecessorStringValue","taskFields","dependency","args","action","data","editModule","initiateUpdateAction","editingData","parentItem","_loop_4","p","this_3","currentViewData","filter","item","hasChildRecords","state_4","isInPredecessorValidation","dialogElement","id","appendChild","renderValidationDialog","validationDialog","header","isModal","visible","width","showCloseIcon","close","validationDialogClose","bind","content","buttons","click","validationDialogOkButton","buttonModel","localeObj","getConstant","isPrimary","validationDialogCancelButton","animationSettings","effect","document","getElementById","isStringTemplate","appendTo","validationDialogElement","currentArgs","currentEditedArgs","validateMode","preserveLinkWithEditing","checked","removeLink","respectLink","applyPredecessorOption","hide","reUpdatePreviousRecords","chartRowsModule","refreshRecords","removePredecessors","updateEditedTask","editEventArgs","calculateOffset","prevPredecessor","validPredecessor","getValidPredecessor","parentTask","offset","tempStartDate","tempEndDate","tempDuration","isNegativeOffset","type","Date","endDate","getTime","startDate","checkStartDate","checkEndDate","tempDate","getDuration","offsetUnit","preIndex","parentPredecessors","parentPreIndex","preLength","parentPredecessor","parentIndex","openValidationDialog","contentTemplate","validationDialogTemplate","setProperties","show","ganttId","contentdiv","className","taskData","parenttaskData","violationType","recordName","taskName","recordNewStartDate","getFormatedDate","parentName","recordArgs","topContentText","topContent","innerTable","validateTypes","violatedParent","violateType","getPredecessorDate","ganttTaskData","allowUnscheduledTasks","getEndDate","duration","durationUnit","validateArgs","task","addRemovePredecessor","prevData","uniqueID","newPredecessor","hasOwnProperty","n","removePredecessorByIndex","childPredecessor","parentRecord","connectorLineEditModule","renderPredecessorDeleteConfirmDialog","confirmOkDeleteButton","confirmCloseDialog","confirmDialog","destroy"],"mappings":"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","sourcesContent":["import { isNullOrUndefined, isUndefined, addClass } from '@syncfusion/ej2-base';\nimport { removeClass, getValue, createElement, extend } from '@syncfusion/ej2-base';\nimport * as cls from '../base/css-constants';\nimport { parentsUntil, formatString, isScheduledTask, getIndex } from '../base/utils';\nimport { Dialog } from '@syncfusion/ej2-popups';\n/**\n * File for handling connector line edit operation in Gantt.\n *\n */\nvar ConnectorLineEdit = /** @class */ (function () {\n    function ConnectorLineEdit(ganttObj) {\n        /**\n         * @private\n         */\n        this.validationPredecessor = null;\n        /** @private */\n        this.confirmPredecessorDialog = null;\n        /** @private */\n        this.predecessorIndex = null;\n        /** @private */\n        this.childRecord = null;\n        this.parent = ganttObj;\n        this.dateValidateModule = this.parent.dateValidationModule;\n        this.parent.on('initPredessorDialog', this.initPredecessorValidationDialog, this);\n    }\n    /**\n     * To update connector line edit element.\n     *\n     * @param {PointerEvent} e .\n     * @returns {void} .\n     * @private\n     */\n    ConnectorLineEdit.prototype.updateConnectorLineEditElement = function (e) {\n        var element = this.getConnectorLineHoverElement(e.target);\n        if (!getValue('editModule.taskbarEditModule.taskBarEditAction', this.parent)) {\n            this.highlightConnectorLineElements(element);\n        }\n    };\n    /**\n     * To get hovered connector line element.\n     *\n     * @param {EventTarget} target .\n     * @returns {void} .\n     * @private\n     */\n    ConnectorLineEdit.prototype.getConnectorLineHoverElement = function (target) {\n        var isOnLine = parentsUntil(target, cls.connectorLine);\n        var isOnRightArrow = parentsUntil(target, cls.connectorLineRightArrow);\n        var isOnLeftArrow = parentsUntil(target, cls.connectorLineLeftArrow);\n        if (isOnLine || isOnRightArrow || isOnLeftArrow) {\n            return parentsUntil(target, cls.connectorLineContainer);\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * To highlight connector line while hover.\n     *\n     * @param {Element} element .\n     * @returns {void} .\n     * @private\n     */\n    ConnectorLineEdit.prototype.highlightConnectorLineElements = function (element) {\n        if (element) {\n            if (element !== this.connectorLineElement) {\n                this.removeHighlight();\n                this.addHighlight(element);\n            }\n        }\n        else {\n            this.removeHighlight();\n        }\n    };\n    /**\n     * To add connector line highlight class.\n     *\n     * @param {Element} element .\n     * @returns {void} .\n     * @private\n     */\n    ConnectorLineEdit.prototype.addHighlight = function (element) {\n        this.connectorLineElement = element;\n        addClass([element], [cls.connectorLineHoverZIndex]);\n        addClass(element.querySelectorAll('.' + cls.connectorLine), [cls.connectorLineHover]);\n        addClass(element.querySelectorAll('.' + cls.connectorLineRightArrow), [cls.connectorLineRightArrowHover]);\n        addClass(element.querySelectorAll('.' + cls.connectorLineLeftArrow), [cls.connectorLineLeftArrowHover]);\n    };\n    /**\n     * To remove connector line highlight class.\n     *\n     * @returns {void} .\n     * @private\n     */\n    ConnectorLineEdit.prototype.removeHighlight = function () {\n        if (!isNullOrUndefined(this.connectorLineElement)) {\n            removeClass([this.connectorLineElement], [cls.connectorLineHoverZIndex]);\n            removeClass(this.connectorLineElement.querySelectorAll('.' + cls.connectorLine), [cls.connectorLineHover]);\n            removeClass(this.connectorLineElement.querySelectorAll('.' + cls.connectorLineRightArrow), [cls.connectorLineRightArrowHover]);\n            removeClass(this.connectorLineElement.querySelectorAll('.' + cls.connectorLineLeftArrow), [cls.connectorLineLeftArrowHover]);\n            this.connectorLineElement = null;\n        }\n    };\n    /**\n     * To remove connector line highlight class.\n     *\n     * @param {IGanttData[]} records .\n     * @returns {string} .\n     * @private\n     */\n    ConnectorLineEdit.prototype.getEditedConnectorLineString = function (records) {\n        var ganttRecord;\n        var predecessorsCollection;\n        var predecessor;\n        var parentGanttRecord;\n        var childGanttRecord;\n        var connectorObj;\n        var idArray = [];\n        var lineArray = [];\n        var editedConnectorLineString = '';\n        for (var count = 0; count < records.length; count++) {\n            ganttRecord = records[count];\n            predecessorsCollection = ganttRecord.ganttProperties.predecessor;\n            if (predecessorsCollection) {\n                for (var predecessorCount = 0; predecessorCount < predecessorsCollection.length; predecessorCount++) {\n                    predecessor = predecessorsCollection[predecessorCount];\n                    var from = 'from';\n                    var to = 'to';\n                    this.parent.connectorLineModule.removeConnectorLineById('parent' + predecessor[from] + 'child' + predecessor[to]);\n                    parentGanttRecord = this.parent.connectorLineModule.getRecordByID(predecessor[from]);\n                    childGanttRecord = this.parent.connectorLineModule.getRecordByID(predecessor[to]);\n                    if ((parentGanttRecord && parentGanttRecord.expanded === true) ||\n                        (childGanttRecord && childGanttRecord.expanded === true)) {\n                        connectorObj =\n                            this.parent.predecessorModule.updateConnectorLineObject(parentGanttRecord, childGanttRecord, predecessor);\n                        if (!isNullOrUndefined(connectorObj)) {\n                            var lineIndex = idArray.indexOf(connectorObj.connectorLineId);\n                            var lineString = this.parent.connectorLineModule.getConnectorLineTemplate(connectorObj);\n                            if (lineIndex !== -1) {\n                                lineArray[lineIndex] = lineString;\n                            }\n                            else {\n                                idArray.push(connectorObj.connectorLineId);\n                                lineArray.push(lineString);\n                            }\n                        }\n                    }\n                }\n                editedConnectorLineString = lineArray.join('');\n            }\n        }\n        return editedConnectorLineString;\n    };\n    /**\n     * Tp refresh connector lines of edited records\n     *\n     * @param {IGanttData[]} editedRecord .\n     * @returns {void} .\n     * @private\n     */\n    ConnectorLineEdit.prototype.refreshEditedRecordConnectorLine = function (editedRecord) {\n        this.parent.connectorLineModule.removePreviousConnectorLines(this.parent.previousRecords);\n        this.parent.connectorLineModule.expandedRecords = this.parent.virtualScrollModule && this.parent.enableVirtualization ?\n            this.parent.updatedRecords : this.parent.getExpandedRecords(this.parent.updatedRecords);\n        var editedConnectorLineString = this.getEditedConnectorLineString(editedRecord);\n        this.parent.connectorLineModule.dependencyViewContainer.innerHTML =\n            this.parent.connectorLineModule.dependencyViewContainer.innerHTML + editedConnectorLineString;\n    };\n    ConnectorLineEdit.prototype.idFromPredecessor = function (pre) {\n        var preArray = pre.split(',');\n        var preIdArray = [];\n        for (var j = 0; j < preArray.length; j++) {\n            var strArray = [];\n            for (var i = 0; i < preArray[j].length; i++) {\n                if (!isNullOrUndefined(preArray[j].charAt(i)) && parseInt(preArray[j].charAt(i), 10).toString() !== 'NaN') {\n                    strArray.push(preArray[j].charAt(i));\n                }\n                else {\n                    break;\n                }\n            }\n            preIdArray.push((strArray.join('')));\n        }\n        return preIdArray;\n    };\n    ConnectorLineEdit.prototype.predecessorValidation = function (predecessor, record) {\n        var recordId = record.rowUniqueID;\n        var currentId;\n        var currentRecord;\n        for (var count = 0; count < predecessor.length; count++) {\n            currentId = predecessor[count];\n            var visitedIdArray = [];\n            var predecessorCollection = predecessor.slice(0);\n            predecessorCollection.splice(count, 1);\n            var _loop_1 = function () {\n                var currentIdArray = [];\n                if (visitedIdArray.indexOf(currentId) === -1) {\n                    //Predecessor id not in records collection\n                    if (isNullOrUndefined(this_1.parent.connectorLineModule.getRecordByID(currentId))) {\n                        return { value: false };\n                    }\n                    currentRecord = this_1.parent.connectorLineModule.getRecordByID(currentId).ganttProperties;\n                    if (!isNullOrUndefined(currentRecord.predecessor) && currentRecord.predecessor.length > 0) {\n                        currentRecord.predecessor.forEach(function (value) {\n                            if (currentRecord.rowUniqueID.toString() !== value.from) {\n                                currentIdArray.push(value.from.toString());\n                            }\n                        });\n                    }\n                    /* eslint-disable-next-line */\n                    if (recordId.toString() === currentRecord.rowUniqueID.toString() || currentIdArray.indexOf(recordId.toString()) !== -1) {\n                        return { value: false };\n                    }\n                    visitedIdArray.push(currentId);\n                    if (!isNullOrUndefined(currentRecord.predecessor) && currentRecord.predecessor.length > 0) {\n                        currentId = currentRecord.predecessor[0].from;\n                    }\n                    else {\n                        return \"break\";\n                    }\n                }\n                else {\n                    return \"break\";\n                }\n            };\n            var this_1 = this;\n            while (currentId !== null) {\n                var state_1 = _loop_1();\n                if (typeof state_1 === \"object\")\n                    return state_1.value;\n                if (state_1 === \"break\")\n                    break;\n            }\n        }\n        return true;\n    };\n    /**\n     * To validate predecessor relations\n     *\n     * @param {IGanttData} ganttRecord .\n     * @param {string} predecessorString .\n     * @returns {boolean} .\n     * @private\n     */\n    ConnectorLineEdit.prototype.validatePredecessorRelation = function (ganttRecord, predecessorString) {\n        var flag = true;\n        var recordId = this.parent.viewType === 'ResourceView' ? ganttRecord.ganttProperties.taskId\n            : ganttRecord.ganttProperties.rowUniqueID;\n        var predecessorIdArray;\n        var currentId;\n        if (!isNullOrUndefined(predecessorString) && predecessorString.length > 0) {\n            predecessorIdArray = this.idFromPredecessor(predecessorString);\n            var _loop_2 = function (count) {\n                //Check edited item has parent item in predecessor collection\n                var checkParent = this_2.checkParentRelation(ganttRecord, predecessorIdArray);\n                if (!checkParent) {\n                    return { value: false };\n                }\n                // Check if predecessor exist more then one\n                var tempIdArray = predecessorIdArray.slice(0);\n                var checkArray = [];\n                var countFlag = true;\n                tempIdArray.forEach(function (value) {\n                    if (checkArray.indexOf(value) === -1) {\n                        checkArray.push(value);\n                    }\n                    else {\n                        countFlag = false;\n                    }\n                });\n                if (!countFlag) {\n                    return { value: false };\n                }\n                //Cyclick check\n                currentId = predecessorIdArray[count];\n                var visitedIdArray = [];\n                var predecessorCollection = predecessorIdArray.slice(0);\n                predecessorCollection.splice(count, 1);\n                var _loop_3 = function () {\n                    var currentIdArray = [];\n                    var currentIdIndex;\n                    var currentRecord;\n                    if (visitedIdArray.indexOf(currentId) === -1) {\n                        //Predecessor id not in records collection\n                        if (isNullOrUndefined(this_2.parent.connectorLineModule.getRecordByID(currentId.toString()))) {\n                            return { value: false };\n                        }\n                        currentRecord = this_2.parent.connectorLineModule.getRecordByID(currentId.toString()).ganttProperties;\n                        //  let currentPredecessor='';\n                        if (!isNullOrUndefined(currentRecord.predecessor) && currentRecord.predecessor.length > 0) {\n                            currentRecord.predecessor.forEach(function (value, index) {\n                                if (currentRecord.rowUniqueID.toString() !== value.from) {\n                                    currentIdArray.push(value.from.toString());\n                                    currentIdIndex = index;\n                                }\n                            });\n                            //    currentPredecessor=currentRecord.predecessor[0].from\n                        }\n                        if (recordId.toString() === currentRecord.rowUniqueID.toString() ||\n                            currentIdArray.indexOf(recordId.toString()) !== -1) {\n                            return { value: false };\n                        }\n                        visitedIdArray.push(currentId);\n                        if (!isNullOrUndefined(currentRecord.predecessor) && currentRecord.predecessor.length > 0) {\n                            var result = void 0;\n                            if (currentIdArray.length > 1) {\n                                result = this_2.predecessorValidation(currentIdArray, ganttRecord.ganttProperties);\n                            }\n                            else if (currentIdArray.length === 1) {\n                                currentId = currentRecord.predecessor[currentIdIndex].from;\n                            }\n                            if (result === false) {\n                                return { value: false };\n                            }\n                        }\n                        else {\n                            return \"break\";\n                        }\n                    }\n                    else {\n                        return \"break\";\n                    }\n                };\n                while (currentId !== null) {\n                    var state_3 = _loop_3();\n                    if (typeof state_3 === \"object\")\n                        return state_3;\n                    if (state_3 === \"break\")\n                        break;\n                }\n            };\n            var this_2 = this;\n            for (var count = 0; count < predecessorIdArray.length; count++) {\n                var state_2 = _loop_2(count);\n                if (typeof state_2 === \"object\")\n                    return state_2.value;\n            }\n        }\n        return flag;\n    };\n    /**\n     * To add dependency for Task\n     *\n     * @param {IGanttData} ganttRecord .\n     * @param {string} predecessorString .\n     * @returns {void} .\n     * @private\n     */\n    ConnectorLineEdit.prototype.addPredecessor = function (ganttRecord, predecessorString) {\n        var tempPredecessorString = isNullOrUndefined(ganttRecord.ganttProperties.predecessorsName) ||\n            ganttRecord.ganttProperties.predecessorsName === '' ?\n            predecessorString : (ganttRecord.ganttProperties.predecessorsName + ',' + predecessorString);\n        this.updatePredecessorHelper(ganttRecord, tempPredecessorString);\n    };\n    /**\n     * To remove dependency from task\n     *\n     * @param {IGanttData} ganttRecord .\n     * @returns {void} .\n     * @private\n     */\n    ConnectorLineEdit.prototype.removePredecessor = function (ganttRecord) {\n        this.updatePredecessorHelper(ganttRecord, null);\n    };\n    /**\n     * To modify current dependency values of Task\n     *\n     * @param {IGanttData} ganttRecord .\n     * @param {string} predecessorString .\n     * @param {ITaskbarEditedEventArgs} editedArgs .\n     * @returns {boolean} .\n     * @private\n     */\n    ConnectorLineEdit.prototype.updatePredecessor = function (ganttRecord, predecessorString, editedArgs) {\n        return this.updatePredecessorHelper(ganttRecord, predecessorString, editedArgs);\n    };\n    ConnectorLineEdit.prototype.updatePredecessorHelper = function (ganttRecord, predecessorString, editedArgs) {\n        if (isUndefined(predecessorString) || this.validatePredecessorRelation(ganttRecord, predecessorString)) {\n            this.parent.isOnEdit = true;\n            var predecessorCollection = [];\n            if (!isNullOrUndefined(predecessorString) && predecessorString !== '') {\n                predecessorCollection = this.parent.predecessorModule.calculatePredecessor(predecessorString, ganttRecord);\n            }\n            this.parent.setRecordValue('predecessor', predecessorCollection, ganttRecord.ganttProperties, true);\n            var stringValue = this.parent.predecessorModule.getPredecessorStringValue(ganttRecord);\n            this.parent.setRecordValue('predecessorsName', stringValue, ganttRecord.ganttProperties, true);\n            this.parent.setRecordValue('taskData.' + this.parent.taskFields.dependency, stringValue, ganttRecord);\n            this.parent.setRecordValue(this.parent.taskFields.dependency, stringValue, ganttRecord);\n            var args = {};\n            args.action = editedArgs && editedArgs.action && editedArgs.action === 'CellEditing' ? editedArgs.action : 'DrawConnectorLine';\n            args.data = ganttRecord;\n            this.parent.editModule.initiateUpdateAction(args);\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    ConnectorLineEdit.prototype.checkParentRelation = function (ganttRecord, predecessorIdArray) {\n        var editingData = ganttRecord;\n        var checkParent = true;\n        if (editingData && editingData.parentItem) {\n            if (predecessorIdArray.indexOf(editingData.parentItem.taskId.toString()) !== -1) {\n                return false;\n            }\n        }\n        var _loop_4 = function (p) {\n            var record = this_3.parent.currentViewData.filter(function (item) {\n                return item && item.ganttProperties.rowUniqueID.toString() === predecessorIdArray[p].toString();\n            });\n            if (record[0] && record[0].hasChildRecords) {\n                return { value: false };\n            }\n        };\n        var this_3 = this;\n        for (var p = 0; p < predecessorIdArray.length; p++) {\n            var state_4 = _loop_4(p);\n            if (typeof state_4 === \"object\")\n                return state_4.value;\n        }\n        return checkParent;\n    };\n    ConnectorLineEdit.prototype.initPredecessorValidationDialog = function () {\n        if (this.parent.taskFields.dependency && this.parent.isInPredecessorValidation) {\n            var dialogElement = createElement('div', {\n                id: this.parent.element.id + '_dialogValidationRule'\n            });\n            this.parent.element.appendChild(dialogElement);\n            this.renderValidationDialog();\n        }\n    };\n    /**\n     * To render validation dialog\n     *\n     * @returns {void} .\n     * @private\n     */\n    ConnectorLineEdit.prototype.renderValidationDialog = function () {\n        var validationDialog = new Dialog({\n            header: 'Validate Editing',\n            isModal: true,\n            visible: false,\n            width: '50%',\n            showCloseIcon: true,\n            close: this.validationDialogClose.bind(this),\n            content: '',\n            buttons: [\n                {\n                    click: this.validationDialogOkButton.bind(this),\n                    buttonModel: { content: this.parent.localeObj.getConstant('okText'), isPrimary: true }\n                },\n                {\n                    click: this.validationDialogCancelButton.bind(this),\n                    buttonModel: { content: this.parent.localeObj.getConstant('cancel') }\n                }\n            ],\n            target: this.parent.element,\n            animationSettings: { effect: 'None' }\n        });\n        document.getElementById(this.parent.element.id + '_dialogValidationRule').innerHTML = '';\n        validationDialog.isStringTemplate = true;\n        validationDialog.appendTo('#' + this.parent.element.id + '_dialogValidationRule');\n        this.parent.validationDialogElement = validationDialog;\n    };\n    ConnectorLineEdit.prototype.validationDialogOkButton = function () {\n        var currentArgs = this.parent.currentEditedArgs;\n        currentArgs.validateMode.preserveLinkWithEditing =\n            document.getElementById(this.parent.element.id + '_ValidationAddlineOffset').checked;\n        currentArgs.validateMode.removeLink =\n            document.getElementById(this.parent.element.id + '_ValidationRemoveline').checked;\n        currentArgs.validateMode.respectLink =\n            document.getElementById(this.parent.element.id + '_ValidationCancel').checked;\n        this.applyPredecessorOption();\n        this.parent.validationDialogElement.hide();\n    };\n    ConnectorLineEdit.prototype.validationDialogCancelButton = function () {\n        this.parent.currentEditedArgs.validateMode.respectLink = true;\n        this.applyPredecessorOption();\n        this.parent.validationDialogElement.hide();\n    };\n    ConnectorLineEdit.prototype.validationDialogClose = function (e) {\n        if (getValue('isInteraction', e)) {\n            this.parent.currentEditedArgs.validateMode.respectLink = true;\n            this.applyPredecessorOption();\n        }\n    };\n    /**\n     * Validate and apply the predecessor option from validation dialog\n     *\n     * @returns {void} .\n     * @private\n     */\n    ConnectorLineEdit.prototype.applyPredecessorOption = function () {\n        var args = this.parent.currentEditedArgs;\n        var ganttRecord = args.data;\n        if (args.validateMode.respectLink) {\n            this.parent.editModule.reUpdatePreviousRecords();\n            this.parent.chartRowsModule.refreshRecords([args.data]);\n        }\n        else if (args.validateMode.removeLink) {\n            this.removePredecessors(ganttRecord, this.validationPredecessor);\n            this.parent.editModule.updateEditedTask(args.editEventArgs);\n        }\n        else if (args.validateMode.preserveLinkWithEditing) {\n            this.calculateOffset(ganttRecord);\n            this.parent.editModule.updateEditedTask(args.editEventArgs);\n        }\n    };\n    ConnectorLineEdit.prototype.calculateOffset = function (record) {\n        var prevPredecessor = extend([], record.ganttProperties.predecessor, [], true);\n        var validPredecessor = this.parent.predecessorModule.getValidPredecessor(record);\n        for (var i = 0; i < validPredecessor.length; i++) {\n            var predecessor = validPredecessor[i];\n            var parentTask = this.parent.connectorLineModule.getRecordByID(predecessor.from);\n            var offset = void 0;\n            if (isScheduledTask(parentTask.ganttProperties) && isScheduledTask(record.ganttProperties)) {\n                var tempStartDate = void 0;\n                var tempEndDate = void 0;\n                var tempDuration = void 0;\n                var isNegativeOffset = void 0;\n                switch (predecessor.type) {\n                    case 'FS':\n                        tempStartDate = new Date(parentTask.ganttProperties.endDate.getTime());\n                        tempEndDate = new Date(record.ganttProperties.startDate.getTime());\n                        break;\n                    case 'SS':\n                        tempStartDate = new Date(parentTask.ganttProperties.startDate.getTime());\n                        tempEndDate = new Date(record.ganttProperties.startDate.getTime());\n                        break;\n                    case 'SF':\n                        tempStartDate = new Date(parentTask.ganttProperties.startDate.getTime());\n                        tempEndDate = new Date(record.ganttProperties.endDate.getTime());\n                        break;\n                    case 'FF':\n                        tempStartDate = new Date(parentTask.ganttProperties.endDate.getTime());\n                        tempEndDate = new Date(record.ganttProperties.endDate.getTime());\n                        break;\n                }\n                if (tempStartDate.getTime() < tempEndDate.getTime()) {\n                    tempStartDate = this.dateValidateModule.checkStartDate(tempStartDate);\n                    tempEndDate = this.dateValidateModule.checkEndDate(tempEndDate, null);\n                    isNegativeOffset = false;\n                }\n                else {\n                    var tempDate = new Date(tempStartDate.getTime());\n                    tempStartDate = this.dateValidateModule.checkStartDate(tempEndDate);\n                    tempEndDate = this.dateValidateModule.checkEndDate(tempDate, null);\n                    isNegativeOffset = true;\n                }\n                if (tempStartDate.getTime() < tempEndDate.getTime()) {\n                    tempDuration = this.dateValidateModule.getDuration(tempStartDate, tempEndDate, predecessor.offsetUnit, true, false);\n                    offset = isNegativeOffset ? (tempDuration * -1) : tempDuration;\n                }\n                else {\n                    offset = 0;\n                }\n            }\n            else {\n                offset = 0;\n            }\n            var preIndex = getIndex(predecessor, 'from', prevPredecessor, 'to');\n            prevPredecessor[preIndex].offset = offset;\n            // Update predecessor in predecessor task\n            var parentPredecessors = extend([], parentTask.ganttProperties.predecessor, [], true);\n            var parentPreIndex = getIndex(predecessor, 'from', parentPredecessors, 'to');\n            parentPredecessors[parentPreIndex].offset = offset;\n            this.parent.setRecordValue('predecessor', parentPredecessors, parentTask.ganttProperties, true);\n        }\n        this.parent.setRecordValue('predecessor', prevPredecessor, record.ganttProperties, true);\n        var predecessorString = this.parent.predecessorModule.getPredecessorStringValue(record);\n        this.parent.setRecordValue('taskData.' + this.parent.taskFields.dependency, predecessorString, record);\n        this.parent.setRecordValue(this.parent.taskFields.dependency, predecessorString, record);\n        this.parent.setRecordValue('predecessorsName', predecessorString, record.ganttProperties, true);\n    };\n    /**\n     * Update predecessor value with user selection option in predecessor validation dialog\n     *\n     * @param {IGanttData} ganttRecord .\n     * @param {IPredecessor[]} predecessor .\n     * @returns {void} .\n     */\n    ConnectorLineEdit.prototype.removePredecessors = function (ganttRecord, predecessor) {\n        var prevPredecessor = extend([], [], ganttRecord.ganttProperties.predecessor, true);\n        var preLength = predecessor.length;\n        for (var i = 0; i < preLength; i++) {\n            var parentGanttRecord = this.parent.connectorLineModule.getRecordByID(predecessor[i].from);\n            var parentPredecessor = extend([], [], parentGanttRecord.ganttProperties.predecessor, true);\n            var index = getIndex(predecessor[i], 'from', prevPredecessor, 'to');\n            prevPredecessor.splice(index, 1);\n            var parentIndex = getIndex(predecessor[i], 'from', parentPredecessor, 'to');\n            parentPredecessor.splice(parentIndex, 1);\n            this.parent.setRecordValue('predecessor', parentPredecessor, parentGanttRecord.ganttProperties, true);\n        }\n        if (prevPredecessor.length !== ganttRecord.ganttProperties.predecessor.length) {\n            this.parent.setRecordValue('predecessor', prevPredecessor, ganttRecord.ganttProperties, true);\n            var predecessorString = this.parent.predecessorModule.getPredecessorStringValue(ganttRecord);\n            this.parent.setRecordValue('predecessorsName', predecessorString, ganttRecord.ganttProperties, true);\n            this.parent.setRecordValue('taskData.' + this.parent.taskFields.dependency, predecessorString, ganttRecord);\n            this.parent.setRecordValue(this.parent.taskFields.dependency, predecessorString, ganttRecord);\n        }\n    };\n    /**\n     * To open predecessor validation dialog\n     *\n     * @param {object} args .\n     * @returns {void} .\n     * @private\n     */\n    ConnectorLineEdit.prototype.openValidationDialog = function (args) {\n        var contentTemplate = this.validationDialogTemplate(args);\n        this.parent.validationDialogElement.setProperties({ content: contentTemplate });\n        this.parent.validationDialogElement.show();\n    };\n    /**\n     * Predecessor link validation dialog template\n     *\n     * @param {object} args .\n     * @returns {HTMLElement} .\n     * @private\n     */\n    ConnectorLineEdit.prototype.validationDialogTemplate = function (args) {\n        var ganttId = this.parent.element.id;\n        var contentdiv = createElement('div', {\n            className: 'e-ValidationContent'\n        });\n        var taskData = getValue('task', args);\n        var parenttaskData = getValue('parentTask', args);\n        var violationType = getValue('violationType', args);\n        var recordName = taskData.ganttProperties.taskName;\n        var recordNewStartDate = this.parent.getFormatedDate(taskData.ganttProperties.startDate, 'MM/dd/yyyy');\n        var parentName = parenttaskData.ganttProperties.taskName;\n        var recordArgs = [recordName, parentName];\n        var topContentText;\n        if (violationType === 'taskBeforePredecessor_FS') {\n            topContentText = this.parent.localeObj.getConstant('taskBeforePredecessor_FS');\n        }\n        else if (violationType === 'taskAfterPredecessor_FS') {\n            topContentText = this.parent.localeObj.getConstant('taskAfterPredecessor_FS');\n        }\n        else if (violationType === 'taskBeforePredecessor_SS') {\n            topContentText = this.parent.localeObj.getConstant('taskBeforePredecessor_SS');\n        }\n        else if (violationType === 'taskAfterPredecessor_SS') {\n            topContentText = this.parent.localeObj.getConstant('taskAfterPredecessor_SS');\n        }\n        else if (violationType === 'taskBeforePredecessor_FF') {\n            topContentText = this.parent.localeObj.getConstant('taskBeforePredecessor_FF');\n        }\n        else if (violationType === 'taskAfterPredecessor_FF') {\n            topContentText = this.parent.localeObj.getConstant('taskAfterPredecessor_FF');\n        }\n        else if (violationType === 'taskBeforePredecessor_SF') {\n            topContentText = this.parent.localeObj.getConstant('taskBeforePredecessor_SF');\n        }\n        else if (violationType === 'taskAfterPredecessor_SF') {\n            topContentText = this.parent.localeObj.getConstant('taskAfterPredecessor_SF');\n        }\n        topContentText = formatString(topContentText, recordArgs);\n        var topContent = '<div id=\"' + ganttId + '_ValidationText\">' + topContentText + '<div>';\n        var innerTable = '<table>' +\n            '<tr><td><input type=\"radio\" id=\"' + ganttId + '_ValidationCancel\" name=\"ValidationRule\" checked/><label for=\"'\n            + ganttId + '_ValidationCancel\" id= \"' + ganttId + '_cancelLink\">Cancel, keep the existing link</label></td></tr>' +\n            '<tr><td><input type=\"radio\" id=\"' + ganttId + '_ValidationRemoveline\" name=\"ValidationRule\"/><label for=\"'\n            + ganttId + '_ValidationRemoveline\" id=\"' + ganttId + '_removeLink\">Remove the link and move <b>'\n            + recordName + '</b> to start on <b>' + recordNewStartDate + '</b>.</label></td></tr>' +\n            '<tr><td><input type=\"radio\" id=\"' + ganttId + '_ValidationAddlineOffset\" name=\"ValidationRule\"/><label for=\"'\n            + ganttId + '_ValidationAddlineOffset\" id=\"' + ganttId + '_preserveLink\">Move the <b>'\n            + recordName + '</b> to start on <b>' + recordNewStartDate + '</b> and keep the link.</label></td></tr></table>';\n        contentdiv.innerHTML = topContent + innerTable;\n        return contentdiv;\n    };\n    /**\n     * To validate the types while editing the taskbar\n     *\n     * @param {IGanttData} ganttRecord .\n     * @returns {boolean} .\n     * @private\n     */\n    ConnectorLineEdit.prototype.validateTypes = function (ganttRecord) {\n        var predecessor = this.parent.predecessorModule.getValidPredecessor(ganttRecord);\n        var parentGanttRecord;\n        this.validationPredecessor = [];\n        var violatedParent;\n        var violateType;\n        var startDate = this.parent.predecessorModule.getPredecessorDate(ganttRecord, predecessor);\n        var ganttTaskData = ganttRecord.ganttProperties;\n        var endDate = this.parent.allowUnscheduledTasks && isNullOrUndefined(startDate) ?\n            ganttTaskData.endDate :\n            this.dateValidateModule.getEndDate(startDate, ganttTaskData.duration, ganttTaskData.durationUnit, ganttTaskData, false);\n        for (var i = 0; i < predecessor.length; i++) {\n            parentGanttRecord = this.parent.connectorLineModule.getRecordByID(predecessor[i].from);\n            var violationType = null;\n            if (predecessor[i].type === 'FS') {\n                if (ganttTaskData.startDate < startDate) {\n                    this.validationPredecessor.push(predecessor[i]);\n                    violationType = 'taskBeforePredecessor_FS';\n                }\n                else if (ganttTaskData.startDate > startDate) {\n                    this.validationPredecessor.push(predecessor[i]);\n                    violationType = 'taskAfterPredecessor_FS';\n                }\n            }\n            else if (predecessor[i].type === 'SS') {\n                if (ganttTaskData.startDate < startDate) {\n                    this.validationPredecessor.push(predecessor[i]);\n                    violationType = 'taskBeforePredecessor_SS';\n                }\n                else if (ganttTaskData.startDate > startDate) {\n                    this.validationPredecessor.push(predecessor[i]);\n                    violationType = 'taskAfterPredecessor_SS';\n                }\n            }\n            else if (predecessor[i].type === 'FF') {\n                if (endDate <= parentGanttRecord.ganttProperties.endDate) {\n                    this.validationPredecessor.push(predecessor[i]);\n                    violationType = 'taskBeforePredecessor_FF';\n                }\n                else if (endDate > parentGanttRecord.ganttProperties.endDate) {\n                    this.validationPredecessor.push(predecessor[i]);\n                    violationType = 'taskAfterPredecessor_FF';\n                }\n            }\n            else if (predecessor[i].type === 'SF') {\n                if (endDate < parentGanttRecord.ganttProperties.startDate) {\n                    this.validationPredecessor.push(predecessor[i]);\n                    violationType = 'taskBeforePredecessor_SF';\n                }\n                else if (endDate >= parentGanttRecord.ganttProperties.startDate) {\n                    this.validationPredecessor.push(predecessor[i]);\n                    violationType = 'taskAfterPredecessor_SF';\n                }\n            }\n            if (!isNullOrUndefined(violationType) && isNullOrUndefined(violateType)) {\n                violatedParent = parentGanttRecord;\n                violateType = violationType;\n            }\n        }\n        var validateArgs = {\n            parentTask: violatedParent,\n            task: ganttRecord,\n            violationType: violateType\n        };\n        return validateArgs;\n    };\n    /**\n     * Method to remove and update new predecessor collection in successor record\n     *\n     * @param {IGanttData} data .\n     * @returns {void} .\n     * @private\n     */\n    ConnectorLineEdit.prototype.addRemovePredecessor = function (data) {\n        var prevData = this.parent.previousRecords[data.uniqueID];\n        var newPredecessor = data.ganttProperties.predecessor.slice();\n        // eslint-disable-next-line\n        if (prevData && prevData.ganttProperties && prevData.ganttProperties.hasOwnProperty('predecessor')) {\n            var prevPredecessor = prevData.ganttProperties.predecessor;\n            if (!isNullOrUndefined(prevPredecessor)) {\n                for (var p = 0; p < prevPredecessor.length; p++) {\n                    var parentGanttRecord = this.parent.connectorLineModule.getRecordByID(prevPredecessor[p].from);\n                    if (parentGanttRecord === data) {\n                        data.ganttProperties.predecessor.push(prevPredecessor[p]);\n                    }\n                    else {\n                        var parentPredecessor = extend([], [], parentGanttRecord.ganttProperties.predecessor, true);\n                        var parentIndex = getIndex(prevPredecessor[p], 'from', parentPredecessor, 'to');\n                        if (parentIndex !== -1) {\n                            parentPredecessor.splice(parentIndex, 1);\n                            this.parent.setRecordValue('predecessor', parentPredecessor, parentGanttRecord.ganttProperties, true);\n                        }\n                    }\n                }\n            }\n            if (!isNullOrUndefined(newPredecessor)) {\n                for (var n = 0; n < newPredecessor.length; n++) {\n                    var parentGanttRecord = this.parent.connectorLineModule.getRecordByID(newPredecessor[n].from);\n                    var parentPredecessor = extend([], [], parentGanttRecord.ganttProperties.predecessor, true);\n                    parentPredecessor.push(newPredecessor[n]);\n                    this.parent.setRecordValue('predecessor', parentPredecessor, parentGanttRecord.ganttProperties, true);\n                }\n            }\n        }\n    };\n    /**\n     * Method to remove a predecessor from a record.\n     *\n     * @param {IGanttData} childRecord .\n     * @param {number} index .\n     * @returns {void} .\n     * @private\n     */\n    ConnectorLineEdit.prototype.removePredecessorByIndex = function (childRecord, index) {\n        var childPredecessor = childRecord.ganttProperties.predecessor;\n        var predecessor = childPredecessor.splice(index, 1);\n        var parentRecord = this.parent.connectorLineModule.getRecordByID(predecessor[0].from);\n        var parentPredecessor = parentRecord.ganttProperties.predecessor;\n        var parentIndex = getIndex(predecessor[0], 'from', parentPredecessor, 'to');\n        parentPredecessor.splice(parentIndex, 1);\n        var predecessorString = this.parent.predecessorModule.getPredecessorStringValue(childRecord);\n        childPredecessor.push(predecessor[0]);\n        this.parent.connectorLineEditModule.updatePredecessor(childRecord, predecessorString);\n    };\n    /**\n     * To render predecessor delete confirmation dialog\n     *\n     * @returns {void} .\n     * @private\n     */\n    ConnectorLineEdit.prototype.renderPredecessorDeleteConfirmDialog = function () {\n        this.confirmPredecessorDialog = new Dialog({\n            width: '320px',\n            isModal: true,\n            content: this.parent.localeObj.getConstant('confirmPredecessorDelete'),\n            buttons: [\n                {\n                    click: this.confirmOkDeleteButton.bind(this),\n                    buttonModel: { content: this.parent.localeObj.getConstant('okText'), isPrimary: true }\n                },\n                {\n                    click: this.confirmCloseDialog.bind(this),\n                    buttonModel: { content: this.parent.localeObj.getConstant('cancel') }\n                }\n            ],\n            target: this.parent.element,\n            animationSettings: { effect: 'None' }\n        });\n        var confirmDialog = createElement('div', {\n            id: this.parent.element.id + '_deletePredecessorConfirmDialog'\n        });\n        this.parent.element.appendChild(confirmDialog);\n        this.confirmPredecessorDialog.isStringTemplate = true;\n        this.confirmPredecessorDialog.appendTo(confirmDialog);\n    };\n    ConnectorLineEdit.prototype.confirmCloseDialog = function () {\n        this.confirmPredecessorDialog.destroy();\n    };\n    ConnectorLineEdit.prototype.confirmOkDeleteButton = function () {\n        this.removePredecessorByIndex(this.childRecord, this.predecessorIndex);\n        this.confirmPredecessorDialog.destroy();\n    };\n    return ConnectorLineEdit;\n}());\nexport { ConnectorLineEdit };\n"]},"metadata":{},"sourceType":"module"}