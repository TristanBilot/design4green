{"ast":null,"code":"import { createElement, formatUnit, EventHandler, Browser } from '@syncfusion/ej2-base';\nimport { isNullOrUndefined, closest, addClass, removeClass, getValue } from '@syncfusion/ej2-base';\nimport * as cls from '../base/css-constants';\nimport { ChartScroll } from '../actions/chart-scroll';\nimport { click } from '@syncfusion/ej2-grids';\nimport { VirtualContentRenderer } from '../renderer/virtual-content-render';\n/**\n * module to render gantt chart - project view\n */\n\nvar GanttChart =\n/** @class */\nfunction () {\n  function GanttChart(parent) {\n    this.isExpandCollapseFromChart = false;\n    this.isExpandAll = false;\n    this.isGanttElement = false;\n    this.parent = parent;\n    this.chartTimelineContainer = null;\n    this.rangeViewContainer = createElement('div', {\n      className: cls.rangeContainer\n    });\n    this.virtualRender = new VirtualContentRenderer(this.parent);\n    this.addEventListener();\n  }\n\n  GanttChart.prototype.addEventListener = function () {\n    this.parent.on('renderPanels', this.renderChartContainer, this);\n    this.parent.on('recordsUpdated', this.renderChartElements, this);\n    this.parent.on('dataReady', this.renderInitialContents, this);\n    this.parent.on('tree-grid-created', this.renderChartContents, this);\n    this.parent.on('destroy', this.destroy, this);\n  };\n\n  GanttChart.prototype.renderChartContents = function () {\n    this.parent.notify('refreshDayMarkers', {});\n    this.wireEvents();\n  };\n  /**\n   * Method to render top level containers in Gantt chart\n   *\n   * @returns {void} .\n   * @private\n   */\n\n\n  GanttChart.prototype.renderChartContainer = function () {\n    this.chartElement = createElement('div', {\n      id: this.parent.element.id + 'GanttChart',\n      className: cls.ganttChart\n    });\n    this.parent.chartPane.appendChild(this.chartElement);\n    this.renderTimelineContainer();\n    this.renderBodyContainers(); // render top level div header and content\n    // Get timeline header from timeline class file and append to header div\n    // render content div\n    // Render scroll able div\n    // Render container for all element like, table, weekend and holidays\n    // Get rows element from rows renderer class\n    // Get label related info label renderer class\n    // Get baseline from baseline renderer class\n    // Get weekend elements from weekend-holidays renderer class\n  };\n  /**\n   * method to render timeline, holidays, weekends at load time\n   *\n   * @returns {void} .\n   */\n\n\n  GanttChart.prototype.renderInitialContents = function () {\n    this.parent.timelineModule.createTimelineSeries();\n  };\n  /**\n   * @returns {void} .\n   * @private\n   */\n\n\n  GanttChart.prototype.renderOverAllocationContainer = function () {\n    for (var i = 0; i < this.parent.flatData.length; i++) {\n      var data = this.parent.flatData[i];\n\n      if (data.childRecords.length > 0) {\n        this.parent.dataOperation.updateOverlappingValues(data);\n      }\n    }\n\n    var rangeContainer = this.parent.element.querySelector('.' + cls.rangeContainer);\n\n    if (rangeContainer) {\n      rangeContainer.innerHTML = '';\n    }\n\n    if (this.parent.treeGrid.grid.filterSettings.columns.length === 0) {\n      this.renderRangeContainer(this.parent.currentViewData);\n    }\n  };\n\n  GanttChart.prototype.renderChartElements = function () {\n    if (this.parent.isFromOnPropertyChange) {\n      this.rangeViewContainer.innerHTML = '';\n      this.parent.updateProjectDates(this.parent.cloneProjectStartDate, this.parent.cloneProjectEndDate, this.parent.isTimelineRoundOff);\n      this.parent.isFromOnPropertyChange = false;\n    } else {\n      this.parent.chartRowsModule.renderChartRows();\n\n      if (this.parent.predecessorModule && this.parent.taskFields.dependency) {\n        this.parent.connectorLineIds = [];\n        this.parent.updatedConnectorLineCollection = [];\n        this.parent.predecessorModule.createConnectorLinesCollection();\n      }\n\n      this.parent.connectorLineModule.renderConnectorLines(this.parent.updatedConnectorLineCollection);\n\n      if (this.parent.viewType === 'ResourceView' && this.parent.showOverAllocation) {\n        this.renderOverAllocationContainer();\n      }\n    }\n\n    this.updateWidthAndHeight();\n    this.parent.notify('selectRowByIndex', {});\n  };\n  /**\n   * @param {IGanttData[]} records .\n   * @returns {void} .\n   * @private\n   */\n\n\n  GanttChart.prototype.renderRangeContainer = function (records) {\n    var recordLength = records.length;\n    var count;\n    var ganttRecord;\n    var rangeCollection;\n\n    if (this.parent.treeGrid.grid.filterSettings.columns.length === 0) {\n      for (count = 0; count < recordLength; count++) {\n        ganttRecord = records[count];\n        rangeCollection = ganttRecord.ganttProperties.workTimelineRanges;\n\n        if (rangeCollection) {\n          this.renderRange(rangeCollection, ganttRecord);\n        }\n      }\n    }\n  };\n\n  GanttChart.prototype.getTopValue = function (currentRecord) {\n    var updatedRecords = this.parent.getExpandedRecords(this.parent.currentViewData);\n    var recordIndex = updatedRecords.indexOf(currentRecord);\n\n    if (!currentRecord.expanded) {\n      return recordIndex * this.parent.rowHeight;\n    }\n\n    return (recordIndex + 1) * this.parent.rowHeight;\n  };\n  /*get height for range bar*/\n\n\n  GanttChart.prototype.getRangeHeight = function (data) {\n    if (!data.expanded && data.hasChildRecords) {\n      return this.parent.rowHeight - Math.floor(this.parent.rowHeight - this.parent.chartRowsModule.taskBarHeight);\n    }\n\n    return data.childRecords.length * this.parent.rowHeight - Math.floor(this.parent.rowHeight - this.parent.chartRowsModule.taskBarHeight);\n  };\n\n  GanttChart.prototype.renderRange = function (rangeCollection, currentRecord) {\n    var topValue = this.getTopValue(currentRecord);\n    var sameIDElement = this.rangeViewContainer.querySelector('.' + 'rangeContainer' + currentRecord.ganttProperties.rowUniqueID);\n\n    if (sameIDElement) {\n      sameIDElement.remove();\n    }\n\n    var parentDiv = createElement('div', {\n      className: 'rangeContainer' + currentRecord.ganttProperties.rowUniqueID,\n      styles: \"top:\" + topValue + \"px; position: absolute;\"\n    });\n\n    if (currentRecord.level === 0 && !currentRecord.expanded && isNullOrUndefined(currentRecord.parentItem) && !this.parent.enableMultiTaskbar) {\n      return;\n    }\n\n    for (var i = 0; i < rangeCollection.length; i++) {\n      var height = this.getRangeHeight(currentRecord);\n      var leftDiv = createElement('div', {\n        className: cls.rangeChildContainer + ' ' + 'e-leftarc',\n        styles: \"left:\" + rangeCollection[i].left + \"px;\\n                top: \" + Math.floor((this.parent.rowHeight - this.parent.chartRowsModule.taskBarHeight) / 2) + \"px;\\n                height: \" + (height + 1) + \"px; border-right: 0px\"\n      });\n      var rightDiv = createElement('div', {\n        className: cls.rangeChildContainer + ' ' + 'e-rightarc',\n        styles: \"left:\" + (rangeCollection[i].left + rangeCollection[i].width - 5) + \"px;\\n                top: \" + Math.floor((this.parent.rowHeight - this.parent.chartRowsModule.taskBarHeight) / 2) + \"px; height: \" + (height + 1) + \"px;\\n                border-left: 0px\"\n      });\n      parentDiv.appendChild(leftDiv);\n      parentDiv.appendChild(rightDiv);\n      this.rangeViewContainer.appendChild(parentDiv);\n    }\n\n    this.parent.ganttChartModule.chartBodyContent.appendChild(this.rangeViewContainer);\n  };\n  /**\n   * @returns {void} .\n   * @private\n   */\n\n\n  GanttChart.prototype.renderTimelineContainer = function () {\n    this.chartTimelineContainer = createElement('div', {\n      className: cls.timelineHeaderContainer\n    });\n    this.chartElement.appendChild(this.chartTimelineContainer);\n  };\n  /**\n   * initiate chart container\n   *\n   * @returns {void} .\n   */\n\n\n  GanttChart.prototype.renderBodyContainers = function () {\n    this.chartBodyContainer = createElement('div', {\n      className: cls.chartBodyContainer\n    });\n    this.chartElement.appendChild(this.chartBodyContainer);\n    this.scrollElement = createElement('div', {\n      className: cls.chartScrollElement + ' ' + cls.scrollContent,\n      styles: 'position:relative;'\n    });\n    this.chartBodyContainer.appendChild(this.scrollElement);\n    this.chartBodyContent = createElement('div', {\n      className: cls.chartBodyContent,\n      styles: 'position:relative; overflow:hidden '\n    });\n\n    if (this.parent.virtualScrollModule && this.parent.enableVirtualization) {\n      this.parent.ganttChartModule.virtualRender.renderWrapper();\n    } else {\n      this.scrollElement.appendChild(this.chartBodyContent);\n    } // this.parent.chartRowsModule.createChartTable();\n\n\n    this.scrollObject = new ChartScroll(this.parent); //this.scrollObject.setWidth(this.chartProperties.width);\n\n    var toolbarHeight = 0;\n\n    if (!isNullOrUndefined(this.parent.toolbarModule) && !isNullOrUndefined(this.parent.toolbarModule.element)) {\n      toolbarHeight = this.parent.toolbarModule.element.offsetHeight;\n    }\n\n    this.scrollObject.setHeight(this.parent.ganttHeight - this.chartTimelineContainer.offsetHeight - toolbarHeight);\n  };\n  /**\n   * @returns {void} .\n   * @private\n   */\n\n\n  GanttChart.prototype.updateWidthAndHeight = function () {\n    //empty row height\n    var emptydivHeight = 36;\n    var emptyHeight = this.parent.contentHeight === 0 ? this.parent.flatData.length > 1 ? emptydivHeight : 0 : this.parent.contentHeight;\n    this.chartBodyContent.style.height = formatUnit(emptyHeight); //let element: HTMLElement = this.chartTimelineContainer.querySelector('.' + cls.timelineHeaderTableContainer);\n\n    this.chartBodyContent.style.width = formatUnit(this.parent.timelineModule.totalTimelineWidth);\n    this.setVirtualHeight();\n    this.parent.notify('updateHeight', {});\n    this.parent.updateGridLineContainerHeight();\n    this.updateLastRowBottomWidth();\n  };\n\n  GanttChart.prototype.setVirtualHeight = function () {\n    if (this.parent.virtualScrollModule && this.parent.enableVirtualization) {\n      var wrapper = getValue('virtualTrack', this.parent.ganttChartModule.virtualRender);\n      wrapper.style.height = this.parent.updatedRecords.length * this.parent.rowHeight + 'px';\n    }\n  };\n  /**\n   * Method to update bottom border for chart rows\n   *\n   * @returns {void} .\n   */\n\n\n  GanttChart.prototype.updateLastRowBottomWidth = function () {\n    if (this.parent.currentViewData.length > 0 && this.parent.height !== 'auto') {\n      var expandedRecords = this.parent.virtualScrollModule && this.parent.enableVirtualization ? this.parent.currentViewData : this.parent.getExpandedRecords(this.parent.currentViewData);\n      var lastExpandedRow = expandedRecords[expandedRecords.length - 1];\n      var lastExpandedRowIndex = this.parent.currentViewData.indexOf(lastExpandedRow);\n      var lastRow = this.parent.getRowByIndex(lastExpandedRowIndex);\n      var table = this.parent.chartRowsModule.ganttChartTableBody;\n\n      if (table.querySelectorAll('.e-chart-row-cell.e-chart-row-border.e-lastrow')) {\n        removeClass(table.querySelectorAll('.e-chart-row-cell.e-chart-row-border.e-lastrow'), 'e-lastrow');\n      }\n\n      if (this.chartBodyContent.clientHeight < this.chartBodyContainer.clientHeight) {\n        if (lastRow) {\n          addClass(lastRow.querySelectorAll('td'), 'e-lastrow');\n          this.chartBodyContent.style.height = formatUnit(this.parent.contentHeight + 1);\n        }\n      }\n    }\n  };\n\n  GanttChart.prototype.removeEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    this.parent.off('renderPanels', this.renderChartContainer);\n    this.parent.off('recordsUpdated', this.renderChartElements);\n    this.parent.off('dataReady', this.renderInitialContents);\n    this.parent.off('tree-grid-created', this.renderChartContents);\n    this.parent.off('destroy', this.destroy);\n  };\n  /**\n   * Click event handler in chart side\n   *\n   * @param {PointerEvent} e .\n   * @returns {void} .\n   */\n\n\n  GanttChart.prototype.ganttChartMouseDown = function (e) {\n    if (e.which !== 3 && this.parent.editSettings.allowTaskbarEditing) {\n      this.parent.notify('chartMouseDown', e);\n      this.parent.element.tabIndex = 0;\n    }\n  };\n\n  GanttChart.prototype.ganttChartMouseClick = function (e) {\n    if (this.parent.editSettings.allowTaskbarEditing) {\n      if (this.parent.autoFocusTasks) {\n        this.scrollToTarget(e);\n        /** Scroll to task */\n      }\n\n      this.parent.notify('chartMouseClick', e);\n    }\n  };\n\n  GanttChart.prototype.ganttChartMouseUp = function (e) {\n    if (this.parent.editSettings.allowTaskbarEditing) {\n      this.parent.notify('chartMouseUp', e);\n    }\n  };\n  /**\n   *\n   * @param {PointerEvent} e .\n   * @returns {void} .\n   */\n\n\n  GanttChart.prototype.scrollToTarget = function (e) {\n    var row = closest(e.target, 'tr');\n\n    if (row && this.parent.element.contains(row) && (this.parent.element.querySelectorAll('.e-chart-rows-container')[0].contains(e.target) || this.parent.element.querySelectorAll('.e-gridcontent')[0].contains(e.target)) && this.parent.currentViewData.length > 0) {\n      var rowIndex = getValue('rowIndex', closest(e.target, 'tr'));\n      var dateObject = this.parent.currentViewData[rowIndex].ganttProperties.startDate;\n\n      if (!isNullOrUndefined(dateObject)) {\n        var left = this.parent.dataOperation.getTaskLeft(dateObject, false);\n\n        if (this.parent.autoFocusTasks) {\n          this.updateScrollLeft(left);\n        }\n      }\n    }\n  };\n  /**\n   * To focus selected task in chart side\n   *\n   * @param {number} scrollLeft .\n   * @returns {void} .\n   * @private\n   */\n\n\n  GanttChart.prototype.updateScrollLeft = function (scrollLeft) {\n    scrollLeft = scrollLeft > 0 ? scrollLeft : 0;\n    scrollLeft = this.scrollElement.scrollWidth <= scrollLeft ? this.scrollElement.scrollWidth : scrollLeft;\n\n    if (this.scrollElement.offsetWidth + this.parent.ganttChartModule.scrollElement.scrollLeft < scrollLeft || this.scrollElement.scrollLeft > scrollLeft) {\n      this.scrollObject.setScrollLeft(scrollLeft - 50);\n    } //  this.parent.ganttChartModule.scrollObject.updateLeftPosition();\n\n  };\n  /**\n   *  Method trigger while perform mouse up action.\n   *\n   * @param {PointerEvent} e .\n   * @returns {void}\n   * @private\n   */\n\n\n  GanttChart.prototype.mouseUp = function (e) {\n    if (!this.isGanttElement) {\n      this.parent.notify('chartMouseUp', e);\n    }\n\n    this.isGanttElement = false;\n  };\n  /**\n   *  Method trigger while perform mouse up action.\n   *\n   * @param {PointerEvent} e .\n   * @returns {void} .\n   * @private\n   */\n\n\n  GanttChart.prototype.documentMouseUp = function (e) {\n    this.isGanttElement = true;\n\n    if (this.parent.allowRowDragAndDrop) {\n      var ganttDragElemet = this.parent.element.querySelector('.e-ganttdrag');\n\n      if (ganttDragElemet) {\n        ganttDragElemet.remove();\n      }\n    }\n\n    if (this.parent.isDestroyed || e.which === 3) {\n      return;\n    }\n\n    var isTaskbarEdited = false;\n\n    if (this.parent.editSettings.allowTaskbarEditing && getValue('editModule.taskbarEditModule.isMouseDragged', this.parent) && getValue('editModule.taskbarEditModule.taskBarEditAction', this.parent)) {\n      isTaskbarEdited = true;\n    }\n\n    this.parent.notify('chartMouseUp', e);\n\n    if (this.parent.showActiveElement) {\n      if (this.focusedElement && !e.target.classList.contains('e-split-bar')) {\n        this.focusedElement.tabIndex = this.focusedElement.tabIndex === 0 ? -1 : this.focusedElement.tabIndex;\n        removeClass([this.focusedElement], 'e-active-container');\n      }\n    }\n\n    if (!isTaskbarEdited) {\n      /** Expand/collapse action */\n      var target = e.target;\n      var isOnTaskbarElement = e.target.classList.contains(cls.taskBarMainContainer) || closest(e.target, '.' + cls.taskBarMainContainer);\n\n      if (closest(target, '.e-gantt-parent-taskbar')) {\n        this.chartExpandCollapseRequest(e);\n      } else if (!isOnTaskbarElement && this.parent.autoFocusTasks) {\n        this.scrollToTarget(e);\n        /** Scroll to task */\n      }\n    }\n\n    if (this.parent.editModule && this.parent.editModule.taskbarEditModule) {\n      this.parent.editModule.taskbarEditModule.removeFalseLine(true);\n    }\n\n    if (!isNullOrUndefined(this.parent.onTaskbarClick) && !isTaskbarEdited) {\n      var target = e.target;\n      var taskbarElement = closest(target, '.e-gantt-parent-taskbar,.e-gantt-child-taskbar,.e-gantt-milestone');\n\n      if (taskbarElement) {\n        this.onTaskbarClick(e, target, taskbarElement);\n      }\n    }\n  };\n  /**\n   * This event triggered when click on taskbar element\n   *\n   * @param {PointerEvent | KeyboardEventArgs} e .\n   * @param {EventTarget} target .\n   * @param {Element} taskbarElement .\n   * @returns {void}\n   */\n\n\n  GanttChart.prototype.onTaskbarClick = function (e, target, taskbarElement) {\n    var chartRow = closest(target, 'tr');\n    var rowIndex = getValue('rowIndex', chartRow);\n    var data = this.getRecordByTarget(e);\n    var args = {\n      data: data,\n      taskbarElement: taskbarElement,\n      rowIndex: rowIndex,\n      target: target\n    };\n    this.parent.trigger('onTaskbarClick', args);\n  };\n  /**\n   *  Method trigger while perform mouse leave action.\n   *\n   * @param {PointerEvent} e .\n   * @returns {void} .\n   * @private\n   */\n\n\n  GanttChart.prototype.ganttChartLeave = function (e) {\n    if (this.parent.editSettings.allowTaskbarEditing) {\n      this.parent.notify('chartMouseLeave', e);\n    }\n  };\n  /**\n   *  Method trigger while perform mouse move action.\n   *\n   * @param {PointerEvent} e .\n   * @returns {void} .\n   * @private\n   */\n\n\n  GanttChart.prototype.ganttChartMove = function (e) {\n    if (this.parent.editSettings.allowTaskbarEditing) {\n      this.parent.notify('chartMouseMove', e);\n\n      if (!isNullOrUndefined(this.parent.taskFields.dependency) && this.parent.connectorLineEditModule) {\n        this.parent.connectorLineEditModule.updateConnectorLineEditElement(e);\n      }\n    }\n  };\n  /**\n   *  Method trigger while perform right click action.\n   *\n   * @param {PointerEvent} e .\n   * @returns {void} .\n   * @private\n   */\n\n\n  GanttChart.prototype.contextClick = function (e) {\n    if (this.parent.allowFiltering && this.parent.filterModule) {\n      this.parent.filterModule.closeFilterOnContextClick(e.srcElement);\n    }\n  };\n  /**\n   * Method to trigger while perform mouse move on Gantt.\n   *\n   * @param {PointerEvent} e .\n   * @returns {void} .\n   * @private\n   */\n\n\n  GanttChart.prototype.mouseMoveHandler = function (e) {\n    if (!isNullOrUndefined(this.parent.onMouseMove) && (this.parent.flatData.length || e.target.classList.contains('e-header-cell-label') || e.target.classList.contains('e-headercell'))) {\n      var target = e.target;\n      var args = {\n        originalEvent: e\n      };\n      var element = closest(target, '.e-chart-row-cell,.e-connector-line-container,' + '.e-event-markers,.e-header-cell-label,.e-rowcell,.e-headercell,.e-indicator-span');\n\n      if (element) {\n        var rowData = void 0;\n        var rowElement = closest(target, '.e-rowcell,.e-chart-row-cell');\n        var columnElement = closest(target, '.e-rowcell,.e-headercell');\n\n        if (rowElement) {\n          rowData = this.parent.ganttChartModule.getRecordByTarget(e);\n          args.data = rowData;\n        }\n\n        if (columnElement) {\n          var cellIndex = getValue('cellIndex', columnElement);\n          args.column = this.parent.treeGrid.columns[cellIndex];\n        }\n\n        if (closest(target, '.e-indicator-span')) {\n          var index = 0;\n          var indicators = rowData.ganttProperties.indicators;\n\n          if (indicators.length > 1) {\n            for (index = 0; index < indicators.length; index++) {\n              if (indicators[index].name === element.innerText.trim()) {\n                break;\n              }\n            }\n          }\n\n          args.indicator = indicators[index];\n        }\n\n        if (closest(target, '.e-connector-line-container')) {\n          var obj = {};\n          obj.target = element;\n          args.predecessor = this.parent.tooltipModule.getPredecessorTooltipData(obj);\n        }\n\n        if (closest(target, '.e-event-markers')) {\n          var obj = {};\n          obj.target = element;\n          args.eventMarkers = this.parent.tooltipModule.getMarkerTooltipData(obj);\n        }\n\n        if (target.classList.contains('e-header-cell-label')) {\n          args.date = new Date(target.dataset.content);\n        }\n      }\n\n      this.parent.trigger('onMouseMove', args);\n    }\n  };\n  /**\n   * Double click handler for chart\n   *\n   * @param {PointerEvent} e .\n   * @returns {void} .\n   */\n\n\n  GanttChart.prototype.doubleClickHandler = function (e) {\n    this.parent.notify('chartDblClick', e);\n    var target = e.target;\n    var row = closest(target, 'tr');\n    var rowIndex = getValue('rowIndex', row);\n    var rowData = this.parent.ganttChartModule.getRecordByTarget(e);\n    var args = {\n      row: row,\n      rowData: rowData,\n      rowIndex: rowIndex,\n      target: target\n    };\n    this.recordDoubleClick(args);\n  };\n  /**\n   * To trigger record double click event.\n   *\n   * @param {RecordDoubleClickEventArgs} args .\n   * @returns {void} .\n   * @private\n   */\n\n\n  GanttChart.prototype.recordDoubleClick = function (args) {\n    this.parent.trigger('recordDoubleClick', args);\n  };\n  /**\n   * @param {PointerEvent | KeyboardEventArgs} e .\n   * @returns {IGanttData} .\n   * @private\n   */\n\n\n  GanttChart.prototype.getRecordByTarget = function (e) {\n    var ganttData;\n    var row = closest(e.target, 'div.' + cls.taskBarMainContainer);\n\n    if (!isNullOrUndefined(row)) {\n      var id = row.getAttribute('rowUniqueId');\n      ganttData = this.parent.getRecordByID(id);\n    } else {\n      row = closest(e.target, 'tr');\n\n      if (row) {\n        var rowIndex = getValue('rowIndex', closest(e.target, 'tr'));\n        ganttData = this.parent.currentViewData[rowIndex];\n      }\n    }\n\n    return ganttData;\n  };\n  /**\n   * To get gantt chart row elements\n   *\n   * @returns {NodeListOf<Element>} .\n   * @private\n   */\n\n\n  GanttChart.prototype.getChartRows = function () {\n    return document.getElementById(this.parent.element.id + 'GanttTaskTableBody').querySelectorAll('.e-chart-row');\n  };\n  /**\n   * Expand Collapse operations from gantt chart side\n   *\n   * @param {PointerEvent} e .\n   * @returns {void} .\n   * @private\n   */\n\n\n  GanttChart.prototype.chartExpandCollapseRequest = function (e) {\n    if (this.parent.enableMultiTaskbar) {\n      return;\n    }\n\n    var target = e.target;\n    var parentElement = closest(target, '.e-gantt-parent-taskbar');\n    var record = this.getRecordByTarget(e);\n    var chartRow = closest(target, 'tr');\n    var rowIndex = getValue('rowIndex', chartRow);\n    var gridRow = this.parent.treeGrid.getRows()[rowIndex];\n    var args = {\n      data: record,\n      gridRow: gridRow,\n      chartRow: chartRow,\n      cancel: false\n    };\n    this.isExpandCollapseFromChart = true;\n\n    if (parentElement.classList.contains('e-row-expand')) {\n      this.collapseGanttRow(args);\n    } else if (parentElement.classList.contains('e-row-collapse')) {\n      this.expandGanttRow(args);\n    }\n  };\n  /**\n   * @returns {void} .\n   * @private\n   */\n\n\n  GanttChart.prototype.reRenderConnectorLines = function () {\n    this.parent.connectorLineModule.dependencyViewContainer.innerHTML = '';\n    this.parent.connectorLineIds = [];\n    this.parent.updatedConnectorLineCollection = [];\n    this.parent.predecessorModule.createConnectorLinesCollection();\n    this.parent.connectorLineModule.renderConnectorLines(this.parent.updatedConnectorLineCollection);\n  };\n  /**\n   * To collapse gantt rows\n   *\n   * @param {object} args .\n   * @param {boolean} isCancel .\n   * @returns {void} .\n   * @private\n   */\n\n\n  GanttChart.prototype.collapseGanttRow = function (args, isCancel) {\n    var _this = this;\n\n    if (isCancel) {\n      this.collapsedGanttRow(args);\n    } else {\n      this.parent.trigger('collapsing', args, function (arg) {\n        if (_this.isExpandCollapseFromChart && !getValue('cancel', arg)) {\n          _this.collapsedGanttRow(arg);\n        }\n\n        _this.isExpandCollapseFromChart = false;\n      });\n    }\n  };\n  /**\n   * @returns {void} .\n   * @param {object} args .\n   * @private\n   */\n\n\n  GanttChart.prototype.collapsedGanttRow = function (args) {\n    var record = getValue('data', args);\n\n    if (this.isExpandCollapseFromChart) {\n      this.expandCollapseChartRows('collapse', getValue('chartRow', args), record, null);\n      this.parent.treeGrid.collapseRow(getValue('gridRow', args), record);\n      this.isExpandCollapseFromChart = false;\n    } else {\n      this.expandCollapseChartRows('collapse', getValue('chartRow', args), record, null);\n    } // To render the child record on parent row after collapsing\n\n\n    if (this.parent.viewType === 'ResourceView') {\n      this.renderMultiTaskbar(record);\n    }\n\n    if (!this.parent.enableVirtualization) {\n      this.parent.updateContentHeight();\n    }\n\n    this.updateWidthAndHeight();\n    this.reRenderConnectorLines();\n    getValue('chartRow', args).setAttribute('aria-expanded', 'false');\n    this.parent.trigger('collapsed', args);\n  };\n  /**\n   * To expand gantt rows\n   *\n   * @returns {void} .\n   * @param {object} args .\n   * @param {boolean} isCancel .\n   * @private\n   */\n\n\n  GanttChart.prototype.expandGanttRow = function (args, isCancel) {\n    var _this = this;\n\n    if (isCancel) {\n      this.expandedGanttRow(args);\n    } else {\n      this.parent.trigger('expanding', args, function (arg) {\n        if (_this.isExpandCollapseFromChart && !getValue('cancel', arg)) {\n          _this.expandedGanttRow(arg);\n        }\n\n        _this.isExpandCollapseFromChart = false;\n      });\n    }\n  };\n  /**\n   * @returns {void} .\n   * @param {object} args .\n   * @private\n   */\n\n\n  GanttChart.prototype.expandedGanttRow = function (args) {\n    var record = getValue('data', args);\n\n    if (this.isExpandCollapseFromChart) {\n      this.expandCollapseChartRows('expand', getValue('chartRow', args), record, null);\n      this.parent.treeGrid.expandRow(getValue('gridRow', args), record);\n      this.isExpandCollapseFromChart = false;\n    } else {\n      if (!this.parent.isExpandCollapseLevelMethod) {\n        this.expandCollapseChartRows('expand', getValue('chartRow', args), record, null);\n      }\n\n      this.parent.isExpandCollapseLevelMethod = false;\n    } // To render the child record on parent row after expanding.\n\n\n    if (this.parent.viewType === 'ResourceView') {\n      this.renderMultiTaskbar(record);\n    }\n\n    if (!this.parent.enableVirtualization) {\n      this.parent.updateContentHeight();\n    }\n\n    this.updateWidthAndHeight();\n    this.reRenderConnectorLines();\n    getValue('chartRow', args).setAttribute('aria-expanded', 'true');\n    this.parent.trigger('expanded', args);\n  };\n\n  GanttChart.prototype.renderMultiTaskbar = function (record) {\n    if (this.parent.enableMultiTaskbar) {\n      this.parent.chartRowsModule.refreshRecords([record], true);\n    } else if (this.parent.showOverAllocation) {\n      this.parent.ganttChartModule.renderRangeContainer(this.parent.currentViewData);\n    }\n  };\n  /**\n   * On expand collapse operation row properties will be updated here.\n   *\n   * @param {string} action .\n   * @param {Node} rowElement .\n   * @param {IGanttData} record .\n   * @param {boolean} isChild .\n   * @returns {void} .\n   * @private\n   */\n\n\n  GanttChart.prototype.expandCollapseChartRows = function (action, rowElement, record, isChild) {\n    var displayType;\n\n    if (action === 'expand') {\n      displayType = 'table-row';\n\n      if (!isChild) {\n        record.expanded = true;\n      }\n\n      var targetElement = rowElement.querySelectorAll('.e-row-collapse');\n\n      for (var t = 0; t < targetElement.length; t++) {\n        addClass([targetElement[t]], 'e-row-expand');\n        removeClass([targetElement[t]], 'e-row-collapse');\n      }\n    } else if (action === 'collapse') {\n      displayType = 'none';\n\n      if (!isChild) {\n        record.expanded = false;\n      }\n\n      var targetElement = rowElement.querySelectorAll('.e-row-expand');\n\n      for (var t = 0; t < targetElement.length; t++) {\n        addClass([targetElement[t]], 'e-row-collapse');\n        removeClass([targetElement[t]], 'e-row-expand');\n      }\n    }\n\n    var childRecords = record.childRecords;\n    var chartRows = this.getChartRows();\n    var rows = [];\n\n    for (var i = 0; i < chartRows.length; i++) {\n      if (chartRows[i].classList.contains('gridrowtaskId' + record.ganttProperties.rowUniqueID + 'level' + (record.level + 1))) {\n        rows.push(chartRows[i]);\n      }\n    }\n\n    for (var i = 0; i < rows.length; i++) {\n      rows[i].style.display = displayType;\n\n      if (childRecords[i].childRecords && childRecords[i].childRecords.length && (action === 'collapse' || childRecords[i].expanded || this.isExpandAll)) {\n        this.expandCollapseChartRows(action, rows[i], childRecords[i], true);\n      }\n    }\n  };\n  /**\n   * Public method to expand or collapse all the rows of Gantt\n   *\n   * @returns {void}\n   * @param {string} action .\n   * @private\n   */\n\n\n  GanttChart.prototype.expandCollapseAll = function (action) {\n    if (action === 'expand') {\n      this.isExpandAll = true;\n      this.parent.treeGrid.expandAll();\n    } else {\n      this.parent.treeGrid.collapseAll();\n    }\n\n    this.isExpandAll = false;\n    var focussedElement = this.parent.element.querySelector('.e-treegrid');\n    focussedElement.focus();\n  };\n  /**\n   * Public method to expand particular level of rows.\n   *\n   * @returns {void} .\n   * @param {number} level .\n   * @private\n   */\n\n\n  GanttChart.prototype.expandAtLevel = function (level) {\n    this.parent.treeGrid.expandAtLevel(level);\n  };\n  /**\n   * Public method to collapse particular level of rows.\n   *\n   * @returns {void} .\n   * @param {number} level .\n   * @private\n   */\n\n\n  GanttChart.prototype.collapseAtLevel = function (level) {\n    if (this.parent.enableVirtualization) {\n      this.parent.isExpandCollapseLevelMethod = true;\n    }\n\n    this.parent.treeGrid.collapseAtLevel(level);\n  };\n  /**\n   * Event Binding for gantt chart click\n   *\n   * @returns {void} .\n   */\n\n\n  GanttChart.prototype.wireEvents = function () {\n    var isIE11Pointer = Browser.isPointer; // eslint-disable-line\n\n    var mouseDown = Browser.touchStartEvent;\n    var mouseUp = Browser.touchEndEvent;\n    var mouseMove = Browser.touchMoveEvent;\n    var cancel = isIE11Pointer ? 'pointerleave' : 'mouseleave';\n    EventHandler.add(this.parent.chartPane, mouseDown, this.ganttChartMouseDown, this);\n    EventHandler.add(this.parent.chartPane, cancel, this.ganttChartLeave, this);\n    EventHandler.add(this.parent.chartPane, mouseMove, this.ganttChartMove, this);\n\n    if (this.parent.isAdaptive) {\n      EventHandler.add(this.parent.chartPane, click, this.ganttChartMouseClick, this);\n      EventHandler.add(this.parent.chartPane, mouseUp, this.ganttChartMouseUp, this);\n    }\n\n    if (!this.parent.isAdaptive) {\n      EventHandler.add(this.parent.element, mouseUp, this.documentMouseUp, this);\n      EventHandler.add(document, mouseUp, this.mouseUp, this);\n    }\n\n    EventHandler.add(this.parent.element, 'mousemove', this.mouseMoveHandler, this);\n    EventHandler.add(document.body, 'contextmenu', this.contextClick, this);\n    EventHandler.add(document, 'mouseup', this.contextClick, this);\n    EventHandler.add(this.parent.chartRowsModule.ganttChartTableBody, 'dblclick', this.doubleClickHandler, this);\n  };\n\n  GanttChart.prototype.unWireEvents = function () {\n    var isIE11Pointer = Browser.isPointer; // eslint-disable-line\n\n    var mouseDown = Browser.touchStartEvent;\n    var mouseUp = Browser.touchEndEvent;\n    var mouseMove = Browser.touchMoveEvent;\n    var cancel = isIE11Pointer ? 'pointerleave' : 'mouseleave';\n    EventHandler.remove(this.parent.chartRowsModule.ganttChartTableBody, mouseDown, this.ganttChartMouseDown);\n    EventHandler.remove(this.parent.chartPane, cancel, this.ganttChartLeave);\n    EventHandler.remove(this.parent.chartPane, mouseMove, this.ganttChartMove);\n\n    if (this.parent.isAdaptive) {\n      EventHandler.remove(this.parent.chartPane, click, this.ganttChartMouseClick);\n      EventHandler.remove(this.parent.chartPane, mouseUp, this.ganttChartMouseUp);\n    }\n\n    if (!this.parent.isAdaptive) {\n      EventHandler.remove(this.parent.element, mouseUp, this.documentMouseUp);\n      EventHandler.remove(document, mouseUp, this.mouseUp);\n    }\n\n    EventHandler.remove(this.parent.element, 'mousemove', this.mouseMoveHandler);\n    EventHandler.remove(document.body, 'contextmenu', this.contextClick);\n    EventHandler.remove(document, 'mouseup', this.contextClick);\n    EventHandler.remove(this.parent.chartRowsModule.ganttChartTableBody, 'dblclick', this.doubleClickHandler);\n  };\n  /**\n   * To get record by taskbar element.\n   *\n   * @param {Element} target .\n   * @returns {IGanttData} .\n   * @private\n   */\n\n\n  GanttChart.prototype.getRecordByTaskBar = function (target) {\n    var item = this.parent.currentViewData[this.getIndexByTaskBar(target)];\n    return item;\n  };\n  /**\n   * Trigger Tab & Shift + Tab keypress to highlight active element.\n   *\n   * @param {KeyboardEventArgs} e .\n   * @returns {void} .\n   * @private\n   */\n\n\n  GanttChart.prototype.onTabAction = function (e) {\n    this.parent.treeGrid.grid.enableHeaderFocus = this.parent.enableHeaderFocus;\n    var isInEditedState = this.parent.editModule && this.parent.editModule.cellEditModule && this.parent.editModule.cellEditModule.isCellEdit;\n\n    if (!this.parent.showActiveElement && !isInEditedState) {\n      return;\n    }\n\n    var $target = isInEditedState ? e.target.closest('.e-rowcell') : e.target;\n\n    if ($target.closest('.e-rowcell') || $target.closest('.e-chart-row')) {\n      this.parent.focusModule.setActiveElement($target);\n    }\n    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n\n\n    this.focusedRowIndex = $target.closest('.e-rowcell') ? $target.parentElement.rowIndex :\n    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n    $target.closest('.e-chart-row') ? $target.closest('.e-chart-row').rowIndex : -1;\n    var isTab = e.action === 'tab' ? true : false;\n    var nextElement = this.getNextElement($target, isTab, isInEditedState);\n\n    if (nextElement === 'noNextRow') {\n      this.manageFocus($target, 'remove', true);\n      return;\n    }\n\n    if (typeof nextElement !== 'string') {\n      if ($target.classList.contains('e-rowcell') || $target.closest('.e-chart-row-cell') || $target.classList.contains('e-headercell') || $target.closest('.e-segmented-taskbar')) {\n        e.preventDefault();\n      }\n\n      if ($target.classList.contains('e-rowcell') && nextElement && nextElement.classList.contains('e-rowcell') || $target.classList.contains('e-headercell')) {\n        // eslint-disable-line                                                                                                                                                                                                                                    \n        if (isTab) {\n          if (this.parent.editSettings.allowNextRowEdit) {\n            var rowData = this.parent.currentViewData[this.focusedRowIndex];\n            var columnName = this.parent.ganttColumns[nextElement.getAttribute('aria-colindex')].field;\n\n            if (rowData.hasChildRecords) {\n              if (columnName === this.parent.taskFields.endDate || columnName === this.parent.taskFields.duration || columnName === this.parent.taskFields.dependency || columnName === this.parent.taskFields.progress || columnName === this.parent.taskFields.work || columnName === 'taskType') {\n                this.parent.treeGrid.grid.endEdit();\n                this.parent.treeGrid.grid.notify('key-pressed', e);\n              } else if (columnName === this.parent.taskFields.name || columnName === this.parent.taskFields.startDate) {\n                this.parent.treeGrid.grid.notify('key-pressed', e);\n              } else {\n                this.parent.treeGrid.grid.notify('key-pressed', e);\n                this.parent.treeGrid.editCell(this.focusedRowIndex, columnName); // eslint-disable-line\n              }\n            } else {\n              this.parent.treeGrid.grid.notify('key-pressed', e);\n            }\n          } else {\n            this.parent.treeGrid.grid.notify('key-pressed', e);\n          }\n        } else {\n          this.parent.treeGrid.grid.notify('key-pressed', e);\n        }\n      }\n\n      if (!this.parent.editModule.cellEditModule.isCellEdit) {\n        if (nextElement) {\n          if ($target.classList.contains('e-rowcell')) {\n            this.manageFocus($target, 'remove', false);\n          } else {\n            this.manageFocus($target, 'remove', true);\n          }\n\n          if (nextElement.classList.contains('e-rowcell')) {\n            if (!$target.classList.contains('e-rowcell')) {\n              this.parent.treeGrid.grid.notify('key-pressed', e);\n              var fmodule = getValue('focusModule', this.parent.treeGrid.grid);\n              fmodule.currentInfo.element = nextElement;\n              fmodule.currentInfo.elementToFocus = nextElement;\n              /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n\n              fmodule.content.matrix.current = [nextElement.parentElement.rowIndex, nextElement.cellIndex];\n            }\n\n            this.manageFocus(nextElement, 'add', false);\n          } else {\n            this.manageFocus(nextElement, 'add', true);\n          }\n\n          this.parent.focusModule.setActiveElement(nextElement);\n        }\n      }\n    }\n  };\n  /**\n   * Get next/previous sibling element.\n   *\n   * @param {Element} $target .\n   * @param {boolean} isTab .\n   * @param {boolean} isInEditedState .\n   * @returns {Element | string} .\n   */\n\n\n  GanttChart.prototype.getNextElement = function ($target, isTab, isInEditedState) {\n    var nextElement = isTab ? $target.nextElementSibling : $target.previousElementSibling;\n\n    while (nextElement && nextElement.parentElement.classList.contains('e-row')) {\n      if (!nextElement.matches('.e-hide') && !nextElement.matches('.e-rowdragdrop')) {\n        return nextElement;\n      }\n\n      nextElement = isTab ? nextElement.nextElementSibling : nextElement.previousElementSibling;\n    }\n\n    if (!isNullOrUndefined(nextElement) && (nextElement.classList.contains('e-taskbar-main-container') || nextElement.classList.contains('e-right-connectorpoint-outer-div'))) {\n      var record = this.parent.currentViewData[this.focusedRowIndex];\n\n      if (!isNullOrUndefined(record.ganttProperties.segments) && record.ganttProperties.segments.length > 0) {\n        nextElement = nextElement.classList.contains('e-right-connectorpoint-outer-div') ? nextElement.parentElement.nextElementSibling : nextElement.getElementsByClassName('e-gantt-child-taskbar-inner-div')[0];\n      }\n    }\n\n    if (this.validateNextElement(nextElement)) {\n      return nextElement;\n    } else {\n      var rowIndex = -1;\n      var rowElement = null;\n      var childElement = void 0;\n\n      if ($target.classList.contains('e-rowcell') && isInEditedState && this.parent.editSettings.allowNextRowEdit) {\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        rowIndex = $target.parentElement.rowIndex;\n        rowElement = this.getNextRowElement(rowIndex, isTab, true);\n        childElement = this.getChildElement(rowElement, isTab);\n        return childElement;\n      } else if ($target.classList.contains('e-rowcell')) {\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        rowIndex = $target.parentElement.rowIndex;\n\n        if (isTab) {\n          rowElement = this.parent.getRowByIndex(rowIndex);\n\n          if (this.validateNextElement(rowElement, 'e-left-label-container')) {\n            return rowElement.getElementsByClassName('e-left-label-container')[0];\n          } else if (this.validateNextElement(rowElement, 'e-taskbar-main-container')) {\n            return rowElement.getElementsByClassName('e-taskbar-main-container')[0];\n          } else if (this.validateNextElement(rowElement, 'e-right-label-container')) {\n            return rowElement.getElementsByClassName('e-right-label-container')[0];\n          }\n        } else {\n          rowElement = this.getNextRowElement(rowIndex, isTab, false);\n\n          if (this.validateNextElement(rowElement, 'e-right-label-container')) {\n            return rowElement.getElementsByClassName('e-right-label-container')[0];\n          } else if (this.validateNextElement(rowElement, 'e-taskbar-main-container')) {\n            return rowElement.getElementsByClassName('e-taskbar-main-container')[0];\n          } else if (this.validateNextElement(rowElement, 'e-left-label-container')) {\n            return rowElement.getElementsByClassName('e-left-label-container')[0];\n          }\n        }\n      } else if ($target.parentElement.classList.contains('e-chart-row-cell') || $target.parentElement.parentElement.classList.contains('e-chart-row-cell')) {\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        rowIndex = closest($target, '.e-chart-row').rowIndex;\n\n        if (isTab) {\n          rowElement = this.getNextRowElement(rowIndex, isTab, true);\n        } else {\n          rowElement = this.parent.treeGrid.grid.getRowByIndex(rowIndex);\n        }\n\n        var childElement_1 = this.getChildElement(rowElement, isTab);\n        return childElement_1;\n      }\n    }\n\n    return null;\n  };\n  /**\n   * Get next/previous row element.\n   *\n   * @param {number} rowIndex .\n   * @param {boolean} isTab .\n   * @param {boolean} isChartRow .\n   * @returns {Element} .\n   */\n\n\n  GanttChart.prototype.getNextRowElement = function (rowIndex, isTab, isChartRow) {\n    var expandedRecords = this.parent.getExpandedRecords(this.parent.currentViewData);\n    var currentItem = this.parent.currentViewData[rowIndex];\n    var expandedRecordIndex = expandedRecords.indexOf(currentItem);\n    var nextRecord = isTab ? expandedRecords[expandedRecordIndex + 1] : expandedRecords[expandedRecordIndex - 1];\n    var nextRowIndex = this.parent.currentViewData.indexOf(nextRecord);\n\n    if (nextRecord) {\n      return isChartRow ? this.parent.treeGrid.grid.getRowByIndex(nextRowIndex) : this.parent.getRowByIndex(nextRowIndex);\n    } else {\n      return null;\n    }\n  };\n  /**\n   * Validate next/previous sibling element haschilds.\n   *\n   * @param {Element} $target .\n   * @param {string} className .\n   * @returns {boolean} .\n   */\n\n\n  GanttChart.prototype.validateNextElement = function ($target, className) {\n    if ($target && $target.classList.contains('e-rowcell')) {\n      return true;\n    }\n\n    if ($target && className) {\n      var elementByClass = $target.getElementsByClassName(className)[0];\n      return elementByClass && elementByClass.hasChildNodes() ? true : false;\n    } else if ($target) {\n      return !isNullOrUndefined($target) && $target.hasChildNodes() ? true : false;\n    }\n\n    return false;\n  };\n  /**\n   * Getting child element based on row element.\n   *\n   * @param {Element} rowElement .\n   * @param {boolean} isTab .\n   * @returns {Element | string} .\n   */\n\n\n  GanttChart.prototype.getChildElement = function (rowElement, isTab) {\n    var childElement;\n\n    if (rowElement) {\n      childElement = isTab ? rowElement.children[0] : rowElement.children[rowElement.children.length - 1];\n\n      while (childElement) {\n        if (!childElement.matches('.e-hide') && !childElement.matches('.e-rowdragdrop')) {\n          return childElement;\n        }\n\n        childElement = isTab ? childElement.nextElementSibling : childElement.previousElementSibling;\n      }\n    } else {\n      return 'noNextRow';\n    }\n\n    return childElement;\n  };\n  /**\n   * Add/Remove active element.\n   *\n   * @private\n   * @param {HTMLElement} element .\n   * @param {string} focus .\n   * @param {boolean} isChartElement .\n   * @returns {void} .\n   */\n\n\n  GanttChart.prototype.manageFocus = function (element, focus, isChartElement) {\n    if (isChartElement) {\n      var childElement = null;\n\n      if (element.classList.contains('e-left-label-container') || element.classList.contains('e-right-label-container')) {\n        childElement = element.getElementsByTagName('span')[0];\n      } else if (element.classList.contains('e-taskbar-main-container') || element.classList.contains('e-gantt-child-taskbar-inner-div')) {\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        var rowIndex = closest(element, '.e-chart-row').rowIndex;\n        var data = this.parent.currentViewData[rowIndex];\n        var className = data.hasChildRecords ? data.ganttProperties.isAutoSchedule ? 'e-gantt-parent-taskbar' : 'e-manualparent-main-container' : data.ganttProperties.isMilestone ? 'e-gantt-milestone' : !isNullOrUndefined(data.ganttProperties.segments) && data.ganttProperties.segments.length > 0 ? 'e-segmented-taskbar' : 'e-gantt-child-taskbar';\n        childElement = element.getElementsByClassName(className)[0];\n\n        if (isNullOrUndefined(childElement)) {\n          childElement = element;\n        }\n      }\n\n      if (focus === 'add' && !isNullOrUndefined(childElement)) {\n        element.setAttribute('tabIndex', '0');\n        addClass([childElement], 'e-active-container');\n        element.focus();\n        this.focusedElement = childElement;\n      } else if (!isNullOrUndefined(childElement)) {\n        removeClass([childElement], 'e-active-container');\n        element.setAttribute('tabIndex', '-1');\n        element.blur();\n      }\n    } else {\n      if (focus === 'add') {\n        element.setAttribute('tabIndex', '0');\n        addClass([element], ['e-focused', 'e-focus']);\n        element.focus();\n      } else {\n        element.setAttribute('tabIndex', '-1');\n        removeClass([element], ['e-focused', 'e-focus']);\n        element.blur();\n      }\n    }\n  };\n  /**\n   * To get index by taskbar element.\n   *\n   * @param {Element} target .\n   * @returns {number} .\n   * @private\n   */\n\n\n  GanttChart.prototype.getIndexByTaskBar = function (target) {\n    var row;\n    var recordIndex;\n\n    if (!target.classList.contains(cls.taskBarMainContainer)) {\n      row = closest(target, 'div.' + cls.taskBarMainContainer);\n    } else {\n      row = target;\n    }\n\n    if (isNullOrUndefined(row)) {\n      row = closest(target, 'tr.' + cls.chartRow);\n      recordIndex = [].slice.call(this.parent.chartRowsModule.ganttChartTableBody.childNodes).indexOf(row);\n    } else {\n      var id = row.getAttribute('rowUniqueId');\n      var record = this.parent.getRecordByID(id);\n      recordIndex = this.parent.currentViewData.indexOf(record);\n    }\n\n    return recordIndex;\n  };\n\n  GanttChart.prototype.destroy = function () {\n    this.removeEventListener();\n    this.unWireEvents();\n    this.scrollObject.destroy();\n    this.scrollObject = null;\n  };\n\n  return GanttChart;\n}();\n\nexport { GanttChart };","map":{"version":3,"sources":["/Users/tristanbilot/Desktop/Design4green/design4green/node_modules/@syncfusion/ej2-gantt/src/gantt/base/gantt-chart.js"],"names":["createElement","formatUnit","EventHandler","Browser","isNullOrUndefined","closest","addClass","removeClass","getValue","cls","ChartScroll","click","VirtualContentRenderer","GanttChart","parent","isExpandCollapseFromChart","isExpandAll","isGanttElement","chartTimelineContainer","rangeViewContainer","className","rangeContainer","virtualRender","addEventListener","prototype","on","renderChartContainer","renderChartElements","renderInitialContents","renderChartContents","destroy","notify","wireEvents","chartElement","id","element","ganttChart","chartPane","appendChild","renderTimelineContainer","renderBodyContainers","timelineModule","createTimelineSeries","renderOverAllocationContainer","i","flatData","length","data","childRecords","dataOperation","updateOverlappingValues","querySelector","innerHTML","treeGrid","grid","filterSettings","columns","renderRangeContainer","currentViewData","isFromOnPropertyChange","updateProjectDates","cloneProjectStartDate","cloneProjectEndDate","isTimelineRoundOff","chartRowsModule","renderChartRows","predecessorModule","taskFields","dependency","connectorLineIds","updatedConnectorLineCollection","createConnectorLinesCollection","connectorLineModule","renderConnectorLines","viewType","showOverAllocation","updateWidthAndHeight","records","recordLength","count","ganttRecord","rangeCollection","ganttProperties","workTimelineRanges","renderRange","getTopValue","currentRecord","updatedRecords","getExpandedRecords","recordIndex","indexOf","expanded","rowHeight","getRangeHeight","hasChildRecords","Math","floor","taskBarHeight","topValue","sameIDElement","rowUniqueID","remove","parentDiv","styles","level","parentItem","enableMultiTaskbar","height","leftDiv","rangeChildContainer","left","rightDiv","width","ganttChartModule","chartBodyContent","timelineHeaderContainer","chartBodyContainer","scrollElement","chartScrollElement","scrollContent","virtualScrollModule","enableVirtualization","renderWrapper","scrollObject","toolbarHeight","toolbarModule","offsetHeight","setHeight","ganttHeight","emptydivHeight","emptyHeight","contentHeight","style","totalTimelineWidth","setVirtualHeight","updateGridLineContainerHeight","updateLastRowBottomWidth","wrapper","expandedRecords","lastExpandedRow","lastExpandedRowIndex","lastRow","getRowByIndex","table","ganttChartTableBody","querySelectorAll","clientHeight","removeEventListener","isDestroyed","off","ganttChartMouseDown","e","which","editSettings","allowTaskbarEditing","tabIndex","ganttChartMouseClick","autoFocusTasks","scrollToTarget","ganttChartMouseUp","row","target","contains","rowIndex","dateObject","startDate","getTaskLeft","updateScrollLeft","scrollLeft","scrollWidth","offsetWidth","setScrollLeft","mouseUp","documentMouseUp","allowRowDragAndDrop","ganttDragElemet","isTaskbarEdited","showActiveElement","focusedElement","classList","isOnTaskbarElement","taskBarMainContainer","chartExpandCollapseRequest","editModule","taskbarEditModule","removeFalseLine","onTaskbarClick","taskbarElement","chartRow","getRecordByTarget","args","trigger","ganttChartLeave","ganttChartMove","connectorLineEditModule","updateConnectorLineEditElement","contextClick","allowFiltering","filterModule","closeFilterOnContextClick","srcElement","mouseMoveHandler","onMouseMove","originalEvent","rowData","rowElement","columnElement","cellIndex","column","index","indicators","name","innerText","trim","indicator","obj","predecessor","tooltipModule","getPredecessorTooltipData","eventMarkers","getMarkerTooltipData","date","Date","dataset","content","doubleClickHandler","recordDoubleClick","ganttData","getAttribute","getRecordByID","getChartRows","document","getElementById","parentElement","record","gridRow","getRows","cancel","collapseGanttRow","expandGanttRow","reRenderConnectorLines","dependencyViewContainer","isCancel","_this","collapsedGanttRow","arg","expandCollapseChartRows","collapseRow","renderMultiTaskbar","updateContentHeight","setAttribute","expandedGanttRow","expandRow","isExpandCollapseLevelMethod","refreshRecords","action","isChild","displayType","targetElement","t","chartRows","rows","push","display","expandCollapseAll","expandAll","collapseAll","focussedElement","focus","expandAtLevel","collapseAtLevel","isIE11Pointer","isPointer","mouseDown","touchStartEvent","touchEndEvent","mouseMove","touchMoveEvent","add","isAdaptive","body","unWireEvents","getRecordByTaskBar","item","getIndexByTaskBar","onTabAction","enableHeaderFocus","isInEditedState","cellEditModule","isCellEdit","$target","focusModule","setActiveElement","focusedRowIndex","isTab","nextElement","getNextElement","manageFocus","preventDefault","allowNextRowEdit","columnName","ganttColumns","field","endDate","duration","progress","work","endEdit","editCell","fmodule","currentInfo","elementToFocus","matrix","current","nextElementSibling","previousElementSibling","matches","segments","getElementsByClassName","validateNextElement","childElement","getNextRowElement","getChildElement","childElement_1","isChartRow","currentItem","expandedRecordIndex","nextRecord","nextRowIndex","elementByClass","hasChildNodes","children","isChartElement","getElementsByTagName","isAutoSchedule","isMilestone","blur","slice","call","childNodes"],"mappings":"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","sourcesContent":["import { createElement, formatUnit, EventHandler, Browser } from '@syncfusion/ej2-base';\nimport { isNullOrUndefined, closest, addClass, removeClass, getValue } from '@syncfusion/ej2-base';\nimport * as cls from '../base/css-constants';\nimport { ChartScroll } from '../actions/chart-scroll';\nimport { click } from '@syncfusion/ej2-grids';\nimport { VirtualContentRenderer } from '../renderer/virtual-content-render';\n/**\n * module to render gantt chart - project view\n */\nvar GanttChart = /** @class */ (function () {\n    function GanttChart(parent) {\n        this.isExpandCollapseFromChart = false;\n        this.isExpandAll = false;\n        this.isGanttElement = false;\n        this.parent = parent;\n        this.chartTimelineContainer = null;\n        this.rangeViewContainer =\n            createElement('div', { className: cls.rangeContainer });\n        this.virtualRender = new VirtualContentRenderer(this.parent);\n        this.addEventListener();\n    }\n    GanttChart.prototype.addEventListener = function () {\n        this.parent.on('renderPanels', this.renderChartContainer, this);\n        this.parent.on('recordsUpdated', this.renderChartElements, this);\n        this.parent.on('dataReady', this.renderInitialContents, this);\n        this.parent.on('tree-grid-created', this.renderChartContents, this);\n        this.parent.on('destroy', this.destroy, this);\n    };\n    GanttChart.prototype.renderChartContents = function () {\n        this.parent.notify('refreshDayMarkers', {});\n        this.wireEvents();\n    };\n    /**\n     * Method to render top level containers in Gantt chart\n     *\n     * @returns {void} .\n     * @private\n     */\n    GanttChart.prototype.renderChartContainer = function () {\n        this.chartElement = createElement('div', { id: this.parent.element.id + 'GanttChart', className: cls.ganttChart });\n        this.parent.chartPane.appendChild(this.chartElement);\n        this.renderTimelineContainer();\n        this.renderBodyContainers();\n        // render top level div header and content\n        // Get timeline header from timeline class file and append to header div\n        // render content div\n        // Render scroll able div\n        // Render container for all element like, table, weekend and holidays\n        // Get rows element from rows renderer class\n        // Get label related info label renderer class\n        // Get baseline from baseline renderer class\n        // Get weekend elements from weekend-holidays renderer class\n    };\n    /**\n     * method to render timeline, holidays, weekends at load time\n     *\n     * @returns {void} .\n     */\n    GanttChart.prototype.renderInitialContents = function () {\n        this.parent.timelineModule.createTimelineSeries();\n    };\n    /**\n     * @returns {void} .\n     * @private\n     */\n    GanttChart.prototype.renderOverAllocationContainer = function () {\n        for (var i = 0; i < this.parent.flatData.length; i++) {\n            var data = this.parent.flatData[i];\n            if (data.childRecords.length > 0) {\n                this.parent.dataOperation.updateOverlappingValues(data);\n            }\n        }\n        var rangeContainer = this.parent.element.querySelector('.' + cls.rangeContainer);\n        if (rangeContainer) {\n            rangeContainer.innerHTML = '';\n        }\n        if (this.parent.treeGrid.grid.filterSettings.columns.length === 0) {\n            this.renderRangeContainer(this.parent.currentViewData);\n        }\n    };\n    GanttChart.prototype.renderChartElements = function () {\n        if (this.parent.isFromOnPropertyChange) {\n            this.rangeViewContainer.innerHTML = '';\n            this.parent.updateProjectDates(this.parent.cloneProjectStartDate, this.parent.cloneProjectEndDate, this.parent.isTimelineRoundOff);\n            this.parent.isFromOnPropertyChange = false;\n        }\n        else {\n            this.parent.chartRowsModule.renderChartRows();\n            if (this.parent.predecessorModule && this.parent.taskFields.dependency) {\n                this.parent.connectorLineIds = [];\n                this.parent.updatedConnectorLineCollection = [];\n                this.parent.predecessorModule.createConnectorLinesCollection();\n            }\n            this.parent.connectorLineModule.renderConnectorLines(this.parent.updatedConnectorLineCollection);\n            if (this.parent.viewType === 'ResourceView' && this.parent.showOverAllocation) {\n                this.renderOverAllocationContainer();\n            }\n        }\n        this.updateWidthAndHeight();\n        this.parent.notify('selectRowByIndex', {});\n    };\n    /**\n     * @param {IGanttData[]} records .\n     * @returns {void} .\n     * @private\n     */\n    GanttChart.prototype.renderRangeContainer = function (records) {\n        var recordLength = records.length;\n        var count;\n        var ganttRecord;\n        var rangeCollection;\n        if (this.parent.treeGrid.grid.filterSettings.columns.length === 0) {\n            for (count = 0; count < recordLength; count++) {\n                ganttRecord = records[count];\n                rangeCollection = ganttRecord.ganttProperties.workTimelineRanges;\n                if (rangeCollection) {\n                    this.renderRange(rangeCollection, ganttRecord);\n                }\n            }\n        }\n    };\n    GanttChart.prototype.getTopValue = function (currentRecord) {\n        var updatedRecords = this.parent.getExpandedRecords(this.parent.currentViewData);\n        var recordIndex = updatedRecords.indexOf(currentRecord);\n        if (!currentRecord.expanded) {\n            return (recordIndex * this.parent.rowHeight);\n        }\n        return ((recordIndex + 1) * this.parent.rowHeight);\n    };\n    /*get height for range bar*/\n    GanttChart.prototype.getRangeHeight = function (data) {\n        if (!data.expanded && data.hasChildRecords) {\n            return (this.parent.rowHeight - Math.floor((this.parent.rowHeight - this.parent.chartRowsModule.taskBarHeight)));\n        }\n        return (data.childRecords.length * this.parent.rowHeight) -\n            Math.floor((this.parent.rowHeight - this.parent.chartRowsModule.taskBarHeight));\n    };\n    GanttChart.prototype.renderRange = function (rangeCollection, currentRecord) {\n        var topValue = this.getTopValue(currentRecord);\n        var sameIDElement = this.rangeViewContainer.querySelector('.' + 'rangeContainer' + currentRecord.ganttProperties.rowUniqueID);\n        if (sameIDElement) {\n            sameIDElement.remove();\n        }\n        var parentDiv = createElement('div', {\n            className: 'rangeContainer' + currentRecord.ganttProperties.rowUniqueID, styles: \"top:\" + topValue + \"px; position: absolute;\"\n        });\n        if (currentRecord.level === 0 && !currentRecord.expanded && isNullOrUndefined(currentRecord.parentItem)\n            && !this.parent.enableMultiTaskbar) {\n            return;\n        }\n        for (var i = 0; i < rangeCollection.length; i++) {\n            var height = this.getRangeHeight(currentRecord);\n            var leftDiv = createElement('div', {\n                className: cls.rangeChildContainer + ' ' + 'e-leftarc', styles: \"left:\" + rangeCollection[i].left + \"px;\\n                top: \" + Math.floor((this.parent.rowHeight - this.parent.chartRowsModule.taskBarHeight) / 2) + \"px;\\n                height: \" + (height + 1) + \"px; border-right: 0px\"\n            });\n            var rightDiv = createElement('div', {\n                className: cls.rangeChildContainer + ' ' + 'e-rightarc',\n                styles: \"left:\" + (rangeCollection[i].left + rangeCollection[i].width - 5) + \"px;\\n                top: \" + Math.floor((this.parent.rowHeight - this.parent.chartRowsModule.taskBarHeight) / 2) + \"px; height: \" + (height + 1) + \"px;\\n                border-left: 0px\"\n            });\n            parentDiv.appendChild(leftDiv);\n            parentDiv.appendChild(rightDiv);\n            this.rangeViewContainer.appendChild(parentDiv);\n        }\n        this.parent.ganttChartModule.chartBodyContent.appendChild(this.rangeViewContainer);\n    };\n    /**\n     * @returns {void} .\n     * @private\n     */\n    GanttChart.prototype.renderTimelineContainer = function () {\n        this.chartTimelineContainer =\n            createElement('div', { className: cls.timelineHeaderContainer });\n        this.chartElement.appendChild(this.chartTimelineContainer);\n    };\n    /**\n     * initiate chart container\n     *\n     * @returns {void} .\n     */\n    GanttChart.prototype.renderBodyContainers = function () {\n        this.chartBodyContainer = createElement('div', { className: cls.chartBodyContainer });\n        this.chartElement.appendChild(this.chartBodyContainer);\n        this.scrollElement = createElement('div', {\n            className: cls.chartScrollElement + ' ' + cls.scrollContent, styles: 'position:relative;'\n        });\n        this.chartBodyContainer.appendChild(this.scrollElement);\n        this.chartBodyContent = createElement('div', { className: cls.chartBodyContent, styles: 'position:relative; overflow:hidden ' });\n        if (this.parent.virtualScrollModule && this.parent.enableVirtualization) {\n            this.parent.ganttChartModule.virtualRender.renderWrapper();\n        }\n        else {\n            this.scrollElement.appendChild(this.chartBodyContent);\n        }\n        // this.parent.chartRowsModule.createChartTable();\n        this.scrollObject = new ChartScroll(this.parent);\n        //this.scrollObject.setWidth(this.chartProperties.width);\n        var toolbarHeight = 0;\n        if (!isNullOrUndefined(this.parent.toolbarModule) && !isNullOrUndefined(this.parent.toolbarModule.element)) {\n            toolbarHeight = this.parent.toolbarModule.element.offsetHeight;\n        }\n        this.scrollObject.\n            setHeight(this.parent.ganttHeight - this.chartTimelineContainer.offsetHeight - toolbarHeight);\n    };\n    /**\n     * @returns {void} .\n     * @private\n     */\n    GanttChart.prototype.updateWidthAndHeight = function () {\n        //empty row height\n        var emptydivHeight = 36;\n        var emptyHeight = this.parent.contentHeight === 0 ? this.parent.flatData.length > 1 ? emptydivHeight : 0 : this.parent.contentHeight;\n        this.chartBodyContent.style.height = formatUnit(emptyHeight);\n        //let element: HTMLElement = this.chartTimelineContainer.querySelector('.' + cls.timelineHeaderTableContainer);\n        this.chartBodyContent.style.width = formatUnit(this.parent.timelineModule.totalTimelineWidth);\n        this.setVirtualHeight();\n        this.parent.notify('updateHeight', {});\n        this.parent.updateGridLineContainerHeight();\n        this.updateLastRowBottomWidth();\n    };\n    GanttChart.prototype.setVirtualHeight = function () {\n        if (this.parent.virtualScrollModule && this.parent.enableVirtualization) {\n            var wrapper = getValue('virtualTrack', this.parent.ganttChartModule.virtualRender);\n            wrapper.style.height = this.parent.updatedRecords.length * this.parent.rowHeight + 'px';\n        }\n    };\n    /**\n     * Method to update bottom border for chart rows\n     *\n     * @returns {void} .\n     */\n    GanttChart.prototype.updateLastRowBottomWidth = function () {\n        if (this.parent.currentViewData.length > 0 && this.parent.height !== 'auto') {\n            var expandedRecords = this.parent.virtualScrollModule && this.parent.enableVirtualization ?\n                this.parent.currentViewData : this.parent.getExpandedRecords(this.parent.currentViewData);\n            var lastExpandedRow = expandedRecords[expandedRecords.length - 1];\n            var lastExpandedRowIndex = this.parent.currentViewData.indexOf(lastExpandedRow);\n            var lastRow = this.parent.getRowByIndex(lastExpandedRowIndex);\n            var table = this.parent.chartRowsModule.ganttChartTableBody;\n            if (table.querySelectorAll('.e-chart-row-cell.e-chart-row-border.e-lastrow')) {\n                removeClass(table.querySelectorAll('.e-chart-row-cell.e-chart-row-border.e-lastrow'), 'e-lastrow');\n            }\n            if (this.chartBodyContent.clientHeight < this.chartBodyContainer.clientHeight) {\n                if (lastRow) {\n                    addClass(lastRow.querySelectorAll('td'), 'e-lastrow');\n                    this.chartBodyContent.style.height = formatUnit(this.parent.contentHeight + 1);\n                }\n            }\n        }\n    };\n    GanttChart.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('renderPanels', this.renderChartContainer);\n        this.parent.off('recordsUpdated', this.renderChartElements);\n        this.parent.off('dataReady', this.renderInitialContents);\n        this.parent.off('tree-grid-created', this.renderChartContents);\n        this.parent.off('destroy', this.destroy);\n    };\n    /**\n     * Click event handler in chart side\n     *\n     * @param {PointerEvent} e .\n     * @returns {void} .\n     */\n    GanttChart.prototype.ganttChartMouseDown = function (e) {\n        if (e.which !== 3 && this.parent.editSettings.allowTaskbarEditing) {\n            this.parent.notify('chartMouseDown', e);\n            this.parent.element.tabIndex = 0;\n        }\n    };\n    GanttChart.prototype.ganttChartMouseClick = function (e) {\n        if (this.parent.editSettings.allowTaskbarEditing) {\n            if (this.parent.autoFocusTasks) {\n                this.scrollToTarget(e); /** Scroll to task */\n            }\n            this.parent.notify('chartMouseClick', e);\n        }\n    };\n    GanttChart.prototype.ganttChartMouseUp = function (e) {\n        if (this.parent.editSettings.allowTaskbarEditing) {\n            this.parent.notify('chartMouseUp', e);\n        }\n    };\n    /**\n     *\n     * @param {PointerEvent} e .\n     * @returns {void} .\n     */\n    GanttChart.prototype.scrollToTarget = function (e) {\n        var row = closest(e.target, 'tr');\n        if (row && this.parent.element.contains(row) &&\n            (this.parent.element.querySelectorAll('.e-chart-rows-container')[0].contains(e.target) ||\n                this.parent.element.querySelectorAll('.e-gridcontent')[0].contains(e.target)) &&\n            this.parent.currentViewData.length > 0) {\n            var rowIndex = getValue('rowIndex', closest(e.target, 'tr'));\n            var dateObject = this.parent.currentViewData[rowIndex].ganttProperties.startDate;\n            if (!isNullOrUndefined(dateObject)) {\n                var left = this.parent.dataOperation.getTaskLeft(dateObject, false);\n                if (this.parent.autoFocusTasks) {\n                    this.updateScrollLeft(left);\n                }\n            }\n        }\n    };\n    /**\n     * To focus selected task in chart side\n     *\n     * @param {number} scrollLeft .\n     * @returns {void} .\n     * @private\n     */\n    GanttChart.prototype.updateScrollLeft = function (scrollLeft) {\n        scrollLeft = scrollLeft > 0 ? scrollLeft : 0;\n        scrollLeft = this.scrollElement.scrollWidth <= scrollLeft ? this.scrollElement.scrollWidth : scrollLeft;\n        if ((this.scrollElement.offsetWidth + this.parent.ganttChartModule.scrollElement.scrollLeft) < scrollLeft\n            || (this.scrollElement.scrollLeft > scrollLeft)) {\n            this.scrollObject.setScrollLeft(scrollLeft - 50);\n        }\n        //  this.parent.ganttChartModule.scrollObject.updateLeftPosition();\n    };\n    /**\n     *  Method trigger while perform mouse up action.\n     *\n     * @param {PointerEvent} e .\n     * @returns {void}\n     * @private\n     */\n    GanttChart.prototype.mouseUp = function (e) {\n        if (!this.isGanttElement) {\n            this.parent.notify('chartMouseUp', e);\n        }\n        this.isGanttElement = false;\n    };\n    /**\n     *  Method trigger while perform mouse up action.\n     *\n     * @param {PointerEvent} e .\n     * @returns {void} .\n     * @private\n     */\n    GanttChart.prototype.documentMouseUp = function (e) {\n        this.isGanttElement = true;\n        if (this.parent.allowRowDragAndDrop) {\n            var ganttDragElemet = this.parent.element.querySelector('.e-ganttdrag');\n            if (ganttDragElemet) {\n                ganttDragElemet.remove();\n            }\n        }\n        if (this.parent.isDestroyed || e.which === 3) {\n            return;\n        }\n        var isTaskbarEdited = false;\n        if (this.parent.editSettings.allowTaskbarEditing &&\n            getValue('editModule.taskbarEditModule.isMouseDragged', this.parent) &&\n            getValue('editModule.taskbarEditModule.taskBarEditAction', this.parent)) {\n            isTaskbarEdited = true;\n        }\n        this.parent.notify('chartMouseUp', e);\n        if (this.parent.showActiveElement) {\n            if (this.focusedElement && !e.target.classList.contains('e-split-bar')) {\n                this.focusedElement.tabIndex = this.focusedElement.tabIndex === 0 ? -1 : this.focusedElement.tabIndex;\n                removeClass([this.focusedElement], 'e-active-container');\n            }\n        }\n        if (!isTaskbarEdited) {\n            /** Expand/collapse action */\n            var target = e.target;\n            var isOnTaskbarElement = e.target.classList.contains(cls.taskBarMainContainer)\n                || closest(e.target, '.' + cls.taskBarMainContainer);\n            if (closest(target, '.e-gantt-parent-taskbar')) {\n                this.chartExpandCollapseRequest(e);\n            }\n            else if (!isOnTaskbarElement && this.parent.autoFocusTasks) {\n                this.scrollToTarget(e); /** Scroll to task */\n            }\n        }\n        if (this.parent.editModule && this.parent.editModule.taskbarEditModule) {\n            this.parent.editModule.taskbarEditModule.removeFalseLine(true);\n        }\n        if (!isNullOrUndefined(this.parent.onTaskbarClick) && !isTaskbarEdited) {\n            var target = e.target;\n            var taskbarElement = closest(target, '.e-gantt-parent-taskbar,.e-gantt-child-taskbar,.e-gantt-milestone');\n            if (taskbarElement) {\n                this.onTaskbarClick(e, target, taskbarElement);\n            }\n        }\n    };\n    /**\n     * This event triggered when click on taskbar element\n     *\n     * @param {PointerEvent | KeyboardEventArgs} e .\n     * @param {EventTarget} target .\n     * @param {Element} taskbarElement .\n     * @returns {void}\n     */\n    GanttChart.prototype.onTaskbarClick = function (e, target, taskbarElement) {\n        var chartRow = closest(target, 'tr');\n        var rowIndex = getValue('rowIndex', chartRow);\n        var data = this.getRecordByTarget(e);\n        var args = {\n            data: data,\n            taskbarElement: taskbarElement,\n            rowIndex: rowIndex,\n            target: target\n        };\n        this.parent.trigger('onTaskbarClick', args);\n    };\n    /**\n     *  Method trigger while perform mouse leave action.\n     *\n     * @param {PointerEvent} e .\n     * @returns {void} .\n     * @private\n     */\n    GanttChart.prototype.ganttChartLeave = function (e) {\n        if (this.parent.editSettings.allowTaskbarEditing) {\n            this.parent.notify('chartMouseLeave', e);\n        }\n    };\n    /**\n     *  Method trigger while perform mouse move action.\n     *\n     * @param {PointerEvent} e .\n     * @returns {void} .\n     * @private\n     */\n    GanttChart.prototype.ganttChartMove = function (e) {\n        if (this.parent.editSettings.allowTaskbarEditing) {\n            this.parent.notify('chartMouseMove', e);\n            if (!isNullOrUndefined(this.parent.taskFields.dependency) && this.parent.connectorLineEditModule) {\n                this.parent.connectorLineEditModule.updateConnectorLineEditElement(e);\n            }\n        }\n    };\n    /**\n     *  Method trigger while perform right click action.\n     *\n     * @param {PointerEvent} e .\n     * @returns {void} .\n     * @private\n     */\n    GanttChart.prototype.contextClick = function (e) {\n        if (this.parent.allowFiltering && this.parent.filterModule) {\n            this.parent.filterModule.closeFilterOnContextClick(e.srcElement);\n        }\n    };\n    /**\n     * Method to trigger while perform mouse move on Gantt.\n     *\n     * @param {PointerEvent} e .\n     * @returns {void} .\n     * @private\n     */\n    GanttChart.prototype.mouseMoveHandler = function (e) {\n        if (!isNullOrUndefined(this.parent.onMouseMove) &&\n            (this.parent.flatData.length ||\n                e.target.classList.contains('e-header-cell-label') ||\n                e.target.classList.contains('e-headercell'))) {\n            var target = e.target;\n            var args = { originalEvent: e };\n            var element = closest(target, '.e-chart-row-cell,.e-connector-line-container,' +\n                '.e-event-markers,.e-header-cell-label,.e-rowcell,.e-headercell,.e-indicator-span');\n            if (element) {\n                var rowData = void 0;\n                var rowElement = closest(target, '.e-rowcell,.e-chart-row-cell');\n                var columnElement = closest(target, '.e-rowcell,.e-headercell');\n                if (rowElement) {\n                    rowData = this.parent.ganttChartModule.getRecordByTarget(e);\n                    args.data = rowData;\n                }\n                if (columnElement) {\n                    var cellIndex = getValue('cellIndex', columnElement);\n                    args.column = this.parent.treeGrid.columns[cellIndex];\n                }\n                if (closest(target, '.e-indicator-span')) {\n                    var index = 0;\n                    var indicators = rowData.ganttProperties.indicators;\n                    if (indicators.length > 1) {\n                        for (index = 0; index < indicators.length; index++) {\n                            if (indicators[index].name === (element.innerText).trim()) {\n                                break;\n                            }\n                        }\n                    }\n                    args.indicator = indicators[index];\n                }\n                if (closest(target, '.e-connector-line-container')) {\n                    var obj = {};\n                    obj.target = element;\n                    args.predecessor = this.parent.tooltipModule.getPredecessorTooltipData(obj);\n                }\n                if (closest(target, '.e-event-markers')) {\n                    var obj = {};\n                    obj.target = element;\n                    args.eventMarkers = this.parent.tooltipModule.getMarkerTooltipData(obj);\n                }\n                if (target.classList.contains('e-header-cell-label')) {\n                    args.date = new Date(target.dataset.content);\n                }\n            }\n            this.parent.trigger('onMouseMove', args);\n        }\n    };\n    /**\n     * Double click handler for chart\n     *\n     * @param {PointerEvent} e .\n     * @returns {void} .\n     */\n    GanttChart.prototype.doubleClickHandler = function (e) {\n        this.parent.notify('chartDblClick', e);\n        var target = e.target;\n        var row = closest(target, 'tr');\n        var rowIndex = getValue('rowIndex', row);\n        var rowData = this.parent.ganttChartModule.getRecordByTarget(e);\n        var args = {\n            row: row,\n            rowData: rowData,\n            rowIndex: rowIndex,\n            target: target\n        };\n        this.recordDoubleClick(args);\n    };\n    /**\n     * To trigger record double click event.\n     *\n     * @param {RecordDoubleClickEventArgs} args .\n     * @returns {void} .\n     * @private\n     */\n    GanttChart.prototype.recordDoubleClick = function (args) {\n        this.parent.trigger('recordDoubleClick', args);\n    };\n    /**\n     * @param {PointerEvent | KeyboardEventArgs} e .\n     * @returns {IGanttData} .\n     * @private\n     */\n    GanttChart.prototype.getRecordByTarget = function (e) {\n        var ganttData;\n        var row = closest(e.target, 'div.' + cls.taskBarMainContainer);\n        if (!isNullOrUndefined(row)) {\n            var id = row.getAttribute('rowUniqueId');\n            ganttData = this.parent.getRecordByID(id);\n        }\n        else {\n            row = closest(e.target, 'tr');\n            if (row) {\n                var rowIndex = getValue('rowIndex', closest(e.target, 'tr'));\n                ganttData = this.parent.currentViewData[rowIndex];\n            }\n        }\n        return ganttData;\n    };\n    /**\n     * To get gantt chart row elements\n     *\n     * @returns {NodeListOf<Element>} .\n     * @private\n     */\n    GanttChart.prototype.getChartRows = function () {\n        return document.getElementById(this.parent.element.id + 'GanttTaskTableBody').querySelectorAll('.e-chart-row');\n    };\n    /**\n     * Expand Collapse operations from gantt chart side\n     *\n     * @param {PointerEvent} e .\n     * @returns {void} .\n     * @private\n     */\n    GanttChart.prototype.chartExpandCollapseRequest = function (e) {\n        if (this.parent.enableMultiTaskbar) {\n            return;\n        }\n        var target = e.target;\n        var parentElement = closest(target, '.e-gantt-parent-taskbar');\n        var record = this.getRecordByTarget(e);\n        var chartRow = closest(target, 'tr');\n        var rowIndex = getValue('rowIndex', chartRow);\n        var gridRow = this.parent.treeGrid.getRows()[rowIndex];\n        var args = { data: record, gridRow: gridRow, chartRow: chartRow, cancel: false };\n        this.isExpandCollapseFromChart = true;\n        if (parentElement.classList.contains('e-row-expand')) {\n            this.collapseGanttRow(args);\n        }\n        else if (parentElement.classList.contains('e-row-collapse')) {\n            this.expandGanttRow(args);\n        }\n    };\n    /**\n     * @returns {void} .\n     * @private\n     */\n    GanttChart.prototype.reRenderConnectorLines = function () {\n        this.parent.connectorLineModule.dependencyViewContainer.innerHTML = '';\n        this.parent.connectorLineIds = [];\n        this.parent.updatedConnectorLineCollection = [];\n        this.parent.predecessorModule.createConnectorLinesCollection();\n        this.parent.connectorLineModule.renderConnectorLines(this.parent.updatedConnectorLineCollection);\n    };\n    /**\n     * To collapse gantt rows\n     *\n     * @param {object} args .\n     * @param {boolean} isCancel .\n     * @returns {void} .\n     * @private\n     */\n    GanttChart.prototype.collapseGanttRow = function (args, isCancel) {\n        var _this = this;\n        if (isCancel) {\n            this.collapsedGanttRow(args);\n        }\n        else {\n            this.parent.trigger('collapsing', args, function (arg) {\n                if (_this.isExpandCollapseFromChart && !getValue('cancel', arg)) {\n                    _this.collapsedGanttRow(arg);\n                }\n                _this.isExpandCollapseFromChart = false;\n            });\n        }\n    };\n    /**\n     * @returns {void} .\n     * @param {object} args .\n     * @private\n     */\n    GanttChart.prototype.collapsedGanttRow = function (args) {\n        var record = getValue('data', args);\n        if (this.isExpandCollapseFromChart) {\n            this.expandCollapseChartRows('collapse', getValue('chartRow', args), record, null);\n            this.parent.treeGrid.collapseRow(getValue('gridRow', args), record);\n            this.isExpandCollapseFromChart = false;\n        }\n        else {\n            this.expandCollapseChartRows('collapse', getValue('chartRow', args), record, null);\n        }\n        // To render the child record on parent row after collapsing\n        if (this.parent.viewType === 'ResourceView') {\n            this.renderMultiTaskbar(record);\n        }\n        if (!this.parent.enableVirtualization) {\n            this.parent.updateContentHeight();\n        }\n        this.updateWidthAndHeight();\n        this.reRenderConnectorLines();\n        getValue('chartRow', args).setAttribute('aria-expanded', 'false');\n        this.parent.trigger('collapsed', args);\n    };\n    /**\n     * To expand gantt rows\n     *\n     * @returns {void} .\n     * @param {object} args .\n     * @param {boolean} isCancel .\n     * @private\n     */\n    GanttChart.prototype.expandGanttRow = function (args, isCancel) {\n        var _this = this;\n        if (isCancel) {\n            this.expandedGanttRow(args);\n        }\n        else {\n            this.parent.trigger('expanding', args, function (arg) {\n                if (_this.isExpandCollapseFromChart && !getValue('cancel', arg)) {\n                    _this.expandedGanttRow(arg);\n                }\n                _this.isExpandCollapseFromChart = false;\n            });\n        }\n    };\n    /**\n     * @returns {void} .\n     * @param {object} args .\n     * @private\n     */\n    GanttChart.prototype.expandedGanttRow = function (args) {\n        var record = getValue('data', args);\n        if (this.isExpandCollapseFromChart) {\n            this.expandCollapseChartRows('expand', getValue('chartRow', args), record, null);\n            this.parent.treeGrid.expandRow(getValue('gridRow', args), record);\n            this.isExpandCollapseFromChart = false;\n        }\n        else {\n            if (!this.parent.isExpandCollapseLevelMethod) {\n                this.expandCollapseChartRows('expand', getValue('chartRow', args), record, null);\n            }\n            this.parent.isExpandCollapseLevelMethod = false;\n        }\n        // To render the child record on parent row after expanding.\n        if (this.parent.viewType === 'ResourceView') {\n            this.renderMultiTaskbar(record);\n        }\n        if (!this.parent.enableVirtualization) {\n            this.parent.updateContentHeight();\n        }\n        this.updateWidthAndHeight();\n        this.reRenderConnectorLines();\n        getValue('chartRow', args).setAttribute('aria-expanded', 'true');\n        this.parent.trigger('expanded', args);\n    };\n    GanttChart.prototype.renderMultiTaskbar = function (record) {\n        if (this.parent.enableMultiTaskbar) {\n            this.parent.chartRowsModule.refreshRecords([record], true);\n        }\n        else if (this.parent.showOverAllocation) {\n            this.parent.ganttChartModule.renderRangeContainer(this.parent.currentViewData);\n        }\n    };\n    /**\n     * On expand collapse operation row properties will be updated here.\n     *\n     * @param {string} action .\n     * @param {Node} rowElement .\n     * @param {IGanttData} record .\n     * @param {boolean} isChild .\n     * @returns {void} .\n     * @private\n     */\n    GanttChart.prototype.expandCollapseChartRows = function (action, rowElement, record, isChild) {\n        var displayType;\n        if (action === 'expand') {\n            displayType = 'table-row';\n            if (!isChild) {\n                record.expanded = true;\n            }\n            var targetElement = rowElement.querySelectorAll('.e-row-collapse');\n            for (var t = 0; t < targetElement.length; t++) {\n                addClass([targetElement[t]], 'e-row-expand');\n                removeClass([targetElement[t]], 'e-row-collapse');\n            }\n        }\n        else if (action === 'collapse') {\n            displayType = 'none';\n            if (!isChild) {\n                record.expanded = false;\n            }\n            var targetElement = rowElement.querySelectorAll('.e-row-expand');\n            for (var t = 0; t < targetElement.length; t++) {\n                addClass([targetElement[t]], 'e-row-collapse');\n                removeClass([targetElement[t]], 'e-row-expand');\n            }\n        }\n        var childRecords = record.childRecords;\n        var chartRows = this.getChartRows();\n        var rows = [];\n        for (var i = 0; i < chartRows.length; i++) {\n            if (chartRows[i].classList.contains('gridrowtaskId'\n                + record.ganttProperties.rowUniqueID + 'level' + (record.level + 1))) {\n                rows.push(chartRows[i]);\n            }\n        }\n        for (var i = 0; i < rows.length; i++) {\n            rows[i].style.display = displayType;\n            if ((childRecords[i].childRecords && childRecords[i].childRecords.length)\n                && (action === 'collapse' || childRecords[i].expanded || this.isExpandAll)) {\n                this.expandCollapseChartRows(action, rows[i], childRecords[i], true);\n            }\n        }\n    };\n    /**\n     * Public method to expand or collapse all the rows of Gantt\n     *\n     * @returns {void}\n     * @param {string} action .\n     * @private\n     */\n    GanttChart.prototype.expandCollapseAll = function (action) {\n        if (action === 'expand') {\n            this.isExpandAll = true;\n            this.parent.treeGrid.expandAll();\n        }\n        else {\n            this.parent.treeGrid.collapseAll();\n        }\n        this.isExpandAll = false;\n        var focussedElement = this.parent.element.querySelector('.e-treegrid');\n        focussedElement.focus();\n    };\n    /**\n     * Public method to expand particular level of rows.\n     *\n     * @returns {void} .\n     * @param {number} level .\n     * @private\n     */\n    GanttChart.prototype.expandAtLevel = function (level) {\n        this.parent.treeGrid.expandAtLevel(level);\n    };\n    /**\n     * Public method to collapse particular level of rows.\n     *\n     * @returns {void} .\n     * @param {number} level .\n     * @private\n     */\n    GanttChart.prototype.collapseAtLevel = function (level) {\n        if (this.parent.enableVirtualization) {\n            this.parent.isExpandCollapseLevelMethod = true;\n        }\n        this.parent.treeGrid.collapseAtLevel(level);\n    };\n    /**\n     * Event Binding for gantt chart click\n     *\n     * @returns {void} .\n     */\n    GanttChart.prototype.wireEvents = function () {\n        var isIE11Pointer = Browser.isPointer; // eslint-disable-line\n        var mouseDown = Browser.touchStartEvent;\n        var mouseUp = Browser.touchEndEvent;\n        var mouseMove = Browser.touchMoveEvent;\n        var cancel = isIE11Pointer ? 'pointerleave' : 'mouseleave';\n        EventHandler.add(this.parent.chartPane, mouseDown, this.ganttChartMouseDown, this);\n        EventHandler.add(this.parent.chartPane, cancel, this.ganttChartLeave, this);\n        EventHandler.add(this.parent.chartPane, mouseMove, this.ganttChartMove, this);\n        if (this.parent.isAdaptive) {\n            EventHandler.add(this.parent.chartPane, click, this.ganttChartMouseClick, this);\n            EventHandler.add(this.parent.chartPane, mouseUp, this.ganttChartMouseUp, this);\n        }\n        if (!this.parent.isAdaptive) {\n            EventHandler.add(this.parent.element, mouseUp, this.documentMouseUp, this);\n            EventHandler.add(document, mouseUp, this.mouseUp, this);\n        }\n        EventHandler.add(this.parent.element, 'mousemove', this.mouseMoveHandler, this);\n        EventHandler.add(document.body, 'contextmenu', this.contextClick, this);\n        EventHandler.add(document, 'mouseup', this.contextClick, this);\n        EventHandler.add(this.parent.chartRowsModule.ganttChartTableBody, 'dblclick', this.doubleClickHandler, this);\n    };\n    GanttChart.prototype.unWireEvents = function () {\n        var isIE11Pointer = Browser.isPointer; // eslint-disable-line\n        var mouseDown = Browser.touchStartEvent;\n        var mouseUp = Browser.touchEndEvent;\n        var mouseMove = Browser.touchMoveEvent;\n        var cancel = isIE11Pointer ? 'pointerleave' : 'mouseleave';\n        EventHandler.remove(this.parent.chartRowsModule.ganttChartTableBody, mouseDown, this.ganttChartMouseDown);\n        EventHandler.remove(this.parent.chartPane, cancel, this.ganttChartLeave);\n        EventHandler.remove(this.parent.chartPane, mouseMove, this.ganttChartMove);\n        if (this.parent.isAdaptive) {\n            EventHandler.remove(this.parent.chartPane, click, this.ganttChartMouseClick);\n            EventHandler.remove(this.parent.chartPane, mouseUp, this.ganttChartMouseUp);\n        }\n        if (!this.parent.isAdaptive) {\n            EventHandler.remove(this.parent.element, mouseUp, this.documentMouseUp);\n            EventHandler.remove(document, mouseUp, this.mouseUp);\n        }\n        EventHandler.remove(this.parent.element, 'mousemove', this.mouseMoveHandler);\n        EventHandler.remove(document.body, 'contextmenu', this.contextClick);\n        EventHandler.remove(document, 'mouseup', this.contextClick);\n        EventHandler.remove(this.parent.chartRowsModule.ganttChartTableBody, 'dblclick', this.doubleClickHandler);\n    };\n    /**\n     * To get record by taskbar element.\n     *\n     * @param {Element} target .\n     * @returns {IGanttData} .\n     * @private\n     */\n    GanttChart.prototype.getRecordByTaskBar = function (target) {\n        var item = this.parent.currentViewData[this.getIndexByTaskBar(target)];\n        return item;\n    };\n    /**\n     * Trigger Tab & Shift + Tab keypress to highlight active element.\n     *\n     * @param {KeyboardEventArgs} e .\n     * @returns {void} .\n     * @private\n     */\n    GanttChart.prototype.onTabAction = function (e) {\n        this.parent.treeGrid.grid.enableHeaderFocus = this.parent.enableHeaderFocus;\n        var isInEditedState = this.parent.editModule && this.parent.editModule.cellEditModule &&\n            this.parent.editModule.cellEditModule.isCellEdit;\n        if (!this.parent.showActiveElement && !isInEditedState) {\n            return;\n        }\n        var $target = isInEditedState ? e.target.closest('.e-rowcell') : e.target;\n        if ($target.closest('.e-rowcell') || $target.closest('.e-chart-row')) {\n            this.parent.focusModule.setActiveElement($target);\n        }\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        this.focusedRowIndex = $target.closest('.e-rowcell') ? $target.parentElement.rowIndex :\n            /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n            $target.closest('.e-chart-row') ? $target.closest('.e-chart-row').rowIndex : -1;\n        var isTab = (e.action === 'tab') ? true : false;\n        var nextElement = this.getNextElement($target, isTab, isInEditedState);\n        if (nextElement === 'noNextRow') {\n            this.manageFocus($target, 'remove', true);\n            return;\n        }\n        if (typeof nextElement !== 'string') {\n            if ($target.classList.contains('e-rowcell') || $target.closest('.e-chart-row-cell') ||\n                $target.classList.contains('e-headercell') || $target.closest('.e-segmented-taskbar')) {\n                e.preventDefault();\n            }\n            if ($target.classList.contains('e-rowcell') && (nextElement && nextElement.classList.contains('e-rowcell')) ||\n                $target.classList.contains('e-headercell')) { // eslint-disable-line                                                                                                                                                                                                                                    \n                if (isTab) {\n                    if (this.parent.editSettings.allowNextRowEdit) {\n                        var rowData = this.parent.currentViewData[this.focusedRowIndex];\n                        var columnName = this.parent.ganttColumns[nextElement.getAttribute('aria-colindex')].field;\n                        if (rowData.hasChildRecords) {\n                            if (columnName === this.parent.taskFields.endDate || columnName ===\n                                this.parent.taskFields.duration || columnName === this.parent.taskFields.dependency ||\n                                columnName === this.parent.taskFields.progress || columnName === this.parent.taskFields.work ||\n                                columnName === 'taskType') {\n                                this.parent.treeGrid.grid.endEdit();\n                                this.parent.treeGrid.grid.notify('key-pressed', e);\n                            }\n                            else if (columnName === this.parent.taskFields.name || columnName === this.parent.taskFields.startDate) {\n                                this.parent.treeGrid.grid.notify('key-pressed', e);\n                            }\n                            else {\n                                this.parent.treeGrid.grid.notify('key-pressed', e);\n                                this.parent.treeGrid.editCell(this.focusedRowIndex, columnName); // eslint-disable-line\n                            }\n                        }\n                        else {\n                            this.parent.treeGrid.grid.notify('key-pressed', e);\n                        }\n                    }\n                    else {\n                        this.parent.treeGrid.grid.notify('key-pressed', e);\n                    }\n                }\n                else {\n                    this.parent.treeGrid.grid.notify('key-pressed', e);\n                }\n            }\n            if (!this.parent.editModule.cellEditModule.isCellEdit) {\n                if (nextElement) {\n                    if ($target.classList.contains('e-rowcell')) {\n                        this.manageFocus($target, 'remove', false);\n                    }\n                    else {\n                        this.manageFocus($target, 'remove', true);\n                    }\n                    if (nextElement.classList.contains('e-rowcell')) {\n                        if (!$target.classList.contains('e-rowcell')) {\n                            this.parent.treeGrid.grid.notify('key-pressed', e);\n                            var fmodule = getValue('focusModule', this.parent.treeGrid.grid);\n                            fmodule.currentInfo.element = nextElement;\n                            fmodule.currentInfo.elementToFocus = nextElement;\n                            /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n                            fmodule.content.matrix.current = [nextElement.parentElement.rowIndex, nextElement.cellIndex];\n                        }\n                        this.manageFocus(nextElement, 'add', false);\n                    }\n                    else {\n                        this.manageFocus(nextElement, 'add', true);\n                    }\n                    this.parent.focusModule.setActiveElement(nextElement);\n                }\n            }\n        }\n    };\n    /**\n     * Get next/previous sibling element.\n     *\n     * @param {Element} $target .\n     * @param {boolean} isTab .\n     * @param {boolean} isInEditedState .\n     * @returns {Element | string} .\n     */\n    GanttChart.prototype.getNextElement = function ($target, isTab, isInEditedState) {\n        var nextElement = isTab ? $target.nextElementSibling : $target.previousElementSibling;\n        while (nextElement && nextElement.parentElement.classList.contains('e-row')) {\n            if (!nextElement.matches('.e-hide') && !nextElement.matches('.e-rowdragdrop')) {\n                return nextElement;\n            }\n            nextElement = isTab ? nextElement.nextElementSibling : nextElement.previousElementSibling;\n        }\n        if (!isNullOrUndefined(nextElement) && (nextElement.classList.contains('e-taskbar-main-container')\n            || nextElement.classList.contains('e-right-connectorpoint-outer-div'))) {\n            var record = this.parent.currentViewData[this.focusedRowIndex];\n            if (!isNullOrUndefined(record.ganttProperties.segments) && record.ganttProperties.segments.length > 0) {\n                nextElement = nextElement.classList.contains('e-right-connectorpoint-outer-div')\n                    ? nextElement.parentElement.nextElementSibling\n                    : nextElement.getElementsByClassName('e-gantt-child-taskbar-inner-div')[0];\n            }\n        }\n        if (this.validateNextElement(nextElement)) {\n            return nextElement;\n        }\n        else {\n            var rowIndex = -1;\n            var rowElement = null;\n            var childElement = void 0;\n            if ($target.classList.contains('e-rowcell') && isInEditedState && this.parent.editSettings.allowNextRowEdit) {\n                /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n                rowIndex = $target.parentElement.rowIndex;\n                rowElement = this.getNextRowElement(rowIndex, isTab, true);\n                childElement = this.getChildElement(rowElement, isTab);\n                return childElement;\n            }\n            else if ($target.classList.contains('e-rowcell')) {\n                /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n                rowIndex = $target.parentElement.rowIndex;\n                if (isTab) {\n                    rowElement = this.parent.getRowByIndex(rowIndex);\n                    if (this.validateNextElement(rowElement, 'e-left-label-container')) {\n                        return rowElement.getElementsByClassName('e-left-label-container')[0];\n                    }\n                    else if (this.validateNextElement(rowElement, 'e-taskbar-main-container')) {\n                        return rowElement.getElementsByClassName('e-taskbar-main-container')[0];\n                    }\n                    else if (this.validateNextElement(rowElement, 'e-right-label-container')) {\n                        return rowElement.getElementsByClassName('e-right-label-container')[0];\n                    }\n                }\n                else {\n                    rowElement = this.getNextRowElement(rowIndex, isTab, false);\n                    if (this.validateNextElement(rowElement, 'e-right-label-container')) {\n                        return rowElement.getElementsByClassName('e-right-label-container')[0];\n                    }\n                    else if (this.validateNextElement(rowElement, 'e-taskbar-main-container')) {\n                        return rowElement.getElementsByClassName('e-taskbar-main-container')[0];\n                    }\n                    else if (this.validateNextElement(rowElement, 'e-left-label-container')) {\n                        return rowElement.getElementsByClassName('e-left-label-container')[0];\n                    }\n                }\n            }\n            else if ($target.parentElement.classList.contains('e-chart-row-cell') ||\n                $target.parentElement.parentElement.classList.contains('e-chart-row-cell')) {\n                /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n                rowIndex = closest($target, '.e-chart-row').rowIndex;\n                if (isTab) {\n                    rowElement = this.getNextRowElement(rowIndex, isTab, true);\n                }\n                else {\n                    rowElement = this.parent.treeGrid.grid.getRowByIndex(rowIndex);\n                }\n                var childElement_1 = this.getChildElement(rowElement, isTab);\n                return childElement_1;\n            }\n        }\n        return null;\n    };\n    /**\n     * Get next/previous row element.\n     *\n     * @param {number} rowIndex .\n     * @param {boolean} isTab .\n     * @param {boolean} isChartRow .\n     * @returns {Element} .\n     */\n    GanttChart.prototype.getNextRowElement = function (rowIndex, isTab, isChartRow) {\n        var expandedRecords = this.parent.getExpandedRecords(this.parent.currentViewData);\n        var currentItem = this.parent.currentViewData[rowIndex];\n        var expandedRecordIndex = expandedRecords.indexOf(currentItem);\n        var nextRecord = isTab ? expandedRecords[expandedRecordIndex + 1] : expandedRecords[expandedRecordIndex - 1];\n        var nextRowIndex = this.parent.currentViewData.indexOf(nextRecord);\n        if (nextRecord) {\n            return isChartRow ? this.parent.treeGrid.grid.getRowByIndex(nextRowIndex) : this.parent.getRowByIndex(nextRowIndex);\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Validate next/previous sibling element haschilds.\n     *\n     * @param {Element} $target .\n     * @param {string} className .\n     * @returns {boolean} .\n     */\n    GanttChart.prototype.validateNextElement = function ($target, className) {\n        if ($target && $target.classList.contains('e-rowcell')) {\n            return true;\n        }\n        if ($target && className) {\n            var elementByClass = $target.getElementsByClassName(className)[0];\n            return (elementByClass && elementByClass.hasChildNodes()) ? true : false;\n        }\n        else if ($target) {\n            return (!isNullOrUndefined($target) && $target.hasChildNodes()) ? true : false;\n        }\n        return false;\n    };\n    /**\n     * Getting child element based on row element.\n     *\n     * @param {Element} rowElement .\n     * @param {boolean} isTab .\n     * @returns {Element | string} .\n     */\n    GanttChart.prototype.getChildElement = function (rowElement, isTab) {\n        var childElement;\n        if (rowElement) {\n            childElement = isTab ? rowElement.children[0] : rowElement.children[rowElement.children.length - 1];\n            while (childElement) {\n                if (!childElement.matches('.e-hide') && !childElement.matches('.e-rowdragdrop')) {\n                    return childElement;\n                }\n                childElement = isTab ? childElement.nextElementSibling : childElement.previousElementSibling;\n            }\n        }\n        else {\n            return 'noNextRow';\n        }\n        return childElement;\n    };\n    /**\n     * Add/Remove active element.\n     *\n     * @private\n     * @param {HTMLElement} element .\n     * @param {string} focus .\n     * @param {boolean} isChartElement .\n     * @returns {void} .\n     */\n    GanttChart.prototype.manageFocus = function (element, focus, isChartElement) {\n        if (isChartElement) {\n            var childElement = null;\n            if (element.classList.contains('e-left-label-container') ||\n                element.classList.contains('e-right-label-container')) {\n                childElement = element.getElementsByTagName('span')[0];\n            }\n            else if (element.classList.contains('e-taskbar-main-container')\n                || element.classList.contains('e-gantt-child-taskbar-inner-div')) {\n                /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n                var rowIndex = closest(element, '.e-chart-row').rowIndex;\n                var data = this.parent.currentViewData[rowIndex];\n                var className = data.hasChildRecords ? data.ganttProperties.isAutoSchedule ? 'e-gantt-parent-taskbar' :\n                    'e-manualparent-main-container' :\n                    data.ganttProperties.isMilestone ? 'e-gantt-milestone' : !isNullOrUndefined(data.ganttProperties.segments)\n                        && data.ganttProperties.segments.length > 0 ? 'e-segmented-taskbar' : 'e-gantt-child-taskbar';\n                childElement = element.getElementsByClassName(className)[0];\n                if (isNullOrUndefined(childElement)) {\n                    childElement = element;\n                }\n            }\n            if (focus === 'add' && !isNullOrUndefined(childElement)) {\n                element.setAttribute('tabIndex', '0');\n                addClass([childElement], 'e-active-container');\n                element.focus();\n                this.focusedElement = childElement;\n            }\n            else if (!isNullOrUndefined(childElement)) {\n                removeClass([childElement], 'e-active-container');\n                element.setAttribute('tabIndex', '-1');\n                element.blur();\n            }\n        }\n        else {\n            if (focus === 'add') {\n                element.setAttribute('tabIndex', '0');\n                addClass([element], ['e-focused', 'e-focus']);\n                element.focus();\n            }\n            else {\n                element.setAttribute('tabIndex', '-1');\n                removeClass([element], ['e-focused', 'e-focus']);\n                element.blur();\n            }\n        }\n    };\n    /**\n     * To get index by taskbar element.\n     *\n     * @param {Element} target .\n     * @returns {number} .\n     * @private\n     */\n    GanttChart.prototype.getIndexByTaskBar = function (target) {\n        var row;\n        var recordIndex;\n        if (!target.classList.contains(cls.taskBarMainContainer)) {\n            row = closest(target, 'div.' + cls.taskBarMainContainer);\n        }\n        else {\n            row = target;\n        }\n        if (isNullOrUndefined(row)) {\n            row = closest(target, 'tr.' + cls.chartRow);\n            recordIndex = [].slice.call(this.parent.chartRowsModule.ganttChartTableBody.childNodes).indexOf(row);\n        }\n        else {\n            var id = row.getAttribute('rowUniqueId');\n            var record = this.parent.getRecordByID(id);\n            recordIndex = this.parent.currentViewData.indexOf(record);\n        }\n        return recordIndex;\n    };\n    GanttChart.prototype.destroy = function () {\n        this.removeEventListener();\n        this.unWireEvents();\n        this.scrollObject.destroy();\n        this.scrollObject = null;\n    };\n    return GanttChart;\n}());\nexport { GanttChart };\n"]},"metadata":{},"sourceType":"module"}