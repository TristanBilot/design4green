{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { isNullOrUndefined, getValue, extend, setValue } from '@syncfusion/ej2-base';\nimport { getUid } from '@syncfusion/ej2-grids';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { isCountRequired, isScheduledTask } from './utils';\nimport { DateProcessor } from './date-processor';\n/**\n * To calculate and update task related values\n */\n\nvar TaskProcessor =\n/** @class */\nfunction (_super) {\n  __extends(TaskProcessor, _super);\n\n  function TaskProcessor(parent) {\n    var _this = _super.call(this, parent) || this;\n\n    _this.recordIndex = 0;\n    _this.taskIds = [];\n    _this.hierarchyData = [];\n\n    _this.addEventListener();\n\n    return _this;\n  }\n\n  TaskProcessor.prototype.addEventListener = function () {\n    this.parent.on('beforeDataManipulate', this.checkDataBinding.bind(this));\n  };\n  /**\n   * @param {boolean} isChange .\n   * @returns {void} .\n   * @private\n   */\n\n\n  TaskProcessor.prototype.checkDataBinding = function (isChange) {\n    if (isChange) {\n      this.parent.flatData = [];\n      this.parent.currentViewData = [];\n      this.parent.updatedRecords = [];\n      this.dataArray = [];\n      this.taskIds = [];\n      this.parent.ids = [];\n      this.recordIndex = 0;\n      this.hierarchyData = [];\n      this.parent.predecessorsCollection = [];\n      this.parent.treeGrid.parentData = [];\n      this.parent.taskIds = [];\n    }\n\n    if (isNullOrUndefined(this.parent.dataSource)) {\n      this.parent.dataSource = [];\n      this.parent.processTimeline();\n      this.parent.renderGantt(isChange);\n    } else if (this.parent.dataSource instanceof DataManager) {\n      this.initDataSource(isChange);\n    } else {\n      if (this.parent.dataSource instanceof Object && isCountRequired(this.parent)) {\n        var ganttdata = getValue('result', this.parent.dataSource);\n        this.dataArray = ganttdata;\n      } else {\n        this.dataArray = this.parent.dataSource;\n      }\n\n      this.processTimeline();\n      this.cloneDataSource();\n      this.parent.renderGantt(isChange);\n    }\n  };\n\n  TaskProcessor.prototype.processTimeline = function () {\n    this.parent.processTimeline();\n\n    if (!this.parent.enableValidation) {\n      this.parent.dataOperation.calculateProjectDatesForValidatedTasks();\n      this.parent.timelineModule.validateTimelineProp();\n    }\n  };\n\n  TaskProcessor.prototype.initDataSource = function (isChange) {\n    var _this = this;\n\n    var queryManager = this.parent.query instanceof Query ? this.parent.query : new Query();\n    queryManager.requiresCount();\n    var dataManager = this.parent.dataSource;\n    dataManager.executeQuery(queryManager).then(function (e) {\n      _this.dataArray = e.result;\n\n      _this.processTimeline();\n\n      _this.cloneDataSource();\n\n      _this.parent.renderGantt(isChange);\n    }).catch(function (e) {\n      // Trigger action failure event\n      _this.parent.processTimeline();\n\n      _this.parent.renderGantt(isChange);\n\n      _this.parent.trigger('actionFailure', {\n        error: e\n      });\n    });\n  };\n\n  TaskProcessor.prototype.constructDataSource = function (dataSource) {\n    var mappingData = new DataManager(dataSource).executeLocal(new Query().group(this.parent.taskFields.parentID));\n    var rootData = [];\n\n    for (var i = 0; i < mappingData.length; i++) {\n      var groupData = mappingData[i];\n\n      if (!isNullOrUndefined(groupData.key)) {\n        var index = this.taskIds.indexOf(groupData.key.toString());\n\n        if (index > -1) {\n          if (!isNullOrUndefined(groupData.key)) {\n            dataSource[index][this.parent.taskFields.child] = groupData.items;\n            continue;\n          }\n        }\n      }\n\n      rootData.push.apply(rootData, groupData.items); // eslint-disable-line\n    }\n\n    this.hierarchyData = this.dataReorder(dataSource, rootData);\n  };\n\n  TaskProcessor.prototype.cloneDataSource = function () {\n    var taskIdMapping = this.parent.taskFields.id;\n    var parentIdMapping = this.parent.taskFields.parentID;\n    var hierarchicalData = [];\n\n    if (!isNullOrUndefined(taskIdMapping) && !isNullOrUndefined(parentIdMapping)) {\n      var data = [];\n\n      for (var i = 0; i < this.dataArray.length; i++) {\n        var tempData = this.dataArray[i];\n        data.push(extend({}, {}, tempData, true));\n\n        if (!isNullOrUndefined(tempData[taskIdMapping])) {\n          this.taskIds.push(tempData[taskIdMapping].toString());\n        }\n      }\n\n      if (!this.parent.taskFields.child) {\n        this.parent.taskFields.child = 'Children';\n      }\n\n      this.constructDataSource(data);\n      hierarchicalData = this.hierarchyData;\n    } else {\n      hierarchicalData = this.dataArray;\n    }\n\n    if (this.parent.taskFields.segmentId) {\n      this.segmentCollection = new DataManager(this.parent.segmentData).executeLocal(new Query().group(this.parent.taskFields.segmentId));\n\n      if (!this.parent.taskFields.segments) {\n        this.parent.taskFields.segments = 'Segments';\n      }\n    }\n\n    if (this.parent.viewType !== 'ProjectView') {\n      var resources = extend([], [], this.parent.resources, true);\n      var unassignedTasks = [];\n      this.constructResourceViewDataSource(resources, hierarchicalData, unassignedTasks);\n\n      if (unassignedTasks.length > 0) {\n        var record = {};\n        record[this.parent.resourceFields.id] = 0;\n        record[this.parent.resourceFields.name] = this.parent.localeObj.getConstant('unassignedTask');\n        record[this.parent.taskFields.child] = unassignedTasks;\n        resources.push(record);\n      }\n\n      hierarchicalData = resources;\n    }\n\n    this.prepareDataSource(hierarchicalData);\n  };\n  /**\n   * @param {object[]} resources .\n   * @param {object[]} data .\n   * @param {object[]} unassignedTasks .\n   * @returns {void} .\n   *\n   */\n\n\n  TaskProcessor.prototype.constructResourceViewDataSource = function (resources, data, unassignedTasks) {\n    var _loop_1 = function (i) {\n      var tempData = data[i];\n      var child = this_1.parent.taskFields.child;\n      var resourceData = tempData && tempData[this_1.parent.taskFields.resourceInfo];\n      var resourceIdMapping = this_1.parent.resourceFields.id;\n\n      if (!tempData[child] && resourceData && resourceData.length) {\n        resourceData.forEach(function (resource) {\n          var id = typeof resource === 'object' ? resource[resourceIdMapping] : resource;\n\n          for (var j = 0; j < resources.length; j++) {\n            if (resources[j][resourceIdMapping].toString() === id.toString()) {\n              if (resources[j][child]) {\n                resources[j][child].push(tempData);\n              } else {\n                resources[j][child] = [tempData];\n              }\n\n              break;\n            }\n          }\n        });\n      } else if (!tempData[child]) {\n        unassignedTasks.push(tempData);\n      }\n\n      if (tempData[this_1.parent.taskFields.child] && tempData[this_1.parent.taskFields.child].length) {\n        this_1.constructResourceViewDataSource(resources, tempData[this_1.parent.taskFields.child], unassignedTasks);\n      }\n    };\n\n    var this_1 = this;\n\n    for (var i = 0; i < data.length; i++) {\n      _loop_1(i);\n    }\n  };\n  /**\n   * Function to manipulate data-source\n   *\n   * @param {object[]} data .\n   * @returns {void} .\n   * @hidden\n   */\n\n\n  TaskProcessor.prototype.prepareDataSource = function (data) {\n    this.prepareRecordCollection(data, 0); // Method to maintain the shared task uniqueIds\n\n    if (this.parent.viewType === 'ResourceView') {\n      this.calculateSharedTaskUniqueIds();\n    }\n\n    if (this.parent.taskFields.dependency && this.parent.predecessorModule) {\n      this.parent.predecessorModule.ensurePredecessorCollection();\n    }\n  };\n\n  TaskProcessor.prototype.calculateSharedTaskUniqueIds = function () {\n    var _loop_2 = function (i) {\n      var value = this_2.parent.getTaskIds()[i].match(/(\\d+|[A-z]+)/g);\n\n      if (value[0] !== 'R') {\n        var sharedRecords_1 = [];\n        var ids_1 = [];\n        this_2.parent.flatData.filter(function (data) {\n          if (data.ganttProperties.taskId.toString() === value[1] && data.level !== 0) {\n            ids_1.push(data.ganttProperties.rowUniqueID);\n            sharedRecords_1.push(data);\n          }\n        });\n\n        for (var j = 0; j < sharedRecords_1.length; j++) {\n          sharedRecords_1[j].ganttProperties.sharedTaskUniqueIds = ids_1;\n        }\n      }\n    };\n\n    var this_2 = this;\n\n    for (var i = 0; i < this.parent.getTaskIds().length; i++) {\n      _loop_2(i);\n    }\n  };\n\n  TaskProcessor.prototype.prepareRecordCollection = function (data, level, parentItem) {\n    var _this = this;\n\n    var length = data.length;\n\n    var _loop_3 = function (i) {\n      var tempData = data[i];\n\n      if (!isNullOrUndefined(this_3.parent.taskFields.segmentId)) {\n        var segmentData = this_3.segmentCollection.filter(function (x) {\n          return x.key === tempData[_this.parent.taskFields.id];\n        });\n\n        if (segmentData.length > 0) {\n          tempData[this_3.parent.taskFields.segments] = segmentData[0].items;\n        }\n      }\n\n      var ganttData = this_3.createRecord(tempData, level, parentItem, true);\n\n      if (!this_3.parent.enableValidation) {\n        this_3.updateTaskLeftWidth(ganttData);\n      }\n\n      ganttData.index = this_3.recordIndex++;\n      this_3.parent.ids[ganttData.index] = ganttData.ganttProperties.rowUniqueID;\n      this_3.parent.flatData.push(ganttData);\n      this_3.parent.setTaskIds(ganttData);\n      var childData = tempData[this_3.parent.taskFields.child];\n\n      if (this_3.parent.viewType === 'ResourceView' && isNullOrUndefined(childData) && isNullOrUndefined(ganttData.parentItem) && ganttData.level === 0) {\n        var ganttProp = ganttData.ganttProperties;\n        var parentData = ganttData;\n        this_3.parent.setRecordValue(ganttProp.isAutoSchedule ? 'startDate' : 'autoStartDate', null, parentData.ganttProperties, true);\n        this_3.parent.setRecordValue(ganttProp.isAutoSchedule ? 'endDate' : 'autoEndDate', null, parentData.ganttProperties, true);\n        var parentProgress = 0;\n        var parentProp = parentData.ganttProperties;\n        this_3.parent.setRecordValue('isMilestone', false, parentProp, true);\n\n        if (parentProp.isAutoSchedule) {\n          this_3.calculateDuration(parentData);\n        }\n\n        this_3.updateWorkWithDuration(parentData);\n        var parentWork = parentProp.work;\n        this_3.parent.setRecordValue('work', parentWork, parentProp, true);\n        this_3.parent.setRecordValue('taskType', 'FixedDuration', parentProp, true);\n\n        if (!isNullOrUndefined(this_3.parent.taskFields.type)) {\n          this_3.updateMappingData(parentData, 'type');\n        }\n\n        this_3.parent.setRecordValue('progress', Math.floor(parentProgress), parentProp, true);\n        this_3.parent.setRecordValue('totalProgress', 0, parentProp, true);\n        this_3.parent.setRecordValue('totalDuration', 0, parentProp, true);\n\n        if (!parentProp.isAutoSchedule) {\n          this_3.parent.setRecordValue('autoDuration', this_3.calculateAutoDuration(parentProp), parentProp, true);\n          this_3.updateAutoWidthLeft(parentData);\n        }\n\n        this_3.resetDependency(parentData);\n        this_3.updateWidthLeft(parentData);\n        this_3.updateTaskData(parentData);\n      }\n\n      if (!isNullOrUndefined(childData) && childData.length > 0) {\n        this_3.prepareRecordCollection(childData, ganttData.level + 1, ganttData);\n      }\n    };\n\n    var this_3 = this;\n\n    for (var i = 0; i < length; i++) {\n      _loop_3(i);\n    }\n  };\n  /**\n   * Method to update custom field values in gantt record\n   *\n   * @param {object} data .\n   * @param {IGanttData} ganttRecord .\n   * @returns {void} .\n   */\n\n\n  TaskProcessor.prototype.addCustomFieldValue = function (data, ganttRecord) {\n    var columns = this.parent.ganttColumns;\n    var length = columns.length;\n\n    if (length) {\n      for (var i = 0; i < length; i++) {\n        if (ganttRecord[columns[i].field] === undefined) {\n          this.parent.setRecordValue(columns[i].field, data[columns[i].field], ganttRecord);\n        }\n      }\n    }\n  };\n  /**\n   * To populate Gantt record\n   *\n   * @param {object} data .\n   * @param {number} level .\n   * @param {IGanttData} parentItem .\n   * @param {boolean} isLoad .\n   * @returns {IGanttData} .\n   * @private\n   */\n\n\n  TaskProcessor.prototype.createRecord = function (data, level, parentItem, isLoad) {\n    var taskSettings = this.parent.taskFields;\n    var resourceFields = this.parent.resourceFields;\n    var progress = data[taskSettings.progress];\n    var id = null;\n    var name = null;\n    var notes = data[taskSettings.notes];\n    progress = progress ? parseFloat(progress.toString()) ? parseFloat(progress.toString()) : 0 : 0;\n    var predecessors = data[taskSettings.dependency];\n    var baselineStartDate = this.getDateFromFormat(data[taskSettings.baselineStartDate], true);\n    var baselineEndDate = this.getDateFromFormat(data[taskSettings.baselineEndDate], true);\n    var ganttData = {};\n    var ganttProperties = {};\n    var autoSchedule = this.parent.taskMode === 'Auto' ? true : this.parent.taskMode === 'Manual' ? false : data[taskSettings.manual] === true ? false : true;\n    this.parent.setRecordValue('ganttProperties', ganttProperties, ganttData);\n\n    if (!isNullOrUndefined(data[taskSettings.id])) {\n      id = data[taskSettings.id];\n      name = data[taskSettings.name];\n      this.addTaskData(ganttData, data, isLoad);\n    } else if (!isNullOrUndefined(data[resourceFields.id])) {\n      id = data[resourceFields.id];\n      name = data[resourceFields.name];\n      this.addTaskData(ganttData, data, false);\n    }\n\n    this.parent.setRecordValue('taskId', id, ganttProperties, true);\n    this.parent.setRecordValue('taskName', name, ganttProperties, true);\n\n    if (taskSettings.parentID) {\n      this.parent.setRecordValue('parentId', data[taskSettings.parentID], ganttProperties, true);\n    }\n\n    this.addCustomFieldValue(data, ganttData);\n    this.parent.setRecordValue('isAutoSchedule', autoSchedule, ganttProperties, true);\n    this.parent.setRecordValue('resourceInfo', this.setResourceInfo(data), ganttProperties, true);\n    this.parent.setRecordValue('isMilestone', false, ganttProperties, true);\n    this.parent.setRecordValue('indicators', data[taskSettings.indicators], ganttProperties, true);\n    this.updateResourceName(ganttData);\n    this.calculateScheduledValues(ganttData, data, isLoad);\n    this.parent.setRecordValue('baselineStartDate', this.checkBaselineStartDate(baselineStartDate), ganttProperties, true); // set default end time, if hour is 0\n\n    if (baselineEndDate && baselineEndDate.getHours() === 0 && this.parent.defaultEndTime !== 86400) {\n      this.setTime(this.parent.defaultEndTime, baselineEndDate);\n    }\n\n    this.parent.setRecordValue('baselineEndDate', this.checkBaselineEndDate(baselineEndDate), ganttProperties, true);\n    this.parent.setRecordValue('progress', progress, ganttProperties, true);\n    this.parent.setRecordValue('totalProgress', progress, ganttProperties, true);\n    this.parent.setRecordValue('predecessorsName', predecessors, ganttProperties, true);\n    this.parent.setRecordValue('notes', notes, ganttProperties, true);\n    this.parent.setRecordValue('cssClass', data[taskSettings.cssClass], ganttProperties, true);\n    this.parent.setRecordValue('parentItem', this.getCloneParent(parentItem), ganttData);\n    var parentUniqId = ganttData.parentItem ? ganttData.parentItem.uniqueID : null;\n    this.parent.setRecordValue('parentUniqueID', parentUniqId, ganttData);\n\n    if (this.parent.viewType === 'ResourceView' && !isNullOrUndefined(taskSettings.parentID) && !isNullOrUndefined(ganttData.parentItem)) {\n      this.parent.setRecordValue('parentId', ganttData.parentItem.taskId, ganttProperties, true);\n    }\n\n    this.parent.setRecordValue('level', level, ganttData);\n    this.parent.setRecordValue('uniqueID', getUid(this.parent.element.id + '_data_'), ganttData);\n    this.parent.setRecordValue('uniqueID', ganttData.uniqueID, ganttProperties, true);\n    this.parent.setRecordValue('childRecords', [], ganttData);\n\n    if (this.parent.dataSource instanceof Object && isCountRequired(this.parent) && !isNullOrUndefined(taskSettings.child)) {\n      this.parent.setRecordValue(taskSettings.child, [], ganttData);\n    }\n\n    this.parent.setRecordValue('baselineEndDate', this.checkBaselineEndDate(baselineEndDate), ganttProperties, true);\n\n    if (!isNullOrUndefined(data[taskSettings.child]) && data[taskSettings.child].length > 0) {\n      this.parent.setRecordValue('hasChildRecords', true, ganttData);\n      this.parent.setRecordValue('isMilestone', false, ganttProperties, true);\n      this.resetDependency(ganttData);\n    } else {\n      this.parent.setRecordValue('hasChildRecords', false, ganttData);\n    }\n\n    if (ganttData.hasChildRecords) {\n      this.parent.setRecordValue('autoStartDate', ganttData.ganttProperties.startDate, ganttProperties);\n      this.parent.setRecordValue('autoEndDate', ganttData.ganttProperties.endDate, ganttProperties);\n      this.parent.setRecordValue('autoDuration', ganttData.ganttProperties.duration, ganttProperties);\n    }\n\n    this.parent.setRecordValue('expanded', ganttData.hasChildRecords && this.parent.collapseAllParentTasks ? false : true, ganttData);\n    this.updateExpandStateMappingValue(ganttData, data);\n\n    if (!isLoad) {\n      this.parent.setRecordValue('width', this.calculateWidth(ganttData), ganttProperties, true);\n      this.parent.setRecordValue('left', this.calculateLeft(ganttProperties), ganttProperties, true);\n      this.parent.setRecordValue('progressWidth', this.getProgressWidth(ganttProperties.width, progress), ganttProperties, true);\n\n      if (ganttProperties.baselineEndDate && ganttProperties.baselineStartDate) {\n        this.parent.setRecordValue('baselineLeft', this.calculateBaselineLeft(ganttProperties), ganttProperties, true);\n        this.parent.setRecordValue('baselineWidth', this.calculateBaselineWidth(ganttProperties), ganttProperties, true);\n      }\n    }\n\n    if (isNullOrUndefined(taskSettings.work)) {\n      this.updateWorkWithDuration(ganttData);\n    }\n\n    if (!isNullOrUndefined(taskSettings.manual)) {\n      this.parent.dataOperation.updateMappingData(ganttData, 'manual');\n    }\n\n    this.updateTaskData(ganttData);\n\n    if (predecessors) {\n      this.parent.predecessorsCollection.push(ganttData);\n    }\n\n    if (!isNullOrUndefined(parentItem)) {\n      parentItem.childRecords.push(ganttData);\n\n      if (this.parent.dataSource instanceof Object && isCountRequired(this.parent) && !isNullOrUndefined(this.parent.taskFields.child)) {\n        parentItem[this.parent.taskFields.child].push(ganttData.taskData);\n      }\n    }\n\n    if (this.parent.viewType === 'ProjectView') {\n      this.parent.setRecordValue('rowUniqueID', ganttProperties.taskId.toString(), ganttProperties, true);\n    } else {\n      var uniqueId = ganttData.uniqueID.replace(this.parent.element.id + '_data_', '');\n      this.parent.setRecordValue('rowUniqueID', uniqueId, ganttData);\n      this.parent.setRecordValue('rowUniqueID', uniqueId, ganttProperties, true);\n      this.parent.setRecordValue('sharedTaskUniqueIds', [], ganttProperties, true);\n    }\n\n    if (this.parent.allowUnscheduledTasks && ganttData.ganttProperties.startDate && (ganttData.ganttProperties.endDate || ganttData.ganttProperties.duration)) {\n      this.parent.setRecordValue('segments', this.setSegmentsInfo(ganttData, true), ganttProperties, true);\n      this.parent.dataOperation.updateMappingData(ganttData, 'segments');\n\n      if (!isLoad) {\n        this.updateWidthLeft(ganttData);\n      }\n    }\n\n    return ganttData;\n  };\n\n  TaskProcessor.prototype.sortSegmentsData = function (segments, onLoad, ganttProp) {\n    var _this = this;\n\n    if (onLoad) {\n      segments.sort(function (a, b) {\n        var startDate = _this.parent.taskFields.startDate;\n        return _this.getDateFromFormat(a[startDate]).getTime() - _this.getDateFromFormat(b[startDate]).getTime();\n      });\n    } else {\n      segments.sort(function (a, b) {\n        return a.startDate.getTime() - b.startDate.getTime();\n      });\n    }\n\n    return segments;\n  };\n\n  TaskProcessor.prototype.setSegmentsInfo = function (data, onLoad) {\n    var taskSettings = this.parent.taskFields;\n    var ganttSegments = [];\n    var segments;\n    var sumOfDuration = 0;\n    var remainingDuration = 0;\n    var taskData = [];\n\n    if (!isNullOrUndefined(this.parent.taskFields.segments)) {\n      segments = onLoad ? data.taskData[this.parent.taskFields.segments] : data.ganttProperties.segments;\n\n      if (!isNullOrUndefined(segments) && segments.length > 1) {\n        this.sortSegmentsData(segments, onLoad, data.ganttProperties);\n\n        for (var i = 0; i < segments.length; i++) {\n          var segment = segments[i];\n          var startDate = onLoad ? segment[taskSettings.startDate] : segment.startDate;\n          var endDate = onLoad ? segment[taskSettings.endDate] : segment.endDate;\n          var duration = onLoad ? segment[taskSettings.duration] : segment.duration;\n          startDate = this.getDateFromFormat(startDate);\n          startDate = this.checkStartDate(startDate, data.ganttProperties, false);\n\n          if (!isNullOrUndefined(duration)) {\n            endDate = this.getEndDate(startDate, duration, data.ganttProperties.durationUnit, data.ganttProperties, false);\n          } else {\n            endDate = this.getDateFromFormat(endDate);\n            endDate = this.checkEndDate(endDate, data.ganttProperties, false);\n            duration = this.getDuration(startDate, endDate, data.ganttProperties.durationUnit, data.ganttProperties.isAutoSchedule, data.ganttProperties.isMilestone);\n          }\n\n          if (taskSettings.duration) {\n            remainingDuration = data.ganttProperties.duration - sumOfDuration;\n\n            if (remainingDuration <= 0) {\n              continue;\n            }\n\n            duration = i === segments.length - 1 ? remainingDuration : remainingDuration > 0 && duration > remainingDuration ? remainingDuration : duration;\n            endDate = this.getEndDate(startDate, duration, data.ganttProperties.durationUnit, data.ganttProperties, false);\n          } else if (!taskSettings.duration && taskSettings.endDate) {\n            endDate = !isNullOrUndefined(data.ganttProperties.endDate) && endDate.getTime() > data.ganttProperties.endDate.getTime() && i !== segments.length - 1 ? endDate : data.ganttProperties.endDate;\n            duration = this.getDuration(startDate, endDate, data.ganttProperties.durationUnit, data.ganttProperties.isAutoSchedule, data.ganttProperties.isMilestone);\n\n            if (ganttSegments.length > 0 && endDate.getTime() < startDate.getTime() && endDate.getTime() <= data.ganttProperties.endDate.getTime()) {\n              ganttSegments[i - 1].duration = this.getDuration(ganttSegments[i - 1].startDate, data.ganttProperties.endDate, data.ganttProperties.durationUnit, data.ganttProperties.isAutoSchedule, data.ganttProperties.isMilestone);\n              continue;\n            }\n          }\n\n          segment = {};\n\n          if (!(startDate && endDate) || !(startDate && duration)) {\n            break;\n          }\n\n          sumOfDuration += duration;\n          segment.startDate = startDate;\n          segment.endDate = endDate;\n          segment.duration = duration;\n          segment.width = 0;\n          segment.left = 0;\n          segment.segmentIndex = i;\n          ganttSegments.push(segment);\n\n          if (!isNullOrUndefined(ganttSegments[i - 1])) {\n            var offsetDuration = this.getDuration(ganttSegments[i - 1].endDate, ganttSegments[i].startDate, data.ganttProperties.durationUnit, data.ganttProperties.isAutoSchedule, data.ganttProperties.isMilestone);\n            segment.offsetDuration = offsetDuration;\n\n            if (offsetDuration < 1) {\n              segment.startDate = this.getEndDate(ganttSegments[i - 1].endDate, 1, data.ganttProperties.durationUnit, data.ganttProperties, false);\n              segment.startDate = this.checkStartDate(segment.startDate, data.ganttProperties, false);\n              segment.endDate = this.getEndDate(segment.startDate, segment.duration, data.ganttProperties.durationUnit, data.ganttProperties, false);\n              segment.endDate = !taskSettings.duration && taskSettings.endDate && segment.endDate > data.ganttProperties.endDate ? data.ganttProperties.endDate : segment.endDate;\n              segment.offsetDuration = 1;\n            }\n          } else {\n            segment.offsetDuration = 0;\n          }\n\n          taskData.push(this.setSegmentTaskData(segment, segments[i]));\n        }\n\n        this.parent.setRecordValue('duration', sumOfDuration, data.ganttProperties, true);\n        this.parent.setRecordValue('endDate', ganttSegments[ganttSegments.length - 1].endDate, data.ganttProperties, true);\n\n        if (!isNullOrUndefined(taskSettings.endDate)) {\n          this.parent.setRecordValue(this.parent.taskFields.endDate, ganttSegments[ganttSegments.length - 1].endDate, data, true);\n        }\n\n        this.parent.setRecordValue('taskData.' + this.parent.taskFields.segments, taskData, data);\n      }\n    }\n\n    if (ganttSegments.length > 1) {\n      this.parent.setRecordValue('segments', ganttSegments, data.ganttProperties, true);\n    } else {\n      ganttSegments = null;\n    }\n\n    return ganttSegments;\n  };\n\n  TaskProcessor.prototype.setSegmentTaskData = function (segments, segmenttaskData) {\n    var taskSettings = this.parent.taskFields;\n    var taskData = extend({}, {}, segmenttaskData, true);\n\n    if (!isNullOrUndefined(taskSettings.startDate)) {\n      taskData[this.parent.taskFields.startDate] = segments.startDate;\n    }\n\n    if (!isNullOrUndefined(taskSettings.endDate)) {\n      taskData[this.parent.taskFields.endDate] = segments.endDate;\n    }\n\n    if (!isNullOrUndefined(taskSettings.duration)) {\n      taskData[this.parent.taskFields.duration] = Number(segments.duration);\n    }\n\n    return taskData;\n  };\n  /**\n   * Method to calculate work based on resource unit and duration.\n   *\n   * @param {IGanttData} ganttData .\n   * @returns {void} .\n   */\n\n\n  TaskProcessor.prototype.updateWorkWithDuration = function (ganttData) {\n    var resources = ganttData.ganttProperties.resourceInfo;\n    var work = 0;\n\n    if (!isNullOrUndefined(resources)) {\n      var resourcesLength = resources.length;\n      var index = void 0;\n      var resourceUnit = void 0;\n      var resourceOneDayWork = void 0;\n      var actualOneDayWork = this.parent.secondsPerDay / 3600;\n      var durationInDay = this.getDurationInDay(ganttData.ganttProperties.duration, ganttData.ganttProperties.durationUnit);\n\n      for (index = 0; index < resourcesLength; index++) {\n        resourceUnit = resources[index][this.parent.resourceFields.unit]; //in percentage\n\n        resourceOneDayWork = resourceUnit > 0 ? actualOneDayWork * resourceUnit / 100 : actualOneDayWork; //in hours\n\n        work += resourceOneDayWork * durationInDay;\n      } //Update work as per defined unit.\n\n\n      if (ganttData.ganttProperties.workUnit === 'minute') {\n        work = work * 60;\n      }\n\n      if (ganttData.ganttProperties.workUnit === 'day') {\n        work = work / actualOneDayWork;\n      } //To check the decimal places.\n\n\n      if (work % 1 !== 0) {\n        work = parseFloat(work.toFixed(2));\n      }\n    }\n\n    this.parent.setRecordValue('work', work, ganttData.ganttProperties, true);\n\n    if (!isNullOrUndefined(this.parent.taskFields.work)) {\n      this.parent.dataOperation.updateMappingData(ganttData, 'work');\n    }\n  };\n  /**\n   *\n   * @param {IGanttData} parent .\n   * @returns {IParent} .\n   * @private\n   */\n\n\n  TaskProcessor.prototype.getCloneParent = function (parent) {\n    if (!isNullOrUndefined(parent)) {\n      var cloneParent = {};\n      cloneParent.uniqueID = parent.uniqueID;\n      cloneParent.expanded = parent.expanded;\n      cloneParent.level = parent.level;\n      cloneParent.index = parent.index;\n      cloneParent.taskId = parent.ganttProperties.rowUniqueID;\n      return cloneParent;\n    } else {\n      return null;\n    }\n  };\n  /**\n   * @returns {void} .\n   * @private\n   */\n\n\n  TaskProcessor.prototype.reUpdateResources = function () {\n    if (this.parent.flatData.length > 0) {\n      var data = void 0;\n      var ganttProperties = void 0;\n      var ganttData = void 0;\n\n      for (var index = 0; index < this.parent.flatData.length; index++) {\n        data = this.parent.flatData[index].taskData;\n        ganttProperties = this.parent.flatData[index].ganttProperties;\n        ganttData = this.parent.flatData[index];\n        this.parent.setRecordValue('resourceInfo', this.setResourceInfo(data), ganttProperties, true);\n        this.updateResourceName(ganttData);\n      }\n    }\n  };\n\n  TaskProcessor.prototype.addTaskData = function (ganttData, data, isLoad) {\n    var _this = this;\n\n    var taskSettings = this.parent.taskFields;\n    var dataManager = this.parent.dataSource;\n\n    if (isLoad) {\n      if (taskSettings.parentID || dataManager instanceof DataManager && dataManager.dataSource.json && dataManager.dataSource.offline) {\n        if (taskSettings.parentID) {\n          var id = data[taskSettings.id];\n          var index = this.taskIds.indexOf(id.toString());\n          var tempData_1 = index > -1 ? this.dataArray[index] : {};\n\n          if (!isNullOrUndefined(this.parent.taskFields.segmentId)) {\n            var segmentDataCollection = this.segmentCollection.filter(function (x) {\n              return x.key === tempData_1[_this.parent.taskFields.id];\n            });\n\n            if (segmentDataCollection.length > 0) {\n              tempData_1[this.parent.taskFields.segments] = segmentDataCollection[0].items;\n            }\n          }\n\n          this.parent.setRecordValue('taskData', tempData_1, ganttData);\n        } else {\n          this.parent.setRecordValue('taskData', data, ganttData);\n        }\n      } else {\n        this.parent.setRecordValue('taskData', data, ganttData);\n      }\n    } else {\n      this.parent.setRecordValue('taskData', data, ganttData);\n    }\n  };\n\n  TaskProcessor.prototype.updateExpandStateMappingValue = function (ganttData, data) {\n    var expandStateMapping = this.parent.taskFields.expandState;\n    var mappingValue = data[expandStateMapping];\n    var updatableValue;\n\n    if (expandStateMapping && ganttData.hasChildRecords) {\n      if (!isNullOrUndefined(mappingValue)) {\n        updatableValue = mappingValue.toString() === 'true' ? true : false;\n      } else if (isNullOrUndefined(mappingValue) && !this.parent.collapseAllParentTasks) {\n        updatableValue = true;\n      } else if (isNullOrUndefined(mappingValue) && this.parent.collapseAllParentTasks) {\n        updatableValue = false;\n      }\n\n      this.parent.setRecordValue('taskData.' + expandStateMapping, updatableValue, ganttData);\n      this.parent.setRecordValue(expandStateMapping, updatableValue, ganttData);\n      this.parent.setRecordValue('expanded', updatableValue, ganttData);\n    }\n  };\n  /**\n   * @param {IGanttData} ganttData .\n   * @param {object} data .\n   * @returns {void} .\n   */\n\n\n  TaskProcessor.prototype.setValidatedDates = function (ganttData, data) {\n    var ganttProperties = ganttData.ganttProperties;\n    var taskSettings = this.parent.taskFields;\n    var duration = data[taskSettings.duration];\n    var startDate = this.getDateFromFormat(data[taskSettings.startDate], true);\n    var endDate = this.getDateFromFormat(data[taskSettings.endDate], true);\n    duration = isNullOrUndefined(duration) || duration === '' ? null : duration;\n    this.parent.setRecordValue('startDate', new Date(startDate.getTime()), ganttProperties, true);\n\n    if (!isNullOrUndefined(duration) && duration !== '') {\n      this.updateDurationValue(duration, ganttProperties);\n    } else {\n      this.calculateDuration(ganttData);\n    }\n\n    this.parent.setRecordValue('endDate', new Date(endDate.getTime()), ganttProperties, true);\n  };\n  /**\n   *\n   * @param {IGanttData} ganttData .\n   * @param {object} data .\n   * @param {boolean} isLoad .\n   * @returns {void} .\n   * @private\n   */\n\n\n  TaskProcessor.prototype.calculateScheduledValues = function (ganttData, data, isLoad) {\n    var taskSettings = this.parent.taskFields;\n    var ganttProperties = ganttData.ganttProperties;\n    var duration = data[taskSettings.duration];\n    duration = isNullOrUndefined(duration) || duration === '' ? null : duration;\n    var startDate = this.getDateFromFormat(data[taskSettings.startDate], true);\n    var endDate = this.getDateFromFormat(data[taskSettings.endDate], true);\n    var segments = taskSettings.segments ? data[taskSettings.segments] || ganttData.taskData[taskSettings.segments] : null;\n    var isMileStone = taskSettings.milestone ? data[taskSettings.milestone] ? true : false : false;\n    var durationMapping = data[taskSettings.durationUnit] ? data[taskSettings.durationUnit] : '';\n    this.parent.setRecordValue('durationUnit', this.validateDurationUnitMapping(durationMapping), ganttProperties, true);\n    var work = !isNullOrUndefined(data[taskSettings.work]) ? parseFloat(data[taskSettings.work]) : 0;\n    this.parent.setRecordValue('workUnit', this.validateWorkUnitMapping(this.parent.workUnit), ganttProperties, true);\n    var taskTypeMapping = data[taskSettings.type] ? data[taskSettings.type] : '';\n    var tType = this.validateTaskTypeMapping(taskTypeMapping);\n    this.parent.setRecordValue('taskType', tType, ganttProperties, true);\n\n    if (isLoad && !this.parent.enableValidation && startDate && endDate) {\n      this.setValidatedDates(ganttData, data);\n    } else {\n      if (!endDate && !startDate && (isNullOrUndefined(duration) || duration === '')) {\n        if (this.parent.allowUnscheduledTasks) {\n          return;\n        } else {\n          this.parent.setRecordValue('duration', 1, ganttProperties, true);\n          this.parent.setRecordValue('startDate', this.getProjectStartDate(ganttProperties, isLoad), ganttProperties, true);\n          this.calculateEndDate(ganttData);\n        }\n      } else if (startDate) {\n        this.calculateDateFromStartDate(startDate, endDate, duration, ganttData, isLoad);\n      } else if (endDate) {\n        this.calculateDateFromEndDate(endDate, duration, ganttData);\n      } else if (!isNullOrUndefined(duration) && duration !== '') {\n        this.updateDurationValue(duration, ganttProperties);\n\n        if (this.parent.allowUnscheduledTasks) {\n          this.parent.setRecordValue('startDate', null, ganttProperties, true);\n          this.parent.setRecordValue('endDate', null, ganttProperties, true);\n        } else {\n          this.parent.setRecordValue('startDate', this.getProjectStartDate(ganttProperties, isLoad), ganttProperties, true);\n          this.calculateEndDate(ganttData);\n        }\n      }\n    }\n\n    if (!isNullOrUndefined(segments)) {\n      this.parent.setRecordValue('segments', this.setSegmentsInfo(ganttData, true), ganttProperties, true);\n    }\n\n    if (ganttProperties.duration === 0) {\n      this.parent.setRecordValue('isMilestone', true, ganttProperties, true);\n      this.parent.setRecordValue('endDate', ganttProperties.startDate, ganttProperties, true);\n    }\n\n    if (!isNullOrUndefined(isMileStone) && isMileStone) {\n      this.parent.setRecordValue('duration', 0, ganttProperties, true);\n      this.parent.setRecordValue('isMilestone', true, ganttProperties, true);\n      this.parent.setRecordValue('endDate', ganttProperties.startDate, ganttProperties, true);\n    }\n\n    if (!isNullOrUndefined(taskSettings.work)) {\n      this.parent.setRecordValue('durationUnit', this.parent.durationUnit, ganttProperties, true);\n\n      if (isNaN(work) || isNullOrUndefined(work)) {\n        this.parent.setRecordValue('work', 0, ganttProperties, true);\n        this.parent.setRecordValue('duration', 0, ganttProperties, true);\n        this.parent.setRecordValue('isMilestone', true, ganttProperties, true);\n        this.parent.setRecordValue('endDate', ganttProperties.startDate, ganttProperties, true);\n      } else {\n        this.parent.setRecordValue('work', work, ganttProperties, true);\n\n        switch (tType) {\n          case 'FixedDuration':\n            this.updateUnitWithWork(ganttData);\n            break;\n\n          case 'FixedWork':\n            this.updateUnitWithWork(ganttData);\n            break;\n\n          case 'FixedUnit':\n            this.updateDurationWithWork(ganttData);\n            break;\n        }\n\n        if (!isNullOrUndefined(taskSettings.type)) {\n          this.parent.dataOperation.updateMappingData(ganttData, 'type');\n        }\n\n        if (ganttProperties.duration === 0) {\n          this.parent.setRecordValue('isMilestone', true, ganttProperties, true);\n          this.parent.setRecordValue('endDate', ganttProperties.startDate, ganttProperties, true);\n        } else if (!isNullOrUndefined(ganttProperties.startDate) && !isNullOrUndefined(ganttProperties.duration)) {\n          this.parent.setRecordValue('isMilestone', false, ganttProperties, true);\n          this.calculateEndDate(ganttData);\n        }\n      }\n\n      this.parent.dataOperation.updateMappingData(ganttData, 'work');\n    } else if (taskSettings.type && ganttProperties.taskType) {\n      this.parent.dataOperation.updateMappingData(ganttData, 'type');\n    }\n  };\n  /**\n   * Method to update duration with work value.\n   *\n   * @param {IGanttData} ganttData .\n   * @returns {void} .\n   */\n\n\n  TaskProcessor.prototype.updateDurationWithWork = function (ganttData) {\n    var ganttProperties = ganttData.ganttProperties;\n    var resources = ganttProperties.resourceInfo;\n\n    if (!isNullOrUndefined(resources)) {\n      var resourcesLength = !isNullOrUndefined(resources) ? resources.length : 0;\n      var totalResourceOneDayWork = 0;\n      var actualOneDayWork = this.parent.secondsPerDay / 3600;\n      var updatedDuration = 0;\n      var resourceUnit = void 0;\n      var index = void 0;\n\n      for (index = 0; index < resourcesLength; index++) {\n        resourceUnit = resources[index][this.parent.resourceFields.unit]; //in percentage\n\n        totalResourceOneDayWork += resourceUnit > 0 ? actualOneDayWork * resourceUnit / 100 : actualOneDayWork; //in hours\n      }\n\n      var totalHours = this.getWorkInHour(ganttProperties.work, ganttProperties.workUnit);\n\n      if (resourcesLength > 0) {\n        updatedDuration += totalHours / totalResourceOneDayWork;\n      } //Update duration as per defined unit.\n\n\n      if (ganttProperties.durationUnit === 'minute') {\n        updatedDuration = updatedDuration * actualOneDayWork * 60;\n      }\n\n      if (ganttProperties.durationUnit === 'hour') {\n        updatedDuration = updatedDuration * actualOneDayWork;\n      } //To check the decimal places.\n\n\n      if (updatedDuration % 1 !== 0) {\n        updatedDuration = parseFloat(updatedDuration.toFixed(2));\n      }\n\n      if (!isNullOrUndefined(ganttProperties.duration)) {\n        this.parent.setRecordValue('duration', updatedDuration, ganttProperties, true);\n      }\n\n      this.parent.dataOperation.updateMappingData(ganttData, 'duration');\n    }\n  };\n  /**\n   * Update units of resources with respect to duration and work of a task.\n   *\n   * @param {IGanttData} ganttData .\n   * @returns {void} .\n   */\n\n\n  TaskProcessor.prototype.updateUnitWithWork = function (ganttData) {\n    var ganttProperties = ganttData.ganttProperties;\n    var resources = ganttProperties.resourceInfo;\n    var resourcesLength = !isNullOrUndefined(resources) ? resources.length : 0;\n    var actualOneDayWork = this.parent.secondsPerDay / 3600;\n\n    if (resourcesLength === 0) {\n      return;\n    }\n\n    var durationInDay = this.getDurationInDay(ganttData.ganttProperties.duration, ganttData.ganttProperties.durationUnit);\n    var totalHours = this.getWorkInHour(ganttProperties.work, ganttProperties.workUnit);\n    var totalUnitInPercentage = durationInDay > 0 ? totalHours / (durationInDay * actualOneDayWork) * 100 : 0;\n    var individualUnit = totalUnitInPercentage > 0 ? totalUnitInPercentage / resourcesLength : 100; //To check the decimal places.\n\n    if (individualUnit % 1 !== 0) {\n      individualUnit = parseFloat(individualUnit.toFixed(2));\n    }\n\n    for (var index = 0; index < resourcesLength; index++) {\n      resources[index][this.parent.resourceFields.unit] = individualUnit;\n    } //To update the unit value in data source\n\n\n    this.updateResourceName(ganttData);\n  };\n\n  TaskProcessor.prototype.calculateDateFromEndDate = function (endDate, duration, ganttData) {\n    var ganttProperties = ganttData.ganttProperties;\n\n    if (endDate.getHours() === 0 && this.parent.defaultEndTime !== 86400) {\n      this.setTime(this.parent.defaultEndTime, endDate);\n    }\n\n    var validateAsMilestone = parseInt(duration, 10) === 0 ? true : null;\n    this.parent.setRecordValue('endDate', this.checkEndDate(endDate, ganttData.ganttProperties, validateAsMilestone), ganttProperties, true);\n\n    if (isNullOrUndefined(duration) || duration === '') {\n      if (this.parent.allowUnscheduledTasks) {\n        this.parent.setRecordValue('startDate', null, ganttProperties, true);\n        this.parent.setRecordValue('duration', null, ganttProperties, true);\n      } else {\n        this.parent.setRecordValue('duration', 1, ganttProperties, true);\n        this.parent.setRecordValue('startDate', this.getStartDate(ganttProperties.endDate, ganttProperties.duration, ganttProperties.durationUnit, ganttProperties), ganttProperties, true);\n      }\n    } else if (!isNullOrUndefined(duration) && duration !== '') {\n      this.updateDurationValue(duration, ganttProperties);\n      this.parent.setRecordValue('startDate', this.getStartDate(ganttProperties.endDate, ganttProperties.duration, ganttProperties.durationUnit, ganttProperties), ganttProperties, true);\n    }\n  };\n\n  TaskProcessor.prototype.calculateDateFromStartDate = function (startDate, endDate, duration, ganttData, isLoad) {\n    var ganttProperties = ganttData.ganttProperties;\n    var validateAsMilestone = parseInt(duration, 10) === 0 || startDate && endDate && new Date(startDate.getTime()) === new Date(endDate.getTime()) ? true : null;\n    this.parent.setRecordValue('startDate', this.checkStartDate(startDate, ganttProperties, validateAsMilestone, isLoad), ganttProperties, true);\n\n    if (this.parent.isTreeGridRendered && ganttData) {\n      this.updateTaskData(ganttData);\n    }\n\n    if (!endDate && (isNullOrUndefined(duration) || duration === '')) {\n      if (this.parent.allowUnscheduledTasks) {\n        this.parent.setRecordValue('endDate', null, ganttProperties, true);\n        this.parent.setRecordValue('duration', null, ganttProperties, true);\n      } else {\n        this.parent.setRecordValue('duration', 1, ganttProperties, true);\n        this.calculateEndDate(ganttData);\n      }\n    } else if (!isNullOrUndefined(duration) && !endDate) {\n      this.updateDurationValue(duration, ganttProperties);\n      this.calculateEndDate(ganttData);\n    } else if (endDate && (isNullOrUndefined(duration) || duration === '')) {\n      if (endDate.getHours() === 0 && this.parent.defaultEndTime !== 86400) {\n        this.setTime(this.parent.defaultEndTime, endDate);\n      }\n\n      this.parent.setRecordValue('endDate', this.checkEndDate(endDate, ganttData.ganttProperties), ganttProperties, true);\n\n      if (this.compareDates(ganttProperties.startDate, ganttProperties.endDate) === 1) {\n        this.parent.setRecordValue('endDate', ganttProperties.startDate, ganttProperties, true);\n        this.parent.setRecordValue('isMilestone', true, ganttProperties, true);\n        this.parent.setRecordValue('duration', 0, ganttProperties, true);\n      } else {\n        this.calculateDuration(ganttData);\n      }\n    } else {\n      this.updateDurationValue(duration, ganttProperties);\n      this.calculateEndDate(ganttData);\n    }\n  };\n  /**\n   *\n   * @param {number} parentWidth .\n   * @param {number} percent .\n   * @returns {number} .\n   * @private\n   */\n\n\n  TaskProcessor.prototype.getProgressWidth = function (parentWidth, percent) {\n    return parentWidth * percent / 100;\n  };\n  /**\n   *\n   * @param {IGanttData} ganttData .\n   * @param {boolean} isAuto .\n   * @returns {number} .\n   * @private\n   */\n\n\n  TaskProcessor.prototype.calculateWidth = function (ganttData, isAuto) {\n    var ganttProp = ganttData.ganttProperties;\n    var sDate = isAuto ? ganttProp.autoStartDate : ganttProp.startDate;\n    var eDate = isAuto ? ganttProp.autoEndDate : ganttProp.endDate;\n    var unscheduledTaskWidth = 3;\n\n    if (isNullOrUndefined(sDate) && isNullOrUndefined(eDate)) {\n      sDate = this.getValidStartDate(ganttProp, isAuto);\n      eDate = this.getValidEndDate(ganttProp, isAuto);\n    }\n\n    if (isNullOrUndefined(sDate) || isNullOrUndefined(eDate)) {\n      return unscheduledTaskWidth;\n    } else if (ganttProp.isMilestone && (!ganttData.hasChildRecords || ganttProp.isAutoSchedule)) {\n      //let taskBarHeight: number = this.getTaskbarHeight();\n      return 0;\n    } else {\n      return this.getTaskWidth(sDate, eDate);\n    }\n  };\n\n  TaskProcessor.prototype.getTaskbarHeight = function () {\n    var rowHeight = this.parent.rowHeight;\n    var taskBarHeight = this.parent.taskbarHeight;\n\n    if (taskBarHeight < rowHeight) {\n      return taskBarHeight;\n    } else {\n      return rowHeight;\n    }\n  };\n  /**\n   * Method to calculate left\n   *\n   * @param {ITaskData} ganttProp .\n   * @param {boolean} isAuto .\n   * @returns {number} .\n   * @private\n   */\n\n\n  TaskProcessor.prototype.calculateLeft = function (ganttProp, isAuto) {\n    var sDate = null;\n    var left = -300;\n    var startDate = isAuto ? ganttProp.autoStartDate : ganttProp.startDate;\n    var endDate = isAuto ? ganttProp.autoEndDate : ganttProp.endDate;\n    var duration = isAuto ? ganttProp.autoDuration : ganttProp.duration; // eslint-disable-line\n\n    var milestone = ganttProp.isMilestone;\n\n    if (startDate) {\n      sDate = new Date(startDate.getTime());\n    } else if (endDate) {\n      sDate = new Date(endDate.getTime());\n      milestone = true;\n    } else {\n      sDate = this.getValidStartDate(ganttProp);\n    }\n\n    if (!isNullOrUndefined(sDate)) {\n      left = this.getTaskLeft(sDate, milestone);\n    }\n\n    return left;\n  };\n  /**\n   * calculate the left position of the auto scheduled taskbar\n   *\n   * @param {ITaskData} ganttProperties - Defines the gantt data.\n   * @returns {number} .\n   * @private\n   */\n\n\n  TaskProcessor.prototype.calculateAutoLeft = function (ganttProperties) {\n    return this.getTaskLeft(ganttProperties.autoStartDate, ganttProperties.isMilestone);\n  };\n  /**\n   * To calculate duration of Gantt record with auto scheduled start date and auto scheduled end date\n   *\n   * @param {ITaskData} ganttProperties - Defines the gantt data.\n   * @returns {number} .\n   */\n\n\n  TaskProcessor.prototype.calculateAutoDuration = function (ganttProperties) {\n    return this.getDuration(ganttProperties.autoStartDate, ganttProperties.autoEndDate, ganttProperties.durationUnit, false, ganttProperties.isMilestone);\n  };\n  /**\n   * calculate the with between auto scheduled start date and auto scheduled end date\n   *\n   * @param {ITaskData} ganttProperties - Defines the gantt data.\n   * @returns {number} .\n   * @private\n   */\n\n\n  TaskProcessor.prototype.calculateAutoWidth = function (ganttProperties) {\n    return this.getTaskWidth(ganttProperties.autoStartDate, ganttProperties.autoEndDate);\n  };\n  /**\n   * calculate the left margin of the baseline element\n   *\n   * @param {ITaskData} ganttProperties .\n   * @returns {number} .\n   * @private\n   */\n\n\n  TaskProcessor.prototype.calculateBaselineLeft = function (ganttProperties) {\n    var baselineStartDate = this.getDateFromFormat(ganttProperties.baselineStartDate);\n    var baselineEndDate = this.getDateFromFormat(ganttProperties.baselineEndDate);\n\n    if (baselineStartDate && baselineEndDate) {\n      return this.getTaskLeft(baselineStartDate, ganttProperties.isMilestone);\n    } else {\n      return 0;\n    }\n  };\n  /**\n   * calculate the width between baseline start date and baseline end date.\n   *\n   * @param {ITaskData} ganttProperties .\n   * @returns {number} .\n   * @private\n   */\n\n\n  TaskProcessor.prototype.calculateBaselineWidth = function (ganttProperties) {\n    var baselineStartDate = this.getDateFromFormat(ganttProperties.baselineStartDate);\n    var baselineEndDate = this.getDateFromFormat(ganttProperties.baselineEndDate);\n\n    if (baselineStartDate && baselineEndDate) {\n      return this.getTaskWidth(baselineStartDate, baselineEndDate);\n    } else {\n      return 0;\n    }\n  };\n  /**\n   * To get tasks width value\n   *\n   * @param {Date} startDate .\n   * @param {Date} endDate .\n   * @returns {number} .\n   * @private\n   */\n\n\n  TaskProcessor.prototype.getTaskWidth = function (startDate, endDate) {\n    var sDate = new Date(startDate.getTime());\n    var eDate = new Date(endDate.getTime());\n    var tierMode = this.parent.timelineModule.bottomTier !== 'None' ? this.parent.timelineModule.bottomTier : this.parent.timelineModule.topTier;\n\n    if (tierMode === 'Day') {\n      if (this.getSecondsInDecimal(sDate) === this.parent.defaultStartTime) {\n        sDate.setHours(0, 0, 0, 0);\n      }\n\n      if (this.getSecondsInDecimal(eDate) === this.parent.defaultEndTime) {\n        eDate.setHours(24);\n      }\n\n      if (this.getSecondsInDecimal(eDate) === this.parent.defaultStartTime) {\n        eDate.setHours(0, 0, 0, 0);\n      }\n    }\n\n    return this.getTimeDifference(sDate, eDate) / (1000 * 60 * 60 * 24) * this.parent.perDayWidth;\n  };\n  /**\n   * Get task left value\n   *\n   * @param {Date} startDate .\n   * @param {boolean} isMilestone .\n   * @returns {number} .\n   * @private\n   */\n\n\n  TaskProcessor.prototype.getTaskLeft = function (startDate, isMilestone) {\n    var date = new Date(startDate.getTime());\n    var tierMode = this.parent.timelineModule.bottomTier !== 'None' ? this.parent.timelineModule.bottomTier : this.parent.timelineModule.topTier;\n\n    if (tierMode === 'Day') {\n      if (this.getSecondsInDecimal(date) === this.parent.defaultStartTime) {\n        date.setHours(0, 0, 0, 0);\n      } else if (isMilestone && this.getSecondsInDecimal(date) === this.parent.defaultEndTime) {\n        date.setHours(24);\n      }\n    }\n\n    var timelineStartDate = this.parent.timelineModule.timelineStartDate;\n\n    if (timelineStartDate) {\n      return (date.getTime() - timelineStartDate.getTime()) / (1000 * 60 * 60 * 24) * this.parent.perDayWidth;\n    } else {\n      return 0;\n    }\n  };\n\n  TaskProcessor.prototype.getSplitTaskWidth = function (sDate, duration, data) {\n    var startDate = new Date(sDate.getTime());\n    var endDate = new Date(this.getEndDate(startDate, duration, data.ganttProperties.durationUnit, data.ganttProperties, false).getTime());\n    var tierViewMode = this.parent.timelineModule.bottomTier !== 'None' ? this.parent.timelineModule.bottomTier : this.parent.timelineModule.topTier;\n\n    if (tierViewMode === 'Day') {\n      if (this.getSecondsInDecimal(startDate) === this.parent.defaultStartTime) {\n        startDate.setHours(0, 0, 0, 0);\n      }\n\n      if (this.getSecondsInDecimal(endDate) === this.parent.defaultEndTime) {\n        endDate.setHours(24);\n      }\n\n      if (this.getSecondsInDecimal(endDate) === this.parent.defaultStartTime) {\n        endDate.setHours(0, 0, 0, 0);\n      }\n    }\n\n    return this.getTimeDifference(startDate, endDate) / (1000 * 60 * 60 * 24) * this.parent.perDayWidth;\n  };\n\n  TaskProcessor.prototype.getSplitTaskLeft = function (sDate, segmentTaskStartDate) {\n    var stDate = new Date(sDate.getTime());\n    var tierViewMode = this.parent.timelineModule.bottomTier !== 'None' ? this.parent.timelineModule.bottomTier : this.parent.timelineModule.topTier;\n\n    if (tierViewMode === 'Day') {\n      if (this.getSecondsInDecimal(stDate) === this.parent.defaultStartTime) {\n        stDate.setHours(0, 0, 0, 0);\n      }\n\n      if (this.getSecondsInDecimal(segmentTaskStartDate) === this.parent.defaultStartTime) {\n        segmentTaskStartDate.setHours(0, 0, 0, 0);\n      }\n    }\n\n    if (segmentTaskStartDate) {\n      return (stDate.getTime() - segmentTaskStartDate.getTime()) / (1000 * 60 * 60 * 24) * this.parent.perDayWidth;\n    } else {\n      return 0;\n    }\n  };\n  /**\n   *\n   * @param {IGanttData} ganttData .\n   * @param {string} fieldName .\n   * @returns {void} .\n   * @private\n   */\n\n\n  TaskProcessor.prototype.updateMappingData = function (ganttData, fieldName) {\n    var columnMapping = this.parent.columnMapping;\n    var ganttProp = ganttData.ganttProperties;\n\n    if (isNullOrUndefined(columnMapping[fieldName]) && fieldName !== 'taskType' && fieldName !== 'segments') {\n      return;\n    }\n\n    if (fieldName === 'predecessorName') {//\n    } else if (fieldName === 'resourceInfo') {\n      var resourceData = ganttProp.resourceInfo;\n      var resourceSettings = this.parent.resourceFields; // eslint-disable-next-line\n\n      var resourcesId = [];\n      var resourcesName = [];\n\n      for (var i = 0; i < resourceData.length; i++) {\n        resourcesId.push(resourceData[i][resourceSettings.id]);\n        var resName = resourceData[i][resourceSettings.name];\n        var resourceUnit = resourceData[i][resourceSettings.unit];\n\n        if (resourceUnit !== 100) {\n          resName += '[' + resourceUnit + '%' + ']';\n        }\n\n        resourcesName.push(resName);\n      }\n\n      this.parent.setRecordValue('resourceNames', resourcesName.join(','), ganttProp, true);\n      this.updateTaskDataResource(ganttData);\n      this.parent.setRecordValue(columnMapping[fieldName], resourcesName.join(','), ganttData);\n    } else if (fieldName === 'startDate' || fieldName === 'endDate') {\n      this.setRecordDate(ganttData, ganttProp[fieldName], columnMapping[fieldName]);\n    } else if (fieldName === 'duration') {\n      this.setRecordDuration(ganttData, columnMapping[fieldName]);\n    } else if (fieldName === 'work') {\n      this.parent.setRecordValue('taskData.' + columnMapping[fieldName], this.getWorkString(ganttProp.work, ganttProp.workUnit), ganttData);\n      this.parent.setRecordValue(columnMapping[fieldName], ganttProp[fieldName], ganttData);\n    } else if (fieldName === 'type') {\n      this.parent.setRecordValue('taskData.' + columnMapping[fieldName], ganttProp[fieldName], ganttData);\n      this.parent.setRecordValue(columnMapping[fieldName], ganttProp[fieldName], ganttData);\n    } else if (fieldName === 'manual') {\n      this.parent.setRecordValue('taskData.' + columnMapping[fieldName], !ganttProp.isAutoSchedule, ganttData);\n      this.parent.setRecordValue(columnMapping[fieldName], !ganttProp.isAutoSchedule, ganttData);\n    } else if (fieldName === 'segments') {\n      this.parent.setRecordValue('taskData.' + this.parent.taskFields.segments, this.segmentTaskData(ganttData), ganttData);\n    } else {\n      this.parent.setRecordValue('taskData.' + columnMapping[fieldName], ganttProp[fieldName], ganttData);\n      this.parent.setRecordValue(columnMapping[fieldName], ganttProp[fieldName], ganttData);\n    }\n  };\n\n  TaskProcessor.prototype.segmentTaskData = function (data) {\n    var segments = data.ganttProperties.segments;\n    var taskSettings = this.parent.taskFields;\n\n    if (isNullOrUndefined(segments)) {\n      return null;\n    }\n\n    var taskData = extend([], [], data.taskData[taskSettings.segments], true);\n\n    for (var i = 0; i < segments.length; i++) {\n      if (this.parent.isEdit || this.parent.editModule && this.parent.editModule.dialogModule && getValue('isEdit', this.parent.editModule.dialogModule) || this.parent.contextMenuModule && getValue('isEdit', this.parent.contextMenuModule)) {\n        taskData[i] = {};\n      }\n\n      if (!isNullOrUndefined(taskSettings.startDate)) {\n        taskData[i][this.parent.taskFields.startDate] = segments[i].startDate;\n      }\n\n      if (!isNullOrUndefined(taskSettings.endDate)) {\n        taskData[i][this.parent.taskFields.endDate] = segments[i].endDate;\n      }\n\n      if (!isNullOrUndefined(taskSettings.duration)) {\n        taskData[i][this.parent.taskFields.duration] = Number(segments[i].duration);\n      }\n    }\n\n    return taskData;\n  };\n  /**\n   * Method to update the task data resource values\n   *\n   * @param {IGanttData} ganttData .\n   * @returns {void} .\n   */\n\n\n  TaskProcessor.prototype.updateTaskDataResource = function (ganttData) {\n    var resourceData = ganttData.ganttProperties.resourceInfo;\n    var preTaskResources = ganttData.taskData[this.parent.taskFields.resourceInfo];\n    var resourceSettings = this.parent.resourceFields;\n\n    if (isNullOrUndefined(preTaskResources)) {\n      ganttData.taskData[this.parent.taskFields.resourceInfo] = resourceData;\n    } else if (resourceData.length) {\n      for (var i = 0; i < resourceData.length; i++) {\n        var isAdded = false;\n\n        for (var j = 0; j < preTaskResources.length; j++) {\n          if (typeof preTaskResources[j] === 'number' || typeof preTaskResources[j] === 'string') {\n            if (parseInt(preTaskResources[j], 10) === parseInt(resourceData[i][resourceSettings.id], 10)) {\n              preTaskResources[j] = resourceData[i];\n              isAdded = true;\n              break;\n            }\n          } else if (preTaskResources[j][resourceSettings.id] === resourceData[i][resourceSettings.id] && typeof preTaskResources[j] !== 'number') {\n            preTaskResources[j] = extend({}, preTaskResources[j], resourceData[i], true);\n            isAdded = true;\n            break;\n          }\n        }\n\n        if (!isAdded) {\n          preTaskResources.push(resourceData[i]);\n        }\n      }\n\n      var data_1 = [];\n\n      var _loop_4 = function (k) {\n        resourceData.filter(function (resourceInfo) {\n          if (resourceInfo[resourceSettings.id] === preTaskResources[k][resourceSettings.id]) {\n            data_1.push(preTaskResources[k]);\n          }\n        });\n      };\n\n      for (var k = 0; k < preTaskResources.length; k++) {\n        _loop_4(k);\n      }\n\n      this.parent.setRecordValue('taskData.' + this.parent.taskFields.resourceInfo, data_1, ganttData);\n    } else {\n      this.parent.setRecordValue('taskData.' + this.parent.taskFields.resourceInfo, [], ganttData);\n    }\n  };\n\n  TaskProcessor.prototype.setRecordDate = function (task, value, mapping) {\n    var tempDate = typeof value === 'string' ? new Date(value) : value;\n\n    if (!isNullOrUndefined(value)) {\n      value = new Date(tempDate.getTime());\n    }\n\n    this.parent.setRecordValue(mapping, value, task);\n\n    if (!isNullOrUndefined(value)) {\n      value = new Date(tempDate.getTime());\n    }\n\n    this.parent.setRecordValue('taskData.' + mapping, value, task);\n  };\n\n  TaskProcessor.prototype.getDurationInDay = function (duration, durationUnit) {\n    if (durationUnit === 'day') {\n      return duration;\n    } else if (durationUnit === 'hour') {\n      return duration / (this.parent.secondsPerDay / 3600);\n    } else {\n      return duration / (this.parent.secondsPerDay / 60);\n    }\n  };\n\n  TaskProcessor.prototype.setRecordDuration = function (task, mapping) {\n    var duration = task.ganttProperties.duration;\n    var durationUnit = task.ganttProperties.durationUnit;\n\n    if (!isNullOrUndefined(duration)) {\n      this.parent.setRecordValue(mapping, task.ganttProperties.duration, task);\n      /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n\n      var durationValue = getValue(mapping, task.taskData);\n\n      if (isNaN(durationValue) && isNullOrUndefined(this.parent.taskFields.durationUnit) && !isNullOrUndefined(durationValue)) {\n        this.parent.setRecordValue('taskData.' + mapping, this.getDurationString(duration, durationUnit), task);\n      } else {\n        if (typeof durationValue === 'string') {\n          this.parent.setRecordValue('taskData.' + mapping, duration.toString(), task);\n        } else {\n          this.parent.setRecordValue('taskData.' + mapping, duration, task);\n        }\n      }\n    } else {\n      this.parent.setRecordValue(mapping, duration, task);\n      this.parent.setRecordValue('taskData.' + mapping, duration, task);\n    }\n\n    if (this.parent.taskFields.durationUnit) {\n      task.taskData[this.parent.taskFields.durationUnit] = task.ganttProperties.durationUnit;\n    }\n  };\n\n  TaskProcessor.prototype.getWorkInHour = function (work, workUnit) {\n    if (workUnit === 'day') {\n      return work * (this.parent.secondsPerDay / 3600);\n    } else if (workUnit === 'minute') {\n      return work / 60;\n    } else {\n      return work;\n    }\n  };\n  /**\n   *\n   * @param {IGanttData} ganttData .\n   * @returns {void} .\n   * @private\n   */\n\n\n  TaskProcessor.prototype.updateTaskData = function (ganttData) {\n    var dataMapping = this.parent.taskFields;\n    var ganttProperties = ganttData.ganttProperties;\n\n    if (!isNullOrUndefined(ganttData.taskData)) {\n      var data = ganttData.taskData;\n\n      if (dataMapping.id) {\n        this.parent.setRecordValue('taskData.' + dataMapping.id, ganttProperties.taskId, ganttData);\n        this.parent.setRecordValue(dataMapping.id, ganttProperties.taskId, ganttData);\n      }\n\n      if (dataMapping.name) {\n        this.parent.setRecordValue('taskData.' + dataMapping.name, ganttProperties.taskName, ganttData);\n        this.parent.setRecordValue(dataMapping.name, ganttProperties.taskName, ganttData);\n      }\n\n      if (dataMapping.startDate) {\n        this.setRecordDate(ganttData, ganttProperties.startDate, dataMapping.startDate);\n      }\n\n      if (dataMapping.endDate) {\n        this.setRecordDate(ganttData, ganttProperties.endDate, dataMapping.endDate);\n      }\n\n      if (dataMapping.duration) {\n        this.setRecordDuration(ganttData, dataMapping.duration);\n      }\n\n      if (dataMapping.durationUnit) {\n        data[dataMapping.durationUnit] = ganttProperties.durationUnit;\n      }\n\n      if (dataMapping.progress) {\n        this.parent.setRecordValue('taskData.' + dataMapping.progress, ganttProperties.progress, ganttData);\n        this.parent.setRecordValue(dataMapping.progress, ganttProperties.progress, ganttData);\n      }\n\n      if (dataMapping.baselineStartDate) {\n        this.setRecordDate(ganttData, ganttProperties.baselineStartDate, dataMapping.baselineStartDate);\n      }\n\n      if (dataMapping.baselineEndDate) {\n        this.setRecordDate(ganttData, ganttProperties.baselineEndDate, dataMapping.baselineEndDate);\n      }\n\n      if (dataMapping.notes) {\n        this.parent.setRecordValue('taskData.' + dataMapping.notes, ganttProperties.notes, ganttData);\n        this.parent.setRecordValue(dataMapping.notes, ganttProperties.notes, ganttData);\n      }\n\n      if (dataMapping.cssClass) {\n        this.parent.setRecordValue('taskData.' + dataMapping.cssClass, ganttProperties.cssClass, ganttData);\n        this.parent.setRecordValue(dataMapping.cssClass, ganttProperties.cssClass, ganttData);\n      }\n\n      if (dataMapping.indicators) {\n        this.parent.setRecordValue('taskData.' + dataMapping.indicators, ganttProperties.indicators, ganttData);\n        this.parent.setRecordValue(dataMapping.indicators, ganttProperties.indicators, ganttData);\n      }\n\n      if (dataMapping.parentID) {\n        var parentID = this.parent.viewType === 'ProjectView' ? ganttProperties.parentId : data[dataMapping.parentID];\n        this.parent.setRecordValue('taskData.' + dataMapping.parentID, parentID, ganttData);\n        this.parent.setRecordValue(dataMapping.parentID, ganttProperties.parentId, ganttData);\n      }\n\n      if (dataMapping.work) {\n        this.parent.setRecordValue('taskData.' + dataMapping.work, this.getWorkString(ganttProperties.work, ganttProperties.workUnit), ganttData);\n        this.parent.setRecordValue(dataMapping.work, ganttProperties.work, ganttData);\n      }\n\n      if (dataMapping.type) {\n        this.parent.setRecordValue('taskData.' + dataMapping.type, ganttProperties.taskType, ganttData);\n        this.parent.setRecordValue(dataMapping.type, ganttProperties.taskType, ganttData);\n      }\n    }\n  };\n  /**\n   * To set resource value in Gantt record\n   *\n   * @param {object} data .\n   * @returns {object[]} .\n   * @private\n   */\n\n\n  TaskProcessor.prototype.setResourceInfo = function (data) {\n    // eslint-disable-next-line\n    var resourceIdCollection;\n\n    if (isNullOrUndefined(data[this.parent.taskFields.resourceInfo])) {\n      return resourceIdCollection;\n    }\n\n    resourceIdCollection = data[this.parent.taskFields.resourceInfo];\n    var resourceData;\n\n    if (!isNullOrUndefined(this.parent.editModule) && !isNullOrUndefined(this.parent.editModule.dialogModule) && this.parent.editModule.dialogModule.isAddNewResource) {\n      resourceData = this.parent.editModule.dialogModule.ganttResources;\n    } else {\n      resourceData = this.parent.resources;\n    }\n\n    var resourceIDMapping = this.parent.resourceFields.id;\n    var resourceUnitMapping = this.parent.resourceFields.unit;\n    var resourceGroup = this.parent.resourceFields.group;\n    var resources = [];\n\n    var _loop_5 = function (count) {\n      var resource = resourceData.filter(function (resourceInfo) {\n        if (typeof resourceIdCollection[count] === 'object' && resourceIdCollection[count][resourceIDMapping] === resourceInfo[resourceIDMapping]) {\n          return true;\n        } else {\n          return resourceIdCollection[count] === resourceInfo[resourceIDMapping];\n        }\n      });\n      var ganttDataResource = extend({}, resource[0]);\n      resources.push(ganttDataResource);\n\n      if (!isNullOrUndefined(resourceUnitMapping) && !isNullOrUndefined(resourceIdCollection[count][resourceUnitMapping])) {\n        ganttDataResource[resourceUnitMapping] = resourceIdCollection[count][resourceUnitMapping];\n      }\n\n      if (!isNullOrUndefined(resourceGroup) && !isNullOrUndefined(resourceIdCollection[count][resourceGroup])) {\n        ganttDataResource[resourceGroup] = resourceIdCollection[count][resourceGroup];\n      }\n    };\n\n    for (var count = 0; count < resourceIdCollection.length; count++) {\n      _loop_5(count);\n    }\n\n    this.updateResourceUnit(resources);\n    return resources;\n  };\n  /**\n   * To set resource unit in Gantt record\n   *\n   * @param {object[]} resourceData .\n   * @returns {void} .\n   * @private\n   */\n\n\n  TaskProcessor.prototype.updateResourceUnit = function (resourceData) {\n    var resourceUnit = this.parent.resourceFields.unit;\n\n    if (!isNullOrUndefined(resourceUnit)) {\n      var length_1 = resourceData.length;\n      var index = void 0;\n\n      for (index = 0; index < length_1; index++) {\n        if (isNullOrUndefined(resourceData[index][resourceUnit])) {\n          resourceData[index][resourceUnit] = 100;\n        }\n      }\n    }\n  };\n  /**\n   * @param {IGanttData} data .\n   * @returns {void} .\n   * @private\n   */\n\n\n  TaskProcessor.prototype.updateResourceName = function (data) {\n    var resourceInfo = data.ganttProperties.resourceInfo;\n    var resourceName = [];\n\n    if (resourceInfo) {\n      var taskResources = extend([], [], data.taskData[this.parent.taskFields.resourceInfo], true);\n      this.parent.setRecordValue('taskData.' + this.parent.taskFields.resourceInfo, [], data);\n\n      for (var i = 0; i < resourceInfo.length; i++) {\n        var resource = resourceInfo[i];\n        var resName = resource[this.parent.resourceFields.name];\n        var resourceUnit = resource[this.parent.resourceFields.unit];\n\n        if (resourceUnit !== 100) {\n          resName += '[' + resourceUnit + '%' + ']';\n        }\n\n        resourceName.push(resName);\n\n        if (data.taskData) {\n          var mapping = this.parent.taskFields.resourceInfo; // eslint-disable-next-line\n\n          if (typeof (taskResources[i] === 'object')) {\n            data.taskData[mapping].push(taskResources[i]);\n          } else {\n            data.taskData[mapping].push(resource[this.parent.resourceFields.id]);\n          }\n        }\n      }\n\n      this.parent.setRecordValue('resourceNames', resourceName.join(','), data.ganttProperties, true);\n      this.parent.setRecordValue(this.parent.taskFields.resourceInfo, resourceName.join(','), data, true);\n      this.updateTaskDataResource(data);\n    }\n  };\n\n  TaskProcessor.prototype.dataReorder = function (flatCollection, rootCollection) {\n    var result = [];\n\n    while (flatCollection.length > 0 && rootCollection.length > 0) {\n      var index = rootCollection.indexOf(flatCollection[0]);\n\n      if (index === -1) {\n        flatCollection.shift();\n      } else {\n        result.push(flatCollection.shift());\n        rootCollection.splice(index, 1);\n      }\n    }\n\n    return result;\n  };\n\n  TaskProcessor.prototype.validateDurationUnitMapping = function (durationUnit) {\n    var unit = durationUnit;\n\n    if (unit === 'minute' || unit === 'minutes' || unit === 'm' || unit === 'min') {\n      unit = 'minute';\n    } else if (unit === 'hour' || unit === 'hours' || unit === 'h' || unit === 'hr') {\n      unit = 'hour';\n    } else if (unit === 'day' || unit === 'days' || unit === 'd') {\n      unit = 'day';\n    } else {\n      unit = this.parent.durationUnit.toLocaleLowerCase();\n    }\n\n    return unit;\n  };\n\n  TaskProcessor.prototype.validateTaskTypeMapping = function (taskType) {\n    var type = taskType;\n\n    if (type === 'FixedDuration') {\n      type = 'FixedDuration';\n    } else if (type === 'FixedUnit') {\n      type = 'FixedUnit';\n    } else if (type === 'FixedWork') {\n      type = 'FixedWork';\n    } else {\n      type = this.parent.taskType;\n    }\n\n    return type;\n  };\n\n  TaskProcessor.prototype.validateWorkUnitMapping = function (workUnit) {\n    var unit = workUnit;\n\n    if (unit === 'minute') {\n      unit = 'minute';\n    } else if (unit === 'hour') {\n      unit = 'hour';\n    } else if (unit === 'day') {\n      unit = 'day';\n    } else {\n      unit = this.parent.workUnit.toLocaleLowerCase();\n    }\n\n    return unit;\n  };\n  /**\n   * To update duration value in Task\n   *\n   * @param {string} duration .\n   * @param {ITaskData} ganttProperties .\n   * @returns {void} .\n   * @private\n   */\n\n\n  TaskProcessor.prototype.updateDurationValue = function (duration, ganttProperties) {\n    var tempDuration = this.getDurationValue(duration);\n\n    if (!isNaN(getValue('duration', tempDuration))) {\n      this.parent.setRecordValue('duration', getValue('duration', tempDuration), ganttProperties, true);\n    }\n\n    if (!isNullOrUndefined(getValue('durationUnit', tempDuration))) {\n      this.parent.setRecordValue('durationUnit', getValue('durationUnit', tempDuration), ganttProperties, true);\n    }\n  };\n  /**\n   * @returns {void} .\n   * @private\n   */\n\n\n  TaskProcessor.prototype.reUpdateGanttData = function () {\n    if (this.parent.flatData.length > 0) {\n      var data = void 0;\n      var ganttData = void 0;\n      this.parent.secondsPerDay = this.getSecondsPerDay();\n\n      for (var index = 0; index < this.parent.flatData.length; index++) {\n        data = this.parent.flatData[index].taskData;\n        ganttData = this.parent.flatData[index];\n\n        if (!isNullOrUndefined(this.parent.taskFields.duration)) {\n          this.setRecordDuration(ganttData, this.parent.taskFields.duration);\n        }\n\n        this.calculateScheduledValues(ganttData, data, false);\n      }\n\n      this.updateGanttData();\n    }\n  }; //check day is fall between from and to date range\n\n\n  TaskProcessor.prototype._isInStartDateRange = function (day, from, to) {\n    var isInRange = false;\n\n    if (day.getTime() >= from.getTime() && day.getTime() < to.getTime()) {\n      isInRange = true;\n    }\n\n    return isInRange;\n  }; //check day is fall between from and to date range\n\n\n  TaskProcessor.prototype._isInEndDateRange = function (day, from, to) {\n    var isInRange = false;\n\n    if (day.getTime() > from.getTime() && day.getTime() <= to.getTime()) {\n      isInRange = true;\n    }\n\n    return isInRange;\n  };\n  /**\n   * Method to find overlapping value of the parent task\n   *\n   * @param {IGanttData} resourceTask .\n   * @returns {void} .\n   * @private\n   */\n\n\n  TaskProcessor.prototype.updateOverlappingValues = function (resourceTask) {\n    var tasks = resourceTask.childRecords;\n    var currentTask;\n    var ranges = [];\n\n    if (tasks.length <= 1) {\n      resourceTask.ganttProperties.workTimelineRanges = [];\n      return;\n    }\n\n    tasks = this.setSortedChildTasks(resourceTask);\n    this.updateOverlappingIndex(tasks);\n\n    for (var count = 1; count < tasks.length; count++) {\n      currentTask = tasks[count];\n      var cStartDate = new Date(currentTask.ganttProperties.startDate.getTime());\n      var cEndDate = new Date(currentTask.ganttProperties.endDate.getTime()); //task 2\n\n      var range = []; // eslint-disable-next-line\n\n      var rangeObj = {};\n\n      for (var index = 0; index < count; index++) {\n        var tStartDate = tasks[index].ganttProperties.startDate;\n        var tEndDate = tasks[index].ganttProperties.endDate; // task 1\n\n        var rangeObj_1 = {};\n\n        if (this._isInStartDateRange(cStartDate, tStartDate, tEndDate) || this._isInEndDateRange(cEndDate, tStartDate, tEndDate)) {\n          if (tStartDate.getTime() > cStartDate.getTime() && tStartDate.getTime() < cEndDate.getTime() && tEndDate.getTime() > cStartDate.getTime() && tEndDate.getTime() > cEndDate.getTime() || cStartDate.getTime() === tStartDate.getTime() && cEndDate.getTime() <= tEndDate.getTime()) {\n            rangeObj_1.from = tStartDate;\n            rangeObj_1.to = cEndDate;\n          } else if (cStartDate.getTime() === tStartDate.getTime() && cEndDate.getTime() > tEndDate.getTime()) {\n            rangeObj_1.from = tStartDate;\n            rangeObj_1.to = tEndDate;\n          } else if (cStartDate.getTime() > tStartDate.getTime() && cEndDate.getTime() >= tEndDate.getTime()) {\n            rangeObj_1.from = cStartDate;\n            rangeObj_1.to = tEndDate;\n          } else if (cStartDate.getTime() > tStartDate.getTime() && cEndDate.getTime() < tEndDate.getTime()) {\n            rangeObj_1.from = cStartDate;\n            rangeObj_1.to = cEndDate;\n          }\n\n          range.push(rangeObj_1);\n        }\n      } // eslint-disable-next-line\n\n\n      ranges.push.apply(ranges, this.mergeRangeCollections(range));\n    }\n\n    this.parent.setRecordValue('workTimelineRanges', this.mergeRangeCollections(ranges, true), resourceTask.ganttProperties, true);\n    this.calculateRangeLeftWidth(resourceTask.ganttProperties.workTimelineRanges);\n  };\n  /**\n   * @param {IGanttData[]} tasks .\n   * @returns {void} .\n   * @private\n   */\n\n\n  TaskProcessor.prototype.updateOverlappingIndex = function (tasks) {\n    for (var i = 0; i < tasks.length; i++) {\n      tasks[i].ganttProperties.eOverlapIndex = i;\n    }\n  };\n  /**\n   * Method to calculate the left and width value of oarlapping ranges\n   *\n   * @param {IWorkTimelineRanges[]} ranges .\n   * @returns {void} .\n   * @private\n   */\n\n\n  TaskProcessor.prototype.calculateRangeLeftWidth = function (ranges) {\n    for (var count = 0; count < ranges.length; count++) {\n      ranges[count].left = this.getTaskLeft(ranges[count].from, false);\n      ranges[count].width = this.getTaskWidth(ranges[count].from, ranges[count].to);\n    }\n  };\n  /**\n   * @param {IWorkTimelineRanges[]} ranges .\n   * @param {boolean} isSplit .\n   * @returns {IWorkTimelineRanges[]} .\n   * @private\n   */\n\n\n  TaskProcessor.prototype.mergeRangeCollections = function (ranges, isSplit) {\n    var finalRange = [];\n    var currentTopRange = {};\n    var cCompareRange = {};\n    var cStartDate;\n    var cEndDate;\n    var tStartDate;\n    var tEndDate;\n    var sortedRanges = new DataManager(ranges).executeLocal(new Query().sortBy(this.parent.taskFields.startDate, 'Ascending'));\n\n    for (var i = 0; i < sortedRanges.length; i++) {\n      if (finalRange.length === 0 && i === 0) {\n        finalRange.push(sortedRanges[i]);\n        continue;\n      }\n\n      currentTopRange = finalRange[finalRange.length - 1];\n      cStartDate = currentTopRange.from;\n      cEndDate = currentTopRange.to;\n      cCompareRange = sortedRanges[i];\n      tStartDate = cCompareRange.from;\n      tEndDate = cCompareRange.to;\n\n      if (cStartDate.getTime() === tStartDate.getTime() && cEndDate.getTime() >= tEndDate.getTime() || cStartDate.getTime() < tStartDate.getTime() && cEndDate.getTime() >= tEndDate.getTime()) {\n        continue;\n      }\n      /* eslint-disable-next-line */\n      else if (cStartDate.getTime() <= tStartDate.getTime() && cEndDate.getTime() >= tStartDate.getTime() && cEndDate.getTime() < tEndDate.getTime() || cEndDate.getTime() < tStartDate.getTime() && this.checkStartDate(cEndDate).getTime() === tStartDate.getTime()) {\n          currentTopRange.to = tEndDate;\n        } else if (cEndDate.getTime() < tStartDate.getTime() && this.checkStartDate(cEndDate).getTime() !== tStartDate.getTime()) {\n          finalRange.push(sortedRanges[i]);\n        }\n    }\n\n    if (isSplit) {\n      finalRange = this.splitRangeCollection(finalRange);\n    }\n\n    return finalRange;\n  };\n  /**\n   * Sort resource child records based on start date\n   *\n   * @param {IGanttData} resourceTask .\n   * @returns {IGanttData} .\n   * @private\n   */\n\n\n  TaskProcessor.prototype.setSortedChildTasks = function (resourceTask) {\n    var sortedRecords = [];\n    sortedRecords = new DataManager(resourceTask.childRecords).executeLocal(new Query().sortBy(this.parent.taskFields.startDate, 'Ascending'));\n    return sortedRecords;\n  };\n\n  TaskProcessor.prototype.splitRangeCollection = function (rangeCollection, fromField, toField) {\n    var splitArray = [];\n    var unit;\n\n    if (this.parent.timelineModule.isSingleTier) {\n      unit = this.parent.timelineModule.bottomTier !== 'None' ? this.parent.timelineModule.bottomTier : this.parent.timelineModule.topTier;\n    } else {\n      unit = this.parent.timelineModule.bottomTier;\n    }\n\n    if (unit === 'Week' || unit === 'Month' || unit === 'Year') {\n      splitArray = rangeCollection;\n    } else if (unit === 'Day') {\n      splitArray = this.getRangeWithWeek(rangeCollection, fromField, toField);\n    } else {\n      if (this.parent.workingTimeRanges[0].from === 0 && this.parent.workingTimeRanges[0].to === 86400) {\n        splitArray = this.getRangeWithWeek(rangeCollection, fromField, toField);\n      } else {\n        splitArray = this.getRangeWithDay(rangeCollection, fromField, toField);\n      }\n    }\n\n    return splitArray;\n  };\n\n  TaskProcessor.prototype.getRangeWithDay = function (ranges, fromField, toField) {\n    var splitArray = [];\n\n    for (var i = 0; i < ranges.length; i++) {\n      // eslint-disable-next-line\n      splitArray.push.apply(splitArray, this.splitRangeForDayMode(ranges[i], fromField, toField));\n    }\n\n    return splitArray;\n  };\n\n  TaskProcessor.prototype.splitRangeForDayMode = function (range, fromField, toField) {\n    var fromString = fromField ? fromField : 'from';\n    var toString = toField ? toField : 'to';\n    var tempStart = new Date(range[fromString]);\n    var end = new Date(range[toString]);\n    var ranges = [];\n    var rangeObject = {};\n\n    if (tempStart.getTime() < end.getTime()) {\n      do {\n        var nStart = new Date(tempStart.getTime());\n        var nEndDate = new Date(tempStart.getTime());\n        var nextAvailDuration = 0;\n        var sHour = this.parent.dataOperation.getSecondsInDecimal(tempStart);\n        var startRangeIndex = -1;\n\n        for (var i = 0; i < this.parent.workingTimeRanges.length; i++) {\n          var val = this.parent.workingTimeRanges[i];\n\n          if (sHour >= val.from && sHour <= val.to) {\n            startRangeIndex = i;\n            break;\n          }\n        }\n\n        if (startRangeIndex !== -1) {\n          nextAvailDuration = Math.round(this.parent.workingTimeRanges[startRangeIndex].to - sHour);\n          nEndDate.setSeconds(nEndDate.getSeconds() + nextAvailDuration);\n        }\n\n        var taskName = 'task';\n\n        if (nEndDate.getTime() < end.getTime()) {\n          rangeObject = {};\n\n          if (range.task) {\n            rangeObject[taskName] = extend([], range.task);\n          }\n\n          rangeObject[fromString] = nStart;\n          rangeObject[toString] = nEndDate;\n          rangeObject.isSplit = true;\n          ranges.push(rangeObject);\n        } else {\n          rangeObject = {};\n\n          if (range.task) {\n            rangeObject[taskName] = extend([], range.task);\n          }\n\n          rangeObject[fromString] = nStart;\n          rangeObject[toString] = end;\n          rangeObject.isSplit = true;\n          ranges.push(rangeObject);\n        }\n\n        tempStart = this.checkStartDate(nEndDate);\n      } while (tempStart.getTime() < end.getTime());\n    } else {\n      ranges.push(range);\n    }\n\n    return ranges;\n  };\n\n  TaskProcessor.prototype.getRangeWithWeek = function (ranges, fromField, toField) {\n    var splitArray = [];\n\n    for (var i = 0; i < ranges.length; i++) {\n      // eslint-disable-next-line\n      splitArray.push.apply(splitArray, this.splitRangeForWeekMode(ranges[i], fromField, toField));\n    }\n\n    return splitArray;\n  };\n\n  TaskProcessor.prototype.splitRangeForWeekMode = function (range, fromField, toField) {\n    var from = fromField ? fromField : 'from';\n    var to = toField ? toField : 'to';\n    var start = new Date(range[from]);\n    var tempStart = new Date(range[from]);\n    var end = new Date(range[to]);\n    var isInSplit = false;\n    var ranges = [];\n    var rangeObj = {};\n    tempStart.setDate(tempStart.getDate() + 1);\n\n    if (tempStart.getTime() < end.getTime()) {\n      do {\n        if (this.parent.dataOperation.isOnHolidayOrWeekEnd(tempStart, null)) {\n          var tempEndDate = new Date(tempStart.getTime());\n          tempEndDate.setDate(tempStart.getDate() - 1);\n          this.setTime(this.parent.defaultEndTime, tempEndDate);\n          rangeObj = {};\n          rangeObj[from] = start;\n          rangeObj.isSplit = true;\n          rangeObj[to] = tempEndDate;\n\n          if (range.task) {\n            rangeObj.task = extend([], range.task, true);\n          }\n\n          if (start.getTime() !== tempEndDate.getTime()) {\n            ranges.push(rangeObj);\n          }\n\n          start = this.checkStartDate(tempEndDate);\n          tempStart = new Date(start.getTime());\n          isInSplit = true;\n        } else {\n          tempStart.setDate(tempStart.getDate() + 1);\n        }\n      } while (tempStart.getTime() < end.getTime());\n\n      if (isInSplit) {\n        if (start.getTime() !== end.getTime()) {\n          rangeObj = {};\n\n          if (range.task) {\n            rangeObj.task = extend([], range.task, true);\n          }\n\n          rangeObj[from] = start;\n          rangeObj[to] = end;\n          rangeObj.isSplit = true;\n          ranges.push(rangeObj);\n        }\n      } else {\n        ranges.push(range);\n      }\n    } else {\n      ranges.push(range);\n    }\n\n    return ranges;\n  };\n  /**\n   * Update all gantt data collection width, progress width and left value\n   *\n   * @returns {void} .\n   * @private\n   */\n\n\n  TaskProcessor.prototype.updateGanttData = function () {\n    var flatData = this.parent.flatData;\n    var length = flatData.length;\n\n    for (var i = 0; i < length; i++) {\n      var data = flatData[i];\n      this.updateTaskLeftWidth(data);\n    }\n  };\n  /**\n   * Update all gantt data collection width, progress width and left value\n   *\n   * @param {IGanttData} data .\n   * @returns {void} .\n   * @public\n   */\n\n\n  TaskProcessor.prototype.updateTaskLeftWidth = function (data) {\n    var task = data.ganttProperties;\n\n    if (!data.hasChildRecords) {\n      this.updateWidthLeft(data);\n    }\n\n    this.parent.setRecordValue('baselineLeft', this.calculateBaselineLeft(task), task, true);\n    this.parent.setRecordValue('baselineWidth', this.calculateBaselineWidth(task), task, true);\n    var childData = [];\n    var parentItem;\n\n    if (data.parentItem) {\n      parentItem = this.parent.getParentTask(data.parentItem);\n      childData = parentItem.childRecords;\n    }\n\n    if (parentItem && childData.indexOf(data) === childData.length - 1 && !data.hasChildRecords && this.parent.enableValidation) {\n      this.updateParentItems(parentItem);\n    } else if (parentItem && !this.parent.enableValidation) {\n      this.updateWidthLeft(parentItem);\n    }\n  };\n  /**\n   * @returns {void} .\n   * @private\n   */\n\n\n  TaskProcessor.prototype.reUpdateGanttDataPosition = function () {\n    var flatData = this.parent.flatData;\n    var length = flatData.length;\n\n    for (var i = 0; i < length; i++) {\n      var data = flatData[i];\n      var task = data.ganttProperties;\n      this.updateWidthLeft(data);\n\n      if (this.parent.taskMode !== 'Auto' && data.hasChildRecords) {\n        this.updateAutoWidthLeft(data);\n      }\n\n      this.parent.setRecordValue('baselineLeft', this.calculateBaselineLeft(task), task, true);\n      this.parent.setRecordValue('baselineWidth', this.calculateBaselineWidth(task), task, true);\n      this.parent.dataOperation.updateTaskData(data);\n    }\n  };\n  /**\n   * method to update left, width, progress width in record\n   *\n   * @param {IGanttData} data .\n   * @returns {void} .\n   * @private\n   */\n\n\n  TaskProcessor.prototype.updateWidthLeft = function (data) {\n    var ganttRecord = data.ganttProperties; // task endDate may be changed in segment calculation so this must be calculated first.\n    // task width calculating was based on endDate\n\n    if (!isNullOrUndefined(ganttRecord.segments) && ganttRecord.segments.length > 0) {\n      var segments = ganttRecord.segments;\n      var fixedWidth = true;\n      var totalTaskWidth = this.splitTasksDuration(segments) * this.parent.perDayWidth;\n      var totalProgressWidth = this.parent.dataOperation.getProgressWidth(totalTaskWidth, ganttRecord.progress);\n\n      for (var i = 0; i < segments.length; i++) {\n        var segment = segments[i];\n\n        if (i === 0 && !isNullOrUndefined(ganttRecord.startDate) && segment.startDate.getTime() !== ganttRecord.startDate.getTime()) {\n          segment.startDate = ganttRecord.startDate;\n          var endDate = this.parent.dataOperation.getEndDate(segment.startDate, segment.duration, ganttRecord.durationUnit, ganttRecord, false);\n          segment.endDate = this.parent.dataOperation.checkEndDate(endDate, ganttRecord, false);\n          this.parent.chartRowsModule.incrementSegments(segments, 0, data);\n        }\n\n        segment.width = this.getSplitTaskWidth(segment.startDate, segment.duration, data);\n        segment.showProgress = false;\n        segment.progressWidth = -1;\n\n        if (i !== 0) {\n          var pStartDate = new Date(ganttRecord.startDate.getTime());\n          segment.left = this.getSplitTaskLeft(segment.startDate, pStartDate);\n        }\n\n        if (totalProgressWidth > 0 && totalProgressWidth > segment.width) {\n          totalProgressWidth = totalProgressWidth - segment.width;\n          segment.progressWidth = segment.width;\n          segment.showProgress = false;\n        } else if (fixedWidth) {\n          segment.progressWidth = totalProgressWidth;\n          segment.showProgress = true;\n          totalProgressWidth = totalProgressWidth - segment.width;\n          fixedWidth = false;\n        }\n      }\n\n      this.parent.setRecordValue('segments', ganttRecord.segments, ganttRecord, true);\n      this.parent.dataOperation.updateMappingData(data, 'segments');\n    }\n\n    this.parent.setRecordValue('width', this.parent.dataOperation.calculateWidth(data), ganttRecord, true);\n    this.parent.setRecordValue('left', this.parent.dataOperation.calculateLeft(ganttRecord), ganttRecord, true);\n    this.parent.setRecordValue('progressWidth', this.parent.dataOperation.getProgressWidth(ganttRecord.isAutoSchedule || !data.hasChildRecords ? ganttRecord.width : ganttRecord.autoWidth, ganttRecord.progress), ganttRecord, true);\n  };\n  /**\n   * method to update left, width, progress width in record\n   *\n   * @param {IGanttData} data .\n   * @returns {void} .\n   * @private\n   */\n\n\n  TaskProcessor.prototype.updateAutoWidthLeft = function (data) {\n    var ganttRecord = data.ganttProperties;\n    this.parent.setRecordValue('autoWidth', this.calculateWidth(data, true), ganttRecord, true);\n    this.parent.setRecordValue('autoLeft', this.calculateLeft(ganttRecord, true), ganttRecord, true);\n  };\n  /**\n   * To calculate parent progress value\n   *\n   * @param {IGanttData} childGanttRecord .\n   * @returns {object} .\n   * @private\n   */\n\n\n  TaskProcessor.prototype.getParentProgress = function (childGanttRecord) {\n    var durationInDay = 0;\n    var progressValues = {};\n\n    switch (childGanttRecord.ganttProperties.durationUnit) {\n      case 'hour':\n        durationInDay = childGanttRecord.ganttProperties.duration / (this.parent.secondsPerDay / 3600);\n        break;\n\n      case 'minute':\n        durationInDay = childGanttRecord.ganttProperties.duration / (this.parent.secondsPerDay / 60);\n        break;\n\n      default:\n        durationInDay = childGanttRecord.ganttProperties.duration;\n    }\n\n    if (childGanttRecord.hasChildRecords) {\n      setValue('totalProgress', childGanttRecord.ganttProperties.totalProgress, progressValues);\n      setValue('totalDuration', childGanttRecord.ganttProperties.totalDuration, progressValues);\n    } else {\n      setValue('totalProgress', childGanttRecord.ganttProperties.progress * durationInDay, progressValues);\n      setValue('totalDuration', durationInDay, progressValues);\n    }\n\n    return progressValues;\n  };\n\n  TaskProcessor.prototype.resetDependency = function (record) {\n    var dependency = this.parent.taskFields.dependency;\n\n    if (!isNullOrUndefined(dependency)) {\n      var recordProp = record.ganttProperties;\n      this.parent.setRecordValue('predecessor', [], recordProp, true);\n      this.parent.setRecordValue('predecessorsName', null, recordProp, true);\n      this.parent.setRecordValue('taskData.' + dependency, null, record);\n      this.parent.setRecordValue(dependency, null, record);\n    }\n  };\n  /**\n   * @param {IParent | IGanttData} cloneParent .\n   * @param {boolean} isParent .\n   * @returns {void} .\n   * @private\n   */\n\n\n  TaskProcessor.prototype.updateParentItems = function (cloneParent, isParent) {\n    var parentData = isParent ? cloneParent : this.parent.getParentTask(cloneParent);\n    var deleteUpdate = false;\n    var ganttProp = parentData.ganttProperties;\n\n    if (parentData.childRecords.length > 0) {\n      var previousStartDate = ganttProp.isAutoSchedule ? ganttProp.startDate : ganttProp.autoStartDate;\n      var previousEndDate = ganttProp.isAutoSchedule ? ganttProp.endDate : ganttProp.autoEndDate;\n      var childRecords = parentData.childRecords;\n      var childLength = childRecords.length;\n      var totalDuration = 0;\n      var progressValues = {};\n      var minStartDate = null;\n      var maxEndDate = null;\n      var milestoneCount = 0;\n      var totalProgress = 0;\n      var childCompletedWorks = 0;\n      var childData = void 0;\n\n      for (var count = 0; count < childLength; count++) {\n        childData = childRecords[count];\n\n        if (this.parent.isOnDelete && childData.isDelete) {\n          if (childLength === 1 && this.parent.viewType === 'ProjectView') {\n            deleteUpdate = true;\n          }\n\n          continue;\n        }\n\n        var startDate = this.getValidStartDate(childData.ganttProperties);\n        var endDate = this.getValidEndDate(childData.ganttProperties);\n\n        if (isNullOrUndefined(minStartDate)) {\n          minStartDate = this.getDateFromFormat(startDate);\n        }\n\n        if (isNullOrUndefined(maxEndDate)) {\n          maxEndDate = this.getDateFromFormat(endDate);\n        }\n\n        if (!isNullOrUndefined(endDate) && this.compareDates(endDate, maxEndDate) === 1) {\n          maxEndDate = this.getDateFromFormat(endDate);\n        }\n\n        if (!isNullOrUndefined(startDate) && this.compareDates(startDate, minStartDate) === -1) {\n          minStartDate = this.getDateFromFormat(startDate);\n        }\n\n        if (!childData.ganttProperties.isMilestone && isScheduledTask(childData.ganttProperties)) {\n          progressValues = this.getParentProgress(childData);\n          totalProgress += getValue('totalProgress', progressValues);\n          totalDuration += getValue('totalDuration', progressValues);\n        } else {\n          milestoneCount++;\n        }\n\n        childCompletedWorks += childData.ganttProperties.work;\n      }\n\n      if (!deleteUpdate) {\n        if (this.compareDates(previousStartDate, minStartDate) !== 0) {\n          this.parent.setRecordValue(ganttProp.isAutoSchedule ? 'startDate' : 'autoStartDate', minStartDate, parentData.ganttProperties, true);\n        }\n\n        if (this.compareDates(previousEndDate, maxEndDate) !== 0) {\n          this.parent.setRecordValue(ganttProp.isAutoSchedule ? 'endDate' : 'autoEndDate', maxEndDate, parentData.ganttProperties, true);\n        }\n\n        var taskCount = void 0;\n\n        if (this.parent.isOnDelete && childData.isDelete) {\n          taskCount = childLength - milestoneCount - 1;\n        } else {\n          taskCount = childLength - milestoneCount;\n        }\n\n        var parentProgress = taskCount > 0 && totalDuration > 0 ? totalProgress / totalDuration : 0;\n        var parentProp = parentData.ganttProperties;\n        var milestone = taskCount === 0 && minStartDate && maxEndDate && minStartDate.getTime() === maxEndDate.getTime() ? true : false;\n        this.parent.setRecordValue('isMilestone', milestone, parentProp, true);\n\n        if (parentProp.isAutoSchedule) {\n          this.calculateDuration(parentData);\n        }\n\n        this.updateWorkWithDuration(parentData);\n        var parentWork = parentProp.work;\n        parentWork += childCompletedWorks;\n        this.parent.setRecordValue('work', parentWork, parentProp, true);\n        this.parent.setRecordValue('taskType', 'FixedDuration', parentProp, true);\n\n        if (!isNullOrUndefined(this.parent.taskFields.type)) {\n          this.updateMappingData(parentData, 'type');\n        }\n\n        this.parent.setRecordValue('progress', Math.floor(parentProgress), parentProp, true);\n        this.parent.setRecordValue('totalProgress', totalProgress, parentProp, true);\n        this.parent.setRecordValue('totalDuration', totalDuration, parentProp, true);\n\n        if (!parentProp.isAutoSchedule) {\n          this.parent.setRecordValue('autoDuration', this.calculateAutoDuration(parentProp), parentProp, true);\n          this.updateAutoWidthLeft(parentData);\n        }\n\n        this.resetDependency(parentData);\n        this.updateWidthLeft(parentData);\n        this.updateTaskData(parentData);\n      }\n    }\n\n    if (deleteUpdate && parentData.childRecords.length === 1 && parentData.ganttProperties.duration === 0) {\n      this.parent.setRecordValue('isMilestone', true, parentData.ganttProperties, true);\n      this.updateWidthLeft(parentData);\n      this.updateTaskData(parentData);\n    }\n\n    var parentItem = this.parent.getParentTask(parentData.parentItem);\n\n    if (parentItem) {\n      this.updateParentItems(parentItem);\n    }\n\n    deleteUpdate = false;\n  };\n\n  return TaskProcessor;\n}(DateProcessor);\n\nexport { TaskProcessor };","map":{"version":3,"sources":["/Users/tristanbilot/Desktop/Design4green/design4green/node_modules/@syncfusion/ej2-gantt/src/gantt/base/task-processor.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","isNullOrUndefined","getValue","extend","setValue","getUid","DataManager","Query","isCountRequired","isScheduledTask","DateProcessor","TaskProcessor","_super","parent","_this","call","recordIndex","taskIds","hierarchyData","addEventListener","on","checkDataBinding","bind","isChange","flatData","currentViewData","updatedRecords","dataArray","ids","predecessorsCollection","treeGrid","parentData","dataSource","processTimeline","renderGantt","initDataSource","ganttdata","cloneDataSource","enableValidation","dataOperation","calculateProjectDatesForValidatedTasks","timelineModule","validateTimelineProp","queryManager","query","requiresCount","dataManager","executeQuery","then","e","result","catch","trigger","error","constructDataSource","mappingData","executeLocal","group","taskFields","parentID","rootData","i","length","groupData","key","index","indexOf","toString","child","items","push","apply","dataReorder","taskIdMapping","id","parentIdMapping","hierarchicalData","data","tempData","segmentId","segmentCollection","segmentData","segments","viewType","resources","unassignedTasks","constructResourceViewDataSource","record","resourceFields","name","localeObj","getConstant","prepareDataSource","_loop_1","this_1","resourceData","resourceInfo","resourceIdMapping","forEach","resource","j","prepareRecordCollection","calculateSharedTaskUniqueIds","dependency","predecessorModule","ensurePredecessorCollection","_loop_2","value","this_2","getTaskIds","match","sharedRecords_1","ids_1","filter","ganttProperties","taskId","level","rowUniqueID","sharedTaskUniqueIds","parentItem","_loop_3","this_3","x","ganttData","createRecord","updateTaskLeftWidth","setTaskIds","childData","ganttProp","setRecordValue","isAutoSchedule","parentProgress","parentProp","calculateDuration","updateWorkWithDuration","parentWork","work","type","updateMappingData","Math","floor","calculateAutoDuration","updateAutoWidthLeft","resetDependency","updateWidthLeft","updateTaskData","addCustomFieldValue","ganttRecord","columns","ganttColumns","field","undefined","isLoad","taskSettings","progress","notes","parseFloat","predecessors","baselineStartDate","getDateFromFormat","baselineEndDate","autoSchedule","taskMode","manual","addTaskData","setResourceInfo","indicators","updateResourceName","calculateScheduledValues","checkBaselineStartDate","getHours","defaultEndTime","setTime","checkBaselineEndDate","cssClass","getCloneParent","parentUniqId","uniqueID","element","hasChildRecords","startDate","endDate","duration","collapseAllParentTasks","updateExpandStateMappingValue","calculateWidth","calculateLeft","getProgressWidth","width","calculateBaselineLeft","calculateBaselineWidth","childRecords","taskData","uniqueId","replace","allowUnscheduledTasks","setSegmentsInfo","sortSegmentsData","onLoad","sort","a","getTime","ganttSegments","sumOfDuration","remainingDuration","segment","checkStartDate","getEndDate","durationUnit","checkEndDate","getDuration","isMilestone","left","segmentIndex","offsetDuration","setSegmentTaskData","segmenttaskData","Number","resourcesLength","resourceUnit","resourceOneDayWork","actualOneDayWork","secondsPerDay","durationInDay","getDurationInDay","unit","workUnit","toFixed","cloneParent","expanded","reUpdateResources","json","offline","tempData_1","segmentDataCollection","expandStateMapping","expandState","mappingValue","updatableValue","setValidatedDates","Date","updateDurationValue","isMileStone","milestone","durationMapping","validateDurationUnitMapping","validateWorkUnitMapping","taskTypeMapping","tType","validateTaskTypeMapping","getProjectStartDate","calculateEndDate","calculateDateFromStartDate","calculateDateFromEndDate","isNaN","updateUnitWithWork","updateDurationWithWork","taskType","totalResourceOneDayWork","updatedDuration","totalHours","getWorkInHour","totalUnitInPercentage","individualUnit","validateAsMilestone","parseInt","getStartDate","isTreeGridRendered","compareDates","parentWidth","percent","isAuto","sDate","autoStartDate","eDate","autoEndDate","unscheduledTaskWidth","getValidStartDate","getValidEndDate","getTaskWidth","getTaskbarHeight","rowHeight","taskBarHeight","taskbarHeight","autoDuration","getTaskLeft","calculateAutoLeft","calculateAutoWidth","tierMode","bottomTier","topTier","getSecondsInDecimal","defaultStartTime","setHours","getTimeDifference","perDayWidth","date","timelineStartDate","getSplitTaskWidth","tierViewMode","getSplitTaskLeft","segmentTaskStartDate","stDate","fieldName","columnMapping","resourceSettings","resourcesId","resourcesName","resName","join","updateTaskDataResource","setRecordDate","setRecordDuration","getWorkString","segmentTaskData","isEdit","editModule","dialogModule","contextMenuModule","preTaskResources","isAdded","data_1","_loop_4","k","task","mapping","tempDate","durationValue","getDurationString","dataMapping","taskName","parentId","resourceIdCollection","isAddNewResource","ganttResources","resourceIDMapping","resourceUnitMapping","resourceGroup","_loop_5","count","ganttDataResource","updateResourceUnit","length_1","resourceName","taskResources","flatCollection","rootCollection","shift","splice","toLocaleLowerCase","tempDuration","getDurationValue","reUpdateGanttData","getSecondsPerDay","updateGanttData","_isInStartDateRange","day","from","to","isInRange","_isInEndDateRange","updateOverlappingValues","resourceTask","tasks","currentTask","ranges","workTimelineRanges","setSortedChildTasks","updateOverlappingIndex","cStartDate","cEndDate","range","rangeObj","tStartDate","tEndDate","rangeObj_1","mergeRangeCollections","calculateRangeLeftWidth","eOverlapIndex","isSplit","finalRange","currentTopRange","cCompareRange","sortedRanges","sortBy","splitRangeCollection","sortedRecords","rangeCollection","fromField","toField","splitArray","isSingleTier","getRangeWithWeek","workingTimeRanges","getRangeWithDay","splitRangeForDayMode","fromString","tempStart","end","rangeObject","nStart","nEndDate","nextAvailDuration","sHour","startRangeIndex","val","round","setSeconds","getSeconds","splitRangeForWeekMode","start","isInSplit","setDate","getDate","isOnHolidayOrWeekEnd","tempEndDate","getParentTask","updateParentItems","reUpdateGanttDataPosition","fixedWidth","totalTaskWidth","splitTasksDuration","totalProgressWidth","chartRowsModule","incrementSegments","showProgress","progressWidth","pStartDate","autoWidth","getParentProgress","childGanttRecord","progressValues","totalProgress","totalDuration","recordProp","isParent","deleteUpdate","previousStartDate","previousEndDate","childLength","minStartDate","maxEndDate","milestoneCount","childCompletedWorks","isOnDelete","isDelete","taskCount"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { isNullOrUndefined, getValue, extend, setValue } from '@syncfusion/ej2-base';\nimport { getUid } from '@syncfusion/ej2-grids';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { isCountRequired, isScheduledTask } from './utils';\nimport { DateProcessor } from './date-processor';\n/**\n * To calculate and update task related values\n */\nvar TaskProcessor = /** @class */ (function (_super) {\n    __extends(TaskProcessor, _super);\n    function TaskProcessor(parent) {\n        var _this = _super.call(this, parent) || this;\n        _this.recordIndex = 0;\n        _this.taskIds = [];\n        _this.hierarchyData = [];\n        _this.addEventListener();\n        return _this;\n    }\n    TaskProcessor.prototype.addEventListener = function () {\n        this.parent.on('beforeDataManipulate', this.checkDataBinding.bind(this));\n    };\n    /**\n     * @param {boolean} isChange .\n     * @returns {void} .\n     * @private\n     */\n    TaskProcessor.prototype.checkDataBinding = function (isChange) {\n        if (isChange) {\n            this.parent.flatData = [];\n            this.parent.currentViewData = [];\n            this.parent.updatedRecords = [];\n            this.dataArray = [];\n            this.taskIds = [];\n            this.parent.ids = [];\n            this.recordIndex = 0;\n            this.hierarchyData = [];\n            this.parent.predecessorsCollection = [];\n            this.parent.treeGrid.parentData = [];\n            this.parent.taskIds = [];\n        }\n        if (isNullOrUndefined(this.parent.dataSource)) {\n            this.parent.dataSource = [];\n            this.parent.processTimeline();\n            this.parent.renderGantt(isChange);\n        }\n        else if (this.parent.dataSource instanceof DataManager) {\n            this.initDataSource(isChange);\n        }\n        else {\n            if (this.parent.dataSource instanceof Object && isCountRequired(this.parent)) {\n                var ganttdata = getValue('result', this.parent.dataSource);\n                this.dataArray = ganttdata;\n            }\n            else {\n                this.dataArray = this.parent.dataSource;\n            }\n            this.processTimeline();\n            this.cloneDataSource();\n            this.parent.renderGantt(isChange);\n        }\n    };\n    TaskProcessor.prototype.processTimeline = function () {\n        this.parent.processTimeline();\n        if (!this.parent.enableValidation) {\n            this.parent.dataOperation.calculateProjectDatesForValidatedTasks();\n            this.parent.timelineModule.validateTimelineProp();\n        }\n    };\n    TaskProcessor.prototype.initDataSource = function (isChange) {\n        var _this = this;\n        var queryManager = this.parent.query instanceof Query ? this.parent.query : new Query();\n        queryManager.requiresCount();\n        var dataManager = this.parent.dataSource;\n        dataManager.executeQuery(queryManager).then(function (e) {\n            _this.dataArray = e.result;\n            _this.processTimeline();\n            _this.cloneDataSource();\n            _this.parent.renderGantt(isChange);\n        }).catch(function (e) {\n            // Trigger action failure event\n            _this.parent.processTimeline();\n            _this.parent.renderGantt(isChange);\n            _this.parent.trigger('actionFailure', { error: e });\n        });\n    };\n    TaskProcessor.prototype.constructDataSource = function (dataSource) {\n        var mappingData = new DataManager(dataSource).executeLocal(new Query()\n            .group(this.parent.taskFields.parentID));\n        var rootData = [];\n        for (var i = 0; i < mappingData.length; i++) {\n            var groupData = mappingData[i];\n            if (!isNullOrUndefined(groupData.key)) {\n                var index = this.taskIds.indexOf(groupData.key.toString());\n                if (index > -1) {\n                    if (!isNullOrUndefined(groupData.key)) {\n                        dataSource[index][this.parent.taskFields.child] = groupData.items;\n                        continue;\n                    }\n                }\n            }\n            rootData.push.apply(rootData, groupData.items); // eslint-disable-line\n        }\n        this.hierarchyData = this.dataReorder(dataSource, rootData);\n    };\n    TaskProcessor.prototype.cloneDataSource = function () {\n        var taskIdMapping = this.parent.taskFields.id;\n        var parentIdMapping = this.parent.taskFields.parentID;\n        var hierarchicalData = [];\n        if (!isNullOrUndefined(taskIdMapping) && !isNullOrUndefined(parentIdMapping)) {\n            var data = [];\n            for (var i = 0; i < this.dataArray.length; i++) {\n                var tempData = this.dataArray[i];\n                data.push(extend({}, {}, tempData, true));\n                if (!isNullOrUndefined(tempData[taskIdMapping])) {\n                    this.taskIds.push(tempData[taskIdMapping].toString());\n                }\n            }\n            if (!this.parent.taskFields.child) {\n                this.parent.taskFields.child = 'Children';\n            }\n            this.constructDataSource(data);\n            hierarchicalData = this.hierarchyData;\n        }\n        else {\n            hierarchicalData = this.dataArray;\n        }\n        if (this.parent.taskFields.segmentId) {\n            this.segmentCollection = new DataManager(this.parent.segmentData).executeLocal(new Query()\n                .group(this.parent.taskFields.segmentId));\n            if (!this.parent.taskFields.segments) {\n                this.parent.taskFields.segments = 'Segments';\n            }\n        }\n        if (this.parent.viewType !== 'ProjectView') {\n            var resources = extend([], [], this.parent.resources, true);\n            var unassignedTasks = [];\n            this.constructResourceViewDataSource(resources, hierarchicalData, unassignedTasks);\n            if (unassignedTasks.length > 0) {\n                var record = {};\n                record[this.parent.resourceFields.id] = 0;\n                record[this.parent.resourceFields.name] = this.parent.localeObj.getConstant('unassignedTask');\n                record[this.parent.taskFields.child] = unassignedTasks;\n                resources.push(record);\n            }\n            hierarchicalData = resources;\n        }\n        this.prepareDataSource(hierarchicalData);\n    };\n    /**\n     * @param {object[]} resources .\n     * @param {object[]} data .\n     * @param {object[]} unassignedTasks .\n     * @returns {void} .\n     *\n     */\n    TaskProcessor.prototype.constructResourceViewDataSource = function (resources, data, unassignedTasks) {\n        var _loop_1 = function (i) {\n            var tempData = data[i];\n            var child = this_1.parent.taskFields.child;\n            var resourceData = tempData && tempData[this_1.parent.taskFields.resourceInfo];\n            var resourceIdMapping = this_1.parent.resourceFields.id;\n            if (!tempData[child] && resourceData && resourceData.length) {\n                resourceData.forEach(function (resource) {\n                    var id = (typeof resource === 'object') ? resource[resourceIdMapping] :\n                        resource;\n                    for (var j = 0; j < resources.length; j++) {\n                        if (resources[j][resourceIdMapping].toString() === id.toString()) {\n                            if (resources[j][child]) {\n                                resources[j][child].push(tempData);\n                            }\n                            else {\n                                resources[j][child] = [tempData];\n                            }\n                            break;\n                        }\n                    }\n                });\n            }\n            else if (!tempData[child]) {\n                unassignedTasks.push(tempData);\n            }\n            if (tempData[this_1.parent.taskFields.child] && tempData[this_1.parent.taskFields.child].length) {\n                this_1.constructResourceViewDataSource(resources, tempData[this_1.parent.taskFields.child], unassignedTasks);\n            }\n        };\n        var this_1 = this;\n        for (var i = 0; i < data.length; i++) {\n            _loop_1(i);\n        }\n    };\n    /**\n     * Function to manipulate data-source\n     *\n     * @param {object[]} data .\n     * @returns {void} .\n     * @hidden\n     */\n    TaskProcessor.prototype.prepareDataSource = function (data) {\n        this.prepareRecordCollection(data, 0);\n        // Method to maintain the shared task uniqueIds\n        if (this.parent.viewType === 'ResourceView') {\n            this.calculateSharedTaskUniqueIds();\n        }\n        if (this.parent.taskFields.dependency && this.parent.predecessorModule) {\n            this.parent.predecessorModule.ensurePredecessorCollection();\n        }\n    };\n    TaskProcessor.prototype.calculateSharedTaskUniqueIds = function () {\n        var _loop_2 = function (i) {\n            var value = this_2.parent.getTaskIds()[i].match(/(\\d+|[A-z]+)/g);\n            if (value[0] !== 'R') {\n                var sharedRecords_1 = [];\n                var ids_1 = [];\n                this_2.parent.flatData.filter(function (data) {\n                    if (data.ganttProperties.taskId.toString() === value[1] && data.level !== 0) {\n                        ids_1.push(data.ganttProperties.rowUniqueID);\n                        sharedRecords_1.push(data);\n                    }\n                });\n                for (var j = 0; j < sharedRecords_1.length; j++) {\n                    sharedRecords_1[j].ganttProperties.sharedTaskUniqueIds = ids_1;\n                }\n            }\n        };\n        var this_2 = this;\n        for (var i = 0; i < this.parent.getTaskIds().length; i++) {\n            _loop_2(i);\n        }\n    };\n    TaskProcessor.prototype.prepareRecordCollection = function (data, level, parentItem) {\n        var _this = this;\n        var length = data.length;\n        var _loop_3 = function (i) {\n            var tempData = data[i];\n            if (!isNullOrUndefined(this_3.parent.taskFields.segmentId)) {\n                var segmentData = this_3.segmentCollection.\n                    filter(function (x) { return x.key === tempData[_this.parent.taskFields.id]; });\n                if (segmentData.length > 0) {\n                    tempData[this_3.parent.taskFields.segments] = segmentData[0].items;\n                }\n            }\n            var ganttData = this_3.createRecord(tempData, level, parentItem, true);\n            if (!this_3.parent.enableValidation) {\n                this_3.updateTaskLeftWidth(ganttData);\n            }\n            ganttData.index = this_3.recordIndex++;\n            this_3.parent.ids[ganttData.index] = ganttData.ganttProperties.rowUniqueID;\n            this_3.parent.flatData.push(ganttData);\n            this_3.parent.setTaskIds(ganttData);\n            var childData = tempData[this_3.parent.taskFields.child];\n            if (this_3.parent.viewType === 'ResourceView' && isNullOrUndefined(childData)\n                && isNullOrUndefined(ganttData.parentItem) && ganttData.level === 0) {\n                var ganttProp = ganttData.ganttProperties;\n                var parentData = ganttData;\n                this_3.parent.setRecordValue(ganttProp.isAutoSchedule ? 'startDate' : 'autoStartDate', null, parentData.ganttProperties, true);\n                this_3.parent.setRecordValue(ganttProp.isAutoSchedule ? 'endDate' : 'autoEndDate', null, parentData.ganttProperties, true);\n                var parentProgress = 0;\n                var parentProp = parentData.ganttProperties;\n                this_3.parent.setRecordValue('isMilestone', false, parentProp, true);\n                if (parentProp.isAutoSchedule) {\n                    this_3.calculateDuration(parentData);\n                }\n                this_3.updateWorkWithDuration(parentData);\n                var parentWork = parentProp.work;\n                this_3.parent.setRecordValue('work', parentWork, parentProp, true);\n                this_3.parent.setRecordValue('taskType', 'FixedDuration', parentProp, true);\n                if (!isNullOrUndefined(this_3.parent.taskFields.type)) {\n                    this_3.updateMappingData(parentData, 'type');\n                }\n                this_3.parent.setRecordValue('progress', Math.floor(parentProgress), parentProp, true);\n                this_3.parent.setRecordValue('totalProgress', 0, parentProp, true);\n                this_3.parent.setRecordValue('totalDuration', 0, parentProp, true);\n                if (!parentProp.isAutoSchedule) {\n                    this_3.parent.setRecordValue('autoDuration', this_3.calculateAutoDuration(parentProp), parentProp, true);\n                    this_3.updateAutoWidthLeft(parentData);\n                }\n                this_3.resetDependency(parentData);\n                this_3.updateWidthLeft(parentData);\n                this_3.updateTaskData(parentData);\n            }\n            if (!isNullOrUndefined(childData) && childData.length > 0) {\n                this_3.prepareRecordCollection(childData, ganttData.level + 1, ganttData);\n            }\n        };\n        var this_3 = this;\n        for (var i = 0; i < length; i++) {\n            _loop_3(i);\n        }\n    };\n    /**\n     * Method to update custom field values in gantt record\n     *\n     * @param {object} data .\n     * @param {IGanttData} ganttRecord .\n     * @returns {void} .\n     */\n    TaskProcessor.prototype.addCustomFieldValue = function (data, ganttRecord) {\n        var columns = this.parent.ganttColumns;\n        var length = columns.length;\n        if (length) {\n            for (var i = 0; i < length; i++) {\n                if (ganttRecord[columns[i].field] === undefined) {\n                    this.parent.setRecordValue(columns[i].field, data[columns[i].field], ganttRecord);\n                }\n            }\n        }\n    };\n    /**\n     * To populate Gantt record\n     *\n     * @param {object} data .\n     * @param {number} level .\n     * @param {IGanttData} parentItem .\n     * @param {boolean} isLoad .\n     * @returns {IGanttData} .\n     * @private\n     */\n    TaskProcessor.prototype.createRecord = function (data, level, parentItem, isLoad) {\n        var taskSettings = this.parent.taskFields;\n        var resourceFields = this.parent.resourceFields;\n        var progress = data[taskSettings.progress];\n        var id = null;\n        var name = null;\n        var notes = data[taskSettings.notes];\n        progress = progress ? parseFloat(progress.toString()) ? parseFloat(progress.toString()) : 0 : 0;\n        var predecessors = data[taskSettings.dependency];\n        var baselineStartDate = this.getDateFromFormat(data[taskSettings.baselineStartDate], true);\n        var baselineEndDate = this.getDateFromFormat(data[taskSettings.baselineEndDate], true);\n        var ganttData = {};\n        var ganttProperties = {};\n        var autoSchedule = (this.parent.taskMode === 'Auto') ? true :\n            (this.parent.taskMode === 'Manual') ? false :\n                data[taskSettings.manual] === true ? false : true;\n        this.parent.setRecordValue('ganttProperties', ganttProperties, ganttData);\n        if (!isNullOrUndefined(data[taskSettings.id])) {\n            id = data[taskSettings.id];\n            name = data[taskSettings.name];\n            this.addTaskData(ganttData, data, isLoad);\n        }\n        else if (!isNullOrUndefined(data[resourceFields.id])) {\n            id = data[resourceFields.id];\n            name = data[resourceFields.name];\n            this.addTaskData(ganttData, data, false);\n        }\n        this.parent.setRecordValue('taskId', id, ganttProperties, true);\n        this.parent.setRecordValue('taskName', name, ganttProperties, true);\n        if (taskSettings.parentID) {\n            this.parent.setRecordValue('parentId', data[taskSettings.parentID], ganttProperties, true);\n        }\n        this.addCustomFieldValue(data, ganttData);\n        this.parent.setRecordValue('isAutoSchedule', autoSchedule, ganttProperties, true);\n        this.parent.setRecordValue('resourceInfo', this.setResourceInfo(data), ganttProperties, true);\n        this.parent.setRecordValue('isMilestone', false, ganttProperties, true);\n        this.parent.setRecordValue('indicators', data[taskSettings.indicators], ganttProperties, true);\n        this.updateResourceName(ganttData);\n        this.calculateScheduledValues(ganttData, data, isLoad);\n        this.parent.setRecordValue('baselineStartDate', this.checkBaselineStartDate(baselineStartDate), ganttProperties, true);\n        // set default end time, if hour is 0\n        if (baselineEndDate && baselineEndDate.getHours() === 0 && this.parent.defaultEndTime !== 86400) {\n            this.setTime(this.parent.defaultEndTime, baselineEndDate);\n        }\n        this.parent.setRecordValue('baselineEndDate', this.checkBaselineEndDate(baselineEndDate), ganttProperties, true);\n        this.parent.setRecordValue('progress', progress, ganttProperties, true);\n        this.parent.setRecordValue('totalProgress', progress, ganttProperties, true);\n        this.parent.setRecordValue('predecessorsName', predecessors, ganttProperties, true);\n        this.parent.setRecordValue('notes', notes, ganttProperties, true);\n        this.parent.setRecordValue('cssClass', data[taskSettings.cssClass], ganttProperties, true);\n        this.parent.setRecordValue('parentItem', this.getCloneParent(parentItem), ganttData);\n        var parentUniqId = ganttData.parentItem ? ganttData.parentItem.uniqueID : null;\n        this.parent.setRecordValue('parentUniqueID', parentUniqId, ganttData);\n        if (this.parent.viewType === 'ResourceView' && !isNullOrUndefined(taskSettings.parentID)\n            && !isNullOrUndefined(ganttData.parentItem)) {\n            this.parent.setRecordValue('parentId', ganttData.parentItem.taskId, ganttProperties, true);\n        }\n        this.parent.setRecordValue('level', level, ganttData);\n        this.parent.setRecordValue('uniqueID', getUid(this.parent.element.id + '_data_'), ganttData);\n        this.parent.setRecordValue('uniqueID', ganttData.uniqueID, ganttProperties, true);\n        this.parent.setRecordValue('childRecords', [], ganttData);\n        if (this.parent.dataSource instanceof Object && isCountRequired(this.parent) &&\n            !isNullOrUndefined(taskSettings.child)) {\n            this.parent.setRecordValue(taskSettings.child, [], ganttData);\n        }\n        this.parent.setRecordValue('baselineEndDate', this.checkBaselineEndDate(baselineEndDate), ganttProperties, true);\n        if (!isNullOrUndefined(data[taskSettings.child]) && data[taskSettings.child].length > 0) {\n            this.parent.setRecordValue('hasChildRecords', true, ganttData);\n            this.parent.setRecordValue('isMilestone', false, ganttProperties, true);\n            this.resetDependency(ganttData);\n        }\n        else {\n            this.parent.setRecordValue('hasChildRecords', false, ganttData);\n        }\n        if (ganttData.hasChildRecords) {\n            this.parent.setRecordValue('autoStartDate', ganttData.ganttProperties.startDate, ganttProperties);\n            this.parent.setRecordValue('autoEndDate', ganttData.ganttProperties.endDate, ganttProperties);\n            this.parent.setRecordValue('autoDuration', ganttData.ganttProperties.duration, ganttProperties);\n        }\n        this.parent.setRecordValue('expanded', (ganttData.hasChildRecords && this.parent.collapseAllParentTasks) ? false : true, ganttData);\n        this.updateExpandStateMappingValue(ganttData, data);\n        if (!isLoad) {\n            this.parent.setRecordValue('width', this.calculateWidth(ganttData), ganttProperties, true);\n            this.parent.setRecordValue('left', this.calculateLeft(ganttProperties), ganttProperties, true);\n            this.parent.setRecordValue('progressWidth', this.getProgressWidth(ganttProperties.width, progress), ganttProperties, true);\n            if (ganttProperties.baselineEndDate && ganttProperties.baselineStartDate) {\n                this.parent.setRecordValue('baselineLeft', this.calculateBaselineLeft(ganttProperties), ganttProperties, true);\n                this.parent.setRecordValue('baselineWidth', this.calculateBaselineWidth(ganttProperties), ganttProperties, true);\n            }\n        }\n        if (isNullOrUndefined(taskSettings.work)) {\n            this.updateWorkWithDuration(ganttData);\n        }\n        if (!isNullOrUndefined(taskSettings.manual)) {\n            this.parent.dataOperation.updateMappingData(ganttData, 'manual');\n        }\n        this.updateTaskData(ganttData);\n        if (predecessors) {\n            this.parent.predecessorsCollection.push(ganttData);\n        }\n        if (!isNullOrUndefined(parentItem)) {\n            parentItem.childRecords.push(ganttData);\n            if (this.parent.dataSource instanceof Object && isCountRequired(this.parent) &&\n                !isNullOrUndefined(this.parent.taskFields.child)) {\n                parentItem[this.parent.taskFields.child].push(ganttData.taskData);\n            }\n        }\n        if (this.parent.viewType === 'ProjectView') {\n            this.parent.setRecordValue('rowUniqueID', ganttProperties.taskId.toString(), ganttProperties, true);\n        }\n        else {\n            var uniqueId = ganttData.uniqueID.replace(this.parent.element.id + '_data_', '');\n            this.parent.setRecordValue('rowUniqueID', uniqueId, ganttData);\n            this.parent.setRecordValue('rowUniqueID', uniqueId, ganttProperties, true);\n            this.parent.setRecordValue('sharedTaskUniqueIds', [], ganttProperties, true);\n        }\n        if (this.parent.allowUnscheduledTasks && ganttData.ganttProperties.startDate\n            && (ganttData.ganttProperties.endDate || ganttData.ganttProperties.duration)) {\n            this.parent.setRecordValue('segments', this.setSegmentsInfo(ganttData, true), ganttProperties, true);\n            this.parent.dataOperation.updateMappingData(ganttData, 'segments');\n            if (!isLoad) {\n                this.updateWidthLeft(ganttData);\n            }\n        }\n        return ganttData;\n    };\n    TaskProcessor.prototype.sortSegmentsData = function (segments, onLoad, ganttProp) {\n        var _this = this;\n        if (onLoad) {\n            segments.sort(function (a, b) {\n                var startDate = _this.parent.taskFields.startDate;\n                return _this.getDateFromFormat(a[startDate]).getTime() - _this.getDateFromFormat(b[startDate]).getTime();\n            });\n        }\n        else {\n            segments.sort(function (a, b) {\n                return a.startDate.getTime() - b.startDate.getTime();\n            });\n        }\n        return segments;\n    };\n    TaskProcessor.prototype.setSegmentsInfo = function (data, onLoad) {\n        var taskSettings = this.parent.taskFields;\n        var ganttSegments = [];\n        var segments;\n        var sumOfDuration = 0;\n        var remainingDuration = 0;\n        var taskData = [];\n        if (!isNullOrUndefined(this.parent.taskFields.segments)) {\n            segments = onLoad ? data.taskData[this.parent.taskFields.segments] : data.ganttProperties.segments;\n            if (!isNullOrUndefined(segments) && segments.length > 1) {\n                this.sortSegmentsData(segments, onLoad, data.ganttProperties);\n                for (var i = 0; i < segments.length; i++) {\n                    var segment = segments[i];\n                    var startDate = onLoad ? segment[taskSettings.startDate] : segment.startDate;\n                    var endDate = onLoad ? segment[taskSettings.endDate] : segment.endDate;\n                    var duration = onLoad ? segment[taskSettings.duration] : segment.duration;\n                    startDate = this.getDateFromFormat(startDate);\n                    startDate = this.checkStartDate(startDate, data.ganttProperties, false);\n                    if (!isNullOrUndefined(duration)) {\n                        endDate = this.getEndDate(startDate, duration, data.ganttProperties.durationUnit, data.ganttProperties, false);\n                    }\n                    else {\n                        endDate = this.getDateFromFormat(endDate);\n                        endDate = this.checkEndDate(endDate, data.ganttProperties, false);\n                        duration = this.getDuration(startDate, endDate, data.ganttProperties.durationUnit, data.ganttProperties.isAutoSchedule, data.ganttProperties.isMilestone);\n                    }\n                    if (taskSettings.duration) {\n                        remainingDuration = data.ganttProperties.duration - sumOfDuration;\n                        if (remainingDuration <= 0) {\n                            continue;\n                        }\n                        duration = i === segments.length - 1 ? remainingDuration : remainingDuration > 0 &&\n                            duration > remainingDuration ? remainingDuration : duration;\n                        endDate = this.getEndDate(startDate, duration, data.ganttProperties.durationUnit, data.ganttProperties, false);\n                    }\n                    else if (!taskSettings.duration && taskSettings.endDate) {\n                        endDate = (!isNullOrUndefined(data.ganttProperties.endDate)) && endDate.getTime() >\n                            data.ganttProperties.endDate.getTime() && i !== segments.length - 1 ? endDate : data.ganttProperties.endDate;\n                        duration = this.getDuration(startDate, endDate, data.ganttProperties.durationUnit, data.ganttProperties.isAutoSchedule, data.ganttProperties.isMilestone);\n                        if (ganttSegments.length > 0 && endDate.getTime() < startDate.getTime()\n                            && endDate.getTime() <= data.ganttProperties.endDate.getTime()) {\n                            ganttSegments[i - 1].duration = this.getDuration(ganttSegments[i - 1].startDate, data.ganttProperties.endDate, data.ganttProperties.durationUnit, data.ganttProperties.isAutoSchedule, data.ganttProperties.isMilestone);\n                            continue;\n                        }\n                    }\n                    segment = {};\n                    if (!(startDate && endDate) || !(startDate && duration)) {\n                        break;\n                    }\n                    sumOfDuration += duration;\n                    segment.startDate = startDate;\n                    segment.endDate = endDate;\n                    segment.duration = duration;\n                    segment.width = 0;\n                    segment.left = 0;\n                    segment.segmentIndex = i;\n                    ganttSegments.push(segment);\n                    if (!isNullOrUndefined(ganttSegments[i - 1])) {\n                        var offsetDuration = this.getDuration(ganttSegments[i - 1].endDate, ganttSegments[i].startDate, data.ganttProperties.durationUnit, data.ganttProperties.isAutoSchedule, data.ganttProperties.isMilestone);\n                        segment.offsetDuration = offsetDuration;\n                        if (offsetDuration < 1) {\n                            segment.startDate = this.getEndDate(ganttSegments[i - 1].endDate, 1, data.ganttProperties.durationUnit, data.ganttProperties, false);\n                            segment.startDate = this.checkStartDate(segment.startDate, data.ganttProperties, false);\n                            segment.endDate = this.getEndDate(segment.startDate, segment.duration, data.ganttProperties.durationUnit, data.ganttProperties, false);\n                            segment.endDate = !taskSettings.duration && taskSettings.endDate\n                                && segment.endDate > data.ganttProperties.endDate ? data.ganttProperties.endDate : segment.endDate;\n                            segment.offsetDuration = 1;\n                        }\n                    }\n                    else {\n                        segment.offsetDuration = 0;\n                    }\n                    taskData.push(this.setSegmentTaskData(segment, segments[i]));\n                }\n                this.parent.setRecordValue('duration', sumOfDuration, data.ganttProperties, true);\n                this.parent.setRecordValue('endDate', ganttSegments[ganttSegments.length - 1].endDate, data.ganttProperties, true);\n                if (!isNullOrUndefined(taskSettings.endDate)) {\n                    this.parent.setRecordValue(this.parent.taskFields.endDate, ganttSegments[ganttSegments.length - 1].endDate, data, true);\n                }\n                this.parent.setRecordValue('taskData.' + this.parent.taskFields.segments, taskData, data);\n            }\n        }\n        if (ganttSegments.length > 1) {\n            this.parent.setRecordValue('segments', ganttSegments, data.ganttProperties, true);\n        }\n        else {\n            ganttSegments = null;\n        }\n        return ganttSegments;\n    };\n    TaskProcessor.prototype.setSegmentTaskData = function (segments, segmenttaskData) {\n        var taskSettings = this.parent.taskFields;\n        var taskData = extend({}, {}, segmenttaskData, true);\n        if (!isNullOrUndefined(taskSettings.startDate)) {\n            taskData[this.parent.taskFields.startDate] = segments.startDate;\n        }\n        if (!isNullOrUndefined(taskSettings.endDate)) {\n            taskData[this.parent.taskFields.endDate] = segments.endDate;\n        }\n        if (!isNullOrUndefined(taskSettings.duration)) {\n            taskData[this.parent.taskFields.duration] = Number(segments.duration);\n        }\n        return taskData;\n    };\n    /**\n     * Method to calculate work based on resource unit and duration.\n     *\n     * @param {IGanttData} ganttData .\n     * @returns {void} .\n     */\n    TaskProcessor.prototype.updateWorkWithDuration = function (ganttData) {\n        var resources = ganttData.ganttProperties.resourceInfo;\n        var work = 0;\n        if (!isNullOrUndefined(resources)) {\n            var resourcesLength = resources.length;\n            var index = void 0;\n            var resourceUnit = void 0;\n            var resourceOneDayWork = void 0;\n            var actualOneDayWork = (this.parent.secondsPerDay) / 3600;\n            var durationInDay = this.getDurationInDay(ganttData.ganttProperties.duration, ganttData.ganttProperties.durationUnit);\n            for (index = 0; index < resourcesLength; index++) {\n                resourceUnit = resources[index][this.parent.resourceFields.unit]; //in percentage\n                resourceOneDayWork = resourceUnit > 0 ? (actualOneDayWork * resourceUnit) / 100 : actualOneDayWork; //in hours\n                work += (resourceOneDayWork * durationInDay);\n            }\n            //Update work as per defined unit.\n            if (ganttData.ganttProperties.workUnit === 'minute') {\n                work = work * 60;\n            }\n            if (ganttData.ganttProperties.workUnit === 'day') {\n                work = work / actualOneDayWork;\n            }\n            //To check the decimal places.\n            if (work % 1 !== 0) {\n                work = parseFloat(work.toFixed(2));\n            }\n        }\n        this.parent.setRecordValue('work', work, ganttData.ganttProperties, true);\n        if (!isNullOrUndefined(this.parent.taskFields.work)) {\n            this.parent.dataOperation.updateMappingData(ganttData, 'work');\n        }\n    };\n    /**\n     *\n     * @param {IGanttData} parent .\n     * @returns {IParent} .\n     * @private\n     */\n    TaskProcessor.prototype.getCloneParent = function (parent) {\n        if (!isNullOrUndefined(parent)) {\n            var cloneParent = {};\n            cloneParent.uniqueID = parent.uniqueID;\n            cloneParent.expanded = parent.expanded;\n            cloneParent.level = parent.level;\n            cloneParent.index = parent.index;\n            cloneParent.taskId = parent.ganttProperties.rowUniqueID;\n            return cloneParent;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * @returns {void} .\n     * @private\n     */\n    TaskProcessor.prototype.reUpdateResources = function () {\n        if (this.parent.flatData.length > 0) {\n            var data = void 0;\n            var ganttProperties = void 0;\n            var ganttData = void 0;\n            for (var index = 0; index < this.parent.flatData.length; index++) {\n                data = this.parent.flatData[index].taskData;\n                ganttProperties = this.parent.flatData[index].ganttProperties;\n                ganttData = this.parent.flatData[index];\n                this.parent.setRecordValue('resourceInfo', this.setResourceInfo(data), ganttProperties, true);\n                this.updateResourceName(ganttData);\n            }\n        }\n    };\n    TaskProcessor.prototype.addTaskData = function (ganttData, data, isLoad) {\n        var _this = this;\n        var taskSettings = this.parent.taskFields;\n        var dataManager = this.parent.dataSource;\n        if (isLoad) {\n            if (taskSettings.parentID || (dataManager instanceof DataManager &&\n                dataManager.dataSource.json && dataManager.dataSource.offline)) {\n                if (taskSettings.parentID) {\n                    var id = data[taskSettings.id];\n                    var index = this.taskIds.indexOf(id.toString());\n                    var tempData_1 = (index > -1) ? this.dataArray[index] : {};\n                    if (!isNullOrUndefined(this.parent.taskFields.segmentId)) {\n                        var segmentDataCollection = this.segmentCollection.\n                            filter(function (x) { return x.key === tempData_1[_this.parent.taskFields.id]; });\n                        if (segmentDataCollection.length > 0) {\n                            tempData_1[this.parent.taskFields.segments] = segmentDataCollection[0].items;\n                        }\n                    }\n                    this.parent.setRecordValue('taskData', tempData_1, ganttData);\n                }\n                else {\n                    this.parent.setRecordValue('taskData', data, ganttData);\n                }\n            }\n            else {\n                this.parent.setRecordValue('taskData', data, ganttData);\n            }\n        }\n        else {\n            this.parent.setRecordValue('taskData', data, ganttData);\n        }\n    };\n    TaskProcessor.prototype.updateExpandStateMappingValue = function (ganttData, data) {\n        var expandStateMapping = this.parent.taskFields.expandState;\n        var mappingValue = data[expandStateMapping];\n        var updatableValue;\n        if (expandStateMapping && ganttData.hasChildRecords) {\n            if (!isNullOrUndefined(mappingValue)) {\n                updatableValue = mappingValue.toString() === 'true' ? true : false;\n            }\n            else if (isNullOrUndefined(mappingValue) && !this.parent.collapseAllParentTasks) {\n                updatableValue = true;\n            }\n            else if (isNullOrUndefined(mappingValue) && this.parent.collapseAllParentTasks) {\n                updatableValue = false;\n            }\n            this.parent.setRecordValue('taskData.' + expandStateMapping, updatableValue, ganttData);\n            this.parent.setRecordValue(expandStateMapping, updatableValue, ganttData);\n            this.parent.setRecordValue('expanded', updatableValue, ganttData);\n        }\n    };\n    /**\n     * @param {IGanttData} ganttData .\n     * @param {object} data .\n     * @returns {void} .\n     */\n    TaskProcessor.prototype.setValidatedDates = function (ganttData, data) {\n        var ganttProperties = ganttData.ganttProperties;\n        var taskSettings = this.parent.taskFields;\n        var duration = data[taskSettings.duration];\n        var startDate = this.getDateFromFormat(data[taskSettings.startDate], true);\n        var endDate = this.getDateFromFormat(data[taskSettings.endDate], true);\n        duration = isNullOrUndefined(duration) || duration === '' ? null : duration;\n        this.parent.setRecordValue('startDate', new Date(startDate.getTime()), ganttProperties, true);\n        if (!isNullOrUndefined(duration) && duration !== '') {\n            this.updateDurationValue(duration, ganttProperties);\n        }\n        else {\n            this.calculateDuration(ganttData);\n        }\n        this.parent.setRecordValue('endDate', new Date((endDate.getTime())), ganttProperties, true);\n    };\n    /**\n     *\n     * @param {IGanttData} ganttData .\n     * @param {object} data .\n     * @param {boolean} isLoad .\n     * @returns {void} .\n     * @private\n     */\n    TaskProcessor.prototype.calculateScheduledValues = function (ganttData, data, isLoad) {\n        var taskSettings = this.parent.taskFields;\n        var ganttProperties = ganttData.ganttProperties;\n        var duration = data[taskSettings.duration];\n        duration = isNullOrUndefined(duration) || duration === '' ? null : duration;\n        var startDate = this.getDateFromFormat(data[taskSettings.startDate], true);\n        var endDate = this.getDateFromFormat(data[taskSettings.endDate], true);\n        var segments = taskSettings.segments ? (data[taskSettings.segments] ||\n            ganttData.taskData[taskSettings.segments]) : null;\n        var isMileStone = taskSettings.milestone ? data[taskSettings.milestone] ? true : false : false;\n        var durationMapping = data[taskSettings.durationUnit] ? data[taskSettings.durationUnit] : '';\n        this.parent.setRecordValue('durationUnit', this.validateDurationUnitMapping(durationMapping), ganttProperties, true);\n        var work = !isNullOrUndefined(data[taskSettings.work]) ? parseFloat(data[taskSettings.work]) : 0;\n        this.parent.setRecordValue('workUnit', this.validateWorkUnitMapping(this.parent.workUnit), ganttProperties, true);\n        var taskTypeMapping = data[taskSettings.type] ? data[taskSettings.type] : '';\n        var tType = this.validateTaskTypeMapping(taskTypeMapping);\n        this.parent.setRecordValue('taskType', tType, ganttProperties, true);\n        if (isLoad && !this.parent.enableValidation && startDate && endDate) {\n            this.setValidatedDates(ganttData, data);\n        }\n        else {\n            if (!endDate && !startDate && (isNullOrUndefined(duration) || duration === '')) {\n                if (this.parent.allowUnscheduledTasks) {\n                    return;\n                }\n                else {\n                    this.parent.setRecordValue('duration', 1, ganttProperties, true);\n                    this.parent.setRecordValue('startDate', this.getProjectStartDate(ganttProperties, isLoad), ganttProperties, true);\n                    this.calculateEndDate(ganttData);\n                }\n            }\n            else if (startDate) {\n                this.calculateDateFromStartDate(startDate, endDate, duration, ganttData, isLoad);\n            }\n            else if (endDate) {\n                this.calculateDateFromEndDate(endDate, duration, ganttData);\n            }\n            else if (!isNullOrUndefined(duration) && duration !== '') {\n                this.updateDurationValue(duration, ganttProperties);\n                if (this.parent.allowUnscheduledTasks) {\n                    this.parent.setRecordValue('startDate', null, ganttProperties, true);\n                    this.parent.setRecordValue('endDate', null, ganttProperties, true);\n                }\n                else {\n                    this.parent.setRecordValue('startDate', this.getProjectStartDate(ganttProperties, isLoad), ganttProperties, true);\n                    this.calculateEndDate(ganttData);\n                }\n            }\n        }\n        if (!isNullOrUndefined(segments)) {\n            this.parent.setRecordValue('segments', this.setSegmentsInfo(ganttData, true), ganttProperties, true);\n        }\n        if (ganttProperties.duration === 0) {\n            this.parent.setRecordValue('isMilestone', true, ganttProperties, true);\n            this.parent.setRecordValue('endDate', ganttProperties.startDate, ganttProperties, true);\n        }\n        if (!isNullOrUndefined(isMileStone) && isMileStone) {\n            this.parent.setRecordValue('duration', 0, ganttProperties, true);\n            this.parent.setRecordValue('isMilestone', true, ganttProperties, true);\n            this.parent.setRecordValue('endDate', ganttProperties.startDate, ganttProperties, true);\n        }\n        if (!isNullOrUndefined(taskSettings.work)) {\n            this.parent.setRecordValue('durationUnit', this.parent.durationUnit, ganttProperties, true);\n            if (isNaN(work) || isNullOrUndefined(work)) {\n                this.parent.setRecordValue('work', 0, ganttProperties, true);\n                this.parent.setRecordValue('duration', 0, ganttProperties, true);\n                this.parent.setRecordValue('isMilestone', true, ganttProperties, true);\n                this.parent.setRecordValue('endDate', ganttProperties.startDate, ganttProperties, true);\n            }\n            else {\n                this.parent.setRecordValue('work', work, ganttProperties, true);\n                switch (tType) {\n                    case 'FixedDuration':\n                        this.updateUnitWithWork(ganttData);\n                        break;\n                    case 'FixedWork':\n                        this.updateUnitWithWork(ganttData);\n                        break;\n                    case 'FixedUnit':\n                        this.updateDurationWithWork(ganttData);\n                        break;\n                }\n                if (!isNullOrUndefined(taskSettings.type)) {\n                    this.parent.dataOperation.updateMappingData(ganttData, 'type');\n                }\n                if (ganttProperties.duration === 0) {\n                    this.parent.setRecordValue('isMilestone', true, ganttProperties, true);\n                    this.parent.setRecordValue('endDate', ganttProperties.startDate, ganttProperties, true);\n                }\n                else if (!isNullOrUndefined(ganttProperties.startDate) && !isNullOrUndefined(ganttProperties.duration)) {\n                    this.parent.setRecordValue('isMilestone', false, ganttProperties, true);\n                    this.calculateEndDate(ganttData);\n                }\n            }\n            this.parent.dataOperation.updateMappingData(ganttData, 'work');\n        }\n        else if (taskSettings.type && ganttProperties.taskType) {\n            this.parent.dataOperation.updateMappingData(ganttData, 'type');\n        }\n    };\n    /**\n     * Method to update duration with work value.\n     *\n     * @param {IGanttData} ganttData .\n     * @returns {void} .\n     */\n    TaskProcessor.prototype.updateDurationWithWork = function (ganttData) {\n        var ganttProperties = ganttData.ganttProperties;\n        var resources = ganttProperties.resourceInfo;\n        if (!isNullOrUndefined(resources)) {\n            var resourcesLength = !isNullOrUndefined(resources) ? resources.length : 0;\n            var totalResourceOneDayWork = 0;\n            var actualOneDayWork = (this.parent.secondsPerDay) / 3600;\n            var updatedDuration = 0;\n            var resourceUnit = void 0;\n            var index = void 0;\n            for (index = 0; index < resourcesLength; index++) {\n                resourceUnit = resources[index][this.parent.resourceFields.unit]; //in percentage\n                totalResourceOneDayWork += (resourceUnit > 0 ? (actualOneDayWork * resourceUnit) / 100 : actualOneDayWork); //in hours\n            }\n            var totalHours = this.getWorkInHour(ganttProperties.work, ganttProperties.workUnit);\n            if (resourcesLength > 0) {\n                updatedDuration += (totalHours / totalResourceOneDayWork);\n            }\n            //Update duration as per defined unit.\n            if (ganttProperties.durationUnit === 'minute') {\n                updatedDuration = updatedDuration * actualOneDayWork * 60;\n            }\n            if (ganttProperties.durationUnit === 'hour') {\n                updatedDuration = updatedDuration * actualOneDayWork;\n            }\n            //To check the decimal places.\n            if (updatedDuration % 1 !== 0) {\n                updatedDuration = parseFloat(updatedDuration.toFixed(2));\n            }\n            if (!isNullOrUndefined(ganttProperties.duration)) {\n                this.parent.setRecordValue('duration', updatedDuration, ganttProperties, true);\n            }\n            this.parent.dataOperation.updateMappingData(ganttData, 'duration');\n        }\n    };\n    /**\n     * Update units of resources with respect to duration and work of a task.\n     *\n     * @param {IGanttData} ganttData .\n     * @returns {void} .\n     */\n    TaskProcessor.prototype.updateUnitWithWork = function (ganttData) {\n        var ganttProperties = ganttData.ganttProperties;\n        var resources = ganttProperties.resourceInfo;\n        var resourcesLength = !isNullOrUndefined(resources) ? resources.length : 0;\n        var actualOneDayWork = (this.parent.secondsPerDay) / 3600;\n        if (resourcesLength === 0) {\n            return;\n        }\n        var durationInDay = this.getDurationInDay(ganttData.ganttProperties.duration, ganttData.ganttProperties.durationUnit);\n        var totalHours = this.getWorkInHour(ganttProperties.work, ganttProperties.workUnit);\n        var totalUnitInPercentage = durationInDay > 0 ? (totalHours / (durationInDay * actualOneDayWork)) * 100 : 0;\n        var individualUnit = totalUnitInPercentage > 0 ? totalUnitInPercentage / resourcesLength : 100;\n        //To check the decimal places.\n        if (individualUnit % 1 !== 0) {\n            individualUnit = parseFloat(individualUnit.toFixed(2));\n        }\n        for (var index = 0; index < resourcesLength; index++) {\n            resources[index][this.parent.resourceFields.unit] = individualUnit;\n        }\n        //To update the unit value in data source\n        this.updateResourceName(ganttData);\n    };\n    TaskProcessor.prototype.calculateDateFromEndDate = function (endDate, duration, ganttData) {\n        var ganttProperties = ganttData.ganttProperties;\n        if (endDate.getHours() === 0 && this.parent.defaultEndTime !== 86400) {\n            this.setTime(this.parent.defaultEndTime, endDate);\n        }\n        var validateAsMilestone = (parseInt(duration, 10) === 0) ? true : null;\n        this.parent.setRecordValue('endDate', this.checkEndDate(endDate, ganttData.ganttProperties, validateAsMilestone), ganttProperties, true);\n        if (isNullOrUndefined(duration) || duration === '') {\n            if (this.parent.allowUnscheduledTasks) {\n                this.parent.setRecordValue('startDate', null, ganttProperties, true);\n                this.parent.setRecordValue('duration', null, ganttProperties, true);\n            }\n            else {\n                this.parent.setRecordValue('duration', 1, ganttProperties, true);\n                this.parent.setRecordValue('startDate', this.getStartDate(ganttProperties.endDate, ganttProperties.duration, ganttProperties.durationUnit, ganttProperties), ganttProperties, true);\n            }\n        }\n        else if (!isNullOrUndefined(duration) && duration !== '') {\n            this.updateDurationValue(duration, ganttProperties);\n            this.parent.setRecordValue('startDate', this.getStartDate(ganttProperties.endDate, ganttProperties.duration, ganttProperties.durationUnit, ganttProperties), ganttProperties, true);\n        }\n    };\n    TaskProcessor.prototype.calculateDateFromStartDate = function (startDate, endDate, duration, ganttData, isLoad) {\n        var ganttProperties = ganttData.ganttProperties;\n        var validateAsMilestone = (parseInt(duration, 10) === 0 || ((startDate && endDate) &&\n            (new Date(startDate.getTime()) === new Date(endDate.getTime())))) ? true : null;\n        this.parent.setRecordValue('startDate', this.checkStartDate(startDate, ganttProperties, validateAsMilestone, isLoad), ganttProperties, true);\n        if (this.parent.isTreeGridRendered && ganttData) {\n            this.updateTaskData(ganttData);\n        }\n        if (!endDate && (isNullOrUndefined(duration) || duration === '')) {\n            if (this.parent.allowUnscheduledTasks) {\n                this.parent.setRecordValue('endDate', null, ganttProperties, true);\n                this.parent.setRecordValue('duration', null, ganttProperties, true);\n            }\n            else {\n                this.parent.setRecordValue('duration', 1, ganttProperties, true);\n                this.calculateEndDate(ganttData);\n            }\n        }\n        else if (!isNullOrUndefined(duration) && !endDate) {\n            this.updateDurationValue(duration, ganttProperties);\n            this.calculateEndDate(ganttData);\n        }\n        else if (endDate && (isNullOrUndefined(duration) || duration === '')) {\n            if (endDate.getHours() === 0 && this.parent.defaultEndTime !== 86400) {\n                this.setTime(this.parent.defaultEndTime, endDate);\n            }\n            this.parent.setRecordValue('endDate', this.checkEndDate(endDate, ganttData.ganttProperties), ganttProperties, true);\n            if (this.compareDates(ganttProperties.startDate, ganttProperties.endDate) === 1) {\n                this.parent.setRecordValue('endDate', ganttProperties.startDate, ganttProperties, true);\n                this.parent.setRecordValue('isMilestone', true, ganttProperties, true);\n                this.parent.setRecordValue('duration', 0, ganttProperties, true);\n            }\n            else {\n                this.calculateDuration(ganttData);\n            }\n        }\n        else {\n            this.updateDurationValue(duration, ganttProperties);\n            this.calculateEndDate(ganttData);\n        }\n    };\n    /**\n     *\n     * @param {number} parentWidth .\n     * @param {number} percent .\n     * @returns {number} .\n     * @private\n     */\n    TaskProcessor.prototype.getProgressWidth = function (parentWidth, percent) {\n        return (parentWidth * percent) / 100;\n    };\n    /**\n     *\n     * @param {IGanttData} ganttData .\n     * @param {boolean} isAuto .\n     * @returns {number} .\n     * @private\n     */\n    TaskProcessor.prototype.calculateWidth = function (ganttData, isAuto) {\n        var ganttProp = ganttData.ganttProperties;\n        var sDate = isAuto ? ganttProp.autoStartDate : ganttProp.startDate;\n        var eDate = isAuto ? ganttProp.autoEndDate : ganttProp.endDate;\n        var unscheduledTaskWidth = 3;\n        if (isNullOrUndefined(sDate) && isNullOrUndefined(eDate)) {\n            sDate = this.getValidStartDate(ganttProp, isAuto);\n            eDate = this.getValidEndDate(ganttProp, isAuto);\n        }\n        if (isNullOrUndefined(sDate) || isNullOrUndefined(eDate)) {\n            return unscheduledTaskWidth;\n        }\n        else if (ganttProp.isMilestone && (!ganttData.hasChildRecords || ganttProp.isAutoSchedule)) {\n            //let taskBarHeight: number = this.getTaskbarHeight();\n            return 0;\n        }\n        else {\n            return this.getTaskWidth(sDate, eDate);\n        }\n    };\n    TaskProcessor.prototype.getTaskbarHeight = function () {\n        var rowHeight = this.parent.rowHeight;\n        var taskBarHeight = this.parent.taskbarHeight;\n        if (taskBarHeight < rowHeight) {\n            return taskBarHeight;\n        }\n        else {\n            return rowHeight;\n        }\n    };\n    /**\n     * Method to calculate left\n     *\n     * @param {ITaskData} ganttProp .\n     * @param {boolean} isAuto .\n     * @returns {number} .\n     * @private\n     */\n    TaskProcessor.prototype.calculateLeft = function (ganttProp, isAuto) {\n        var sDate = null;\n        var left = -300;\n        var startDate = isAuto ? ganttProp.autoStartDate : ganttProp.startDate;\n        var endDate = isAuto ? ganttProp.autoEndDate : ganttProp.endDate;\n        var duration = isAuto ? ganttProp.autoDuration : ganttProp.duration; // eslint-disable-line\n        var milestone = ganttProp.isMilestone;\n        if (startDate) {\n            sDate = new Date(startDate.getTime());\n        }\n        else if (endDate) {\n            sDate = new Date(endDate.getTime());\n            milestone = true;\n        }\n        else {\n            sDate = this.getValidStartDate(ganttProp);\n        }\n        if (!isNullOrUndefined(sDate)) {\n            left = this.getTaskLeft(sDate, milestone);\n        }\n        return left;\n    };\n    /**\n     * calculate the left position of the auto scheduled taskbar\n     *\n     * @param {ITaskData} ganttProperties - Defines the gantt data.\n     * @returns {number} .\n     * @private\n     */\n    TaskProcessor.prototype.calculateAutoLeft = function (ganttProperties) {\n        return this.getTaskLeft(ganttProperties.autoStartDate, ganttProperties.isMilestone);\n    };\n    /**\n     * To calculate duration of Gantt record with auto scheduled start date and auto scheduled end date\n     *\n     * @param {ITaskData} ganttProperties - Defines the gantt data.\n     * @returns {number} .\n     */\n    TaskProcessor.prototype.calculateAutoDuration = function (ganttProperties) {\n        return this.getDuration(ganttProperties.autoStartDate, ganttProperties.autoEndDate, ganttProperties.durationUnit, false, ganttProperties.isMilestone);\n    };\n    /**\n     * calculate the with between auto scheduled start date and auto scheduled end date\n     *\n     * @param {ITaskData} ganttProperties - Defines the gantt data.\n     * @returns {number} .\n     * @private\n     */\n    TaskProcessor.prototype.calculateAutoWidth = function (ganttProperties) {\n        return this.getTaskWidth(ganttProperties.autoStartDate, ganttProperties.autoEndDate);\n    };\n    /**\n     * calculate the left margin of the baseline element\n     *\n     * @param {ITaskData} ganttProperties .\n     * @returns {number} .\n     * @private\n     */\n    TaskProcessor.prototype.calculateBaselineLeft = function (ganttProperties) {\n        var baselineStartDate = this.getDateFromFormat(ganttProperties.baselineStartDate);\n        var baselineEndDate = this.getDateFromFormat(ganttProperties.baselineEndDate);\n        if (baselineStartDate && baselineEndDate) {\n            return (this.getTaskLeft(baselineStartDate, ganttProperties.isMilestone));\n        }\n        else {\n            return 0;\n        }\n    };\n    /**\n     * calculate the width between baseline start date and baseline end date.\n     *\n     * @param {ITaskData} ganttProperties .\n     * @returns {number} .\n     * @private\n     */\n    TaskProcessor.prototype.calculateBaselineWidth = function (ganttProperties) {\n        var baselineStartDate = this.getDateFromFormat(ganttProperties.baselineStartDate);\n        var baselineEndDate = this.getDateFromFormat(ganttProperties.baselineEndDate);\n        if (baselineStartDate && baselineEndDate) {\n            return (this.getTaskWidth(baselineStartDate, baselineEndDate));\n        }\n        else {\n            return 0;\n        }\n    };\n    /**\n     * To get tasks width value\n     *\n     * @param {Date} startDate .\n     * @param {Date} endDate .\n     * @returns {number} .\n     * @private\n     */\n    TaskProcessor.prototype.getTaskWidth = function (startDate, endDate) {\n        var sDate = new Date(startDate.getTime());\n        var eDate = new Date(endDate.getTime());\n        var tierMode = this.parent.timelineModule.bottomTier !== 'None' ? this.parent.timelineModule.bottomTier :\n            this.parent.timelineModule.topTier;\n        if (tierMode === 'Day') {\n            if (this.getSecondsInDecimal(sDate) === this.parent.defaultStartTime) {\n                sDate.setHours(0, 0, 0, 0);\n            }\n            if (this.getSecondsInDecimal(eDate) === this.parent.defaultEndTime) {\n                eDate.setHours(24);\n            }\n            if (this.getSecondsInDecimal(eDate) === this.parent.defaultStartTime) {\n                eDate.setHours(0, 0, 0, 0);\n            }\n        }\n        return ((this.getTimeDifference(sDate, eDate) / (1000 * 60 * 60 * 24)) * this.parent.perDayWidth);\n    };\n    /**\n     * Get task left value\n     *\n     * @param {Date} startDate .\n     * @param {boolean} isMilestone .\n     * @returns {number} .\n     * @private\n     */\n    TaskProcessor.prototype.getTaskLeft = function (startDate, isMilestone) {\n        var date = new Date(startDate.getTime());\n        var tierMode = this.parent.timelineModule.bottomTier !== 'None' ? this.parent.timelineModule.bottomTier :\n            this.parent.timelineModule.topTier;\n        if (tierMode === 'Day') {\n            if (this.getSecondsInDecimal(date) === this.parent.defaultStartTime) {\n                date.setHours(0, 0, 0, 0);\n            }\n            else if (isMilestone && this.getSecondsInDecimal(date) === this.parent.defaultEndTime) {\n                date.setHours(24);\n            }\n        }\n        var timelineStartDate = this.parent.timelineModule.timelineStartDate;\n        if (timelineStartDate) {\n            return (date.getTime() - timelineStartDate.getTime()) / (1000 * 60 * 60 * 24) * this.parent.perDayWidth;\n        }\n        else {\n            return 0;\n        }\n    };\n    TaskProcessor.prototype.getSplitTaskWidth = function (sDate, duration, data) {\n        var startDate = new Date(sDate.getTime());\n        var endDate = new Date((this.getEndDate(startDate, duration, data.ganttProperties.durationUnit, data.ganttProperties, false).getTime()));\n        var tierViewMode = this.parent.timelineModule.bottomTier !== 'None' ? this.parent.timelineModule.bottomTier :\n            this.parent.timelineModule.topTier;\n        if (tierViewMode === 'Day') {\n            if (this.getSecondsInDecimal(startDate) === this.parent.defaultStartTime) {\n                startDate.setHours(0, 0, 0, 0);\n            }\n            if (this.getSecondsInDecimal(endDate) === this.parent.defaultEndTime) {\n                endDate.setHours(24);\n            }\n            if (this.getSecondsInDecimal(endDate) === this.parent.defaultStartTime) {\n                endDate.setHours(0, 0, 0, 0);\n            }\n        }\n        return ((this.getTimeDifference(startDate, endDate) / (1000 * 60 * 60 * 24)) * this.parent.perDayWidth);\n    };\n    TaskProcessor.prototype.getSplitTaskLeft = function (sDate, segmentTaskStartDate) {\n        var stDate = new Date(sDate.getTime());\n        var tierViewMode = this.parent.timelineModule.bottomTier !== 'None' ? this.parent.timelineModule.bottomTier :\n            this.parent.timelineModule.topTier;\n        if (tierViewMode === 'Day') {\n            if (this.getSecondsInDecimal(stDate) === this.parent.defaultStartTime) {\n                stDate.setHours(0, 0, 0, 0);\n            }\n            if (this.getSecondsInDecimal(segmentTaskStartDate) === this.parent.defaultStartTime) {\n                segmentTaskStartDate.setHours(0, 0, 0, 0);\n            }\n        }\n        if (segmentTaskStartDate) {\n            return (stDate.getTime() - segmentTaskStartDate.getTime()) / (1000 * 60 * 60 * 24) * this.parent.perDayWidth;\n        }\n        else {\n            return 0;\n        }\n    };\n    /**\n     *\n     * @param {IGanttData} ganttData .\n     * @param {string} fieldName .\n     * @returns {void} .\n     * @private\n     */\n    TaskProcessor.prototype.updateMappingData = function (ganttData, fieldName) {\n        var columnMapping = this.parent.columnMapping;\n        var ganttProp = ganttData.ganttProperties;\n        if (isNullOrUndefined(columnMapping[fieldName]) && fieldName !== 'taskType' && fieldName !== 'segments') {\n            return;\n        }\n        if (fieldName === 'predecessorName') {\n            //\n        }\n        else if (fieldName === 'resourceInfo') {\n            var resourceData = ganttProp.resourceInfo;\n            var resourceSettings = this.parent.resourceFields;\n            // eslint-disable-next-line\n            var resourcesId = [];\n            var resourcesName = [];\n            for (var i = 0; i < resourceData.length; i++) {\n                resourcesId.push(resourceData[i][resourceSettings.id]);\n                var resName = resourceData[i][resourceSettings.name];\n                var resourceUnit = resourceData[i][resourceSettings.unit];\n                if (resourceUnit !== 100) {\n                    resName += '[' + resourceUnit + '%' + ']';\n                }\n                resourcesName.push(resName);\n            }\n            this.parent.setRecordValue('resourceNames', resourcesName.join(','), ganttProp, true);\n            this.updateTaskDataResource(ganttData);\n            this.parent.setRecordValue(columnMapping[fieldName], resourcesName.join(','), ganttData);\n        }\n        else if (fieldName === 'startDate' || fieldName === 'endDate') {\n            this.setRecordDate(ganttData, ganttProp[fieldName], columnMapping[fieldName]);\n        }\n        else if (fieldName === 'duration') {\n            this.setRecordDuration(ganttData, columnMapping[fieldName]);\n        }\n        else if (fieldName === 'work') {\n            this.parent.setRecordValue('taskData.' + columnMapping[fieldName], this.getWorkString(ganttProp.work, ganttProp.workUnit), ganttData);\n            this.parent.setRecordValue(columnMapping[fieldName], ganttProp[fieldName], ganttData);\n        }\n        else if (fieldName === 'type') {\n            this.parent.setRecordValue('taskData.' + columnMapping[fieldName], ganttProp[fieldName], ganttData);\n            this.parent.setRecordValue(columnMapping[fieldName], ganttProp[fieldName], ganttData);\n        }\n        else if (fieldName === 'manual') {\n            this.parent.setRecordValue('taskData.' + columnMapping[fieldName], !ganttProp.isAutoSchedule, ganttData);\n            this.parent.setRecordValue(columnMapping[fieldName], !ganttProp.isAutoSchedule, ganttData);\n        }\n        else if (fieldName === 'segments') {\n            this.parent.setRecordValue('taskData.' + this.parent.taskFields.segments, this.segmentTaskData(ganttData), ganttData);\n        }\n        else {\n            this.parent.setRecordValue('taskData.' + columnMapping[fieldName], ganttProp[fieldName], ganttData);\n            this.parent.setRecordValue(columnMapping[fieldName], ganttProp[fieldName], ganttData);\n        }\n    };\n    TaskProcessor.prototype.segmentTaskData = function (data) {\n        var segments = data.ganttProperties.segments;\n        var taskSettings = this.parent.taskFields;\n        if (isNullOrUndefined(segments)) {\n            return null;\n        }\n        var taskData = extend([], [], data.taskData[taskSettings.segments], true);\n        for (var i = 0; i < segments.length; i++) {\n            if (this.parent.isEdit || (this.parent.editModule && this.parent.editModule.dialogModule &&\n                getValue('isEdit', this.parent.editModule.dialogModule)) || (this.parent.contextMenuModule && getValue('isEdit', this.parent.contextMenuModule))) {\n                taskData[i] = {};\n            }\n            if (!isNullOrUndefined(taskSettings.startDate)) {\n                taskData[i][this.parent.taskFields.startDate] = segments[i].startDate;\n            }\n            if (!isNullOrUndefined(taskSettings.endDate)) {\n                taskData[i][this.parent.taskFields.endDate] = segments[i].endDate;\n            }\n            if (!isNullOrUndefined(taskSettings.duration)) {\n                taskData[i][this.parent.taskFields.duration] = Number(segments[i].duration);\n            }\n        }\n        return taskData;\n    };\n    /**\n     * Method to update the task data resource values\n     *\n     * @param {IGanttData} ganttData .\n     * @returns {void} .\n     */\n    TaskProcessor.prototype.updateTaskDataResource = function (ganttData) {\n        var resourceData = ganttData.ganttProperties.resourceInfo;\n        var preTaskResources = ganttData.taskData[this.parent.taskFields.resourceInfo];\n        var resourceSettings = this.parent.resourceFields;\n        if (isNullOrUndefined(preTaskResources)) {\n            ganttData.taskData[this.parent.taskFields.resourceInfo] = resourceData;\n        }\n        else if (resourceData.length) {\n            for (var i = 0; i < resourceData.length; i++) {\n                var isAdded = false;\n                for (var j = 0; j < preTaskResources.length; j++) {\n                    if (typeof preTaskResources[j] === 'number' || typeof preTaskResources[j] === 'string') {\n                        if (parseInt(preTaskResources[j], 10) === parseInt(resourceData[i][resourceSettings.id], 10)) {\n                            preTaskResources[j] = resourceData[i];\n                            isAdded = true;\n                            break;\n                        }\n                    }\n                    else if (preTaskResources[j][resourceSettings.id] === resourceData[i][resourceSettings.id] && typeof preTaskResources[j] !== 'number') {\n                        preTaskResources[j] = extend({}, preTaskResources[j], resourceData[i], true);\n                        isAdded = true;\n                        break;\n                    }\n                }\n                if (!isAdded) {\n                    preTaskResources.push(resourceData[i]);\n                }\n            }\n            var data_1 = [];\n            var _loop_4 = function (k) {\n                resourceData.filter(function (resourceInfo) {\n                    if (resourceInfo[resourceSettings.id] === preTaskResources[k][resourceSettings.id]) {\n                        data_1.push(preTaskResources[k]);\n                    }\n                });\n            };\n            for (var k = 0; k < preTaskResources.length; k++) {\n                _loop_4(k);\n            }\n            this.parent.setRecordValue('taskData.' + this.parent.taskFields.resourceInfo, data_1, ganttData);\n        }\n        else {\n            this.parent.setRecordValue('taskData.' + this.parent.taskFields.resourceInfo, [], ganttData);\n        }\n    };\n    TaskProcessor.prototype.setRecordDate = function (task, value, mapping) {\n        var tempDate = typeof value === 'string' ? new Date(value) : value;\n        if (!isNullOrUndefined(value)) {\n            value = new Date(tempDate.getTime());\n        }\n        this.parent.setRecordValue(mapping, value, task);\n        if (!isNullOrUndefined(value)) {\n            value = new Date(tempDate.getTime());\n        }\n        this.parent.setRecordValue('taskData.' + mapping, value, task);\n    };\n    TaskProcessor.prototype.getDurationInDay = function (duration, durationUnit) {\n        if (durationUnit === 'day') {\n            return duration;\n        }\n        else if (durationUnit === 'hour') {\n            return duration / (this.parent.secondsPerDay / 3600);\n        }\n        else {\n            return duration / (this.parent.secondsPerDay / 60);\n        }\n    };\n    TaskProcessor.prototype.setRecordDuration = function (task, mapping) {\n        var duration = task.ganttProperties.duration;\n        var durationUnit = task.ganttProperties.durationUnit;\n        if (!isNullOrUndefined(duration)) {\n            this.parent.setRecordValue(mapping, task.ganttProperties.duration, task);\n            /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n            var durationValue = (getValue(mapping, task.taskData));\n            if (isNaN(durationValue) && isNullOrUndefined(this.parent.taskFields.durationUnit) && !isNullOrUndefined(durationValue)) {\n                this.parent.setRecordValue('taskData.' + mapping, this.getDurationString(duration, durationUnit), task);\n            }\n            else {\n                if (typeof durationValue === 'string') {\n                    this.parent.setRecordValue('taskData.' + mapping, duration.toString(), task);\n                }\n                else {\n                    this.parent.setRecordValue('taskData.' + mapping, duration, task);\n                }\n            }\n        }\n        else {\n            this.parent.setRecordValue(mapping, duration, task);\n            this.parent.setRecordValue('taskData.' + mapping, duration, task);\n        }\n        if (this.parent.taskFields.durationUnit) {\n            task.taskData[this.parent.taskFields.durationUnit] = task.ganttProperties.durationUnit;\n        }\n    };\n    TaskProcessor.prototype.getWorkInHour = function (work, workUnit) {\n        if (workUnit === 'day') {\n            return work * (this.parent.secondsPerDay / 3600);\n        }\n        else if (workUnit === 'minute') {\n            return work / 60;\n        }\n        else {\n            return work;\n        }\n    };\n    /**\n     *\n     * @param {IGanttData} ganttData .\n     * @returns {void} .\n     * @private\n     */\n    TaskProcessor.prototype.updateTaskData = function (ganttData) {\n        var dataMapping = this.parent.taskFields;\n        var ganttProperties = ganttData.ganttProperties;\n        if (!isNullOrUndefined(ganttData.taskData)) {\n            var data = ganttData.taskData;\n            if (dataMapping.id) {\n                this.parent.setRecordValue('taskData.' + dataMapping.id, ganttProperties.taskId, ganttData);\n                this.parent.setRecordValue(dataMapping.id, ganttProperties.taskId, ganttData);\n            }\n            if (dataMapping.name) {\n                this.parent.setRecordValue('taskData.' + dataMapping.name, ganttProperties.taskName, ganttData);\n                this.parent.setRecordValue(dataMapping.name, ganttProperties.taskName, ganttData);\n            }\n            if (dataMapping.startDate) {\n                this.setRecordDate(ganttData, ganttProperties.startDate, dataMapping.startDate);\n            }\n            if (dataMapping.endDate) {\n                this.setRecordDate(ganttData, ganttProperties.endDate, dataMapping.endDate);\n            }\n            if (dataMapping.duration) {\n                this.setRecordDuration(ganttData, dataMapping.duration);\n            }\n            if (dataMapping.durationUnit) {\n                data[dataMapping.durationUnit] = ganttProperties.durationUnit;\n            }\n            if (dataMapping.progress) {\n                this.parent.setRecordValue('taskData.' + dataMapping.progress, ganttProperties.progress, ganttData);\n                this.parent.setRecordValue(dataMapping.progress, ganttProperties.progress, ganttData);\n            }\n            if (dataMapping.baselineStartDate) {\n                this.setRecordDate(ganttData, ganttProperties.baselineStartDate, dataMapping.baselineStartDate);\n            }\n            if (dataMapping.baselineEndDate) {\n                this.setRecordDate(ganttData, ganttProperties.baselineEndDate, dataMapping.baselineEndDate);\n            }\n            if (dataMapping.notes) {\n                this.parent.setRecordValue('taskData.' + dataMapping.notes, ganttProperties.notes, ganttData);\n                this.parent.setRecordValue(dataMapping.notes, ganttProperties.notes, ganttData);\n            }\n            if (dataMapping.cssClass) {\n                this.parent.setRecordValue('taskData.' + dataMapping.cssClass, ganttProperties.cssClass, ganttData);\n                this.parent.setRecordValue(dataMapping.cssClass, ganttProperties.cssClass, ganttData);\n            }\n            if (dataMapping.indicators) {\n                this.parent.setRecordValue('taskData.' + dataMapping.indicators, ganttProperties.indicators, ganttData);\n                this.parent.setRecordValue(dataMapping.indicators, ganttProperties.indicators, ganttData);\n            }\n            if (dataMapping.parentID) {\n                var parentID = this.parent.viewType === 'ProjectView' ? ganttProperties.parentId : data[dataMapping.parentID];\n                this.parent.setRecordValue('taskData.' + dataMapping.parentID, parentID, ganttData);\n                this.parent.setRecordValue(dataMapping.parentID, ganttProperties.parentId, ganttData);\n            }\n            if (dataMapping.work) {\n                this.parent.setRecordValue('taskData.' + dataMapping.work, this.getWorkString(ganttProperties.work, ganttProperties.workUnit), ganttData);\n                this.parent.setRecordValue(dataMapping.work, ganttProperties.work, ganttData);\n            }\n            if (dataMapping.type) {\n                this.parent.setRecordValue('taskData.' + dataMapping.type, ganttProperties.taskType, ganttData);\n                this.parent.setRecordValue(dataMapping.type, ganttProperties.taskType, ganttData);\n            }\n        }\n    };\n    /**\n     * To set resource value in Gantt record\n     *\n     * @param {object} data .\n     * @returns {object[]} .\n     * @private\n     */\n    TaskProcessor.prototype.setResourceInfo = function (data) {\n        // eslint-disable-next-line\n        var resourceIdCollection;\n        if (isNullOrUndefined(data[this.parent.taskFields.resourceInfo])) {\n            return resourceIdCollection;\n        }\n        resourceIdCollection = data[this.parent.taskFields.resourceInfo];\n        var resourceData;\n        if (!isNullOrUndefined(this.parent.editModule) && !isNullOrUndefined(this.parent.editModule.dialogModule)\n            && this.parent.editModule.dialogModule.isAddNewResource) {\n            resourceData = this.parent.editModule.dialogModule.ganttResources;\n        }\n        else {\n            resourceData = this.parent.resources;\n        }\n        var resourceIDMapping = this.parent.resourceFields.id;\n        var resourceUnitMapping = this.parent.resourceFields.unit;\n        var resourceGroup = this.parent.resourceFields.group;\n        var resources = [];\n        var _loop_5 = function (count) {\n            var resource = resourceData.filter(function (resourceInfo) {\n                if (typeof (resourceIdCollection[count]) === 'object' &&\n                    resourceIdCollection[count][resourceIDMapping] === resourceInfo[resourceIDMapping]) {\n                    return true;\n                }\n                else {\n                    return (resourceIdCollection[count] === resourceInfo[resourceIDMapping]);\n                }\n            });\n            var ganttDataResource = extend({}, resource[0]);\n            resources.push(ganttDataResource);\n            if (!isNullOrUndefined(resourceUnitMapping) && !isNullOrUndefined(resourceIdCollection[count][resourceUnitMapping])) {\n                ganttDataResource[resourceUnitMapping] = resourceIdCollection[count][resourceUnitMapping];\n            }\n            if (!isNullOrUndefined(resourceGroup) && !isNullOrUndefined(resourceIdCollection[count][resourceGroup])) {\n                ganttDataResource[resourceGroup] = resourceIdCollection[count][resourceGroup];\n            }\n        };\n        for (var count = 0; count < resourceIdCollection.length; count++) {\n            _loop_5(count);\n        }\n        this.updateResourceUnit(resources);\n        return resources;\n    };\n    /**\n     * To set resource unit in Gantt record\n     *\n     * @param {object[]} resourceData .\n     * @returns {void} .\n     * @private\n     */\n    TaskProcessor.prototype.updateResourceUnit = function (resourceData) {\n        var resourceUnit = this.parent.resourceFields.unit;\n        if (!isNullOrUndefined(resourceUnit)) {\n            var length_1 = resourceData.length;\n            var index = void 0;\n            for (index = 0; index < length_1; index++) {\n                if (isNullOrUndefined(resourceData[index][resourceUnit])) {\n                    resourceData[index][resourceUnit] = 100;\n                }\n            }\n        }\n    };\n    /**\n     * @param {IGanttData} data .\n     * @returns {void} .\n     * @private\n     */\n    TaskProcessor.prototype.updateResourceName = function (data) {\n        var resourceInfo = data.ganttProperties.resourceInfo;\n        var resourceName = [];\n        if (resourceInfo) {\n            var taskResources = extend([], [], data.taskData[this.parent.taskFields.resourceInfo], true);\n            this.parent.setRecordValue('taskData.' + this.parent.taskFields.resourceInfo, [], data);\n            for (var i = 0; i < resourceInfo.length; i++) {\n                var resource = resourceInfo[i];\n                var resName = resource[this.parent.resourceFields.name];\n                var resourceUnit = resource[this.parent.resourceFields.unit];\n                if (resourceUnit !== 100) {\n                    resName += '[' + resourceUnit + '%' + ']';\n                }\n                resourceName.push(resName);\n                if (data.taskData) {\n                    var mapping = this.parent.taskFields.resourceInfo;\n                    // eslint-disable-next-line\n                    if (typeof (taskResources[i] === 'object')) {\n                        data.taskData[mapping].push(taskResources[i]);\n                    }\n                    else {\n                        data.taskData[mapping].push(resource[this.parent.resourceFields.id]);\n                    }\n                }\n            }\n            this.parent.setRecordValue('resourceNames', resourceName.join(','), data.ganttProperties, true);\n            this.parent.setRecordValue(this.parent.taskFields.resourceInfo, resourceName.join(','), data, true);\n            this.updateTaskDataResource(data);\n        }\n    };\n    TaskProcessor.prototype.dataReorder = function (flatCollection, rootCollection) {\n        var result = [];\n        while (flatCollection.length > 0 && rootCollection.length > 0) {\n            var index = rootCollection.indexOf(flatCollection[0]);\n            if (index === -1) {\n                flatCollection.shift();\n            }\n            else {\n                result.push(flatCollection.shift());\n                rootCollection.splice(index, 1);\n            }\n        }\n        return result;\n    };\n    TaskProcessor.prototype.validateDurationUnitMapping = function (durationUnit) {\n        var unit = durationUnit;\n        if ((unit === 'minute') || (unit === 'minutes') || (unit === 'm') || (unit === 'min')) {\n            unit = 'minute';\n        }\n        else if ((unit === 'hour') || (unit === 'hours') || (unit === 'h') || (unit === 'hr')) {\n            unit = 'hour';\n        }\n        else if ((unit === 'day') || (unit === 'days') || (unit === 'd')) {\n            unit = 'day';\n        }\n        else {\n            unit = this.parent.durationUnit.toLocaleLowerCase();\n        }\n        return unit;\n    };\n    TaskProcessor.prototype.validateTaskTypeMapping = function (taskType) {\n        var type = taskType;\n        if (type === 'FixedDuration') {\n            type = 'FixedDuration';\n        }\n        else if (type === 'FixedUnit') {\n            type = 'FixedUnit';\n        }\n        else if (type === 'FixedWork') {\n            type = 'FixedWork';\n        }\n        else {\n            type = this.parent.taskType;\n        }\n        return type;\n    };\n    TaskProcessor.prototype.validateWorkUnitMapping = function (workUnit) {\n        var unit = workUnit;\n        if (unit === 'minute') {\n            unit = 'minute';\n        }\n        else if (unit === 'hour') {\n            unit = 'hour';\n        }\n        else if (unit === 'day') {\n            unit = 'day';\n        }\n        else {\n            unit = this.parent.workUnit.toLocaleLowerCase();\n        }\n        return unit;\n    };\n    /**\n     * To update duration value in Task\n     *\n     * @param {string} duration .\n     * @param {ITaskData} ganttProperties .\n     * @returns {void} .\n     * @private\n     */\n    TaskProcessor.prototype.updateDurationValue = function (duration, ganttProperties) {\n        var tempDuration = this.getDurationValue(duration);\n        if (!isNaN(getValue('duration', tempDuration))) {\n            this.parent.setRecordValue('duration', getValue('duration', tempDuration), ganttProperties, true);\n        }\n        if (!isNullOrUndefined(getValue('durationUnit', tempDuration))) {\n            this.parent.setRecordValue('durationUnit', getValue('durationUnit', tempDuration), ganttProperties, true);\n        }\n    };\n    /**\n     * @returns {void} .\n     * @private\n     */\n    TaskProcessor.prototype.reUpdateGanttData = function () {\n        if (this.parent.flatData.length > 0) {\n            var data = void 0;\n            var ganttData = void 0;\n            this.parent.secondsPerDay = this.getSecondsPerDay();\n            for (var index = 0; index < this.parent.flatData.length; index++) {\n                data = this.parent.flatData[index].taskData;\n                ganttData = this.parent.flatData[index];\n                if (!isNullOrUndefined(this.parent.taskFields.duration)) {\n                    this.setRecordDuration(ganttData, this.parent.taskFields.duration);\n                }\n                this.calculateScheduledValues(ganttData, data, false);\n            }\n            this.updateGanttData();\n        }\n    };\n    //check day is fall between from and to date range\n    TaskProcessor.prototype._isInStartDateRange = function (day, from, to) {\n        var isInRange = false;\n        if (day.getTime() >= from.getTime() && day.getTime() < to.getTime()) {\n            isInRange = true;\n        }\n        return isInRange;\n    };\n    //check day is fall between from and to date range\n    TaskProcessor.prototype._isInEndDateRange = function (day, from, to) {\n        var isInRange = false;\n        if (day.getTime() > from.getTime() && day.getTime() <= to.getTime()) {\n            isInRange = true;\n        }\n        return isInRange;\n    };\n    /**\n     * Method to find overlapping value of the parent task\n     *\n     * @param {IGanttData} resourceTask .\n     * @returns {void} .\n     * @private\n     */\n    TaskProcessor.prototype.updateOverlappingValues = function (resourceTask) {\n        var tasks = resourceTask.childRecords;\n        var currentTask;\n        var ranges = [];\n        if (tasks.length <= 1) {\n            resourceTask.ganttProperties.workTimelineRanges = [];\n            return;\n        }\n        tasks = this.setSortedChildTasks(resourceTask);\n        this.updateOverlappingIndex(tasks);\n        for (var count = 1; count < tasks.length; count++) {\n            currentTask = tasks[count];\n            var cStartDate = new Date(currentTask.ganttProperties.startDate.getTime());\n            var cEndDate = new Date(currentTask.ganttProperties.endDate.getTime()); //task 2\n            var range = [];\n            // eslint-disable-next-line\n            var rangeObj = {};\n            for (var index = 0; index < count; index++) {\n                var tStartDate = tasks[index].ganttProperties.startDate;\n                var tEndDate = tasks[index].ganttProperties.endDate; // task 1\n                var rangeObj_1 = {};\n                if (this._isInStartDateRange(cStartDate, tStartDate, tEndDate) || this._isInEndDateRange(cEndDate, tStartDate, tEndDate)) {\n                    if ((tStartDate.getTime() > cStartDate.getTime() && tStartDate.getTime() < cEndDate.getTime()\n                        && tEndDate.getTime() > cStartDate.getTime() && tEndDate.getTime() > cEndDate.getTime())\n                        || (cStartDate.getTime() === tStartDate.getTime() && cEndDate.getTime() <= tEndDate.getTime())) {\n                        rangeObj_1.from = tStartDate;\n                        rangeObj_1.to = cEndDate;\n                    }\n                    else if (cStartDate.getTime() === tStartDate.getTime() && cEndDate.getTime() > tEndDate.getTime()) {\n                        rangeObj_1.from = tStartDate;\n                        rangeObj_1.to = tEndDate;\n                    }\n                    else if (cStartDate.getTime() > tStartDate.getTime() && cEndDate.getTime() >= tEndDate.getTime()) {\n                        rangeObj_1.from = cStartDate;\n                        rangeObj_1.to = tEndDate;\n                    }\n                    else if (cStartDate.getTime() > tStartDate.getTime() && cEndDate.getTime() < tEndDate.getTime()) {\n                        rangeObj_1.from = cStartDate;\n                        rangeObj_1.to = cEndDate;\n                    }\n                    range.push(rangeObj_1);\n                }\n            }\n            // eslint-disable-next-line\n            ranges.push.apply(ranges, this.mergeRangeCollections(range));\n        }\n        this.parent.setRecordValue('workTimelineRanges', this.mergeRangeCollections(ranges, true), resourceTask.ganttProperties, true);\n        this.calculateRangeLeftWidth(resourceTask.ganttProperties.workTimelineRanges);\n    };\n    /**\n     * @param {IGanttData[]} tasks .\n     * @returns {void} .\n     * @private\n     */\n    TaskProcessor.prototype.updateOverlappingIndex = function (tasks) {\n        for (var i = 0; i < tasks.length; i++) {\n            tasks[i].ganttProperties.eOverlapIndex = i;\n        }\n    };\n    /**\n     * Method to calculate the left and width value of oarlapping ranges\n     *\n     * @param {IWorkTimelineRanges[]} ranges .\n     * @returns {void} .\n     * @private\n     */\n    TaskProcessor.prototype.calculateRangeLeftWidth = function (ranges) {\n        for (var count = 0; count < ranges.length; count++) {\n            ranges[count].left = this.getTaskLeft(ranges[count].from, false);\n            ranges[count].width = this.getTaskWidth(ranges[count].from, ranges[count].to);\n        }\n    };\n    /**\n     * @param {IWorkTimelineRanges[]} ranges .\n     * @param {boolean} isSplit .\n     * @returns {IWorkTimelineRanges[]} .\n     * @private\n     */\n    TaskProcessor.prototype.mergeRangeCollections = function (ranges, isSplit) {\n        var finalRange = [];\n        var currentTopRange = {};\n        var cCompareRange = {};\n        var cStartDate;\n        var cEndDate;\n        var tStartDate;\n        var tEndDate;\n        var sortedRanges = new DataManager(ranges).executeLocal(new Query()\n            .sortBy(this.parent.taskFields.startDate, 'Ascending'));\n        for (var i = 0; i < sortedRanges.length; i++) {\n            if (finalRange.length === 0 && i === 0) {\n                finalRange.push(sortedRanges[i]);\n                continue;\n            }\n            currentTopRange = finalRange[finalRange.length - 1];\n            cStartDate = currentTopRange.from;\n            cEndDate = currentTopRange.to;\n            cCompareRange = sortedRanges[i];\n            tStartDate = cCompareRange.from;\n            tEndDate = cCompareRange.to;\n            if ((cStartDate.getTime() === tStartDate.getTime() && cEndDate.getTime() >= tEndDate.getTime())\n                || (cStartDate.getTime() < tStartDate.getTime() && cEndDate.getTime() >= tEndDate.getTime())) {\n                continue;\n            }\n            /* eslint-disable-next-line */\n            else if ((cStartDate.getTime() <= tStartDate.getTime() && cEndDate.getTime() >= tStartDate.getTime() && cEndDate.getTime() < tEndDate.getTime())\n                || (cEndDate.getTime() < tStartDate.getTime() && this.checkStartDate(cEndDate).getTime() === tStartDate.getTime())) {\n                currentTopRange.to = tEndDate;\n            }\n            else if (cEndDate.getTime() < tStartDate.getTime() && this.checkStartDate(cEndDate).getTime() !== tStartDate.getTime()) {\n                finalRange.push(sortedRanges[i]);\n            }\n        }\n        if (isSplit) {\n            finalRange = this.splitRangeCollection(finalRange);\n        }\n        return finalRange;\n    };\n    /**\n     * Sort resource child records based on start date\n     *\n     * @param {IGanttData} resourceTask .\n     * @returns {IGanttData} .\n     * @private\n     */\n    TaskProcessor.prototype.setSortedChildTasks = function (resourceTask) {\n        var sortedRecords = [];\n        sortedRecords = new DataManager(resourceTask.childRecords).executeLocal(new Query()\n            .sortBy(this.parent.taskFields.startDate, 'Ascending'));\n        return sortedRecords;\n    };\n    TaskProcessor.prototype.splitRangeCollection = function (rangeCollection, fromField, toField) {\n        var splitArray = [];\n        var unit;\n        if (this.parent.timelineModule.isSingleTier) {\n            unit = this.parent.timelineModule.bottomTier !== 'None' ?\n                this.parent.timelineModule.bottomTier : this.parent.timelineModule.topTier;\n        }\n        else {\n            unit = this.parent.timelineModule.bottomTier;\n        }\n        if (unit === 'Week' || unit === 'Month' || unit === 'Year') {\n            splitArray = rangeCollection;\n        }\n        else if (unit === 'Day') {\n            splitArray = this.getRangeWithWeek(rangeCollection, fromField, toField);\n        }\n        else {\n            if (this.parent.workingTimeRanges[0].from === 0 && this.parent.workingTimeRanges[0].to === 86400) {\n                splitArray = this.getRangeWithWeek(rangeCollection, fromField, toField);\n            }\n            else {\n                splitArray = this.getRangeWithDay(rangeCollection, fromField, toField);\n            }\n        }\n        return splitArray;\n    };\n    TaskProcessor.prototype.getRangeWithDay = function (ranges, fromField, toField) {\n        var splitArray = [];\n        for (var i = 0; i < ranges.length; i++) {\n            // eslint-disable-next-line\n            splitArray.push.apply(splitArray, this.splitRangeForDayMode(ranges[i], fromField, toField));\n        }\n        return splitArray;\n    };\n    TaskProcessor.prototype.splitRangeForDayMode = function (range, fromField, toField) {\n        var fromString = fromField ? fromField : 'from';\n        var toString = toField ? toField : 'to';\n        var tempStart = new Date(range[fromString]);\n        var end = new Date(range[toString]);\n        var ranges = [];\n        var rangeObject = {};\n        if (tempStart.getTime() < end.getTime()) {\n            do {\n                var nStart = new Date(tempStart.getTime());\n                var nEndDate = new Date(tempStart.getTime());\n                var nextAvailDuration = 0;\n                var sHour = this.parent.dataOperation.getSecondsInDecimal(tempStart);\n                var startRangeIndex = -1;\n                for (var i = 0; i < this.parent.workingTimeRanges.length; i++) {\n                    var val = this.parent.workingTimeRanges[i];\n                    if (sHour >= val.from && sHour <= val.to) {\n                        startRangeIndex = i;\n                        break;\n                    }\n                }\n                if (startRangeIndex !== -1) {\n                    nextAvailDuration = Math.round(this.parent.workingTimeRanges[startRangeIndex].to - sHour);\n                    nEndDate.setSeconds(nEndDate.getSeconds() + nextAvailDuration);\n                }\n                var taskName = 'task';\n                if (nEndDate.getTime() < end.getTime()) {\n                    rangeObject = {};\n                    if (range.task) {\n                        rangeObject[taskName] = extend([], range.task);\n                    }\n                    rangeObject[fromString] = nStart;\n                    rangeObject[toString] = nEndDate;\n                    rangeObject.isSplit = true;\n                    ranges.push(rangeObject);\n                }\n                else {\n                    rangeObject = {};\n                    if (range.task) {\n                        rangeObject[taskName] = extend([], range.task);\n                    }\n                    rangeObject[fromString] = nStart;\n                    rangeObject[toString] = end;\n                    rangeObject.isSplit = true;\n                    ranges.push(rangeObject);\n                }\n                tempStart = this.checkStartDate(nEndDate);\n            } while (tempStart.getTime() < end.getTime());\n        }\n        else {\n            ranges.push(range);\n        }\n        return ranges;\n    };\n    TaskProcessor.prototype.getRangeWithWeek = function (ranges, fromField, toField) {\n        var splitArray = [];\n        for (var i = 0; i < ranges.length; i++) {\n            // eslint-disable-next-line\n            splitArray.push.apply(splitArray, this.splitRangeForWeekMode(ranges[i], fromField, toField));\n        }\n        return splitArray;\n    };\n    TaskProcessor.prototype.splitRangeForWeekMode = function (range, fromField, toField) {\n        var from = fromField ? fromField : 'from';\n        var to = toField ? toField : 'to';\n        var start = new Date(range[from]);\n        var tempStart = new Date(range[from]);\n        var end = new Date(range[to]);\n        var isInSplit = false;\n        var ranges = [];\n        var rangeObj = {};\n        tempStart.setDate(tempStart.getDate() + 1);\n        if (tempStart.getTime() < end.getTime()) {\n            do {\n                if (this.parent.dataOperation.isOnHolidayOrWeekEnd(tempStart, null)) {\n                    var tempEndDate = new Date(tempStart.getTime());\n                    tempEndDate.setDate(tempStart.getDate() - 1);\n                    this.setTime(this.parent.defaultEndTime, tempEndDate);\n                    rangeObj = {};\n                    rangeObj[from] = start;\n                    rangeObj.isSplit = true;\n                    rangeObj[to] = tempEndDate;\n                    if (range.task) {\n                        rangeObj.task = extend([], range.task, true);\n                    }\n                    if (start.getTime() !== tempEndDate.getTime()) {\n                        ranges.push(rangeObj);\n                    }\n                    start = this.checkStartDate(tempEndDate);\n                    tempStart = new Date(start.getTime());\n                    isInSplit = true;\n                }\n                else {\n                    tempStart.setDate(tempStart.getDate() + 1);\n                }\n            } while (tempStart.getTime() < end.getTime());\n            if (isInSplit) {\n                if (start.getTime() !== end.getTime()) {\n                    rangeObj = {};\n                    if (range.task) {\n                        rangeObj.task = extend([], range.task, true);\n                    }\n                    rangeObj[from] = start;\n                    rangeObj[to] = end;\n                    rangeObj.isSplit = true;\n                    ranges.push(rangeObj);\n                }\n            }\n            else {\n                ranges.push(range);\n            }\n        }\n        else {\n            ranges.push(range);\n        }\n        return ranges;\n    };\n    /**\n     * Update all gantt data collection width, progress width and left value\n     *\n     * @returns {void} .\n     * @private\n     */\n    TaskProcessor.prototype.updateGanttData = function () {\n        var flatData = this.parent.flatData;\n        var length = flatData.length;\n        for (var i = 0; i < length; i++) {\n            var data = flatData[i];\n            this.updateTaskLeftWidth(data);\n        }\n    };\n    /**\n     * Update all gantt data collection width, progress width and left value\n     *\n     * @param {IGanttData} data .\n     * @returns {void} .\n     * @public\n     */\n    TaskProcessor.prototype.updateTaskLeftWidth = function (data) {\n        var task = data.ganttProperties;\n        if (!data.hasChildRecords) {\n            this.updateWidthLeft(data);\n        }\n        this.parent.setRecordValue('baselineLeft', this.calculateBaselineLeft(task), task, true);\n        this.parent.setRecordValue('baselineWidth', this.calculateBaselineWidth(task), task, true);\n        var childData = [];\n        var parentItem;\n        if (data.parentItem) {\n            parentItem = this.parent.getParentTask(data.parentItem);\n            childData = parentItem.childRecords;\n        }\n        if (parentItem && childData.indexOf(data) === childData.length - 1 && !data.hasChildRecords && this.parent.enableValidation) {\n            this.updateParentItems(parentItem);\n        }\n        else if (parentItem && !this.parent.enableValidation) {\n            this.updateWidthLeft(parentItem);\n        }\n    };\n    /**\n     * @returns {void} .\n     * @private\n     */\n    TaskProcessor.prototype.reUpdateGanttDataPosition = function () {\n        var flatData = this.parent.flatData;\n        var length = flatData.length;\n        for (var i = 0; i < length; i++) {\n            var data = flatData[i];\n            var task = data.ganttProperties;\n            this.updateWidthLeft(data);\n            if (this.parent.taskMode !== 'Auto' && data.hasChildRecords) {\n                this.updateAutoWidthLeft(data);\n            }\n            this.parent.setRecordValue('baselineLeft', this.calculateBaselineLeft(task), task, true);\n            this.parent.setRecordValue('baselineWidth', this.calculateBaselineWidth(task), task, true);\n            this.parent.dataOperation.updateTaskData(data);\n        }\n    };\n    /**\n     * method to update left, width, progress width in record\n     *\n     * @param {IGanttData} data .\n     * @returns {void} .\n     * @private\n     */\n    TaskProcessor.prototype.updateWidthLeft = function (data) {\n        var ganttRecord = data.ganttProperties;\n        // task endDate may be changed in segment calculation so this must be calculated first.\n        // task width calculating was based on endDate\n        if (!isNullOrUndefined(ganttRecord.segments) && ganttRecord.segments.length > 0) {\n            var segments = ganttRecord.segments;\n            var fixedWidth = true;\n            var totalTaskWidth = this.splitTasksDuration(segments) * this.parent.perDayWidth;\n            var totalProgressWidth = this.parent.dataOperation.getProgressWidth(totalTaskWidth, ganttRecord.progress);\n            for (var i = 0; i < segments.length; i++) {\n                var segment = segments[i];\n                if (i === 0 && !isNullOrUndefined(ganttRecord.startDate) &&\n                    segment.startDate.getTime() !== ganttRecord.startDate.getTime()) {\n                    segment.startDate = ganttRecord.startDate;\n                    var endDate = this.parent.dataOperation.getEndDate(segment.startDate, segment.duration, ganttRecord.durationUnit, ganttRecord, false);\n                    segment.endDate = this.parent.dataOperation.checkEndDate(endDate, ganttRecord, false);\n                    this.parent.chartRowsModule.incrementSegments(segments, 0, data);\n                }\n                segment.width = this.getSplitTaskWidth(segment.startDate, segment.duration, data);\n                segment.showProgress = false;\n                segment.progressWidth = -1;\n                if (i !== 0) {\n                    var pStartDate = new Date(ganttRecord.startDate.getTime());\n                    segment.left = this.getSplitTaskLeft(segment.startDate, pStartDate);\n                }\n                if (totalProgressWidth > 0 && totalProgressWidth > segment.width) {\n                    totalProgressWidth = totalProgressWidth - segment.width;\n                    segment.progressWidth = segment.width;\n                    segment.showProgress = false;\n                }\n                else if (fixedWidth) {\n                    segment.progressWidth = totalProgressWidth;\n                    segment.showProgress = true;\n                    totalProgressWidth = totalProgressWidth - segment.width;\n                    fixedWidth = false;\n                }\n            }\n            this.parent.setRecordValue('segments', ganttRecord.segments, ganttRecord, true);\n            this.parent.dataOperation.updateMappingData(data, 'segments');\n        }\n        this.parent.setRecordValue('width', this.parent.dataOperation.calculateWidth(data), ganttRecord, true);\n        this.parent.setRecordValue('left', this.parent.dataOperation.calculateLeft(ganttRecord), ganttRecord, true);\n        this.parent.setRecordValue('progressWidth', this.parent.dataOperation.getProgressWidth((ganttRecord.isAutoSchedule || !data.hasChildRecords ? ganttRecord.width : ganttRecord.autoWidth), ganttRecord.progress), ganttRecord, true);\n    };\n    /**\n     * method to update left, width, progress width in record\n     *\n     * @param {IGanttData} data .\n     * @returns {void} .\n     * @private\n     */\n    TaskProcessor.prototype.updateAutoWidthLeft = function (data) {\n        var ganttRecord = data.ganttProperties;\n        this.parent.setRecordValue('autoWidth', this.calculateWidth(data, true), ganttRecord, true);\n        this.parent.setRecordValue('autoLeft', this.calculateLeft(ganttRecord, true), ganttRecord, true);\n    };\n    /**\n     * To calculate parent progress value\n     *\n     * @param {IGanttData} childGanttRecord .\n     * @returns {object} .\n     * @private\n     */\n    TaskProcessor.prototype.getParentProgress = function (childGanttRecord) {\n        var durationInDay = 0;\n        var progressValues = {};\n        switch (childGanttRecord.ganttProperties.durationUnit) {\n            case 'hour':\n                durationInDay = (childGanttRecord.ganttProperties.duration / (this.parent.secondsPerDay / 3600));\n                break;\n            case 'minute':\n                durationInDay = (childGanttRecord.ganttProperties.duration / (this.parent.secondsPerDay / 60));\n                break;\n            default:\n                durationInDay = childGanttRecord.ganttProperties.duration;\n        }\n        if (childGanttRecord.hasChildRecords) {\n            setValue('totalProgress', childGanttRecord.ganttProperties.totalProgress, progressValues);\n            setValue('totalDuration', childGanttRecord.ganttProperties.totalDuration, progressValues);\n        }\n        else {\n            setValue('totalProgress', childGanttRecord.ganttProperties.progress * durationInDay, progressValues);\n            setValue('totalDuration', durationInDay, progressValues);\n        }\n        return progressValues;\n    };\n    TaskProcessor.prototype.resetDependency = function (record) {\n        var dependency = this.parent.taskFields.dependency;\n        if (!isNullOrUndefined(dependency)) {\n            var recordProp = record.ganttProperties;\n            this.parent.setRecordValue('predecessor', [], recordProp, true);\n            this.parent.setRecordValue('predecessorsName', null, recordProp, true);\n            this.parent.setRecordValue('taskData.' + dependency, null, record);\n            this.parent.setRecordValue(dependency, null, record);\n        }\n    };\n    /**\n     * @param {IParent | IGanttData} cloneParent .\n     * @param {boolean} isParent .\n     * @returns {void} .\n     * @private\n     */\n    TaskProcessor.prototype.updateParentItems = function (cloneParent, isParent) {\n        var parentData = isParent ? cloneParent : this.parent.getParentTask(cloneParent);\n        var deleteUpdate = false;\n        var ganttProp = parentData.ganttProperties;\n        if (parentData.childRecords.length > 0) {\n            var previousStartDate = ganttProp.isAutoSchedule ? ganttProp.startDate : ganttProp.autoStartDate;\n            var previousEndDate = ganttProp.isAutoSchedule ? ganttProp.endDate :\n                ganttProp.autoEndDate;\n            var childRecords = parentData.childRecords;\n            var childLength = childRecords.length;\n            var totalDuration = 0;\n            var progressValues = {};\n            var minStartDate = null;\n            var maxEndDate = null;\n            var milestoneCount = 0;\n            var totalProgress = 0;\n            var childCompletedWorks = 0;\n            var childData = void 0;\n            for (var count = 0; count < childLength; count++) {\n                childData = childRecords[count];\n                if (this.parent.isOnDelete && childData.isDelete) {\n                    if (childLength === 1 && this.parent.viewType === 'ProjectView') {\n                        deleteUpdate = true;\n                    }\n                    continue;\n                }\n                var startDate = this.getValidStartDate(childData.ganttProperties);\n                var endDate = this.getValidEndDate(childData.ganttProperties);\n                if (isNullOrUndefined(minStartDate)) {\n                    minStartDate = this.getDateFromFormat(startDate);\n                }\n                if (isNullOrUndefined(maxEndDate)) {\n                    maxEndDate = this.getDateFromFormat(endDate);\n                }\n                if (!isNullOrUndefined(endDate) && this.compareDates(endDate, maxEndDate) === 1) {\n                    maxEndDate = this.getDateFromFormat(endDate);\n                }\n                if (!isNullOrUndefined(startDate) && this.compareDates(startDate, minStartDate) === -1) {\n                    minStartDate = this.getDateFromFormat(startDate);\n                }\n                if (!childData.ganttProperties.isMilestone && isScheduledTask(childData.ganttProperties)) {\n                    progressValues = this.getParentProgress(childData);\n                    totalProgress += getValue('totalProgress', progressValues);\n                    totalDuration += getValue('totalDuration', progressValues);\n                }\n                else {\n                    milestoneCount++;\n                }\n                childCompletedWorks += childData.ganttProperties.work;\n            }\n            if (!deleteUpdate) {\n                if (this.compareDates(previousStartDate, minStartDate) !== 0) {\n                    this.parent.setRecordValue(ganttProp.isAutoSchedule ? 'startDate' : 'autoStartDate', minStartDate, parentData.ganttProperties, true);\n                }\n                if (this.compareDates(previousEndDate, maxEndDate) !== 0) {\n                    this.parent.setRecordValue(ganttProp.isAutoSchedule ? 'endDate' : 'autoEndDate', maxEndDate, parentData.ganttProperties, true);\n                }\n                var taskCount = void 0;\n                if (this.parent.isOnDelete && childData.isDelete) {\n                    taskCount = childLength - milestoneCount - 1;\n                }\n                else {\n                    taskCount = childLength - milestoneCount;\n                }\n                var parentProgress = (taskCount > 0 && totalDuration > 0) ? (totalProgress / totalDuration) : 0;\n                var parentProp = parentData.ganttProperties;\n                var milestone = (taskCount === 0) && minStartDate && maxEndDate &&\n                    minStartDate.getTime() === maxEndDate.getTime() ? true : false;\n                this.parent.setRecordValue('isMilestone', milestone, parentProp, true);\n                if (parentProp.isAutoSchedule) {\n                    this.calculateDuration(parentData);\n                }\n                this.updateWorkWithDuration(parentData);\n                var parentWork = parentProp.work;\n                parentWork += childCompletedWorks;\n                this.parent.setRecordValue('work', parentWork, parentProp, true);\n                this.parent.setRecordValue('taskType', 'FixedDuration', parentProp, true);\n                if (!isNullOrUndefined(this.parent.taskFields.type)) {\n                    this.updateMappingData(parentData, 'type');\n                }\n                this.parent.setRecordValue('progress', Math.floor(parentProgress), parentProp, true);\n                this.parent.setRecordValue('totalProgress', totalProgress, parentProp, true);\n                this.parent.setRecordValue('totalDuration', totalDuration, parentProp, true);\n                if (!parentProp.isAutoSchedule) {\n                    this.parent.setRecordValue('autoDuration', this.calculateAutoDuration(parentProp), parentProp, true);\n                    this.updateAutoWidthLeft(parentData);\n                }\n                this.resetDependency(parentData);\n                this.updateWidthLeft(parentData);\n                this.updateTaskData(parentData);\n            }\n        }\n        if (deleteUpdate && parentData.childRecords.length === 1 && parentData.ganttProperties.duration === 0) {\n            this.parent.setRecordValue('isMilestone', true, parentData.ganttProperties, true);\n            this.updateWidthLeft(parentData);\n            this.updateTaskData(parentData);\n        }\n        var parentItem = this.parent.getParentTask(parentData.parentItem);\n        if (parentItem) {\n            this.updateParentItems(parentItem);\n        }\n        deleteUpdate = false;\n    };\n    return TaskProcessor;\n}(DateProcessor));\nexport { TaskProcessor };\n"]},"metadata":{},"sourceType":"module"}