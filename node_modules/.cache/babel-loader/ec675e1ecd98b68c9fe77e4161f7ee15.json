{"ast":null,"code":"import { TreeGrid, RowDD as TreeGridRowDD } from '@syncfusion/ej2-treegrid';\nimport { isNullOrUndefined, extend, classList, addClass, getValue, closest } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { isCountRequired } from '../base/common';\n/**\n * Gantt Excel Export module\n */\n\nvar RowDD =\n/** @class */\nfunction () {\n  /**\n   * Constructor for Excel Export module\n   *\n   * @param {Gantt} gantt .\n   */\n  function RowDD(gantt) {\n    this.isTest = false;\n    /** @hidden */\n\n    this.updateParentRecords = [];\n    /** @hidden */\n\n    this.isaddtoBottom = false;\n    /** @hidden */\n\n    this.isSharedTask = false;\n    /** @hidden */\n\n    this.canDrop = true;\n    this.parent = gantt;\n    TreeGrid.Inject(TreeGridRowDD);\n    this.parent.treeGrid.allowRowDragAndDrop = this.parent.allowRowDragAndDrop;\n    this.bindEvents();\n  }\n  /**\n   * For internal use only - Get the module name.\n   *\n   * @returns {string} .\n   * @private\n   */\n\n\n  RowDD.prototype.getModuleName = function () {\n    return 'rowDragAndDrop';\n  };\n  /**\n   * To destroy excel export module.\n   *\n   * @returns {void} .\n   * @private\n   */\n\n\n  RowDD.prototype.destroy = function () {// Destroy Method\n  };\n  /**\n   * To bind excel exporting events.\n   *\n   * @returns {void} .\n   * @private\n   */\n\n\n  RowDD.prototype.bindEvents = function () {\n    this.parent.treeGrid.rowDragStart = this.rowDragStart.bind(this);\n    this.parent.treeGrid.rowDragStartHelper = this.rowDragStartHelper.bind(this);\n    this.parent.treeGrid.rowDrag = this.rowDrag.bind(this);\n    this.parent.treeGrid.rowDrop = this.rowDrop.bind(this);\n  };\n\n  RowDD.prototype.rowDragStart = function (args) {\n    this.parent.trigger('rowDragStart', args);\n    this.parent.element.style.position = 'relative'; // for positioning the drag element properly\n  };\n\n  RowDD.prototype.addErrorElem = function () {\n    var dragelem = document.getElementsByClassName('e-ganttdrag')[0];\n    var errorelem = dragelem.querySelectorAll('.e-errorelem').length;\n\n    if (!errorelem) {\n      var ele = document.createElement('div');\n      classList(ele, ['e-errorcontainer'], []);\n      classList(ele, ['e-icons', 'e-errorelem'], []);\n      var errorVal = dragelem.querySelector('.errorValue');\n      var content = dragelem.querySelector('.e-rowcell').innerHTML;\n\n      if (errorVal) {\n        content = errorVal.innerHTML;\n        errorVal.parentNode.removeChild(errorVal);\n      }\n\n      dragelem.querySelector('.e-rowcell').innerHTML = '';\n      var spanContent = document.createElement('span');\n      spanContent.className = 'errorValue';\n      spanContent.style.paddingLeft = '16px';\n      spanContent.innerHTML = content;\n      dragelem.querySelector('.e-rowcell').appendChild(ele);\n      dragelem.querySelector('.e-rowcell').appendChild(spanContent);\n    }\n  };\n\n  RowDD.prototype.removeErrorElem = function () {\n    var errorelem = document.querySelector('.e-errorelem');\n\n    if (errorelem) {\n      errorelem.remove();\n    }\n  };\n\n  RowDD.prototype.rowDrag = function (args) {\n    var cloneElement = this.parent.element.querySelector('.e-cloneproperties');\n    cloneElement.style.display = 'none';\n    var ganttDragElement = cloneElement.cloneNode(true);\n    ganttDragElement.classList.add('e-ganttdrag');\n    ganttDragElement.style.display = '';\n\n    if (this.parent.element.querySelectorAll('.e-cloneproperties').length <= 1) {\n      this.parent.element.appendChild(ganttDragElement);\n    } else {\n      if (document.getElementsByClassName('e-cloneproperties')[0].querySelectorAll('.e-errorelem').length) {\n        this.addErrorElem();\n      } else {\n        this.removeErrorElem();\n      }\n    }\n\n    if (this.parent.gridLines === 'Both') {\n      addClass(this.parent.element.querySelectorAll('.e-ganttdrag .e-rowcell'), ['e-bothganttlines']);\n    }\n\n    var dragElement = this.parent.element.querySelector('.e-ganttdrag');\n    var ganttTop = this.parent.element.getClientRects()[0].top;\n    var ganttLeft = this.parent.element.getClientRects()[0].left;\n    var left = getValue('event', args.originalEvent).clientX - ganttLeft;\n    var top = getValue('event', args.originalEvent).clientY - ganttTop;\n    dragElement.style.left = left + 20 + 'px';\n    dragElement.style.top = top + 20 + 'px';\n    this.parent.trigger('rowDrag', args);\n  };\n\n  RowDD.prototype.rowDragStartHelper = function (args) {\n    this.parent.trigger('rowDragStartHelper', args);\n\n    if (this.parent.readOnly || this.parent.filterSettings.columns.length > 0) {\n      args.cancel = true;\n    }\n\n    if (this.parent.viewType === 'ResourceView' && getValue('level', args.data[0]) === 0) {\n      args.cancel = true;\n    }\n  };\n\n  RowDD.prototype.rowDrop = function (args) {\n    var ganttDragelem = document.querySelector('.e-ganttdrag');\n\n    if (ganttDragelem) {\n      ganttDragelem.remove();\n    }\n\n    var gridRow = closest(args.target, '.e-row');\n    var dropIndex = gridRow ? parseInt(gridRow.getAttribute('aria-rowindex'), 10) : args.dropIndex;\n    args.dropIndex = dropIndex;\n    args.dropRecord = this.parent.updatedRecords[args.dropIndex];\n    this.parent.trigger('rowDrop', args);\n\n    if (this.parent.viewType === 'ResourceView') {\n      if (args.dropPosition === 'middleSegment') {\n        if (args.dropRecord.level === 1 || args.dropRecord.uniqueID === getValue('parentItem', args.data[0]).uniqueID) {\n          args.cancel = true; // preventing to drop the record as child to any child records\n        }\n      }\n\n      if (args.dropPosition !== 'middleSegment') {\n        if (args.dropRecord.level === 0 || getValue('parentItem', args.data[0]).uniqueID === args.dropRecord.parentItem.uniqueID) {\n          args.cancel = true;\n        }\n      }\n    }\n\n    if (!args.cancel) {\n      args.cancel = true;\n      args.requestType = 'beforeDrop';\n      this.parent.trigger('actionBegin', args);\n      this.dropRows(args, true); // method to update the data collections based on drop action\n    }\n  };\n\n  RowDD.prototype.dropRows = function (args, isByMethod) {\n    if (!this.parent.readOnly) {\n      this.dropPosition = args.dropPosition;\n\n      if (args.dropPosition !== 'Invalid' && this.parent.editModule) {\n        var gObj = this.parent;\n        var draggedRecord = void 0;\n        this.droppedRecord = gObj.updatedRecords[args.dropIndex];\n        var dragRecords = [];\n        var droppedRecord = this.droppedRecord;\n\n        if (!args.data[0]) {\n          dragRecords.push(args.data);\n        } else {\n          dragRecords = args.data;\n        }\n\n        var count = 0;\n        var dragLength = dragRecords.length;\n\n        var _loop_1 = function (i) {\n          this_1.parent.isOnEdit = true;\n          draggedRecord = dragRecords[i];\n          this_1.draggedRecord = draggedRecord;\n\n          if (this_1.dropPosition !== 'Invalid') {\n            if (this_1.parent.viewType === 'ResourceView') {\n              this_1.checkisSharedTask();\n              this_1.previousParent = this_1.draggedRecord.parentItem.uniqueID;\n            }\n\n            if (this_1.isSharedTask) {\n              return {\n                value: void 0\n              };\n            }\n\n            if (isByMethod) {\n              this_1.deleteDragRow();\n            }\n\n            var recordIndex1 = this_1.treeGridData.indexOf(droppedRecord);\n\n            if (this_1.dropPosition === 'topSegment') {\n              this_1.dropAtTop(recordIndex1);\n            }\n\n            if (this_1.dropPosition === 'bottomSegment') {\n              if (!this_1.isSharedTask) {\n                if (!droppedRecord.hasChildRecords) {\n                  if (this_1.parent.taskFields.parentID && this_1.ganttData.length > 0) {\n                    this_1.ganttData.splice(recordIndex1 + 1, 0, this_1.draggedRecord.taskData);\n                  }\n\n                  this_1.treeGridData.splice(recordIndex1 + 1, 0, this_1.draggedRecord);\n                  this_1.parent.ids.splice(recordIndex1 + 1, 0, this_1.draggedRecord.ganttProperties.rowUniqueID.toString());\n\n                  if (this_1.parent.viewType === 'ResourceView') {\n                    var taskId = this_1.draggedRecord.level === 0 ? 'R' + this_1.draggedRecord.ganttProperties.taskId : 'T' + this_1.draggedRecord.ganttProperties.taskId;\n                    this_1.parent.getTaskIds().splice(recordIndex1 + 1, 0, taskId);\n                  }\n                } else {\n                  count = this_1.parent.editModule.getChildCount(droppedRecord, 0);\n\n                  if (this_1.parent.taskFields.parentID && this_1.ganttData.length > 0) {\n                    this_1.ganttData.splice(recordIndex1 + count + 1, 0, this_1.draggedRecord.taskData);\n                  }\n\n                  this_1.treeGridData.splice(recordIndex1 + count + 1, 0, this_1.draggedRecord);\n                  /* eslint-disable-next-line */\n\n                  this_1.parent.ids.splice(recordIndex1 + count + 1, 0, this_1.draggedRecord.ganttProperties.rowUniqueID.toString());\n\n                  if (this_1.parent.viewType === 'ResourceView') {\n                    var spliceId = this_1.draggedRecord.level === 0 ? 'R' + this_1.draggedRecord.ganttProperties.taskId : 'T' + this_1.draggedRecord.ganttProperties.taskId;\n                    this_1.parent.getTaskIds().splice(recordIndex1 + count + 1, 0, spliceId);\n                  }\n                }\n\n                this_1.parent.setRecordValue('parentItem', this_1.treeGridData[recordIndex1].parentItem, draggedRecord);\n                this_1.parent.setRecordValue('parentUniqueID', this_1.treeGridData[recordIndex1].parentUniqueID, draggedRecord);\n                this_1.parent.setRecordValue('level', this_1.treeGridData[recordIndex1].level, draggedRecord);\n\n                if (draggedRecord.hasChildRecords) {\n                  var level = 1;\n                  this_1.updateChildRecordLevel(draggedRecord, level);\n                  this_1.updateChildRecord(draggedRecord, recordIndex1 + count + 1);\n                }\n\n                if (droppedRecord.parentItem) {\n                  var rec = this_1.parent.getParentTask(droppedRecord.parentItem).childRecords;\n                  var childRecords = rec;\n                  var droppedRecordIndex = childRecords.indexOf(droppedRecord) + 1;\n                  childRecords.splice(droppedRecordIndex, 0, draggedRecord);\n                }\n              }\n            }\n\n            if (this_1.dropPosition === 'middleSegment') {\n              this_1.dropMiddle(recordIndex1);\n\n              if (droppedRecord.childRecords.length > 0) {\n                delete droppedRecord.ganttProperties.segments;\n                delete droppedRecord.taskData[this_1.parent.taskFields.segments];\n              }\n            } // eslint-disable-next-line\n\n\n            if (!isNullOrUndefined(draggedRecord.parentItem && this_1.updateParentRecords.indexOf(draggedRecord.parentItem) !== -1)) {\n              this_1.updateParentRecords.push(draggedRecord.parentItem);\n            }\n          }\n\n          if (!this_1.parent.enableVirtualization) {\n            var data_1 = gObj.flatData;\n            var startIndex = void 0;\n            var endIndex = void 0;\n\n            if (draggedRecord.index < droppedRecord.index) {\n              startIndex = draggedRecord.index;\n              endIndex = droppedRecord.index;\n            } else {\n              startIndex = droppedRecord.index;\n              endIndex = draggedRecord.index;\n            }\n\n            var _loop_2 = function (i_1) {\n              if (!isNullOrUndefined(data_1[i_1])) {\n                data_1[i_1].index = i_1;\n\n                if (!isNullOrUndefined(data_1[i_1].parentItem)) {\n                  var updatedParent = data_1.filter(function (e) {\n                    return e.uniqueID === data_1[i_1].parentUniqueID;\n                  })[0];\n                  data_1[i_1].parentItem.index = updatedParent.index;\n                }\n              }\n            };\n\n            for (var i_1 = startIndex; i_1 <= endIndex; i_1++) {\n              _loop_2(i_1);\n            }\n          }\n\n          gObj.rowDragAndDropModule.refreshDataSource();\n        };\n\n        var this_1 = this;\n\n        for (var i = 0; i < dragLength; i++) {\n          var state_1 = _loop_1(i);\n\n          if (typeof state_1 === \"object\") return state_1.value;\n        }\n\n        if (this.dropPosition === 'middleSegment') {\n          if (droppedRecord.ganttProperties.predecessor) {\n            this.parent.editModule.removePredecessorOnDelete(droppedRecord);\n            droppedRecord.ganttProperties.predecessor = null;\n            droppedRecord.ganttProperties.predecessorsName = null;\n            droppedRecord[this.parent.taskFields.dependency] = null;\n            droppedRecord.taskData[this.parent.taskFields.dependency] = null;\n          }\n\n          if (droppedRecord.ganttProperties.isMilestone) {\n            this.parent.setRecordValue('isMilestone', false, droppedRecord.ganttProperties, true);\n\n            if (!isNullOrUndefined(droppedRecord.taskData[this.parent.taskFields.milestone])) {\n              if (droppedRecord.taskData[this.parent.taskFields.milestone] === true) {\n                droppedRecord.taskData[this.parent.taskFields.milestone] = false;\n              }\n            }\n          }\n        }\n\n        if (this.parent.viewType === 'ResourceView' && !this.isSharedTask) {\n          var parentUniqueID = void 0;\n\n          if (this.dropPosition === 'middleSegment') {\n            parentUniqueID = this.droppedRecord.uniqueID;\n          } else {\n            parentUniqueID = this.droppedRecord.parentItem.uniqueID;\n          }\n\n          var droppedParentItem = this.parent.getTaskByUniqueID(parentUniqueID);\n          var editedObj = {};\n          editedObj[this.parent.taskFields.resourceInfo] = [];\n          editedObj[this.parent.taskFields.resourceInfo].push(droppedParentItem.ganttProperties.taskId);\n          this.removeExistingResources();\n          var tempResourceInfo = this.parent.dataOperation.setResourceInfo(editedObj);\n          var currentTask = this.draggedRecord;\n\n          if (isNullOrUndefined(currentTask.ganttProperties.resourceInfo)) {\n            currentTask.ganttProperties.resourceInfo = [];\n          }\n\n          if (droppedParentItem.ganttProperties.taskName === 'Unassigned Task') {\n            currentTask.ganttProperties.resourceInfo = [];\n            currentTask.ganttProperties.sharedTaskUniqueIds = [currentTask.ganttProperties.rowUniqueID];\n          } else {\n            currentTask.ganttProperties.resourceInfo.push(tempResourceInfo[0]);\n          }\n\n          this.updateCurrentTask(currentTask);\n\n          if (droppedParentItem.ganttProperties.taskName === 'Unassigned Task') {\n            this.deleteSharedResourceTask();\n          } else {\n            this.updateSharedResourceTask();\n          }\n        } // method to update the edited parent records\n\n\n        for (var j = 0; j < this.updateParentRecords.length; j++) {\n          this.parent.dataOperation.updateParentItems(this.updateParentRecords[j]);\n        }\n\n        this.updateParentRecords = [];\n        this.parent.isOnEdit = false;\n      }\n\n      if (!isNullOrUndefined(this.parent.editModule)) {\n        this.parent.editModule.refreshRecord(args, true);\n      }\n    }\n  };\n\n  RowDD.prototype.updateCurrentTask = function (currentTask) {\n    this.parent.dataOperation.updateMappingData(currentTask, 'resourceInfo');\n    this.parent.editModule.updateResourceRelatedFields(currentTask, 'resource');\n    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n\n    this.parent.editModule.dialogModule.dialogEditValidationFlag = false;\n    this.parent.editModule.dialogModule.validateDuration(currentTask);\n    this.parent.dataOperation.updateWidthLeft(currentTask);\n    this.parent.dataOperation.updateTaskData(currentTask);\n  };\n\n  RowDD.prototype.deleteSharedResourceTask = function () {\n    for (var i = 0; i < this.parent.getTaskIds().length; i++) {\n      if (this.parent.getTaskIds()[i] === 'T' + this.draggedRecord.ganttProperties.taskId) {\n        if (this.parent.getTaskByUniqueID(this.parent.currentViewData[i].parentItem.uniqueID).ganttProperties.taskName !== 'Unassigned Task') {\n          this.removeRecords(this.parent.currentViewData[i]);\n        }\n        /* eslint-disable-next-line */\n\n\n        if (!isNullOrUndefined(this.parent.currentViewData[i].parentItem && this.updateParentRecords.indexOf(this.parent.currentViewData[i].parentItem) !== -1)) {\n          this.updateParentRecords.push(this.parent.currentViewData[i].parentItem);\n        }\n      }\n    }\n  };\n\n  RowDD.prototype.removeExistingResources = function () {\n    var preParentRecord = this.parent.getTaskByUniqueID(this.previousParent);\n\n    if (this.draggedRecord.ganttProperties.resourceInfo) {\n      for (var count = 0; count < this.draggedRecord.ganttProperties.resourceInfo.length; count++) {\n        /* eslint-disable-next-line */\n        if (this.draggedRecord.ganttProperties.resourceInfo[count][this.parent.resourceFields.id] === preParentRecord.ganttProperties.taskId) {\n          this.draggedRecord.ganttProperties.resourceInfo.splice(count, 1);\n          break;\n        }\n      }\n    }\n  };\n  /*update the record for the same task which are shared with other tasks*/\n\n\n  RowDD.prototype.updateSharedResourceTask = function () {\n    for (var i = 0; i < this.parent.getTaskIds().length; i++) {\n      if (this.parent.getTaskIds()[i] === 'T' + this.draggedRecord.ganttProperties.taskId) {\n        this.parent.editModule.updateGanttProperties(this.draggedRecord, this.parent.flatData[i]);\n        this.parent.dataOperation.updateTaskData(this.parent.flatData[i]);\n        /* eslint-disable-next-line */\n\n        if (!isNullOrUndefined(this.parent.flatData[i].parentItem && this.updateParentRecords.indexOf(this.parent.currentViewData[i].parentItem) !== -1)) {\n          this.updateParentRecords.push(this.parent.flatData[i].parentItem);\n        }\n      }\n    }\n  };\n\n  RowDD.prototype._getExistingTaskWithID = function (record) {\n    var existingTasks = [];\n\n    for (var i = 0; i < this.parent.getTaskIds().length; i++) {\n      if (this.parent.getTaskIds()[i] === 'T' + record.ganttProperties.taskId) {\n        existingTasks.push(this.parent.flatData[i]);\n      }\n    }\n\n    return existingTasks;\n  };\n  /*Method to remove resource from resource Info collection and update reosurce related fields*/\n\n\n  RowDD.prototype.removeResourceInfo = function (record) {\n    var droppedParentItem = this.parent.getTaskByUniqueID(this.draggedRecord.parentItem.uniqueID);\n\n    if (record.ganttProperties.resourceInfo && record.ganttProperties.resourceInfo.length > 1) {\n      var sameIdTasks = this._getExistingTaskWithID(record);\n\n      var currentTask = void 0;\n\n      if (sameIdTasks == null) {\n        return;\n      }\n\n      for (var i = 0; i < sameIdTasks.length; i++) {\n        currentTask = sameIdTasks[i];\n        var resources = currentTask.ganttProperties.resourceInfo;\n\n        for (var count = 0; count < resources.length; count++) {\n          if (resources[count][this.parent.resourceFields.id] === droppedParentItem.ganttProperties.taskId) {\n            resources.splice(count, 1);\n            this.parent.setRecordValue('resourceInfo', resources, currentTask.ganttProperties, true);\n            this.updateCurrentTask(currentTask);\n\n            if (!isNullOrUndefined(currentTask.parentItem && this.updateParentRecords.indexOf(currentTask.parentItem) !== -1)) {\n              this.updateParentRecords.push(currentTask.parentItem);\n            }\n\n            break;\n          }\n        }\n      }\n    }\n  };\n\n  RowDD.prototype.refreshDataSource = function () {\n    var draggedRecord = this.draggedRecord;\n    var droppedRecord = this.droppedRecord;\n    var proxy = this.parent;\n    var tempDataSource;\n    var idx;\n\n    if (this.parent.dataSource instanceof DataManager) {\n      tempDataSource = getValue('dataOperation.dataArray', this.parent);\n    } else {\n      tempDataSource = proxy.dataSource;\n    }\n\n    if (tempDataSource.length > 0 && !isNullOrUndefined(droppedRecord) && !droppedRecord.parentItem) {\n      for (var i = 0; i < Object.keys(tempDataSource).length; i++) {\n        if (tempDataSource[i][this.parent.taskFields.child] === droppedRecord.taskData[this.parent.taskFields.child]) {\n          idx = i;\n        }\n      }\n\n      if (this.dropPosition === 'topSegment') {\n        if (!this.parent.taskFields.parentID) {\n          tempDataSource.splice(idx, 0, draggedRecord.taskData);\n        }\n      } else if (this.dropPosition === 'bottomSegment') {\n        if (!this.parent.taskFields.parentID) {\n          tempDataSource.splice(idx + 1, 0, draggedRecord.taskData);\n        }\n      }\n    } else if (!this.parent.taskFields.parentID && !isNullOrUndefined(droppedRecord) && droppedRecord.parentItem) {\n      if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n        var rowPosition = this.dropPosition === 'topSegment' ? 'Above' : 'Below';\n        this.parent.editModule.addRowSelectedItem = droppedRecord;\n        this.parent.editModule.updateRealDataSource(draggedRecord, rowPosition);\n        delete this.parent.editModule.addRowSelectedItem;\n      }\n    }\n\n    if (this.parent.taskFields.parentID) {\n      if (draggedRecord.parentItem) {\n        var droppedId = this.dropPosition === 'middleSegment' ? this.parent.taskFields.id : this.parent.taskFields.parentID;\n        draggedRecord[this.parent.taskFields.parentID] = droppedRecord[droppedId];\n        draggedRecord.ganttProperties.parentId = droppedRecord[droppedId];\n\n        if (this.parent.viewType === 'ResourceView' && !(this.dropPosition === 'middleSegment') || this.parent.viewType === 'ProjectView') {\n          draggedRecord.taskData[this.parent.taskFields.parentID] = droppedRecord.taskData[droppedId];\n        }\n      } else {\n        draggedRecord[this.parent.taskFields.parentID] = null;\n        draggedRecord.taskData[this.parent.taskFields.parentID] = null;\n        draggedRecord.ganttProperties.parentId = null;\n      }\n    }\n  };\n\n  RowDD.prototype.dropMiddle = function (recordIndex1) {\n    var gObj = this.parent;\n    var childRecords = this.parent.editModule.getChildCount(this.droppedRecord, 0);\n    var childRecordsLength = isNullOrUndefined(childRecords) || childRecords === 0 ? recordIndex1 + 1 : childRecords + recordIndex1 + 1;\n\n    if (this.dropPosition === 'middleSegment' && !this.isSharedTask) {\n      if (gObj.taskFields.parentID && this.ganttData.length > 0) {\n        this.ganttData.splice(childRecordsLength, 0, this.draggedRecord.taskData);\n      }\n\n      this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n      this.parent.ids.splice(childRecordsLength, 0, this.draggedRecord.ganttProperties.rowUniqueID.toString());\n\n      if (this.parent.viewType === 'ResourceView') {\n        var recordId = this.draggedRecord.level === 0 ? 'R' + this.draggedRecord.ganttProperties.taskId : 'T' + this.draggedRecord.ganttProperties.taskId;\n        this.parent.getTaskIds().splice(childRecordsLength, 0, recordId);\n      }\n\n      if (this.draggedRecord.hasChildRecords) {\n        this.updateChildRecord(this.draggedRecord, childRecordsLength, this.droppedRecord.expanded);\n      }\n\n      this.recordLevel();\n\n      if (isNullOrUndefined(this.draggedRecord.parentItem && this.updateParentRecords.indexOf(this.draggedRecord.parentItem) !== -1)) {\n        this.updateParentRecords.push(this.draggedRecord.parentItem);\n      }\n    }\n  };\n\n  RowDD.prototype.recordLevel = function () {\n    var gObj = this.parent;\n    var draggedRecord = this.draggedRecord;\n    var droppedRecord = this.droppedRecord;\n    var childItem = gObj.taskFields.child;\n\n    if (!droppedRecord.hasChildRecords) {\n      droppedRecord.hasChildRecords = true;\n\n      if (!droppedRecord.childRecords.length) {\n        droppedRecord.childRecords = [];\n\n        if (!gObj.taskFields.parentID && isNullOrUndefined(droppedRecord.taskData[childItem])) {\n          droppedRecord.taskData[childItem] = [];\n        }\n      }\n    }\n\n    if (this.dropPosition === 'middleSegment') {\n      var parentItem = extend({}, droppedRecord);\n      delete parentItem.childRecords;\n      var createParentItem = {\n        uniqueID: parentItem.uniqueID,\n        expanded: parentItem.expanded,\n        level: parentItem.level,\n        index: parentItem.index,\n        taskId: parentItem.ganttProperties.rowUniqueID\n      };\n      this.parent.setRecordValue('parentItem', createParentItem, draggedRecord);\n      this.parent.setRecordValue('parentUniqueID', droppedRecord.uniqueID, draggedRecord);\n      droppedRecord.childRecords.splice(droppedRecord.childRecords.length, 0, draggedRecord);\n\n      if (!isNullOrUndefined(draggedRecord) && !gObj.taskFields.parentID && !isNullOrUndefined(droppedRecord.taskData[childItem])) {\n        droppedRecord.taskData[gObj.taskFields.child].splice(droppedRecord.childRecords.length, 0, draggedRecord.taskData);\n      }\n\n      if (!draggedRecord.hasChildRecords) {\n        draggedRecord.level = droppedRecord.level + 1;\n      } else {\n        var level = 1;\n        draggedRecord.level = droppedRecord.level + 1;\n        this.updateChildRecordLevel(draggedRecord, level);\n      }\n\n      droppedRecord.expanded = true;\n    }\n  };\n\n  RowDD.prototype.deleteDragRow = function () {\n    this.treeGridData = isCountRequired(this.parent) ? getValue('result', this.parent.treeGrid.dataSource) : this.parent.treeGrid.dataSource;\n\n    if (this.parent.dataSource instanceof DataManager) {\n      this.ganttData = getValue('dataOperation.dataArray', this.parent);\n    } else {\n      this.ganttData = isCountRequired(this.parent) ? getValue('result', this.parent.dataSource) : this.parent.dataSource;\n    }\n\n    var deletedRow = this.parent.getTaskByUniqueID(this.draggedRecord.uniqueID);\n    this.removeRecords(deletedRow);\n  }; //method to check the dropped record has already present in the child collection\n\n\n  RowDD.prototype.checkisSharedTask = function () {\n    this.isSharedTask = false;\n    var sharedTask = null; // eslint-disable-next-line\n\n    var parentUniqueID = this.droppedRecord.level === 0 ? this.droppedRecord.uniqueID : this.droppedRecord.parentItem.uniqueID;\n    var droppedParentItem = this.parent.getTaskByUniqueID(parentUniqueID);\n    var childTasks = droppedParentItem.childRecords;\n\n    for (var i = 0; i < childTasks.length; i++) {\n      if ('T' + this.draggedRecord.ganttProperties.taskId === 'T' + childTasks[i].ganttProperties.taskId) {\n        this.isSharedTask = true;\n        sharedTask = childTasks[i];\n      }\n    }\n\n    if (this.isSharedTask) {\n      this.removeResourceInfo(sharedTask);\n    }\n  };\n\n  RowDD.prototype.dropAtTop = function (recordIndex1) {\n    var gObj = this.parent;\n\n    if (!this.isSharedTask) {\n      if (gObj.taskFields.parentID && this.ganttData.length > 0) {\n        this.ganttData.splice(recordIndex1, 0, this.draggedRecord.taskData);\n      }\n\n      this.treeGridData.splice(recordIndex1, 0, this.draggedRecord);\n      this.parent.ids.splice(recordIndex1, 0, this.draggedRecord.ganttProperties.rowUniqueID.toString());\n      this.parent.setRecordValue('parentItem', this.droppedRecord.parentItem, this.draggedRecord);\n      this.parent.setRecordValue('parentUniqueID', this.droppedRecord.parentUniqueID, this.draggedRecord);\n      this.parent.setRecordValue('level', this.droppedRecord.level, this.draggedRecord);\n\n      if (this.parent.viewType === 'ResourceView') {\n        var id = this.draggedRecord.level === 0 ? 'R' + this.draggedRecord.ganttProperties.taskId : 'T' + this.draggedRecord.ganttProperties.taskId;\n        this.parent.getTaskIds().splice(recordIndex1, 0, id);\n      }\n\n      if (this.draggedRecord.hasChildRecords) {\n        var level = 1;\n        this.updateChildRecord(this.draggedRecord, recordIndex1);\n        this.updateChildRecordLevel(this.draggedRecord, level);\n      }\n\n      if (this.droppedRecord.parentItem) {\n        var rec = this.parent.getParentTask(this.droppedRecord.parentItem).childRecords;\n        var childRecords = rec;\n        var droppedRecordIndex = childRecords.indexOf(this.droppedRecord);\n        childRecords.splice(droppedRecordIndex, 0, this.draggedRecord);\n      }\n      /* eslint-disable-next-line */\n\n\n      if (!isNullOrUndefined(this.draggedRecord.parentItem && this.updateParentRecords.indexOf(this.draggedRecord.parentItem) !== -1)) {\n        this.updateParentRecords.push(this.draggedRecord.parentItem);\n      }\n    }\n  };\n\n  RowDD.prototype.updateChildRecordLevel = function (record, level) {\n    var length = 0;\n    var currentRecord;\n    level++;\n\n    if (!record.hasChildRecords) {\n      return 0;\n    }\n\n    length = record.childRecords.length;\n\n    for (var i = 0; i < length; i++) {\n      currentRecord = record.childRecords[i];\n      var parentData = void 0;\n\n      if (record.parentItem) {\n        var id = 'uniqueIDCollection';\n        parentData = this.parent.treeGrid[id][record.parentItem.uniqueID];\n      }\n\n      currentRecord.level = record.parentItem ? parentData.level + level : record.level + 1;\n\n      if (currentRecord.hasChildRecords) {\n        level--;\n        level = this.updateChildRecordLevel(currentRecord, level);\n      }\n    }\n\n    return level;\n  }; // eslint-disable-next-line\n\n\n  RowDD.prototype.updateChildRecord = function (record, count, expanded) {\n    var currentRecord;\n    var gObj = this.parent;\n    var length = 0;\n\n    if (!record.hasChildRecords) {\n      return 0;\n    }\n\n    length = record.childRecords.length;\n\n    for (var i = 0; i < length; i++) {\n      currentRecord = record.childRecords[i];\n      count++;\n      gObj.flatData.splice(count, 0, currentRecord);\n      this.parent.ids.splice(count, 0, currentRecord.ganttProperties.rowUniqueID.toString());\n\n      if (gObj.taskFields.parentID && gObj.dataSource.length > 0) {\n        this.ganttData.splice(count, 0, currentRecord.taskData);\n      }\n\n      if (currentRecord.hasChildRecords) {\n        count = this.updateChildRecord(currentRecord, count);\n      }\n    }\n\n    return count;\n  };\n\n  RowDD.prototype.removeRecords = function (record) {\n    var gObj = this.parent;\n    var dataSource;\n\n    if (this.parent.dataSource instanceof DataManager) {\n      dataSource = getValue('dataOperation.dataArray', this.parent);\n    } else {\n      dataSource = this.parent.dataSource;\n    }\n\n    var deletedRow = record;\n    var flatParentData = this.parent.getParentTask(deletedRow.parentItem);\n\n    if (deletedRow) {\n      if (deletedRow.parentItem) {\n        var childRecords = flatParentData ? flatParentData.childRecords : [];\n        var childIndex = 0;\n\n        if (childRecords && childRecords.length > 0) {\n          if (this.parent.viewType === 'ResourceView' && childRecords.length === 1) {\n            //For updating the parent record which has zero parent reords.\n            this.parent.isOnDelete = true;\n            childRecords[0].isDelete = true;\n            this.parent.dataOperation.updateParentItems(flatParentData);\n            this.parent.isOnDelete = false;\n            childRecords[0].isDelete = false;\n          }\n\n          childIndex = childRecords.indexOf(deletedRow);\n          flatParentData.childRecords.splice(childIndex, 1);\n\n          if (!this.parent.taskFields.parentID && flatParentData.taskData[this.parent.taskFields.child]) {\n            flatParentData.taskData[this.parent.taskFields.child].splice(childIndex, 1);\n          } // collection for updating parent record\n\n\n          this.updateParentRecords.push(flatParentData);\n        }\n      } //method to delete the record from datasource collection\n\n\n      if (!this.parent.taskFields.parentID) {\n        var deleteRecordIDs = [];\n        deleteRecordIDs.push(deletedRow.ganttProperties.taskId.toString());\n\n        if (this.parent.viewType === 'ProjectView' || this.parent.viewType === 'ResourceView' && this.dropPosition !== 'middleSegment') {\n          this.parent.editModule.removeFromDataSource(deleteRecordIDs);\n        }\n      }\n\n      if (gObj.taskFields.parentID) {\n        if (deletedRow.hasChildRecords && deletedRow.childRecords.length > 0) {\n          this.removeChildItem(deletedRow);\n        }\n\n        var idx = void 0;\n        var ganttData = dataSource.length > 0 && this.parent.viewType !== 'ResourceView' ? dataSource : this.parent.updatedRecords;\n\n        for (var i = 0; i < ganttData.length; i++) {\n          if (this.parent.viewType === 'ResourceView') {\n            if (ganttData[i].ganttProperties.rowUniqueID === deletedRow.ganttProperties.rowUniqueID) {\n              idx = i;\n            }\n          } else {\n            if (ganttData[i][this.parent.taskFields.id] === deletedRow.taskData[this.parent.taskFields.id]) {\n              idx = i;\n            }\n          }\n        }\n\n        if (idx !== -1) {\n          if (dataSource.length > 0) {\n            dataSource.splice(idx, 1);\n          }\n\n          var tempIndex = this.treeGridData.indexOf(deletedRow);\n          this.treeGridData.splice(tempIndex, 1);\n          this.parent.ids.splice(tempIndex, 1);\n\n          if (this.parent.treeGrid.parentData.indexOf(deletedRow) !== -1) {\n            this.parent.treeGrid.parentData.splice(this.parent.treeGrid.parentData.indexOf(deletedRow), 1);\n          }\n\n          if (this.parent.viewType === 'ResourceView') {\n            this.parent.getTaskIds().splice(idx, 1);\n          }\n        }\n      }\n\n      var recordIndex = this.treeGridData.indexOf(deletedRow);\n\n      if (!gObj.taskFields.parentID) {\n        var deletedRecordCount = this.parent.editModule.getChildCount(deletedRow, 0);\n        this.treeGridData.splice(recordIndex, deletedRecordCount + 1);\n        this.parent.ids.splice(recordIndex, deletedRecordCount + 1);\n        var parentIndex = this.ganttData.indexOf(deletedRow.taskData);\n\n        if (parentIndex !== -1) {\n          this.ganttData.splice(parentIndex, 1);\n          this.parent.treeGrid.parentData.splice(parentIndex, 1);\n        }\n\n        if (this.parent.viewType === 'ResourceView') {\n          this.parent.getTaskIds().splice(recordIndex, deletedRecordCount + 1);\n        }\n      }\n\n      if (deletedRow.parentItem && flatParentData && flatParentData.childRecords && !flatParentData.childRecords.length) {\n        flatParentData.expanded = false;\n        flatParentData.hasChildRecords = false;\n      }\n    }\n  };\n\n  RowDD.prototype.removeChildItem = function (record) {\n    var currentRecord;\n    var idx;\n\n    for (var i = 0; i < record.childRecords.length; i++) {\n      currentRecord = record.childRecords[i];\n      var ganttData = void 0;\n\n      if (this.parent.dataSource instanceof DataManager) {\n        ganttData = getValue('dataOperation.dataArray', this.parent);\n      } else {\n        ganttData = this.parent.dataSource;\n      }\n\n      for (var j = 0; j < ganttData.length; j++) {\n        if (ganttData[j][this.parent.taskFields.id] === currentRecord.taskData[this.parent.taskFields.id]) {\n          idx = j;\n        }\n      }\n\n      if (idx !== -1) {\n        if (ganttData.length > 0) {\n          ganttData.splice(idx, 1);\n        }\n\n        var tempIndex = this.treeGridData.indexOf(currentRecord);\n        this.treeGridData.splice(tempIndex, 1);\n        this.parent.ids.splice(tempIndex, 1);\n\n        if (this.parent.viewType === 'ResourceView') {\n          this.parent.getTaskIds().splice(idx, 1);\n        }\n      }\n\n      if (currentRecord.hasChildRecords) {\n        this.removeChildItem(currentRecord);\n      }\n    }\n  };\n  /**\n   * Reorder the rows based on given indexes and position\n   *\n   * @param {number[]} fromIndexes .\n   * @param {number} toIndex .\n   * @param {string} position .\n   * @returns {void} .\n   */\n\n\n  RowDD.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n    if (!this.parent.readOnly) {\n      // eslint-disable-next-line\n      if (fromIndexes[0] !== toIndex && position === 'above' || 'below' || 'child') {\n        if (position === 'above') {\n          this.dropPosition = 'topSegment';\n        }\n\n        if (position === 'below') {\n          this.dropPosition = 'bottomSegment';\n        }\n\n        if (position === 'child') {\n          this.dropPosition = 'middleSegment';\n        }\n\n        var data = [];\n\n        for (var i = 0; i < fromIndexes.length; i++) {\n          data[i] = this.parent.updatedRecords[fromIndexes[i]];\n        }\n\n        var isByMethod = true;\n        var args = {\n          data: data,\n          dropIndex: toIndex,\n          dropPosition: this.dropPosition\n        };\n        this.dropRows(args, isByMethod);\n      } else {\n        return;\n      }\n    }\n  };\n\n  return RowDD;\n}();\n\nexport { RowDD };","map":{"version":3,"sources":["/Users/tristanbilot/Desktop/Design4green/design4green/node_modules/@syncfusion/ej2-gantt/src/gantt/actions/rowdragdrop.js"],"names":["TreeGrid","RowDD","TreeGridRowDD","isNullOrUndefined","extend","classList","addClass","getValue","closest","DataManager","isCountRequired","gantt","isTest","updateParentRecords","isaddtoBottom","isSharedTask","canDrop","parent","Inject","treeGrid","allowRowDragAndDrop","bindEvents","prototype","getModuleName","destroy","rowDragStart","bind","rowDragStartHelper","rowDrag","rowDrop","args","trigger","element","style","position","addErrorElem","dragelem","document","getElementsByClassName","errorelem","querySelectorAll","length","ele","createElement","errorVal","querySelector","content","innerHTML","parentNode","removeChild","spanContent","className","paddingLeft","appendChild","removeErrorElem","remove","cloneElement","display","ganttDragElement","cloneNode","add","gridLines","dragElement","ganttTop","getClientRects","top","ganttLeft","left","originalEvent","clientX","clientY","readOnly","filterSettings","columns","cancel","viewType","data","ganttDragelem","gridRow","target","dropIndex","parseInt","getAttribute","dropRecord","updatedRecords","dropPosition","level","uniqueID","parentItem","requestType","dropRows","isByMethod","editModule","gObj","draggedRecord","droppedRecord","dragRecords","push","count","dragLength","_loop_1","i","this_1","isOnEdit","checkisSharedTask","previousParent","value","deleteDragRow","recordIndex1","treeGridData","indexOf","dropAtTop","hasChildRecords","taskFields","parentID","ganttData","splice","taskData","ids","ganttProperties","rowUniqueID","toString","taskId","getTaskIds","getChildCount","spliceId","setRecordValue","parentUniqueID","updateChildRecordLevel","updateChildRecord","rec","getParentTask","childRecords","droppedRecordIndex","dropMiddle","segments","enableVirtualization","data_1","flatData","startIndex","endIndex","index","_loop_2","i_1","updatedParent","filter","e","rowDragAndDropModule","refreshDataSource","state_1","predecessor","removePredecessorOnDelete","predecessorsName","dependency","isMilestone","milestone","droppedParentItem","getTaskByUniqueID","editedObj","resourceInfo","removeExistingResources","tempResourceInfo","dataOperation","setResourceInfo","currentTask","taskName","sharedTaskUniqueIds","updateCurrentTask","deleteSharedResourceTask","updateSharedResourceTask","j","updateParentItems","refreshRecord","updateMappingData","updateResourceRelatedFields","dialogModule","dialogEditValidationFlag","validateDuration","updateWidthLeft","updateTaskData","currentViewData","removeRecords","preParentRecord","resourceFields","id","updateGanttProperties","_getExistingTaskWithID","record","existingTasks","removeResourceInfo","sameIdTasks","resources","proxy","tempDataSource","idx","dataSource","Object","keys","child","rowPosition","addRowSelectedItem","updateRealDataSource","droppedId","parentId","childRecordsLength","recordId","expanded","recordLevel","childItem","createParentItem","deletedRow","sharedTask","childTasks","currentRecord","parentData","flatParentData","childIndex","isOnDelete","isDelete","deleteRecordIDs","removeFromDataSource","removeChildItem","tempIndex","recordIndex","deletedRecordCount","parentIndex","reorderRows","fromIndexes","toIndex"],"mappings":"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","sourcesContent":["import { TreeGrid, RowDD as TreeGridRowDD } from '@syncfusion/ej2-treegrid';\nimport { isNullOrUndefined, extend, classList, addClass, getValue, closest } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { isCountRequired } from '../base/common';\n/**\n * Gantt Excel Export module\n */\nvar RowDD = /** @class */ (function () {\n    /**\n     * Constructor for Excel Export module\n     *\n     * @param {Gantt} gantt .\n     */\n    function RowDD(gantt) {\n        this.isTest = false;\n        /** @hidden */\n        this.updateParentRecords = [];\n        /** @hidden */\n        this.isaddtoBottom = false;\n        /** @hidden */\n        this.isSharedTask = false;\n        /** @hidden */\n        this.canDrop = true;\n        this.parent = gantt;\n        TreeGrid.Inject(TreeGridRowDD);\n        this.parent.treeGrid.allowRowDragAndDrop = this.parent.allowRowDragAndDrop;\n        this.bindEvents();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @returns {string} .\n     * @private\n     */\n    RowDD.prototype.getModuleName = function () {\n        return 'rowDragAndDrop';\n    };\n    /**\n     * To destroy excel export module.\n     *\n     * @returns {void} .\n     * @private\n     */\n    RowDD.prototype.destroy = function () {\n        // Destroy Method\n    };\n    /**\n     * To bind excel exporting events.\n     *\n     * @returns {void} .\n     * @private\n     */\n    RowDD.prototype.bindEvents = function () {\n        this.parent.treeGrid.rowDragStart = this.rowDragStart.bind(this);\n        this.parent.treeGrid.rowDragStartHelper = this.rowDragStartHelper.bind(this);\n        this.parent.treeGrid.rowDrag = this.rowDrag.bind(this);\n        this.parent.treeGrid.rowDrop = this.rowDrop.bind(this);\n    };\n    RowDD.prototype.rowDragStart = function (args) {\n        this.parent.trigger('rowDragStart', args);\n        this.parent.element.style.position = 'relative'; // for positioning the drag element properly\n    };\n    RowDD.prototype.addErrorElem = function () {\n        var dragelem = document.getElementsByClassName('e-ganttdrag')[0];\n        var errorelem = dragelem.querySelectorAll('.e-errorelem').length;\n        if (!errorelem) {\n            var ele = document.createElement('div');\n            classList(ele, ['e-errorcontainer'], []);\n            classList(ele, ['e-icons', 'e-errorelem'], []);\n            var errorVal = dragelem.querySelector('.errorValue');\n            var content = dragelem.querySelector('.e-rowcell').innerHTML;\n            if (errorVal) {\n                content = errorVal.innerHTML;\n                errorVal.parentNode.removeChild(errorVal);\n            }\n            dragelem.querySelector('.e-rowcell').innerHTML = '';\n            var spanContent = document.createElement('span');\n            spanContent.className = 'errorValue';\n            spanContent.style.paddingLeft = '16px';\n            spanContent.innerHTML = content;\n            dragelem.querySelector('.e-rowcell').appendChild(ele);\n            dragelem.querySelector('.e-rowcell').appendChild(spanContent);\n        }\n    };\n    RowDD.prototype.removeErrorElem = function () {\n        var errorelem = document.querySelector('.e-errorelem');\n        if (errorelem) {\n            errorelem.remove();\n        }\n    };\n    RowDD.prototype.rowDrag = function (args) {\n        var cloneElement = this.parent.element.querySelector('.e-cloneproperties');\n        cloneElement.style.display = 'none';\n        var ganttDragElement = cloneElement.cloneNode(true);\n        ganttDragElement.classList.add('e-ganttdrag');\n        ganttDragElement.style.display = '';\n        if (this.parent.element.querySelectorAll('.e-cloneproperties').length <= 1) {\n            this.parent.element.appendChild(ganttDragElement);\n        }\n        else {\n            if (document.getElementsByClassName('e-cloneproperties')[0].querySelectorAll('.e-errorelem').length) {\n                this.addErrorElem();\n            }\n            else {\n                this.removeErrorElem();\n            }\n        }\n        if (this.parent.gridLines === 'Both') {\n            addClass(this.parent.element.querySelectorAll('.e-ganttdrag .e-rowcell'), ['e-bothganttlines']);\n        }\n        var dragElement = this.parent.element.querySelector('.e-ganttdrag');\n        var ganttTop = this.parent.element.getClientRects()[0].top;\n        var ganttLeft = this.parent.element.getClientRects()[0].left;\n        var left = getValue('event', args.originalEvent).clientX - ganttLeft;\n        var top = getValue('event', args.originalEvent).clientY - ganttTop;\n        dragElement.style.left = left + 20 + 'px';\n        dragElement.style.top = top + 20 + 'px';\n        this.parent.trigger('rowDrag', args);\n    };\n    RowDD.prototype.rowDragStartHelper = function (args) {\n        this.parent.trigger('rowDragStartHelper', args);\n        if (this.parent.readOnly || this.parent.filterSettings.columns.length > 0) {\n            args.cancel = true;\n        }\n        if (this.parent.viewType === 'ResourceView' && getValue('level', args.data[0]) === 0) {\n            args.cancel = true;\n        }\n    };\n    RowDD.prototype.rowDrop = function (args) {\n        var ganttDragelem = document.querySelector('.e-ganttdrag');\n        if (ganttDragelem) {\n            ganttDragelem.remove();\n        }\n        var gridRow = closest(args.target, '.e-row');\n        var dropIndex = gridRow ? parseInt(gridRow.getAttribute('aria-rowindex'), 10) : args.dropIndex;\n        args.dropIndex = dropIndex;\n        args.dropRecord = this.parent.updatedRecords[args.dropIndex];\n        this.parent.trigger('rowDrop', args);\n        if (this.parent.viewType === 'ResourceView') {\n            if (args.dropPosition === 'middleSegment') {\n                if (args.dropRecord.level === 1 || args.dropRecord.uniqueID === getValue('parentItem', args.data[0]).uniqueID) {\n                    args.cancel = true; // preventing to drop the record as child to any child records\n                }\n            }\n            if (args.dropPosition !== 'middleSegment') {\n                if (args.dropRecord.level === 0 || getValue('parentItem', args.data[0]).uniqueID === args.dropRecord.parentItem.uniqueID) {\n                    args.cancel = true;\n                }\n            }\n        }\n        if (!args.cancel) {\n            args.cancel = true;\n            args.requestType = 'beforeDrop';\n            this.parent.trigger('actionBegin', args);\n            this.dropRows(args, true); // method to update the data collections based on drop action\n        }\n    };\n    RowDD.prototype.dropRows = function (args, isByMethod) {\n        if (!this.parent.readOnly) {\n            this.dropPosition = args.dropPosition;\n            if (args.dropPosition !== 'Invalid' && this.parent.editModule) {\n                var gObj = this.parent;\n                var draggedRecord = void 0;\n                this.droppedRecord = gObj.updatedRecords[args.dropIndex];\n                var dragRecords = [];\n                var droppedRecord = this.droppedRecord;\n                if (!args.data[0]) {\n                    dragRecords.push(args.data);\n                }\n                else {\n                    dragRecords = args.data;\n                }\n                var count = 0;\n                var dragLength = dragRecords.length;\n                var _loop_1 = function (i) {\n                    this_1.parent.isOnEdit = true;\n                    draggedRecord = dragRecords[i];\n                    this_1.draggedRecord = draggedRecord;\n                    if (this_1.dropPosition !== 'Invalid') {\n                        if (this_1.parent.viewType === 'ResourceView') {\n                            this_1.checkisSharedTask();\n                            this_1.previousParent = this_1.draggedRecord.parentItem.uniqueID;\n                        }\n                        if (this_1.isSharedTask) {\n                            return { value: void 0 };\n                        }\n                        if (isByMethod) {\n                            this_1.deleteDragRow();\n                        }\n                        var recordIndex1 = this_1.treeGridData.indexOf(droppedRecord);\n                        if (this_1.dropPosition === 'topSegment') {\n                            this_1.dropAtTop(recordIndex1);\n                        }\n                        if (this_1.dropPosition === 'bottomSegment') {\n                            if (!this_1.isSharedTask) {\n                                if (!droppedRecord.hasChildRecords) {\n                                    if (this_1.parent.taskFields.parentID && this_1.ganttData.length > 0) {\n                                        this_1.ganttData.splice(recordIndex1 + 1, 0, this_1.draggedRecord.taskData);\n                                    }\n                                    this_1.treeGridData.splice(recordIndex1 + 1, 0, this_1.draggedRecord);\n                                    this_1.parent.ids.splice(recordIndex1 + 1, 0, this_1.draggedRecord.ganttProperties.rowUniqueID.toString());\n                                    if (this_1.parent.viewType === 'ResourceView') {\n                                        var taskId = this_1.draggedRecord.level === 0 ? 'R' + this_1.draggedRecord.ganttProperties.taskId : 'T' + this_1.draggedRecord.ganttProperties.taskId;\n                                        this_1.parent.getTaskIds().splice(recordIndex1 + 1, 0, taskId);\n                                    }\n                                }\n                                else {\n                                    count = this_1.parent.editModule.getChildCount(droppedRecord, 0);\n                                    if (this_1.parent.taskFields.parentID && this_1.ganttData.length > 0) {\n                                        this_1.ganttData.splice(recordIndex1 + count + 1, 0, this_1.draggedRecord.taskData);\n                                    }\n                                    this_1.treeGridData.splice(recordIndex1 + count + 1, 0, this_1.draggedRecord);\n                                    /* eslint-disable-next-line */\n                                    this_1.parent.ids.splice(recordIndex1 + count + 1, 0, this_1.draggedRecord.ganttProperties.rowUniqueID.toString());\n                                    if (this_1.parent.viewType === 'ResourceView') {\n                                        var spliceId = this_1.draggedRecord.level === 0 ? 'R' + this_1.draggedRecord.ganttProperties.taskId : 'T' + this_1.draggedRecord.ganttProperties.taskId;\n                                        this_1.parent.getTaskIds().splice(recordIndex1 + count + 1, 0, spliceId);\n                                    }\n                                }\n                                this_1.parent.setRecordValue('parentItem', this_1.treeGridData[recordIndex1].parentItem, draggedRecord);\n                                this_1.parent.setRecordValue('parentUniqueID', this_1.treeGridData[recordIndex1].parentUniqueID, draggedRecord);\n                                this_1.parent.setRecordValue('level', this_1.treeGridData[recordIndex1].level, draggedRecord);\n                                if (draggedRecord.hasChildRecords) {\n                                    var level = 1;\n                                    this_1.updateChildRecordLevel(draggedRecord, level);\n                                    this_1.updateChildRecord(draggedRecord, recordIndex1 + count + 1);\n                                }\n                                if (droppedRecord.parentItem) {\n                                    var rec = this_1.parent.getParentTask(droppedRecord.parentItem).childRecords;\n                                    var childRecords = rec;\n                                    var droppedRecordIndex = childRecords.indexOf(droppedRecord) + 1;\n                                    childRecords.splice(droppedRecordIndex, 0, draggedRecord);\n                                }\n                            }\n                        }\n                        if (this_1.dropPosition === 'middleSegment') {\n                            this_1.dropMiddle(recordIndex1);\n                            if (droppedRecord.childRecords.length > 0) {\n                                delete droppedRecord.ganttProperties.segments;\n                                delete droppedRecord.taskData[this_1.parent.taskFields.segments];\n                            }\n                        }\n                        // eslint-disable-next-line\n                        if (!isNullOrUndefined(draggedRecord.parentItem && this_1.updateParentRecords.indexOf(draggedRecord.parentItem) !== -1)) {\n                            this_1.updateParentRecords.push(draggedRecord.parentItem);\n                        }\n                    }\n                    if (!this_1.parent.enableVirtualization) {\n                        var data_1 = gObj.flatData;\n                        var startIndex = void 0;\n                        var endIndex = void 0;\n                        if (draggedRecord.index < droppedRecord.index) {\n                            startIndex = draggedRecord.index;\n                            endIndex = droppedRecord.index;\n                        }\n                        else {\n                            startIndex = droppedRecord.index;\n                            endIndex = draggedRecord.index;\n                        }\n                        var _loop_2 = function (i_1) {\n                            if (!isNullOrUndefined(data_1[i_1])) {\n                                data_1[i_1].index = i_1;\n                                if (!isNullOrUndefined(data_1[i_1].parentItem)) {\n                                    var updatedParent = data_1.filter(function (e) {\n                                        return e.uniqueID === data_1[i_1].parentUniqueID;\n                                    })[0];\n                                    data_1[i_1].parentItem.index = updatedParent.index;\n                                }\n                            }\n                        };\n                        for (var i_1 = startIndex; i_1 <= endIndex; i_1++) {\n                            _loop_2(i_1);\n                        }\n                    }\n                    gObj.rowDragAndDropModule.refreshDataSource();\n                };\n                var this_1 = this;\n                for (var i = 0; i < dragLength; i++) {\n                    var state_1 = _loop_1(i);\n                    if (typeof state_1 === \"object\")\n                        return state_1.value;\n                }\n                if (this.dropPosition === 'middleSegment') {\n                    if (droppedRecord.ganttProperties.predecessor) {\n                        this.parent.editModule.removePredecessorOnDelete(droppedRecord);\n                        droppedRecord.ganttProperties.predecessor = null;\n                        droppedRecord.ganttProperties.predecessorsName = null;\n                        droppedRecord[this.parent.taskFields.dependency] = null;\n                        droppedRecord.taskData[this.parent.taskFields.dependency] = null;\n                    }\n                    if (droppedRecord.ganttProperties.isMilestone) {\n                        this.parent.setRecordValue('isMilestone', false, droppedRecord.ganttProperties, true);\n                        if (!isNullOrUndefined(droppedRecord.taskData[this.parent.taskFields.milestone])) {\n                            if (droppedRecord.taskData[this.parent.taskFields.milestone] === true) {\n                                droppedRecord.taskData[this.parent.taskFields.milestone] = false;\n                            }\n                        }\n                    }\n                }\n                if (this.parent.viewType === 'ResourceView' && !this.isSharedTask) {\n                    var parentUniqueID = void 0;\n                    if (this.dropPosition === 'middleSegment') {\n                        parentUniqueID = this.droppedRecord.uniqueID;\n                    }\n                    else {\n                        parentUniqueID = this.droppedRecord.parentItem.uniqueID;\n                    }\n                    var droppedParentItem = this.parent.getTaskByUniqueID(parentUniqueID);\n                    var editedObj = {};\n                    editedObj[this.parent.taskFields.resourceInfo] = [];\n                    editedObj[this.parent.taskFields.resourceInfo].push(droppedParentItem.ganttProperties.taskId);\n                    this.removeExistingResources();\n                    var tempResourceInfo = this.parent.dataOperation.setResourceInfo(editedObj);\n                    var currentTask = this.draggedRecord;\n                    if (isNullOrUndefined(currentTask.ganttProperties.resourceInfo)) {\n                        currentTask.ganttProperties.resourceInfo = [];\n                    }\n                    if (droppedParentItem.ganttProperties.taskName === 'Unassigned Task') {\n                        currentTask.ganttProperties.resourceInfo = [];\n                        currentTask.ganttProperties.sharedTaskUniqueIds = [currentTask.ganttProperties.rowUniqueID];\n                    }\n                    else {\n                        currentTask.ganttProperties.resourceInfo.push(tempResourceInfo[0]);\n                    }\n                    this.updateCurrentTask(currentTask);\n                    if (droppedParentItem.ganttProperties.taskName === 'Unassigned Task') {\n                        this.deleteSharedResourceTask();\n                    }\n                    else {\n                        this.updateSharedResourceTask();\n                    }\n                }\n                // method to update the edited parent records\n                for (var j = 0; j < this.updateParentRecords.length; j++) {\n                    this.parent.dataOperation.updateParentItems(this.updateParentRecords[j]);\n                }\n                this.updateParentRecords = [];\n                this.parent.isOnEdit = false;\n            }\n            if (!isNullOrUndefined(this.parent.editModule)) {\n                this.parent.editModule.refreshRecord(args, true);\n            }\n        }\n    };\n    RowDD.prototype.updateCurrentTask = function (currentTask) {\n        this.parent.dataOperation.updateMappingData(currentTask, 'resourceInfo');\n        this.parent.editModule.updateResourceRelatedFields(currentTask, 'resource');\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        this.parent.editModule.dialogModule.dialogEditValidationFlag = false;\n        this.parent.editModule.dialogModule.validateDuration(currentTask);\n        this.parent.dataOperation.updateWidthLeft(currentTask);\n        this.parent.dataOperation.updateTaskData(currentTask);\n    };\n    RowDD.prototype.deleteSharedResourceTask = function () {\n        for (var i = 0; i < this.parent.getTaskIds().length; i++) {\n            if (this.parent.getTaskIds()[i] === 'T' + this.draggedRecord.ganttProperties.taskId) {\n                if (this.parent.getTaskByUniqueID(this.parent.currentViewData[i].parentItem.uniqueID).ganttProperties.taskName !== 'Unassigned Task') {\n                    this.removeRecords(this.parent.currentViewData[i]);\n                }\n                /* eslint-disable-next-line */\n                if (!isNullOrUndefined(this.parent.currentViewData[i].parentItem && this.updateParentRecords.indexOf(this.parent.currentViewData[i].parentItem) !== -1)) {\n                    this.updateParentRecords.push(this.parent.currentViewData[i].parentItem);\n                }\n            }\n        }\n    };\n    RowDD.prototype.removeExistingResources = function () {\n        var preParentRecord = this.parent.getTaskByUniqueID(this.previousParent);\n        if (this.draggedRecord.ganttProperties.resourceInfo) {\n            for (var count = 0; count < this.draggedRecord.ganttProperties.resourceInfo.length; count++) {\n                /* eslint-disable-next-line */\n                if (this.draggedRecord.ganttProperties.resourceInfo[count][this.parent.resourceFields.id] === preParentRecord.ganttProperties.taskId) {\n                    this.draggedRecord.ganttProperties.resourceInfo.splice(count, 1);\n                    break;\n                }\n            }\n        }\n    };\n    /*update the record for the same task which are shared with other tasks*/\n    RowDD.prototype.updateSharedResourceTask = function () {\n        for (var i = 0; i < this.parent.getTaskIds().length; i++) {\n            if (this.parent.getTaskIds()[i] === 'T' + this.draggedRecord.ganttProperties.taskId) {\n                this.parent.editModule.updateGanttProperties(this.draggedRecord, this.parent.flatData[i]);\n                this.parent.dataOperation.updateTaskData(this.parent.flatData[i]);\n                /* eslint-disable-next-line */\n                if (!isNullOrUndefined(this.parent.flatData[i].parentItem && this.updateParentRecords.indexOf(this.parent.currentViewData[i].parentItem) !== -1)) {\n                    this.updateParentRecords.push(this.parent.flatData[i].parentItem);\n                }\n            }\n        }\n    };\n    RowDD.prototype._getExistingTaskWithID = function (record) {\n        var existingTasks = [];\n        for (var i = 0; i < this.parent.getTaskIds().length; i++) {\n            if (this.parent.getTaskIds()[i] === 'T' + record.ganttProperties.taskId) {\n                existingTasks.push(this.parent.flatData[i]);\n            }\n        }\n        return existingTasks;\n    };\n    /*Method to remove resource from resource Info collection and update reosurce related fields*/\n    RowDD.prototype.removeResourceInfo = function (record) {\n        var droppedParentItem = this.parent.getTaskByUniqueID(this.draggedRecord.parentItem.uniqueID);\n        if (record.ganttProperties.resourceInfo && record.ganttProperties.resourceInfo.length > 1) {\n            var sameIdTasks = this._getExistingTaskWithID(record);\n            var currentTask = void 0;\n            if (sameIdTasks == null) {\n                return;\n            }\n            for (var i = 0; i < sameIdTasks.length; i++) {\n                currentTask = sameIdTasks[i];\n                var resources = currentTask.ganttProperties.resourceInfo;\n                for (var count = 0; count < resources.length; count++) {\n                    if (resources[count][this.parent.resourceFields.id] === droppedParentItem.ganttProperties.taskId) {\n                        resources.splice(count, 1);\n                        this.parent.setRecordValue('resourceInfo', resources, currentTask.ganttProperties, true);\n                        this.updateCurrentTask(currentTask);\n                        if (!isNullOrUndefined(currentTask.parentItem && this.updateParentRecords.indexOf(currentTask.parentItem) !== -1)) {\n                            this.updateParentRecords.push(currentTask.parentItem);\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    RowDD.prototype.refreshDataSource = function () {\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var proxy = this.parent;\n        var tempDataSource;\n        var idx;\n        if (this.parent.dataSource instanceof DataManager) {\n            tempDataSource = getValue('dataOperation.dataArray', this.parent);\n        }\n        else {\n            tempDataSource = proxy.dataSource;\n        }\n        if (tempDataSource.length > 0 && (!isNullOrUndefined(droppedRecord) && !droppedRecord.parentItem)) {\n            for (var i = 0; i < Object.keys(tempDataSource).length; i++) {\n                if (tempDataSource[i][this.parent.taskFields.child] === droppedRecord.taskData[this.parent.taskFields.child]) {\n                    idx = i;\n                }\n            }\n            if (this.dropPosition === 'topSegment') {\n                if (!this.parent.taskFields.parentID) {\n                    tempDataSource.splice(idx, 0, draggedRecord.taskData);\n                }\n            }\n            else if (this.dropPosition === 'bottomSegment') {\n                if (!this.parent.taskFields.parentID) {\n                    tempDataSource.splice(idx + 1, 0, draggedRecord.taskData);\n                }\n            }\n        }\n        else if (!this.parent.taskFields.parentID && (!isNullOrUndefined(droppedRecord) && droppedRecord.parentItem)) {\n            if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                var rowPosition = this.dropPosition === 'topSegment' ? 'Above' : 'Below';\n                this.parent.editModule.addRowSelectedItem = droppedRecord;\n                this.parent.editModule.updateRealDataSource(draggedRecord, rowPosition);\n                delete this.parent.editModule.addRowSelectedItem;\n            }\n        }\n        if (this.parent.taskFields.parentID) {\n            if (draggedRecord.parentItem) {\n                var droppedId = this.dropPosition === 'middleSegment' ? this.parent.taskFields.id :\n                    this.parent.taskFields.parentID;\n                draggedRecord[this.parent.taskFields.parentID] = droppedRecord[droppedId];\n                draggedRecord.ganttProperties.parentId = droppedRecord[droppedId];\n                if ((this.parent.viewType === 'ResourceView' && !(this.dropPosition === 'middleSegment')) ||\n                    this.parent.viewType === 'ProjectView') {\n                    draggedRecord.taskData[this.parent.taskFields.parentID] = droppedRecord.taskData[droppedId];\n                }\n            }\n            else {\n                draggedRecord[this.parent.taskFields.parentID] = null;\n                draggedRecord.taskData[this.parent.taskFields.parentID] = null;\n                draggedRecord.ganttProperties.parentId = null;\n            }\n        }\n    };\n    RowDD.prototype.dropMiddle = function (recordIndex1) {\n        var gObj = this.parent;\n        var childRecords = this.parent.editModule.getChildCount(this.droppedRecord, 0);\n        var childRecordsLength = (isNullOrUndefined(childRecords) ||\n            childRecords === 0) ? recordIndex1 + 1 :\n            childRecords + recordIndex1 + 1;\n        if (this.dropPosition === 'middleSegment' && !this.isSharedTask) {\n            if (gObj.taskFields.parentID && this.ganttData.length > 0) {\n                this.ganttData.splice(childRecordsLength, 0, this.draggedRecord.taskData);\n            }\n            this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            this.parent.ids.splice(childRecordsLength, 0, this.draggedRecord.ganttProperties.rowUniqueID.toString());\n            if (this.parent.viewType === 'ResourceView') {\n                var recordId = this.draggedRecord.level === 0 ? 'R' + this.draggedRecord.ganttProperties.taskId : 'T' + this.draggedRecord.ganttProperties.taskId;\n                this.parent.getTaskIds().splice(childRecordsLength, 0, recordId);\n            }\n            if (this.draggedRecord.hasChildRecords) {\n                this.updateChildRecord(this.draggedRecord, childRecordsLength, this.droppedRecord.expanded);\n            }\n            this.recordLevel();\n            if (isNullOrUndefined(this.draggedRecord.parentItem &&\n                this.updateParentRecords.indexOf(this.draggedRecord.parentItem) !== -1)) {\n                this.updateParentRecords.push(this.draggedRecord.parentItem);\n            }\n        }\n    };\n    RowDD.prototype.recordLevel = function () {\n        var gObj = this.parent;\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var childItem = gObj.taskFields.child;\n        if (!droppedRecord.hasChildRecords) {\n            droppedRecord.hasChildRecords = true;\n            if (!droppedRecord.childRecords.length) {\n                droppedRecord.childRecords = [];\n                if (!gObj.taskFields.parentID && isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                    droppedRecord.taskData[childItem] = [];\n                }\n            }\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var parentItem = extend({}, droppedRecord);\n            delete parentItem.childRecords;\n            var createParentItem = {\n                uniqueID: parentItem.uniqueID,\n                expanded: parentItem.expanded,\n                level: parentItem.level,\n                index: parentItem.index,\n                taskId: parentItem.ganttProperties.rowUniqueID\n            };\n            this.parent.setRecordValue('parentItem', createParentItem, draggedRecord);\n            this.parent.setRecordValue('parentUniqueID', droppedRecord.uniqueID, draggedRecord);\n            droppedRecord.childRecords.splice(droppedRecord.childRecords.length, 0, draggedRecord);\n            if (!isNullOrUndefined(draggedRecord) && !gObj.taskFields.parentID && !isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                droppedRecord.taskData[gObj.taskFields.child].splice(droppedRecord.childRecords.length, 0, draggedRecord.taskData);\n            }\n            if (!draggedRecord.hasChildRecords) {\n                draggedRecord.level = droppedRecord.level + 1;\n            }\n            else {\n                var level = 1;\n                draggedRecord.level = droppedRecord.level + 1;\n                this.updateChildRecordLevel(draggedRecord, level);\n            }\n            droppedRecord.expanded = true;\n        }\n    };\n    RowDD.prototype.deleteDragRow = function () {\n        this.treeGridData = isCountRequired(this.parent) ? getValue('result', this.parent.treeGrid.dataSource) :\n            this.parent.treeGrid.dataSource;\n        if (this.parent.dataSource instanceof DataManager) {\n            this.ganttData = getValue('dataOperation.dataArray', this.parent);\n        }\n        else {\n            this.ganttData = isCountRequired(this.parent) ? getValue('result', this.parent.dataSource) :\n                this.parent.dataSource;\n        }\n        var deletedRow = this.parent.getTaskByUniqueID(this.draggedRecord.uniqueID);\n        this.removeRecords(deletedRow);\n    };\n    //method to check the dropped record has already present in the child collection\n    RowDD.prototype.checkisSharedTask = function () {\n        this.isSharedTask = false;\n        var sharedTask = null;\n        // eslint-disable-next-line\n        var parentUniqueID = this.droppedRecord.level === 0 ? this.droppedRecord.uniqueID : this.droppedRecord.parentItem.uniqueID;\n        var droppedParentItem = this.parent.getTaskByUniqueID(parentUniqueID);\n        var childTasks = droppedParentItem.childRecords;\n        for (var i = 0; i < childTasks.length; i++) {\n            if ('T' + this.draggedRecord.ganttProperties.taskId === 'T' + childTasks[i].ganttProperties.taskId) {\n                this.isSharedTask = true;\n                sharedTask = childTasks[i];\n            }\n        }\n        if (this.isSharedTask) {\n            this.removeResourceInfo(sharedTask);\n        }\n    };\n    RowDD.prototype.dropAtTop = function (recordIndex1) {\n        var gObj = this.parent;\n        if (!this.isSharedTask) {\n            if (gObj.taskFields.parentID && this.ganttData.length > 0) {\n                this.ganttData.splice(recordIndex1, 0, this.draggedRecord.taskData);\n            }\n            this.treeGridData.splice(recordIndex1, 0, this.draggedRecord);\n            this.parent.ids.splice(recordIndex1, 0, this.draggedRecord.ganttProperties.rowUniqueID.toString());\n            this.parent.setRecordValue('parentItem', this.droppedRecord.parentItem, this.draggedRecord);\n            this.parent.setRecordValue('parentUniqueID', this.droppedRecord.parentUniqueID, this.draggedRecord);\n            this.parent.setRecordValue('level', this.droppedRecord.level, this.draggedRecord);\n            if (this.parent.viewType === 'ResourceView') {\n                var id = this.draggedRecord.level === 0 ? 'R' + this.draggedRecord.ganttProperties.taskId : 'T' + this.draggedRecord.ganttProperties.taskId;\n                this.parent.getTaskIds().splice(recordIndex1, 0, id);\n            }\n            if (this.draggedRecord.hasChildRecords) {\n                var level = 1;\n                this.updateChildRecord(this.draggedRecord, recordIndex1);\n                this.updateChildRecordLevel(this.draggedRecord, level);\n            }\n            if (this.droppedRecord.parentItem) {\n                var rec = this.parent.getParentTask(this.droppedRecord.parentItem).childRecords;\n                var childRecords = rec;\n                var droppedRecordIndex = childRecords.indexOf(this.droppedRecord);\n                childRecords.splice(droppedRecordIndex, 0, this.draggedRecord);\n            }\n            /* eslint-disable-next-line */\n            if (!isNullOrUndefined(this.draggedRecord.parentItem && this.updateParentRecords.indexOf(this.draggedRecord.parentItem) !== -1)) {\n                this.updateParentRecords.push(this.draggedRecord.parentItem);\n            }\n        }\n    };\n    RowDD.prototype.updateChildRecordLevel = function (record, level) {\n        var length = 0;\n        var currentRecord;\n        level++;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            var parentData = void 0;\n            if (record.parentItem) {\n                var id = 'uniqueIDCollection';\n                parentData = this.parent.treeGrid[id][record.parentItem.uniqueID];\n            }\n            currentRecord.level = record.parentItem ? parentData.level + level : record.level + 1;\n            if (currentRecord.hasChildRecords) {\n                level--;\n                level = this.updateChildRecordLevel(currentRecord, level);\n            }\n        }\n        return level;\n    };\n    // eslint-disable-next-line\n    RowDD.prototype.updateChildRecord = function (record, count, expanded) {\n        var currentRecord;\n        var gObj = this.parent;\n        var length = 0;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            gObj.flatData.splice(count, 0, currentRecord);\n            this.parent.ids.splice(count, 0, currentRecord.ganttProperties.rowUniqueID.toString());\n            if (gObj.taskFields.parentID && gObj.dataSource.length > 0) {\n                this.ganttData.splice(count, 0, currentRecord.taskData);\n            }\n            if (currentRecord.hasChildRecords) {\n                count = this.updateChildRecord(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.removeRecords = function (record) {\n        var gObj = this.parent;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager) {\n            dataSource = getValue('dataOperation.dataArray', this.parent);\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        var deletedRow = record;\n        var flatParentData = this.parent.getParentTask(deletedRow.parentItem);\n        if (deletedRow) {\n            if (deletedRow.parentItem) {\n                var childRecords = flatParentData ? flatParentData.childRecords : [];\n                var childIndex = 0;\n                if (childRecords && childRecords.length > 0) {\n                    if (this.parent.viewType === 'ResourceView' && childRecords.length === 1) {\n                        //For updating the parent record which has zero parent reords.\n                        this.parent.isOnDelete = true;\n                        childRecords[0].isDelete = true;\n                        this.parent.dataOperation.updateParentItems(flatParentData);\n                        this.parent.isOnDelete = false;\n                        childRecords[0].isDelete = false;\n                    }\n                    childIndex = childRecords.indexOf(deletedRow);\n                    flatParentData.childRecords.splice(childIndex, 1);\n                    if (!this.parent.taskFields.parentID && flatParentData.taskData[this.parent.taskFields.child]) {\n                        flatParentData.taskData[this.parent.taskFields.child].splice(childIndex, 1);\n                    }\n                    // collection for updating parent record\n                    this.updateParentRecords.push(flatParentData);\n                }\n            }\n            //method to delete the record from datasource collection\n            if (!this.parent.taskFields.parentID) {\n                var deleteRecordIDs = [];\n                deleteRecordIDs.push(deletedRow.ganttProperties.taskId.toString());\n                if (this.parent.viewType === 'ProjectView' || (this.parent.viewType === 'ResourceView' && this.dropPosition !== 'middleSegment')) {\n                    this.parent.editModule.removeFromDataSource(deleteRecordIDs);\n                }\n            }\n            if (gObj.taskFields.parentID) {\n                if (deletedRow.hasChildRecords && deletedRow.childRecords.length > 0) {\n                    this.removeChildItem(deletedRow);\n                }\n                var idx = void 0;\n                var ganttData = dataSource.length > 0 && this.parent.viewType !== 'ResourceView' ?\n                    dataSource : this.parent.updatedRecords;\n                for (var i = 0; i < ganttData.length; i++) {\n                    if (this.parent.viewType === 'ResourceView') {\n                        if (ganttData[i].ganttProperties.rowUniqueID === deletedRow.ganttProperties.rowUniqueID) {\n                            idx = i;\n                        }\n                    }\n                    else {\n                        if (ganttData[i][this.parent.taskFields.id] === deletedRow.taskData[this.parent.taskFields.id]) {\n                            idx = i;\n                        }\n                    }\n                }\n                if (idx !== -1) {\n                    if (dataSource.length > 0) {\n                        dataSource.splice(idx, 1);\n                    }\n                    var tempIndex = this.treeGridData.indexOf(deletedRow);\n                    this.treeGridData.splice(tempIndex, 1);\n                    this.parent.ids.splice(tempIndex, 1);\n                    if (this.parent.treeGrid.parentData.indexOf(deletedRow) !== -1) {\n                        this.parent.treeGrid.parentData.splice(this.parent.treeGrid.parentData.indexOf(deletedRow), 1);\n                    }\n                    if (this.parent.viewType === 'ResourceView') {\n                        this.parent.getTaskIds().splice(idx, 1);\n                    }\n                }\n            }\n            var recordIndex = this.treeGridData.indexOf(deletedRow);\n            if (!gObj.taskFields.parentID) {\n                var deletedRecordCount = this.parent.editModule.getChildCount(deletedRow, 0);\n                this.treeGridData.splice(recordIndex, deletedRecordCount + 1);\n                this.parent.ids.splice(recordIndex, deletedRecordCount + 1);\n                var parentIndex = this.ganttData.indexOf(deletedRow.taskData);\n                if (parentIndex !== -1) {\n                    this.ganttData.splice(parentIndex, 1);\n                    this.parent.treeGrid.parentData.splice(parentIndex, 1);\n                }\n                if (this.parent.viewType === 'ResourceView') {\n                    this.parent.getTaskIds().splice(recordIndex, deletedRecordCount + 1);\n                }\n            }\n            if (deletedRow.parentItem && flatParentData && flatParentData.childRecords && !flatParentData.childRecords.length) {\n                flatParentData.expanded = false;\n                flatParentData.hasChildRecords = false;\n            }\n        }\n    };\n    RowDD.prototype.removeChildItem = function (record) {\n        var currentRecord;\n        var idx;\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            var ganttData = void 0;\n            if (this.parent.dataSource instanceof DataManager) {\n                ganttData = getValue('dataOperation.dataArray', this.parent);\n            }\n            else {\n                ganttData = this.parent.dataSource;\n            }\n            for (var j = 0; j < ganttData.length; j++) {\n                if (ganttData[j][this.parent.taskFields.id] === currentRecord.taskData[this.parent.taskFields.id]) {\n                    idx = j;\n                }\n            }\n            if (idx !== -1) {\n                if (ganttData.length > 0) {\n                    ganttData.splice(idx, 1);\n                }\n                var tempIndex = this.treeGridData.indexOf(currentRecord);\n                this.treeGridData.splice(tempIndex, 1);\n                this.parent.ids.splice(tempIndex, 1);\n                if (this.parent.viewType === 'ResourceView') {\n                    this.parent.getTaskIds().splice(idx, 1);\n                }\n            }\n            if (currentRecord.hasChildRecords) {\n                this.removeChildItem(currentRecord);\n            }\n        }\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     *\n     * @param {number[]} fromIndexes .\n     * @param {number} toIndex .\n     * @param {string} position .\n     * @returns {void} .\n     */\n    RowDD.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        if (!this.parent.readOnly) {\n            // eslint-disable-next-line\n            if (fromIndexes[0] !== toIndex && position === 'above' || 'below' || 'child') {\n                if (position === 'above') {\n                    this.dropPosition = 'topSegment';\n                }\n                if (position === 'below') {\n                    this.dropPosition = 'bottomSegment';\n                }\n                if (position === 'child') {\n                    this.dropPosition = 'middleSegment';\n                }\n                var data = [];\n                for (var i = 0; i < fromIndexes.length; i++) {\n                    data[i] = this.parent.updatedRecords[fromIndexes[i]];\n                }\n                var isByMethod = true;\n                var args = {\n                    data: data,\n                    dropIndex: toIndex,\n                    dropPosition: this.dropPosition\n                };\n                this.dropRows(args, isByMethod);\n            }\n            else {\n                return;\n            }\n        }\n    };\n    return RowDD;\n}());\nexport { RowDD };\n"]},"metadata":{},"sourceType":"module"}