{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Component, createElement, Complex, addClass, removeClass, Event, formatUnit, Browser } from '@syncfusion/ej2-base';\nimport { Internationalization, extend, getValue, isObjectArray, isObject, setValue, isUndefined } from '@syncfusion/ej2-base';\nimport { Property, NotifyPropertyChanges, L10n, EventHandler } from '@syncfusion/ej2-base';\nimport { isNullOrUndefined, KeyboardEvents, Collection, append, remove } from '@syncfusion/ej2-base';\nimport { createSpinner, showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { TaskProcessor } from './task-processor';\nimport { GanttChart } from './gantt-chart';\nimport { Timeline } from '../renderer/timeline';\nimport { GanttTreeGrid } from './tree-grid';\nimport { SortSettings } from '../models/models';\nimport { TaskFields, TimelineSettings, Holiday, EventMarker, DayWorkingTime, EditSettings, SelectionSettings } from '../models/models';\nimport { FilterSettings, SplitterSettings, TooltipSettings, LabelSettings } from '../models/models';\nimport { SearchSettings, ResourceFields } from '../models/models';\nimport { DateProcessor } from './date-processor';\nimport { ChartRows } from '../renderer/chart-rows';\nimport { Dependency } from '../actions/dependency';\nimport * as cls from './css-constants';\nimport { getActualProperties } from '@syncfusion/ej2-grids';\nimport { ConnectorLine } from '../renderer/connector-line';\nimport { Splitter } from './splitter';\nimport { Tooltip } from '../renderer/tooltip';\nimport { FocusModule } from '../actions/keyboard';\nimport { isCountRequired } from './utils';\n/**\n *\n * Represents the Gantt chart component.\n * ```html\n * <div id='gantt'></div>\n * <script>\n *  var ganttObject = new Gantt({\n *      taskFields: { id: 'taskId', name: 'taskName', startDate: 'startDate', duration: 'duration' }\n *  });\n *  ganttObject.appendTo('#gantt');\n * </script>\n * ```\n */\n\nvar Gantt =\n/** @class */\nfunction (_super) {\n  __extends(Gantt, _super);\n\n  function Gantt(options, element) {\n    var _this = _super.call(this, options, element) || this;\n    /** @hidden */\n\n\n    _this.isCancelled = false;\n    /** @hidden */\n\n    _this.previousRecords = {};\n    /** @hidden */\n\n    _this.editedRecords = [];\n    /** @hidden */\n\n    _this.modifiedRecords = [];\n    /** @hidden */\n\n    _this.isOnEdit = false;\n    /** @hidden */\n\n    _this.isOnDelete = false;\n    /** @hidden */\n\n    _this.isExpandCollapseLevelMethod = false;\n    /** @hidden */\n\n    _this.isConnectorLineUpdate = false;\n    /** @hidden */\n\n    _this.staticSelectedRowIndex = -1;\n    _this.needsID = true;\n    /** @hidden */\n\n    _this.showActiveElement = true;\n    /** @hidden */\n\n    _this.addDeleteRecord = false;\n    /** @hidden */\n\n    _this.enableHeaderFocus = true;\n    /** @hidden */\n\n    _this.enableValidation = true;\n    /**\n     * @private\n     */\n\n    _this.isTreeGridRendered = false;\n    /**\n     * @private\n     */\n\n    _this.isFromOnPropertyChange = false;\n    /**\n     * @private\n     */\n\n    _this.isGanttChartRendered = false;\n    /**\n     * @private\n     */\n\n    _this.isEdit = false;\n    return _this;\n  }\n  /**\n   * To get the module name\n   *\n   * @returns {string} .\n   * @private\n   */\n\n\n  Gantt.prototype.getModuleName = function () {\n    return 'gantt';\n  };\n  /**\n   * For internal use only - Initialize the event handler\n   *\n   * @returns {void} .\n   * @private\n   */\n\n\n  Gantt.prototype.preRender = function () {\n    this.initProperties();\n  };\n\n  Gantt.prototype.initProperties = function () {\n    this.globalize = new Internationalization(this.locale);\n    this.isAdaptive = Browser.isDevice;\n    this.flatData = [];\n    this.currentViewData = [];\n    this.updatedRecords = [];\n    this.ids = [];\n    this.ganttColumns = [];\n    this.localeObj = new L10n(this.getModuleName(), this.getDefaultLocale(), this.locale);\n    this.dataOperation = new TaskProcessor(this);\n    this.nonWorkingHours = [];\n    this.nonWorkingTimeRanges = [];\n    this.workingTimeRanges = [];\n    this.defaultEndTime = null;\n    this.defaultStartTime = null;\n    this.durationUnitTexts = {\n      days: 'days',\n      hours: 'hours',\n      minutes: 'minutes',\n      day: 'day',\n      hour: 'hour',\n      minute: 'minute'\n    };\n    this.durationUnitEditText = {\n      minute: ['m', 'min', 'minute', 'minutes'],\n      hour: ['h', 'hr', 'hour', 'hours'],\n      day: ['d', 'dy', 'day', 'days']\n    };\n    this.perDayWidth = null;\n    this.isMileStoneEdited = false;\n    this.chartVerticalLineContainer = null;\n    this.updatedConnectorLineCollection = [];\n    this.connectorLineIds = [];\n    this.predecessorsCollection = [];\n    this.isInPredecessorValidation = this.enablePredecessorValidation;\n    this.isValidationEnabled = true;\n    this.isLoad = true;\n    this.editedTaskBarItem = null;\n    this.validationDialogElement = null;\n    this.currentEditedArgs = {};\n    this.dialogValidateMode = {\n      respectLink: false,\n      removeLink: false,\n      preserveLinkWithEditing: true\n    };\n    this.secondsPerDay = this.dataOperation.getSecondsPerDay();\n    this.nonWorkingDayIndex = [];\n    this.dataOperation.getNonWorkingDayIndex();\n    this.columnMapping = {};\n    this.controlId = this.element.id;\n    this.cloneProjectStartDate = null;\n    this.cloneProjectEndDate = null;\n    this.totalHolidayDates = this.dataOperation.getHolidayDates();\n    this.ganttChartModule = new GanttChart(this);\n    this.timelineModule = new Timeline(this);\n    this.chartRowsModule = new ChartRows(this);\n    this.treeGridModule = new GanttTreeGrid(this);\n    this.dateValidationModule = new DateProcessor(this);\n    this.predecessorModule = new Dependency(this);\n    this.connectorLineModule = new ConnectorLine(this);\n    this.splitterModule = new Splitter(this);\n    this.tooltipModule = new Tooltip(this);\n    this.keyConfig = {\n      home: 'home',\n      end: 'end',\n      downArrow: 'downarrow',\n      upArrow: 'uparrow',\n      collapseAll: 'ctrl+uparrow',\n      expandAll: 'ctrl+downarrow',\n      collapseRow: 'ctrl+shift+uparrow',\n      expandRow: 'ctrl+shift+downarrow',\n      saveRequest: '13',\n      cancelRequest: '27',\n      addRow: 'insert',\n      addRowDialog: 'ctrl+insert',\n      editRowDialog: 'ctrl+f2',\n      delete: 'delete',\n      tab: 'tab',\n      shiftTab: 'shift+tab',\n      focusTask: 'shift+f5',\n      indentLevel: 'shift+leftarrow',\n      outdentLevel: 'shift+rightarrow',\n      focusSearch: 'ctrl+shift+70',\n      contextMenu: 'shift+F10' //F Key\n\n    };\n    this.focusModule = new FocusModule(this);\n    this.zoomingLevels = this.getZoomingLevels();\n    this.resourceFieldsMapping();\n\n    if (isNullOrUndefined(this.resourceFields.unit)) {\n      //set resourceUnit as unit if not mapping\n      this.resourceFields.unit = 'unit';\n    }\n\n    if (!isNullOrUndefined(this.taskFields.work)) {\n      this.taskType = 'FixedWork';\n    }\n\n    this.taskIds = [];\n  };\n  /**\n   * @returns {string} .\n   * @private\n   */\n\n\n  Gantt.prototype.getDateFormat = function () {\n    if (!isNullOrUndefined(this.dateFormat)) {\n      return this.dateFormat;\n    } else {\n      var ganttDateFormat = this.globalize.getDatePattern({\n        skeleton: 'yMd'\n      });\n      return ganttDateFormat;\n    }\n  };\n  /**\n   * Method to map resource fields.\n   *\n   * @returns {void} .\n   */\n\n\n  Gantt.prototype.resourceFieldsMapping = function () {\n    var resourceSettings = this.resourceFields;\n    resourceSettings.id = !isNullOrUndefined(resourceSettings.id) ? resourceSettings.id : this.resourceIDMapping;\n    resourceSettings.name = !isNullOrUndefined(resourceSettings.name) ? resourceSettings.name : this.resourceNameMapping;\n  };\n  /**\n   * To validate height and width\n   *\n   * @param {string | number} value .\n   * @returns {string} .\n   */\n\n\n  Gantt.prototype.validateDimentionValue = function (value) {\n    if (!isNullOrUndefined(value)) {\n      if (typeof value === 'string' && value !== 'auto' && value.indexOf('%') === -1) {\n        return value.indexOf('px') === -1 ? value + 'px' : value;\n      } else if (typeof value === 'number') {\n        return value + 'px';\n      } else {\n        return value.toString();\n      }\n    } else {\n      return null;\n    }\n  };\n  /**\n   * To calculate dimensions of Gantt control\n   *\n   * @returns {void} .\n   */\n\n\n  Gantt.prototype.calculateDimensions = function () {\n    var settingsHeight;\n\n    if (typeof this.height !== 'number' && this.height.indexOf('%') !== -1 && this.element.parentElement && !this.element.parentElement.style.height) {\n      var ganttHeight = Number(this.height.split(\"%\")[0]);\n      ganttHeight = ganttHeight * window.innerHeight / 100;\n\n      if (this.height === '100%') {\n        ganttHeight = ganttHeight - 16;\n      }\n\n      settingsHeight = this.validateDimentionValue(ganttHeight);\n    } else {\n      settingsHeight = this.validateDimentionValue(this.height);\n    }\n\n    var settingsWidth = this.validateDimentionValue(this.width);\n\n    if (!isNullOrUndefined(this.width) && typeof this.width === 'string' && this.width.indexOf('%') !== -1) {\n      settingsWidth = this.width;\n    }\n\n    var elementStyleHeight = this.element.style.height;\n    var elementStyleWidth = this.element.style.width;\n\n    if (settingsWidth) {\n      this.element.style.width = settingsWidth;\n    }\n\n    if (settingsHeight) {\n      this.element.style.height = settingsHeight;\n    }\n\n    if (!settingsHeight && !elementStyleHeight) {\n      this.element.style.height = 'auto'; // old 450px\n    }\n\n    if (!settingsWidth && !elementStyleWidth) {\n      this.element.style.width = 'auto';\n    }\n\n    this.ganttHeight = this.element.offsetHeight;\n    this.ganttWidth = this.element.offsetWidth;\n  };\n  /**\n   * @returns {void} .\n   * @private\n   */\n\n\n  Gantt.prototype.render = function () {\n    if (this.isReact) {\n      this.treeGrid.isReact = true;\n      this.treeGrid.grid.isReact = true;\n    }\n\n    createSpinner({\n      target: this.element\n    }, this.createElement);\n    this.trigger('load', {});\n    this.element.classList.add(cls.root);\n\n    if (this.isAdaptive) {\n      this.element.classList.add(cls.adaptive);\n    } else {\n      this.element.classList.remove(cls.adaptive);\n    }\n\n    this.calculateDimensions();\n\n    if (!isNullOrUndefined(this.toolbarModule)) {\n      this.renderToolbar();\n    }\n\n    this.splitterModule.renderSplitter();\n    this.notify('renderPanels', null);\n    this.showSpinner();\n    this.dataOperation.checkDataBinding();\n  };\n  /**\n   * Method used to show spinner.\n   *\n   * @returns {void} .\n   */\n\n\n  Gantt.prototype.showSpinner = function () {\n    showSpinner(this.element);\n  };\n  /**\n   * Method used to hide spinner.\n   *\n   * @returns {void} .\n   */\n\n\n  Gantt.prototype.hideSpinner = function () {\n    hideSpinner(this.element);\n  };\n  /**\n   * @returns {void} .\n   * @private\n   */\n\n\n  Gantt.prototype.processTimeline = function () {\n    this.timelineModule.processTimelineUnit();\n    this.timelineModule.calculateZoomingLevelsPerDayWidth(); // To calculate the perDaywidth\n  };\n  /**\n   * @param {boolean} isChange .\n   * @returns {void} .\n   * @private\n   */\n\n\n  Gantt.prototype.renderGantt = function (isChange) {\n    // predecessor calculation\n    if (this.predecessorModule && this.taskFields.dependency) {\n      this.predecessorModule.updatePredecessors();\n\n      if (this.isInPredecessorValidation && this.enableValidation) {\n        this.predecessorModule.updatedRecordsDateByPredecessor();\n      }\n    }\n\n    if (this.enableValidation) {\n      this.dataOperation.calculateProjectDates();\n      this.timelineModule.validateTimelineProp();\n    }\n\n    if (isChange) {\n      this.isFromOnPropertyChange = isChange;\n\n      if (this.enableValidation) {\n        this.dataOperation.updateGanttData();\n      }\n\n      if (this.dataSource instanceof Object && isCountRequired(this)) {\n        var count = getValue('count', this.dataSource);\n        this.treeGrid.dataSource = {\n          result: this.flatData,\n          count: count\n        };\n      } else {\n        this.treeGrid.dataSource = this.flatData.length > 0 ? this.flatData : [];\n      }\n    } else {\n      if (this.enableValidation) {\n        this.dataOperation.updateGanttData();\n      }\n\n      this.treeGridPane.classList.remove('e-temp-content');\n      remove(this.treeGridPane.querySelector('.e-gantt-temp-header'));\n      this.notify('dataReady', {});\n\n      if (this.enableContextMenu) {\n        this.notify('initiate-contextMenu', {});\n      }\n\n      this.renderTreeGrid();\n      this.wireEvents();\n      this.notify('initPredessorDialog', {});\n    }\n\n    this.splitterModule.updateSplitterPosition();\n\n    if (this.gridLines === 'Vertical' || this.gridLines === 'Both') {\n      this.renderChartVerticalLines();\n    }\n  };\n\n  Gantt.prototype.wireEvents = function () {\n    if (this.allowKeyboard) {\n      this.keyboardModule = new KeyboardEvents(this.element, {\n        keyAction: this.keyActionHandler.bind(this),\n        keyConfigs: this.keyConfig,\n        eventName: 'keydown'\n      });\n    }\n    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n\n\n    EventHandler.add(window, 'resize', this.windowResize, this);\n  };\n  /**\n   * Method trigger while user perform window resize.\n   *\n   * @returns {void} .\n   * @private\n   */\n\n\n  Gantt.prototype.windowResize = function () {\n    if (!isNullOrUndefined(this.element)) {\n      var settingsHeight = void 0;\n\n      if (this.height.indexOf('%') !== -1) {\n        var ganttHeight = Number(this.height.split(\"%\")[0]);\n\n        if (this.element.parentElement && this.element.parentElement.style.height) {\n          var containerHeight = Number(this.element.parentElement.style.height.split(\"px\")[0]);\n          ganttHeight = ganttHeight * containerHeight / 100;\n        } else {\n          ganttHeight = Number(this.height.split(\"%\")[0]);\n          ganttHeight = ganttHeight * window.innerHeight / 100;\n        }\n\n        if (this.height === '100%') {\n          ganttHeight = ganttHeight - 16;\n        }\n\n        var toolbarHeight = 0;\n\n        if (!isNullOrUndefined(this.toolbarModule) && !isNullOrUndefined(this.toolbarModule.element)) {\n          toolbarHeight = this.toolbarModule.element.offsetHeight;\n        }\n\n        var contentHeight = ganttHeight - this.ganttChartModule.chartTimelineContainer.offsetHeight - toolbarHeight;\n        settingsHeight = this.validateDimentionValue(ganttHeight);\n        this.element.style.height = settingsHeight;\n        this.element.querySelectorAll('.e-content')[0]['style'].height = contentHeight + 'px';\n        this.element.querySelectorAll('.e-content')[2]['style'].height = contentHeight + 'px';\n      } else {\n        settingsHeight = this.validateDimentionValue(this.height);\n      }\n\n      this.updateContentHeight();\n      this.ganttChartModule.updateWidthAndHeight(); // Updating chart scroll conatiner height for row mismatch\n\n      this.treeGridModule.ensureScrollBar();\n\n      if (this.predecessorModule && this.taskFields.dependency) {\n        this.updateRowHeightInConnectorLine(this.updatedConnectorLineCollection);\n        this.connectorLineModule.renderConnectorLines(this.updatedConnectorLineCollection);\n      }\n    }\n  };\n\n  Gantt.prototype.keyActionHandler = function (e) {\n    this.focusModule.onKeyPress(e);\n  };\n  /**\n   * Method for updating row height value in connector line collections\n   *\n   * @param {IConnectorLineObject[]} collection .\n   * @returns {void} .\n   * @private\n   */\n\n\n  Gantt.prototype.updateRowHeightInConnectorLine = function (collection) {\n    if (collection && collection.length) {\n      var rowHeight = this.ganttChartModule.getChartRows()[0] && this.ganttChartModule.getChartRows()[0].getBoundingClientRect().height;\n\n      if (rowHeight && !isNaN(rowHeight)) {\n        for (var count = 0; count < collection.length; count++) {\n          collection[count].rowHeight = rowHeight;\n        }\n      }\n    }\n  };\n  /**\n   * @returns {void} .\n   * @private\n   */\n\n\n  Gantt.prototype.renderToolbar = function () {\n    if (!isNullOrUndefined(this.toolbarModule)) {\n      this.toolbarModule.renderToolbar();\n      this.toolbarModule.refreshToolbarItems();\n    }\n  };\n  /**\n   * @returns {void} .\n   * @private\n   */\n\n\n  Gantt.prototype.renderTreeGrid = function () {\n    this.treeGridModule.renderTreeGrid();\n  };\n\n  Gantt.prototype.updateCurrentViewData = function () {\n    this.currentViewData = this.treeGrid.getCurrentViewRecords().slice();\n  };\n  /**\n   * @param {IGanttData} records .\n   * @returns {IGanttData} .\n   * @private\n   */\n\n\n  Gantt.prototype.getRecordFromFlatdata = function (records) {\n    var updatedRecord = [];\n\n    for (var i = 0; i < records.length; i++) {\n      updatedRecord.push(this.getTaskByUniqueID(records[i].uniqueID));\n    }\n\n    return updatedRecord;\n  };\n  /**\n   * @param {object} args .\n   * @returns {void} .\n   * @private\n   */\n\n\n  Gantt.prototype.updateContentHeight = function (args) {\n    if (this.virtualScrollModule && this.enableVirtualization && !isNullOrUndefined(args)) {\n      var length_1 = getValue('result.length', args);\n      this.contentHeight = length_1 * this.rowHeight;\n    } else {\n      var expandedRecords = this.virtualScrollModule && this.enableVirtualization ? this.currentViewData : this.getExpandedRecords(this.currentViewData);\n      var height = void 0;\n      var chartRow = this.ganttChartModule.getChartRows()[0];\n\n      if (!isNullOrUndefined(chartRow) && chartRow.getBoundingClientRect().height > 0) {\n        height = chartRow.getBoundingClientRect().height;\n      } else {\n        height = this.rowHeight;\n      }\n\n      this.contentHeight = expandedRecords.length * height;\n    }\n  };\n  /**\n   * To get expand status.\n   *\n   * @param {IGanttData} data .\n   * @returns {boolean} .\n   * @private\n   */\n\n\n  Gantt.prototype.getExpandStatus = function (data) {\n    var parentRecord = this.getParentTask(data.parentItem);\n\n    if (!isNullOrUndefined(parentRecord)) {\n      if (parentRecord.expanded === false) {\n        return false;\n      } else if (parentRecord.parentItem) {\n        var parentData = this.getParentTask(parentRecord.parentItem);\n\n        if (parentData.expanded === false) {\n          return false;\n        } else {\n          return this.getExpandStatus(this.getParentTask(parentRecord.parentItem));\n        }\n      } else {\n        return true;\n      }\n    } else {\n      return true;\n    }\n  };\n  /**\n   * Get expanded records from given record collection.\n   *\n   * @param {IGanttData[]} records - Defines record collection.\n   * @returns {IGanttData[]} .\n    */\n\n\n  Gantt.prototype.getExpandedRecords = function (records) {\n    var _this = this;\n\n    if (isNullOrUndefined(records)) {\n      return [];\n    }\n\n    var expandedRecords = records.filter(function (record) {\n      return _this.getExpandStatus(record) === true;\n    });\n    return expandedRecords;\n  };\n  /**\n   * Getting the Zooming collections of the Gantt control\n   *\n   * @returns {ZoomTimelineSettings} .\n   * @private\n   */\n\n\n  Gantt.prototype.getZoomingLevels = function () {\n    var zoomingLevels = [{\n      topTier: {\n        unit: 'Year',\n        format: 'yyyy',\n        count: 50\n      },\n      bottomTier: {\n        unit: 'Year',\n        format: 'yyyy',\n        count: 10\n      },\n      timelineUnitSize: 99,\n      level: 0,\n      timelineViewMode: 'Year',\n      weekStartDay: 0,\n      updateTimescaleView: true,\n      weekendBackground: null,\n      showTooltip: true\n    }, {\n      topTier: {\n        unit: 'Year',\n        format: 'yyyy',\n        count: 20\n      },\n      bottomTier: {\n        unit: 'Year',\n        format: 'yyyy',\n        count: 5\n      },\n      timelineUnitSize: 99,\n      level: 1,\n      timelineViewMode: 'Year',\n      weekStartDay: 0,\n      updateTimescaleView: true,\n      weekendBackground: null,\n      showTooltip: true\n    }, {\n      topTier: {\n        unit: 'Year',\n        format: 'yyyy',\n        count: 5\n      },\n      bottomTier: {\n        unit: 'Year',\n        format: 'yyyy',\n        count: 1\n      },\n      timelineUnitSize: 99,\n      level: 2,\n      timelineViewMode: 'Year',\n      weekStartDay: 0,\n      updateTimescaleView: true,\n      weekendBackground: null,\n      showTooltip: true\n    }, {\n      topTier: {\n        unit: 'Year',\n        format: 'MMM, yy',\n        count: 1\n      },\n      bottomTier: {\n        unit: 'Month',\n        formatter: this.displayHalfValue,\n        count: 6\n      },\n      timelineUnitSize: 66,\n      level: 3,\n      timelineViewMode: 'Year',\n      weekStartDay: 0,\n      updateTimescaleView: true,\n      weekendBackground: null,\n      showTooltip: true\n    }, {\n      topTier: {\n        unit: 'Year',\n        format: 'MMM, yy',\n        count: 1\n      },\n      bottomTier: {\n        unit: 'Month',\n        formatter: this.displayHalfValue,\n        count: 6\n      },\n      timelineUnitSize: 99,\n      level: 4,\n      timelineViewMode: 'Year',\n      weekStartDay: 0,\n      updateTimescaleView: true,\n      weekendBackground: null,\n      showTooltip: true\n    }, {\n      topTier: {\n        unit: 'Year',\n        format: 'MMM, yy',\n        count: 1\n      },\n      bottomTier: {\n        unit: 'Month',\n        formatter: this.displayQuarterValue,\n        count: 3\n      },\n      timelineUnitSize: 66,\n      level: 5,\n      timelineViewMode: 'Year',\n      weekStartDay: 0,\n      updateTimescaleView: true,\n      weekendBackground: null,\n      showTooltip: true\n    }, {\n      topTier: {\n        unit: 'Year',\n        format: 'yyyy',\n        count: 1\n      },\n      bottomTier: {\n        unit: 'Month',\n        formatter: this.displayQuarterValue,\n        count: 3\n      },\n      timelineUnitSize: 99,\n      level: 6,\n      timelineViewMode: 'Year',\n      weekStartDay: 0,\n      updateTimescaleView: true,\n      weekendBackground: null,\n      showTooltip: true\n    }, {\n      topTier: {\n        unit: 'Year',\n        format: 'yyyy',\n        count: 1\n      },\n      bottomTier: {\n        unit: 'Month',\n        format: 'MMM yyyy',\n        count: 1\n      },\n      timelineUnitSize: 99,\n      level: 7,\n      timelineViewMode: 'Year',\n      weekStartDay: 0,\n      updateTimescaleView: true,\n      weekendBackground: null,\n      showTooltip: true\n    }, {\n      topTier: {\n        unit: 'Month',\n        format: 'MMM, yy',\n        count: 1\n      },\n      bottomTier: {\n        unit: 'Week',\n        format: 'dd',\n        count: 1\n      },\n      timelineUnitSize: 33,\n      level: 8,\n      timelineViewMode: 'Month',\n      weekStartDay: 0,\n      updateTimescaleView: true,\n      weekendBackground: null,\n      showTooltip: true\n    }, {\n      topTier: {\n        unit: 'Month',\n        format: 'MMM, yyyy',\n        count: 1\n      },\n      bottomTier: {\n        unit: 'Week',\n        format: 'dd MMM',\n        count: 1\n      },\n      timelineUnitSize: 66,\n      level: 9,\n      timelineViewMode: 'Month',\n      weekStartDay: 0,\n      updateTimescaleView: true,\n      weekendBackground: null,\n      showTooltip: true\n    }, {\n      topTier: {\n        unit: 'Month',\n        format: 'MMM, yyyy',\n        count: 1\n      },\n      bottomTier: {\n        unit: 'Week',\n        format: 'dd MMM',\n        count: 1\n      },\n      timelineUnitSize: 99,\n      level: 10,\n      timelineViewMode: 'Month',\n      weekStartDay: 0,\n      updateTimescaleView: true,\n      weekendBackground: null,\n      showTooltip: true\n    }, {\n      topTier: {\n        unit: 'Week',\n        format: 'MMM dd, yyyy',\n        count: 1\n      },\n      bottomTier: {\n        unit: 'Day',\n        format: 'd',\n        count: 1\n      },\n      timelineUnitSize: 33,\n      level: 11,\n      timelineViewMode: 'Week',\n      weekStartDay: 0,\n      updateTimescaleView: true,\n      weekendBackground: null,\n      showTooltip: true\n    }, {\n      topTier: {\n        unit: 'Week',\n        format: 'MMM dd, yyyy',\n        count: 1\n      },\n      bottomTier: {\n        unit: 'Day',\n        format: 'd',\n        count: 1\n      },\n      timelineUnitSize: 66,\n      level: 12,\n      timelineViewMode: 'Week',\n      weekStartDay: 0,\n      updateTimescaleView: true,\n      weekendBackground: null,\n      showTooltip: true\n    }, {\n      topTier: {\n        unit: 'Week',\n        format: 'MMM dd, yyyy',\n        count: 1\n      },\n      bottomTier: {\n        unit: 'Day',\n        format: 'd',\n        count: 1\n      },\n      timelineUnitSize: 99,\n      level: 13,\n      timelineViewMode: 'Week',\n      weekStartDay: 0,\n      updateTimescaleView: true,\n      weekendBackground: null,\n      showTooltip: true\n    }, {\n      topTier: {\n        unit: 'Day',\n        format: 'E dd yyyy',\n        count: 1\n      },\n      bottomTier: {\n        unit: 'Hour',\n        format: 'hh a',\n        count: 12\n      },\n      timelineUnitSize: 66,\n      level: 14,\n      timelineViewMode: 'Day',\n      weekStartDay: 0,\n      updateTimescaleView: true,\n      weekendBackground: null,\n      showTooltip: true\n    }, {\n      topTier: {\n        unit: 'Day',\n        format: 'E dd yyyy',\n        count: 1\n      },\n      bottomTier: {\n        unit: 'Hour',\n        format: 'hh a',\n        count: 12\n      },\n      timelineUnitSize: 99,\n      level: 15,\n      timelineViewMode: 'Day',\n      weekStartDay: 0,\n      updateTimescaleView: true,\n      weekendBackground: null,\n      showTooltip: true\n    }, {\n      topTier: {\n        unit: 'Day',\n        format: 'E dd yyyy',\n        count: 1\n      },\n      bottomTier: {\n        unit: 'Hour',\n        format: 'hh a',\n        count: 6\n      },\n      timelineUnitSize: 66,\n      level: 16,\n      timelineViewMode: 'Day',\n      weekStartDay: 0,\n      updateTimescaleView: true,\n      weekendBackground: null,\n      showTooltip: true\n    }, {\n      topTier: {\n        unit: 'Day',\n        format: 'E dd yyyy',\n        count: 1\n      },\n      bottomTier: {\n        unit: 'Hour',\n        format: 'hh a',\n        count: 6\n      },\n      timelineUnitSize: 99,\n      level: 17,\n      timelineViewMode: 'Day',\n      weekStartDay: 0,\n      updateTimescaleView: true,\n      weekendBackground: null,\n      showTooltip: true\n    }, {\n      topTier: {\n        unit: 'Day',\n        format: 'E dd yyyy',\n        count: 1\n      },\n      bottomTier: {\n        unit: 'Hour',\n        format: 'hh a',\n        count: 2\n      },\n      timelineUnitSize: 66,\n      level: 18,\n      timelineViewMode: 'Day',\n      weekStartDay: 0,\n      updateTimescaleView: true,\n      weekendBackground: null,\n      showTooltip: true\n    }, {\n      topTier: {\n        unit: 'Day',\n        format: 'E dd yyyy',\n        count: 1\n      },\n      bottomTier: {\n        unit: 'Hour',\n        format: 'hh a',\n        count: 2\n      },\n      timelineUnitSize: 99,\n      level: 19,\n      timelineViewMode: 'Day',\n      weekStartDay: 0,\n      updateTimescaleView: true,\n      weekendBackground: null,\n      showTooltip: true\n    }, {\n      topTier: {\n        unit: 'Day',\n        format: 'E dd yyyy',\n        count: 1\n      },\n      bottomTier: {\n        unit: 'Hour',\n        format: 'hh a',\n        count: 1\n      },\n      timelineUnitSize: 66,\n      level: 20,\n      timelineViewMode: 'Day',\n      weekStartDay: 0,\n      updateTimescaleView: true,\n      weekendBackground: null,\n      showTooltip: true\n    }, {\n      topTier: {\n        unit: 'Day',\n        format: 'E dd yyyy',\n        count: 1\n      },\n      bottomTier: {\n        unit: 'Hour',\n        format: 'hh a',\n        count: 1\n      },\n      timelineUnitSize: 99,\n      level: 21,\n      timelineViewMode: 'Day',\n      weekStartDay: 0,\n      updateTimescaleView: true,\n      weekendBackground: null,\n      showTooltip: true\n    }, {\n      topTier: {\n        unit: 'Hour',\n        format: 'ddd MMM, h a',\n        count: 1\n      },\n      bottomTier: {\n        unit: 'Minutes',\n        format: 'mm',\n        count: 30\n      },\n      timelineUnitSize: 66,\n      level: 22,\n      timelineViewMode: 'Hour',\n      weekStartDay: 0,\n      updateTimescaleView: true,\n      weekendBackground: null,\n      showTooltip: true\n    }, {\n      topTier: {\n        unit: 'Hour',\n        format: 'ddd MMM, h a',\n        count: 1\n      },\n      bottomTier: {\n        unit: 'Minutes',\n        format: 'mm',\n        count: 15\n      },\n      timelineUnitSize: 66,\n      level: 23,\n      timelineViewMode: 'Hour',\n      weekStartDay: 0,\n      updateTimescaleView: true,\n      weekendBackground: null,\n      showTooltip: true\n    }, {\n      topTier: {\n        unit: 'Hour',\n        format: 'ddd MMM, h a',\n        count: 1\n      },\n      bottomTier: {\n        unit: 'Minutes',\n        format: 'mm',\n        count: 1\n      },\n      timelineUnitSize: 66,\n      level: 24,\n      timelineViewMode: 'Hour',\n      weekStartDay: 0,\n      updateTimescaleView: true,\n      weekendBackground: null,\n      showTooltip: true\n    }];\n    return zoomingLevels;\n  };\n\n  Gantt.prototype.displayQuarterValue = function (date) {\n    var month = date.getMonth();\n\n    if (month >= 0 && month <= 2) {\n      return 'Q1';\n    } else if (month >= 3 && month <= 5) {\n      return 'Q2';\n    } else if (month >= 6 && month <= 8) {\n      return 'Q3';\n    } else {\n      return 'Q4';\n    }\n  };\n\n  Gantt.prototype.displayHalfValue = function (date) {\n    var month = date.getMonth();\n\n    if (month >= 0 && month <= 5) {\n      return 'H1';\n    } else {\n      return 'H2';\n    }\n  };\n  /**\n   *\n   * @param {Date} date .\n   * @param {string} format .\n   * @returns {string} .\n   */\n\n\n  Gantt.prototype.getFormatedDate = function (date, format) {\n    if (isNullOrUndefined(date)) {\n      return null;\n    }\n\n    if (isNullOrUndefined(format)) {\n      format = this.getDateFormat();\n    }\n\n    return this.globalize.formatDate(date, {\n      format: format\n    });\n  };\n  /**\n   * Get duration value as string combined with duration and unit values.\n   *\n   * @param {number} duration - Defines the duration.\n   * @param {string} durationUnit - Defines the duration unit.\n   * @returns {string} .\n   */\n\n\n  Gantt.prototype.getDurationString = function (duration, durationUnit) {\n    var value = this.dateValidationModule.getDurationString(duration, durationUnit);\n    return value;\n  };\n  /**\n   * Get work value as string combined with work and unit values.\n   *\n   * @param {number} work - Defines the work value.\n   * @param {string} workUnit - Defines the work unit.\n   * @returns {string} .\n   */\n\n\n  Gantt.prototype.getWorkString = function (work, workUnit) {\n    var value = this.dateValidationModule.getWorkString(work, workUnit);\n    return value;\n  };\n  /**\n   *\n   * @param {object} args .\n   * @returns {void} .\n   * @private\n   */\n\n\n  Gantt.prototype.treeDataBound = function (args) {\n    if (this.isLoad) {\n      this.updateCurrentViewData();\n\n      if (!this.enableVirtualization) {\n        this.updateContentHeight();\n      }\n\n      if (!this.isTreeGridRendered) {\n        this.isTreeGridRendered = true;\n        var toolbarHeight = 0;\n\n        if (!isNullOrUndefined(this.toolbarModule) && !isNullOrUndefined(this.toolbarModule.element)) {\n          toolbarHeight = this.toolbarModule.element.offsetHeight;\n        }\n\n        if (this.timelineModule.isSingleTier) {\n          addClass(this.treeGrid.element.querySelectorAll('.e-headercell'), cls.timelineSingleHeaderOuterDiv);\n          addClass(this.treeGrid.element.querySelectorAll('.e-columnheader'), cls.timelineSingleHeaderOuterDiv);\n        } else {\n          removeClass(this.treeGrid.element.querySelectorAll('.e-headercell'), cls.timelineSingleHeaderOuterDiv);\n          removeClass(this.treeGrid.element.querySelectorAll('.e-columnheader'), cls.timelineSingleHeaderOuterDiv);\n        }\n\n        this.treeGrid.height = this.ganttHeight - toolbarHeight - this.treeGrid.grid.getHeaderContent().offsetHeight;\n        this.notify('tree-grid-created', {});\n        this.createGanttPopUpElement();\n        this.hideSpinner();\n        setValue('isGanttCreated', true, args);\n        this.renderComplete();\n      }\n    } else {\n      this.getCurrentRecords(args);\n    }\n\n    this.notify('recordsUpdated', {});\n    this.isLoad = false;\n    this.trigger('dataBound', args);\n  };\n  /**\n   * @param {object} args .\n   * @returns {void} .\n   * @private\n   */\n  // eslint-disable-next-line\n\n\n  Gantt.prototype.getCurrentRecords = function (args) {\n    if (this.predecessorModule && this.taskFields.dependency) {\n      this.connectorLineModule.removePreviousConnectorLines(this.currentViewData);\n    }\n\n    this.updateCurrentViewData();\n\n    if (!this.enableVirtualization) {\n      this.updateContentHeight();\n    } // this.chartRowsModule.refreshGanttRows();\n\n\n    if (this.virtualScrollModule && this.enableVirtualization) {\n      this.ganttChartModule.virtualRender.adjustTable();\n      this.ganttChartModule.scrollObject.updateTopPosition();\n    }\n  };\n  /**\n   * Called internally, if any of the property value changed.\n   *\n   * @param {GanttModel} newProp .\n   * @param {GanttModel} oldProp .\n   * @returns {void} .\n   * @private\n   */\n  // eslint-disable-next-line\n\n\n  Gantt.prototype.onPropertyChanged = function (newProp, oldProp) {\n    var isRefresh = false; // eslint-disable-next-line\n\n    for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n      var prop = _a[_i];\n\n      switch (prop) {\n        case 'allowSelection':\n        case 'allowRowDragAndDrop':\n        case 'allowFiltering':\n        case 'showColumnMenu':\n        case 'allowResizing':\n        case 'allowReordering':\n        case 'enableImmutableMode':\n          this.treeGrid[prop] = this[prop];\n          this.treeGrid.dataBind();\n          break;\n\n        case 'workWeek':\n          this.dataOperation.getNonWorkingDayIndex();\n          this.dataOperation.reUpdateGanttData();\n          this.chartRowsModule.initiateTemplates();\n\n          if (this.taskFields.dependency) {\n            this.predecessorModule.updatedRecordsDateByPredecessor();\n          }\n\n          this.chartRowsModule.refreshGanttRows();\n          this.treeGrid.refreshColumns();\n          this.timelineModule.refreshTimeline();\n          break;\n\n        case 'toolbar':\n          this.notify('ui-toolbarupdate', {\n            module: 'toolbar',\n            properties: newProp\n          });\n          break;\n\n        case 'columnMenuItems':\n          this.treeGrid.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n          break;\n\n        case 'eventMarkers':\n        case 'highlightWeekends':\n          this.notify('ui-update', {\n            module: 'day-markers',\n            properties: newProp\n          });\n          break;\n\n        case 'sortSettings':\n          this.treeGrid.sortSettings = getActualProperties(this.sortSettings);\n          this.treeGrid.dataBind();\n          break;\n\n        case 'timelineSettings':\n          this.timelineModule.refreshTimeline();\n          break;\n\n        case 'rowHeight':\n        case 'taskbarHeight':\n          this.treeGrid.rowHeight = this.rowHeight;\n          this.treeGrid.dataBind();\n          this.chartRowsModule.initiateTemplates();\n          this.timelineModule.updateChartByNewTimeline();\n\n          if (this.taskFields.dependency) {\n            this.ganttChartModule.reRenderConnectorLines();\n          }\n\n          break;\n\n        case 'timezone':\n          this.dataOperation.checkDataBinding(true);\n          break;\n\n        case 'filterSettings':\n          this.treeGrid.filterSettings = getActualProperties(this.filterSettings);\n          this.treeGrid.dataBind();\n          break;\n\n        case 'gridLines':\n          this.treeGrid.gridLines = this.gridLines;\n          this.treeGrid.dataBind();\n          this.renderChartGridLines();\n          break;\n\n        case 'tooltipSettings':\n          if (this.tooltipModule.toolTipObj) {\n            this.tooltipModule.toolTipObj.destroy();\n          }\n\n          this.tooltipModule.createTooltip();\n          break;\n\n        case 'splitterSettings':\n          this.splitterModule.updateSplitterPosition();\n          break;\n\n        case 'selectionSettings':\n          this.treeGrid.selectionSettings = getActualProperties(this.selectionSettings);\n          this.treeGrid.grid.selectionSettings.enableToggle = this.selectionSettings.enableToggle;\n          this.treeGrid.dataBind();\n          break;\n\n        case 'searchSettings':\n          if (newProp.searchSettings.key !== (\"\" || undefined)) {\n            this.treeGrid.grid.searchSettings = getActualProperties(this.searchSettings);\n            this.treeGrid.grid.dataBind();\n          } else {\n            this.treeGrid.searchSettings = getActualProperties(this.searchSettings);\n            this.treeGrid.dataBind();\n          }\n\n          if (this.toolbarModule) {\n            this.toolbarModule.updateSearchTextBox();\n          }\n\n          break;\n\n        case 'labelSettings':\n        case 'renderBaseline':\n        case 'baselineColor':\n          this.chartRowsModule.initiateTemplates();\n          this.chartRowsModule.refreshGanttRows();\n          break;\n\n        case 'resourceIDMapping':\n        case 'resourceNameMapping':\n        case 'resources':\n          this.dataOperation.reUpdateResources();\n          this.treeGrid.refreshColumns();\n          this.chartRowsModule.initiateTemplates();\n          this.chartRowsModule.refreshGanttRows();\n          break;\n\n        case 'includeWeekend':\n        case 'dayWorkingTime':\n        case 'allowUnscheduledTasks':\n        case 'holidays':\n          if (prop === 'holidays') {\n            this.totalHolidayDates = this.dataOperation.getHolidayDates();\n            this.notify('ui-update', {\n              module: 'day-markers',\n              properties: newProp\n            });\n          }\n\n          this.dataOperation.reUpdateGanttData();\n          this.treeGrid.refreshColumns();\n          this.chartRowsModule.initiateTemplates();\n          this.chartRowsModule.refreshGanttRows();\n          break;\n\n        case 'addDialogFields':\n        case 'editDialogFields':\n          if (this.editModule && this.editModule.dialogModule) {\n            this.editModule.dialogModule.processDialogFields();\n          }\n\n          break;\n\n        case 'columns':\n          this.treeGridModule.treeGridColumns = [];\n          this.treeGridModule.validateGanttColumns();\n          this.treeGrid.columns = this.treeGridModule.treeGridColumns;\n          this.chartRowsModule.initiateTemplates();\n          this.timelineModule.updateChartByNewTimeline();\n          break;\n\n        case 'width':\n        case 'height':\n          this.reUpdateDimention();\n          break;\n\n        case 'editSettings':\n          this.treeGrid.editSettings.allowAdding = this.editSettings.allowAdding;\n          this.treeGrid.editSettings.allowDeleting = this.editSettings.allowDeleting;\n          this.treeGrid.editSettings.showDeleteConfirmDialog = this.editSettings.showDeleteConfirmDialog;\n          this.treeGrid.editSettings.allowEditing = this.editSettings.allowEditing;\n          this.treeGrid.editSettings.allowNextRowEdit = this.editSettings.allowNextRowEdit;\n\n          if (!isNullOrUndefined(this.editModule)) {\n            this.editModule.reUpdateEditModules();\n          }\n\n          if (!isNullOrUndefined(this.toolbarModule)) {\n            this.toolbarModule.refreshToolbarItems();\n          }\n\n          break;\n\n        case 'connectorLineBackground':\n        case 'connectorLineWidth':\n          if (this.taskFields.dependency) {\n            this.connectorLineModule.initPublicProp();\n            this.ganttChartModule.reRenderConnectorLines();\n          }\n\n          break;\n\n        case 'treeColumnIndex':\n          this.treeGrid.treeColumnIndex = this.treeColumnIndex;\n          break;\n\n        case 'projectStartDate':\n        case 'projectEndDate':\n          this.dataOperation.calculateProjectDates();\n          this.updateProjectDates(this.cloneProjectStartDate, this.cloneProjectEndDate, this.isTimelineRoundOff);\n          break;\n\n        case 'selectedRowIndex':\n          if (!isNullOrUndefined(this.selectionModule)) {\n            this.selectionModule.selectRowByIndex();\n          }\n\n          break;\n\n        case 'dataSource':\n          this.closeGanttActions();\n\n          if (this.dataSource instanceof Object && isCountRequired(this)) {\n            // In order to bind the observable data at load time, hasChildMapping is necessary to be mapped.\n            this.treeGrid.hasChildMapping = 'isParent';\n            var count = getValue('count', this.dataSource);\n            this.treeGrid.dataSource = {\n              result: this.flatData,\n              count: count\n            };\n          } else {\n            this.treeGrid.hasChildMapping = null;\n          }\n\n          this.dataOperation.checkDataBinding(true);\n          break;\n\n        case 'enableContextMenu':\n        case 'contextMenuItems':\n          if (this.enableContextMenu || prop === 'contextMenuItems') {\n            this.notify('reRender-contextMenu', {\n              module: 'contextMenu',\n              enable: this.contextMenuItems\n            });\n          } else {\n            this.treeGrid.contextMenuItems = [];\n          }\n\n          this.treeGrid.dataBind();\n          break;\n\n        case 'currencyCode':\n        case 'locale':\n        case 'enableRtl':\n        case 'readOnly':\n        case 'viewType':\n          isRefresh = true;\n          break;\n\n        case 'validateManualTasksOnLinking':\n          this.validateManualTasksOnLinking = newProp.validateManualTasksOnLinking;\n          break;\n\n        case 'showOverAllocation':\n          this.updateOverAllocationCotainer();\n          break;\n      }\n    }\n\n    if (isRefresh) {\n      this.refresh();\n    }\n  };\n\n  Gantt.prototype.updateOverAllocationCotainer = function () {\n    if (this.showOverAllocation && this.viewType === 'ResourceView') {\n      this.ganttChartModule.renderOverAllocationContainer();\n    } else {\n      var rangeContainer = this.element.querySelector('.' + cls.rangeContainer);\n\n      if (rangeContainer) {\n        rangeContainer.innerHTML = '';\n      }\n    }\n  };\n  /**\n   * Get the properties to be maintained in the persisted state.\n   *\n   * @returns {string} .\n   * @private\n   */\n\n\n  Gantt.prototype.getPersistData = function () {\n    var keyEntity = ['allowSelection'];\n    return this.addOnPersist(keyEntity);\n  };\n  /**\n   * @returns {void} .\n   * @private\n   */\n\n\n  Gantt.prototype.destroy = function () {\n    this.notify('destroy', {});\n\n    if (!isNullOrUndefined(this.validationDialogElement) && !this.validationDialogElement.isDestroyed) {\n      this.validationDialogElement.destroy();\n    }\n\n    var modules = ['ganttChartModule', 'timelineModule', 'chartRowsModule', 'treeGridModule', 'ganttDataUpdatesModule', 'dateValidationModule', 'tooltipModule'];\n\n    for (var i = 0; i < modules.length; i++) {\n      if (this[modules[i]]) {\n        this[modules[i]] = null;\n      }\n    }\n\n    if (this.keyboardModule) {\n      this.keyboardModule.destroy();\n    }\n\n    if (this.editModule && this.editModule.dialogModule) {\n      this.editModule.dialogModule.destroy();\n    }\n\n    _super.prototype.destroy.call(this);\n\n    this.chartVerticalLineContainer = null;\n    this.element.innerHTML = '';\n    removeClass([this.element], cls.root);\n    this.element.innerHTML = '';\n    this.isTreeGridRendered = false;\n    this.resetTemplates();\n    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n\n    EventHandler.remove(window, 'resize', this.windowResize);\n  };\n  /**\n   * Method to get taskbarHeight.\n   *\n   * @returns {number} .\n   * @public\n   */\n\n\n  Gantt.prototype.getTaskbarHeight = function () {\n    return this.chartRowsModule.taskBarHeight;\n  };\n  /**\n   * To provide the array of modules needed for component rendering\n   *\n   * @returns {ModuleDeclaration[]} .\n   * @hidden\n   */\n\n\n  Gantt.prototype.requiredModules = function () {\n    var modules = [];\n\n    if (this.isDestroyed) {\n      return modules;\n    }\n\n    if (this.allowSorting) {\n      modules.push({\n        member: 'sort',\n        args: [this]\n      });\n    }\n\n    if (this.allowFiltering || this.toolbar && this.toolbar.indexOf('Search') !== -1) {\n      modules.push({\n        member: 'filter',\n        args: [this]\n      });\n    }\n\n    if (this.allowReordering) {\n      modules.push({\n        member: 'reorder',\n        args: [this]\n      });\n    }\n\n    if (this.allowExcelExport) {\n      modules.push({\n        member: 'excelExport',\n        args: [this]\n      });\n    }\n\n    if (this.allowRowDragAndDrop) {\n      modules.push({\n        member: 'rowDragAndDrop',\n        args: [this]\n      });\n    }\n\n    if (this.allowResizing) {\n      modules.push({\n        member: 'resize',\n        args: [this]\n      });\n    }\n\n    if (this.toolbar) {\n      modules.push({\n        member: 'toolbar',\n        args: [this]\n      });\n    }\n\n    if (this.editSettings.allowAdding || this.editSettings.allowEditing || this.editSettings.allowDeleting || this.editSettings.allowTaskbarEditing || this.allowRowDragAndDrop) {\n      modules.push({\n        member: 'edit',\n        args: [this]\n      });\n    }\n\n    if (this.allowSelection) {\n      modules.push({\n        member: 'selection',\n        args: [this]\n      });\n    }\n\n    if (this.tooltipSettings.showTooltip) {\n      modules.push({\n        member: 'tooltip',\n        args: [this]\n      });\n    }\n\n    if (this.highlightWeekends || this.holidays && this.holidays.length > 0 || this.eventMarkers && this.eventMarkers.length > 0) {\n      modules.push({\n        member: 'dayMarkers',\n        args: [this]\n      });\n    }\n\n    if (this.enableContextMenu) {\n      modules.push({\n        member: 'contextMenu',\n        args: [this]\n      });\n    }\n\n    if (this.showColumnMenu) {\n      modules.push({\n        member: 'columnMenu',\n        args: [this]\n      });\n    }\n\n    if (this.allowPdfExport) {\n      modules.push({\n        member: 'pdfExport',\n        args: [this]\n      });\n    }\n\n    if (this.enableVirtualization) {\n      modules.push({\n        member: 'virtualScroll',\n        args: [this]\n      });\n    }\n\n    return modules;\n  };\n  /**\n   * Sorts a column with the given options.\n   *\n   * @param {string} columnName - Defines the column name to be sorted.\n   * @param {SortDirection} direction - Defines the direction of sorting field.\n   * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n   * @returns {void} .\n   */\n\n\n  Gantt.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n    if (this.sortModule && this.allowSorting) {\n      this.sortModule.sortColumn(columnName, direction, isMultiSort);\n    }\n  };\n  /**\n   * Clears all the sorted columns of the Gantt.\n   *\n   * @returns {void} .\n   */\n\n\n  Gantt.prototype.clearSorting = function () {\n    this.sortModule.clearSorting();\n  };\n  /**\n   * To validate and render chart horizontal and vertical lines in the Gantt\n   *\n   * @returns {void} .\n   * @hidden\n   */\n\n\n  Gantt.prototype.renderChartGridLines = function () {\n    var className = 'e-chart-row-border';\n    var verticalLines = this.chartVerticalLineContainer;\n    var chartRowsTD = document.getElementById(this.element.id + 'GanttTaskTableBody').querySelectorAll('td');\n\n    if (this.gridLines === 'Vertical') {\n      if (isNullOrUndefined(verticalLines)) {\n        this.renderChartVerticalLines();\n      } else {\n        if (verticalLines.style.display === 'none') {\n          verticalLines.style.display = 'block';\n        }\n      }\n\n      if (chartRowsTD[0].classList.contains(className)) {\n        for (var c = 0; c < chartRowsTD.length; c++) {\n          removeClass([chartRowsTD[c]], className);\n        }\n      }\n    } else if (this.gridLines === 'Horizontal') {\n      if (!isNullOrUndefined(verticalLines)) {\n        verticalLines.style.display = 'none';\n      }\n\n      if (!chartRowsTD[0].classList.contains(className)) {\n        for (var c = 0; c < chartRowsTD.length; c++) {\n          addClass([chartRowsTD[c]], className);\n        }\n      }\n    } else if (this.gridLines === 'Both') {\n      if (isNullOrUndefined(verticalLines)) {\n        this.renderChartVerticalLines();\n      } else {\n        if (verticalLines.style.display === 'none') {\n          verticalLines.style.display = 'block';\n        }\n      }\n\n      if (!chartRowsTD[0].classList.contains(className)) {\n        for (var c = 0; c < chartRowsTD.length; c++) {\n          addClass([chartRowsTD[c]], className);\n        }\n      }\n    } else if (this.gridLines === 'None') {\n      if (!isNullOrUndefined(verticalLines) && verticalLines.style.display !== 'none') {\n        verticalLines.style.display = 'none';\n      }\n\n      if (chartRowsTD[0].classList.contains(className)) {\n        for (var c = 0; c < chartRowsTD.length; c++) {\n          removeClass([chartRowsTD[c]], className);\n        }\n      }\n    }\n  };\n  /**\n   * To update height of the Grid lines in the Gantt chart side.\n   *\n   * @returns {void} .\n   * @private\n   */\n\n\n  Gantt.prototype.updateGridLineContainerHeight = function () {\n    if (this.chartVerticalLineContainer) {\n      this.chartVerticalLineContainer.style.height = formatUnit(this.getContentHeight());\n    }\n  };\n  /**\n   * To get actual height of grid lines, holidays, weekend and event markers.\n   *\n   * @returns {number} .\n   * @private\n   */\n\n\n  Gantt.prototype.getContentHeight = function () {\n    var scrollHeight = this.ganttChartModule.scrollElement.offsetHeight - 16; //16 is horizontal scrollbar height\n\n    var contentHeight = this.ganttChartModule.chartBodyContent.offsetHeight;\n    var height = contentHeight < scrollHeight ? contentHeight : scrollHeight;\n    return height;\n  };\n  /**\n   * To update height of the Grid lines in the Gantt chart side.\n   *\n   * @returns {void} .\n   * @private\n   */\n\n\n  Gantt.prototype.reUpdateDimention = function () {\n    var toolbarHeight = 0;\n    this.calculateDimensions();\n\n    if (!isNullOrUndefined(this.toolbarModule) && !isNullOrUndefined(this.toolbarModule.element)) {\n      this.toolbarModule.toolbar.refresh();\n      this.toolbarModule.refreshToolbarItems();\n      toolbarHeight = this.toolbarModule.element.offsetHeight;\n    }\n\n    this.treeGrid.height = this.ganttHeight - toolbarHeight - this.treeGrid.grid.getHeaderContent().offsetHeight;\n    this.splitterModule.splitterObject.height = (this.ganttHeight - toolbarHeight).toString();\n\n    if (!isNullOrUndefined(this.chartVerticalLineContainer)) {\n      this.chartVerticalLineContainer.style.height = this.ganttHeight + 'px';\n    }\n\n    if (!isNullOrUndefined(this.dayMarkersModule)) {\n      var holidayContainer = getValue('nonworkingDayRender.holidayContainer', this.dayMarkersModule);\n      var weekendContainer = getValue('nonworkingDayRender.weekendContainer', this.dayMarkersModule);\n      var eventMarkersContainer = getValue('eventMarkerRender.eventMarkersContainer', this.dayMarkersModule);\n\n      if (holidayContainer) {\n        holidayContainer.style.height = this.ganttHeight + 'px';\n      }\n\n      if (weekendContainer) {\n        weekendContainer.style.height = this.ganttHeight + 'px';\n      }\n\n      if (eventMarkersContainer) {\n        eventMarkersContainer.style.height = this.ganttHeight + 'px';\n      }\n    }\n\n    this.splitterModule.splitterObject.width = this.ganttWidth.toString();\n    this.ganttChartModule.scrollObject.setHeight(this.ganttHeight - this.ganttChartModule.chartTimelineContainer.offsetHeight - toolbarHeight);\n  };\n  /**\n   * To render vertical lines in the Gantt chart side.\n   *\n   * @returns {void} .\n   */\n\n\n  Gantt.prototype.renderChartVerticalLines = function () {\n    if (!this.element.contains(this.chartVerticalLineContainer)) {\n      this.chartVerticalLineContainer = createElement('div', {\n        id: this.element.id + 'line-container',\n        styles: 'position:absolute;height:100%;z-index:1'\n      });\n      this.ganttChartModule.chartBodyContent.appendChild(this.chartVerticalLineContainer);\n    }\n\n    this.chartVerticalLineContainer.innerHTML = '';\n    var headerTable = this.element.getElementsByClassName('e-timeline-header-table-container')[1];\n\n    if (isNullOrUndefined(headerTable)) {\n      headerTable = this.element.getElementsByClassName('e-timeline-header-table-container')[0];\n    }\n\n    var thElements = headerTable.getElementsByTagName('th');\n    var thLength = thElements.length;\n    var thWidth;\n    var leftPos = 0;\n    var containerDiv = createElement('div');\n\n    for (var n = 0; n < thLength; n++) {\n      leftPos = n === 0 ? -1 : leftPos + parseFloat(thWidth);\n      thWidth = thElements[n].style.width;\n      var divElement = createElement('div', {\n        className: 'e-line-container-cell',\n        styles: 'left:' + leftPos + 'px'\n      });\n      containerDiv.appendChild(divElement);\n    }\n\n    this.chartVerticalLineContainer.innerHTML = containerDiv.innerHTML;\n  };\n  /**\n   * Method to get default localized text of the Gantt.\n   *\n   * @returns {void} .\n   * @hidden\n   */\n\n\n  Gantt.prototype.getDefaultLocale = function () {\n    var ganttLocale = {\n      emptyRecord: 'No records to display',\n      id: 'ID',\n      name: 'Name',\n      startDate: 'Start Date',\n      endDate: 'End Date',\n      duration: 'Duration',\n      progress: 'Progress',\n      dependency: 'Dependency',\n      notes: 'Notes',\n      baselineStartDate: 'Baseline Start Date',\n      baselineEndDate: 'Baseline End Date',\n      taskMode: 'Task Mode',\n      changeScheduleMode: 'Change Schedule Mode',\n      subTasksStartDate: 'SubTasks Start Date',\n      subTasksEndDate: 'SubTasks End Date',\n      scheduleStartDate: 'Schedule Start Date',\n      scheduleEndDate: 'Schedule End Date',\n      auto: 'Auto',\n      manual: 'Manual',\n      type: 'Type',\n      offset: 'Offset',\n      resourceName: 'Resources',\n      resourceID: 'Resource ID',\n      day: 'day',\n      hour: 'hour',\n      minute: 'minute',\n      days: 'days',\n      hours: 'hours',\n      minutes: 'minutes',\n      generalTab: 'General',\n      customTab: 'Custom Columns',\n      writeNotes: 'Write Notes',\n      addDialogTitle: 'New Task',\n      editDialogTitle: 'Task Information',\n      add: 'Add',\n      edit: 'Edit',\n      update: 'Update',\n      delete: 'Delete',\n      cancel: 'Cancel',\n      search: 'Search',\n      task: ' task',\n      tasks: ' tasks',\n      zoomIn: 'Zoom in',\n      zoomOut: 'Zoom out',\n      zoomToFit: 'Zoom to fit',\n      excelExport: 'Excel export',\n      csvExport: 'CSV export',\n      pdfExport: 'Pdf export',\n      expandAll: 'Expand all',\n      collapseAll: 'Collapse all',\n      nextTimeSpan: 'Next timespan',\n      prevTimeSpan: 'Previous timespan',\n      saveButton: 'Save',\n      taskBeforePredecessorFS: 'You moved \"{0}\" to start before \"{1}\" finishes and the two tasks are linked.' + 'As the result, the links cannot be honored. Select one action below to perform',\n      taskAfterPredecessorFS: 'You moved \"{0}\" away from \"{1}\" and the two tasks are linked.' + 'As the result, the links cannot be honored. Select one action below to perform',\n      taskBeforePredecessorSS: 'You moved \"{0}\" to start before \"{1}\" starts and the two tasks are linked.' + 'As the result, the links cannot be honored. Select one action below to perform',\n      taskAfterPredecessorSS: 'You moved \"{0}\" to start after \"{1}\" starts and the two tasks are linked.' + 'As the result, the links cannot be honored. Select one action below to perform',\n      taskBeforePredecessorFF: 'You moved \"{0}\" to finish before \"{1}\" finishes and the two tasks are linked.' + 'As the result, the links cannot be honored. Select one action below to perform',\n      taskAfterPredecessorFF: 'You moved \"{0}\" to finish after \"{1}\" finishes and the two tasks are linked.' + 'As the result, the links cannot be honored. Select one action below to perform',\n      taskBeforePredecessorSF: 'You moved \"{0}\" away from \"{1}\" to starts and the two tasks are linked.' + 'As the result, the links cannot be honored. Select one action below to perform',\n      taskAfterPredecessorSF: 'You moved \"{0}\" to finish after \"{1}\" starts and the two tasks are linked.' + 'As the result, the links cannot be honored. Select one action below to perform',\n      okText: 'Ok',\n      confirmDelete: 'Are you sure you want to Delete Record?',\n      from: 'From',\n      to: 'To',\n      taskLink: 'Task Link',\n      lag: 'Lag',\n      start: 'Start',\n      finish: 'Finish',\n      enterValue: 'Enter the value',\n      taskInformation: 'Task Information',\n      deleteTask: 'Delete Task',\n      deleteDependency: 'Delete Dependency',\n      convert: 'Convert',\n      save: 'Save',\n      above: 'Above',\n      below: 'Below',\n      child: 'Child',\n      milestone: 'Milestone',\n      toTask: 'To Task',\n      toMilestone: 'To Milestone',\n      eventMarkers: 'Event markers',\n      leftTaskLabel: 'Left task label',\n      rightTaskLabel: 'Right task label',\n      timelineCell: 'Timeline cell',\n      confirmPredecessorDelete: 'Are you sure you want to remove dependency link?',\n      unit: 'Unit',\n      work: 'Work',\n      taskType: 'Task Type',\n      unassignedTask: 'Unassigned Task',\n      group: 'Group',\n      indent: 'Indent',\n      outdent: 'Outdent',\n      segments: 'Segments',\n      splitTask: 'Split Task',\n      mergeTask: 'Merge Task',\n      left: 'Left',\n      right: 'Right'\n    };\n    return ganttLocale;\n  };\n  /**\n   * To remove sorted records of particular column.\n   *\n   * @param {string} columnName - Defines the sorted column name.\n   * @returns {void} .\n   */\n\n\n  Gantt.prototype.removeSortColumn = function (columnName) {\n    this.sortModule.removeSortColumn(columnName);\n  };\n  /**\n   *\n   * @param {object} args .\n   * @returns {void} .\n   * @private\n   */\n\n\n  Gantt.prototype.actionBeginTask = function (args) {\n    this.trigger('actionBegin', args);\n  };\n  /**\n   * To move horizontal scroll bar of Gantt to specific date.\n   *\n   * @param  {string} date - Defines the task date of data.\n   * @returns {void} .\n   */\n\n\n  Gantt.prototype.scrollToDate = function (date) {\n    var tempDate = this.dateValidationModule.getDateFromFormat(date);\n    var left = this.dataOperation.getTaskLeft(tempDate, false);\n    this.ganttChartModule.updateScrollLeft(left);\n  };\n  /**\n   * To move horizontal scroll bar of Gantt to specific task id.\n   *\n   * @param  {string} taskId - Defines the task id of data.\n   * @returns {void} .\n   */\n\n\n  Gantt.prototype.scrollToTask = function (taskId) {\n    if (this.ids.indexOf(taskId) !== -1) {\n      var left = this.flatData[this.ids.indexOf(taskId)].ganttProperties.left;\n      this.ganttChartModule.updateScrollLeft(left);\n    }\n  };\n  /**\n   * To set scroll left and top in chart side.\n   *\n   * @param  {number} left - Defines the scroll left value of chart side.\n   * @param  {number} top - Defines the scroll top value of chart side.\n   * @returns {void} .\n   */\n\n\n  Gantt.prototype.updateChartScrollOffset = function (left, top) {\n    if (!isNullOrUndefined(left)) {\n      left = this.ganttChartModule.scrollElement.scrollWidth <= left ? this.ganttChartModule.scrollElement.scrollWidth : left;\n      this.ganttChartModule.scrollObject.setScrollLeft(left);\n    }\n\n    if (!isNullOrUndefined(top)) {\n      top = this.ganttChartModule.scrollElement.scrollHeight <= top ? this.ganttChartModule.scrollElement.scrollHeight : top;\n      this.ganttChartModule.scrollObject.setScrollTop(top);\n    }\n  };\n  /**\n   * Get parent task by clone parent item.\n   *\n   * @param {IParent} cloneParent - Defines the clone parent item.\n   * @returns {IGanttData} .\n   * @hidden\n   */\n\n\n  Gantt.prototype.getParentTask = function (cloneParent) {\n    if (!isNullOrUndefined(cloneParent)) {\n      var parent_1 = this.flatData.filter(function (val) {\n        return cloneParent.uniqueID === val.uniqueID;\n      });\n\n      if (parent_1.length > 0) {\n        return parent_1[0];\n      } else {\n        return null;\n      }\n    } else {\n      return null;\n    }\n  };\n  /**\n   * Get parent task by clone parent item.\n   *\n   * @param {IGanttData} ganttRecord .\n   * @param {number} level .\n   * @returns {IGanttData} .\n   * @hidden\n   */\n\n\n  Gantt.prototype.getRootParent = function (ganttRecord, level) {\n    if (ganttRecord.level === level) {\n      return ganttRecord;\n    }\n\n    return this.getRootParent(this.getParentTask(ganttRecord.parentItem), level);\n  };\n  /**\n   * Filters TreeGrid row by column name with the given options.\n   *\n   * @param  {string} fieldName - Defines the field name of the column.\n   * @param  {string} filterOperator - Defines the operator to filter records.\n   * @param  {string | number | Date | boolean | number[] | string[] | Date[] | boolean[]} filterValue - Defines the value\n   *  used to filter records.\n   * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n   * @param  {boolean} matchCase - If match case is set to true, TreeGrid filters the records with exact match.if false, it filters case\n   * insensitive records (uppercase and lowercase letters treated the same).\n   * @param  {boolean} ignoreAccent - If ignoreAccent set to true,\n   * then filter ignores the diacritic characters or accents while filtering.\n   * @returns {void} .\n   */\n\n\n  Gantt.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent) {\n    this.treeGrid.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent);\n  };\n  /**\n   * Export Gantt data to Excel file(.xlsx).\n   *\n   * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the Gantt.\n   * @param  {boolean} isMultipleExport - Define to enable multiple export.\n   * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n   * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n   * @returns {Promise<any>} .\n   */\n\n\n  Gantt.prototype.excelExport = function (excelExportProperties, isMultipleExport,\n  /* eslint-disable-next-line */\n  workbook, isBlob) {\n    return this.excelExportModule ? this.treeGrid.excelExport(excelExportProperties, isMultipleExport, workbook, isBlob) : null;\n  };\n  /**\n   * Export Gantt data to CSV file.\n   *\n   * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the Gantt.\n   * @param  {boolean} isMultipleExport - Define to enable multiple export.\n   * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n   * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n   * @returns {Promise<any>} .\n   */\n\n\n  Gantt.prototype.csvExport = function (excelExportProperties,\n  /* eslint-disable-next-line */\n  isMultipleExport, workbook, isBlob) {\n    return this.excelExportModule ? this.treeGrid.csvExport(excelExportProperties, isMultipleExport, workbook, isBlob) : null;\n  };\n  /**\n   * Export Gantt data to PDF document.\n   *\n   * @param  {PdfExportProperties} pdfExportProperties - Defines the export properties of the Gantt.\n   * @param  {isMultipleExport} isMultipleExport - Define to enable multiple export.\n   * @param  {pdfDoc} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n   * @returns {Promise<any>} .\n   */\n\n\n  Gantt.prototype.pdfExport = function (pdfExportProperties, isMultipleExport, pdfDoc) {\n    return this.pdfExportModule ? this.pdfExportModule.export(pdfExportProperties, isMultipleExport, pdfDoc) : null;\n  };\n  /**\n   * Clears the filtered columns in Gantt.\n   *\n   * Can also be used to clear filtering of a specific column in Gantt.\n   *\n   * @param {string[]} fields - Defines the specific column to remove filter.\n   * @returns {void} .\n   */\n\n\n  Gantt.prototype.clearFiltering = function (fields) {\n    this.treeGrid.grid.clearFiltering(fields);\n  };\n  /**\n   * Removes filtered column by field name.\n   *\n   * @param  {string} field - Defines column field name to remove filter.\n   * @returns {void} .\n   * @hidden\n   */\n\n\n  Gantt.prototype.removeFilteredColsByField = function (field) {\n    this.treeGrid.removeFilteredColsByField(field, false);\n  };\n  /**\n   * Method to set holidays and non working days in date time and date picker controls\n   *\n   * @param {RenderDayCellEventArgs} args .\n   * @returns {void} .\n   * @private\n   */\n\n\n  Gantt.prototype.renderWorkingDayCell = function (args) {\n    var includeWeekend = this.taskMode !== 'Auto' ? true : this.includeWeekend ? true : false;\n    var nonWorkingDays = !includeWeekend ? this.nonWorkingDayIndex : [];\n    var holidays = this.totalHolidayDates;\n\n    if (nonWorkingDays.length > 0 && nonWorkingDays.indexOf(args.date.getDay()) !== -1) {\n      args.isDisabled = true;\n    } else if (holidays.length > 0) {\n      var tempDate = new Date(args.date.getTime());\n      tempDate.setHours(0, 0, 0);\n\n      if (holidays.indexOf(tempDate.getTime()) !== -1) {\n        args.isDisabled = true;\n      }\n    }\n  };\n  /**\n   * To update timeline at start point with one unit.\n   *\n   * @param {string} mode .\n   * @returns {void} .\n   * @public\n   */\n\n\n  Gantt.prototype.previousTimeSpan = function (mode) {\n    this.timelineModule.performTimeSpanAction('prevTimeSpan', 'publicMethod', new Date(this.timelineModule.timelineStartDate.getTime()), new Date(this.timelineModule.timelineEndDate.getTime()), mode);\n  };\n  /**\n   * To update timeline at end point with one unit.\n   *\n   * @param {string} mode .\n   * @returns {void} .\n   * @public\n   */\n\n\n  Gantt.prototype.nextTimeSpan = function (mode) {\n    this.timelineModule.performTimeSpanAction('nextTimeSpan', 'publicMethod', new Date(this.timelineModule.timelineStartDate.getTime()), new Date(this.timelineModule.timelineEndDate.getTime()), mode);\n  };\n  /**\n   * To validate project start date and end date.\n   *\n   * @param  {Date} startDate - Defines start date of project.\n   * @param  {Date} endDate - Defines end date of project.\n   * @param  {boolean} isTimelineRoundOff - Defines project start date and end date need to be round off or not.\n   * @param {string} isFrom .\n   * @returns {void} .\n   * @public\n   */\n\n\n  Gantt.prototype.updateProjectDates = function (startDate, endDate, isTimelineRoundOff, isFrom) {\n    this.timelineModule.totalTimelineWidth = 0;\n    this.cloneProjectStartDate = startDate;\n    this.cloneProjectEndDate = endDate;\n    this.isTimelineRoundOff = isTimelineRoundOff;\n    this.timelineModule.refreshTimelineByTimeSpan();\n    this.dataOperation.reUpdateGanttDataPosition();\n    this.timelineModule.updateChartByNewTimeline();\n    this.ganttChartModule.chartBodyContent.style.width = formatUnit(this.timelineModule.totalTimelineWidth);\n    this.ganttChartModule.updateLastRowBottomWidth();\n\n    if (this.gridLines === 'Vertical' || this.gridLines === 'Both') {\n      this.renderChartVerticalLines();\n    }\n\n    if (this.taskFields.dependency) {\n      this.ganttChartModule.reRenderConnectorLines();\n    }\n\n    if (isFrom !== 'beforeAdd') {\n      this.notify('selectRowByIndex', {});\n    }\n  };\n  /**\n   * Split the taskbar into segment by the given date\n   *\n   * @param  {string} taskId - Defines the id of a task to be split.\n   * @param  {string} splitDate - Defines in which date the taskbar must be split up.\n   * @returns {void} .\n   * @public\n   */\n\n\n  Gantt.prototype.splitTask = function (taskId, splitDate) {\n    this.isEdit = true;\n    this.chartRowsModule.splitTask(taskId, splitDate);\n  };\n  /**\n   * merge the split taskbar with the given segment indexes.\n   *\n   * @param  {string} taskId - Defines the id of a task to be split.\n   * @param  {string} segmentIndexes - Defines the object array of indexes which must be merged.\n   * @returns {void} .\n   * @public\n   */\n\n\n  Gantt.prototype.mergeTask = function (taskId, segmentIndexes) {\n    this.chartRowsModule.mergeTask(taskId, segmentIndexes);\n  };\n  /**\n   * Changes the TreeGrid column positions by field names.\n   *\n   * @param  {string} fromFName - Defines origin field name.\n   * @param  {string} toFName - Defines destination field name.\n   * @returns {void} .\n   * @public\n   */\n\n\n  Gantt.prototype.reorderColumns = function (fromFName, toFName) {\n    this.treeGrid.reorderColumns(fromFName, toFName);\n  };\n  /**\n   * Method to clear edited collections in gantt set edit flag value\n   *\n   * @param {boolean} isStart .\n   * @returns {void} .\n   * @private\n   */\n\n\n  Gantt.prototype.initiateEditAction = function (isStart) {\n    this.isOnEdit = isStart;\n    this.previousRecords = {};\n    this.editedRecords = [];\n  };\n  /**\n   *\n   * @param {string} field Method to update value in Gantt record and make clone record for this\n   * @param {IGanttData | ITaskData} record .\n   * @param {boolean} isTaskData .\n   * @returns {void} .\n   * @private\n   */\n\n  /* eslint-disable-next-line */\n\n\n  Gantt.prototype.setRecordValue = function (field, value, record, isTaskData) {\n    if (this.isOnEdit || this.isOnDelete) {\n      this.makeCloneData(field, record, isTaskData);\n      var id = isTaskData ? record.rowUniqueID : record.ganttProperties.rowUniqueID;\n      var task = this.getRecordByID(id);\n\n      if (task && this.editedRecords.indexOf(task) === -1) {\n        this.editedRecords.push(task);\n\n        if (this.enableImmutableMode) {\n          this.modifiedRecords.push(task);\n        }\n      }\n    }\n\n    value = isUndefined(value) ? null : value;\n    setValue(field, value, record);\n  };\n\n  Gantt.prototype.makeCloneData = function (field, record, isTaskData) {\n    var cloneData;\n    /* eslint-disable-next-line */\n\n    var value = getValue(field, record);\n    /* eslint-disable-next-line */\n\n    var prevValue;\n    /* eslint-disable-next-line */\n\n    var clonedValue;\n\n    if (isTaskData) {\n      field = 'ganttProperties.' + field;\n    }\n\n    if (isNullOrUndefined(this.previousRecords[record.uniqueID])) {\n      var tempData = {};\n      this.previousRecords[record.uniqueID] = tempData;\n    }\n    /* eslint-disable-next-line */\n\n\n    cloneData = this.previousRecords[record.uniqueID];\n    /* eslint-disable-next-line */\n\n    prevValue = getValue(field, cloneData);\n\n    if (isUndefined(prevValue)) {\n      if (value instanceof Date) {\n        clonedValue = new Date(value.getTime());\n      } else if (isObjectArray(value)) {\n        clonedValue = extend([], value, [], true);\n      } else if (isObject(value)) {\n        clonedValue = extend({}, {}, value, true);\n      } else {\n        clonedValue = value;\n      }\n\n      if (!isUndefined(clonedValue)) {\n        setValue(field, clonedValue, cloneData);\n      } else {\n        setValue(field, null, cloneData);\n      }\n    }\n  };\n\n  Gantt.prototype.closeGanttActions = function () {\n    if (this.editModule) {\n      if (this.editModule.cellEditModule && this.editModule.cellEditModule.isCellEdit) {\n        this.treeGrid.closeEdit();\n        this.editModule.cellEditModule.isCellEdit = false;\n\n        if (!isNullOrUndefined(this.toolbarModule)) {\n          this.toolbarModule.refreshToolbarItems();\n        }\n      } else if (this.editModule.dialogModule && this.editModule.dialogModule.dialogObj && this.editModule.dialogModule.dialogObj.visible) {\n        this.editModule.dialogModule.dialogObj.hide();\n        this.editModule.dialogModule.dialogClose();\n      }\n    }\n  };\n  /**\n   * Method to get task by uniqueId value.\n   *\n   * @param {string} id - Defines the task id.\n   * @returns {IGanttData} .\n   * @isGenericType true\n   */\n\n\n  Gantt.prototype.getTaskByUniqueID = function (id) {\n    var value = this.flatData.filter(function (val) {\n      return val.uniqueID === id;\n    });\n\n    if (value.length > 0) {\n      return value[0];\n    } else {\n      return null;\n    }\n  };\n  /**\n   * Method to get record by id value.\n   *\n   * @param {string} id - Defines the id of record.\n   * @returns {IGanttData} .\n   * @isGenericType true\n   */\n\n\n  Gantt.prototype.getRecordByID = function (id) {\n    if (isNullOrUndefined(id)) {\n      return null;\n    }\n\n    return this.flatData[this.ids.indexOf(id.toString())];\n  };\n  /**\n   * Method to set splitter position.\n   *\n   * @param {string|number} value - Define value to splitter settings property.\n   * @param {string} type - Defines name of internal splitter settings property.\n   * @returns {void} .\n   */\n\n\n  Gantt.prototype.setSplitterPosition = function (value, type) {\n    var tempSplitterSettings = {};\n    tempSplitterSettings[type] = value;\n    var splitterPosition = this.splitterModule.calculateSplitterPosition(tempSplitterSettings, true);\n    var pane1 = this.splitterModule.splitterObject.element.querySelectorAll('.e-pane')[0];\n    var pane2 = this.splitterModule.splitterObject.element.querySelectorAll('.e-pane')[1];\n    this.splitterModule.splitterPreviousPositionGrid = pane1.scrollWidth + 1 + 'px';\n    this.splitterModule.splitterPreviousPositionChart = pane2.scrollWidth + 1 + 'px';\n    this.splitterModule.splitterObject.paneSettings[0].size = splitterPosition;\n    this.splitterModule.triggerCustomResizedEvent();\n  };\n  /**\n   * Expand the records by index value.\n   *\n   * @param {number[] | number} index - Defines the index of rows to be expand.\n   * @returns {void} .\n   * @public\n   */\n\n\n  Gantt.prototype.expandByIndex = function (index) {\n    if (typeof index === 'number') {\n      var args = this.contructExpandCollapseArgs(null, index);\n      this.ganttChartModule.isExpandCollapseFromChart = true;\n      this.ganttChartModule.expandGanttRow(args);\n    } else {\n      for (var i = 0; i < index.length; i++) {\n        if (typeof index[i] === 'number') {\n          var ind = index[i];\n          var args = this.contructExpandCollapseArgs(null, ind);\n          this.ganttChartModule.isExpandCollapseFromChart = true;\n          this.ganttChartModule.expandGanttRow(args);\n        }\n      }\n    }\n  };\n  /**\n   * Expand the record by task id.\n   *\n   * @param {number} id - Defines the id of task.\n   * @returns {void} .\n   * @public\n   */\n\n\n  Gantt.prototype.expandByID = function (id) {\n    var args = this.contructExpandCollapseArgs(id);\n    this.ganttChartModule.isExpandCollapseFromChart = true;\n    this.ganttChartModule.expandGanttRow(args);\n  };\n  /**\n   * Collapse the record by index value.\n   *\n   * @param {number} index - Defines the index of row.\n   * @returns {void} .\n   * @public\n   */\n\n\n  Gantt.prototype.collapseByIndex = function (index) {\n    var args = this.contructExpandCollapseArgs(null, index);\n    this.ganttChartModule.isExpandCollapseFromChart = true;\n    this.ganttChartModule.collapseGanttRow(args);\n  };\n  /**\n   * Collapse the record by id value.\n   *\n   * @param {number} id - Defines the id of task.\n   * @returns {void} .\n   * @public\n   */\n\n\n  Gantt.prototype.collapseByID = function (id) {\n    var args = this.contructExpandCollapseArgs(id);\n    this.ganttChartModule.isExpandCollapseFromChart = true;\n    this.ganttChartModule.collapseGanttRow(args);\n  };\n  /**\n   * Method to add record.\n   *\n   * @param {Object[] | IGanttData | Object} data - Defines record to add.\n   * @param {RowPosition} rowPosition - Defines the position of row.\n   * @param {number} rowIndex - Defines the row index.\n   * @returns {void} .\n   * @public\n   */\n\n\n  Gantt.prototype.addRecord = function (data, rowPosition, rowIndex) {\n    if (this.editModule && this.editSettings.allowAdding) {\n      if (this.viewType === 'ResourceView') {\n        this.editModule.addRowPosition = rowPosition;\n        this.editModule.addRowIndex = rowIndex;\n        var resources = data[this.taskFields.resourceInfo];\n        var id = void 0;\n        var parentTask = void 0;\n\n        if (!isNullOrUndefined(resources) && resources.length) {\n          for (var i = 0; i < resources.length; i++) {\n            id = typeof resources[i] === 'object' ? resources[i][this.resourceFields.id] : resources[0];\n            parentTask = this.flatData[this.getTaskIds().indexOf('R' + id)];\n\n            if (parentTask) {\n              break;\n            }\n          }\n\n          if (parentTask && parentTask.childRecords.length || parentTask.level === 0) {\n            var dropChildRecord = parentTask.childRecords[rowIndex];\n\n            if (dropChildRecord) {\n              var position = rowPosition === 'Above' || rowPosition === 'Below' ? rowPosition : 'Child';\n\n              if (position === 'Child') {\n                this.editModule.addRecord(data, position, this.getTaskIds().indexOf('R' + id));\n              } else {\n                this.editModule.addRecord(data, position, this.flatData.indexOf(dropChildRecord));\n              }\n            } else {\n              this.editModule.addRecord(data, 'Child', this.getTaskIds().indexOf('R' + id));\n            }\n          } else {\n            this.editModule.addRecord(data, 'Bottom');\n          }\n        } else {\n          this.editModule.addRecord(data, 'Bottom');\n        }\n\n        this.editModule.addRowPosition = null;\n        this.editModule.addRowIndex = null;\n      } else {\n        this.editModule.addRecord(data, rowPosition, rowIndex);\n      }\n    }\n  };\n  /**\n   * Method to update record by ID.\n   *\n   * @param  {Object} data - Defines the data to modify.\n   * @returns {void} .\n   * @public\n   */\n\n\n  Gantt.prototype.updateRecordByID = function (data) {\n    if (this.editModule && this.editSettings.allowEditing) {\n      this.editModule.updateRecordByID(data);\n    }\n  };\n  /**\n   * To update existing taskId with new unique Id.\n   *\n   * @param {number | string} currentId .\n   * @param {number | string} newId .\n   * @returns {void} .\n   */\n\n\n  Gantt.prototype.updateTaskId = function (currentId, newId) {\n    if (this.editModule && this.editSettings.allowEditing) {\n      this.editModule.updateTaskId(currentId, newId);\n    }\n  };\n  /**\n   * Public method to expand particular level of rows.\n   *\n   * @returns {void} .\n   * @param {number} level .\n   * @private\n   */\n\n\n  Gantt.prototype.expandAtLevel = function (level) {\n    if (this.enableVirtualization) {\n      this.isExpandCollapseLevelMethod = true;\n    }\n\n    this.ganttChartModule.expandAtLevel(level);\n  };\n  /**\n   * To indent the level of selected task to the hierarchical Gantt task.\n   *\n   * @returns {void} .\n   * @public\n   */\n\n\n  Gantt.prototype.indent = function () {\n    if (this.editModule && this.editSettings.allowEditing) {\n      this.editModule.indent();\n    }\n  };\n  /**\n   * To outdent the level of selected task from the hierarchical Gantt task.\n   *\n   * @returns {void} .\n   * @public\n   */\n\n\n  Gantt.prototype.outdent = function () {\n    if (this.editModule && this.editSettings.allowEditing) {\n      this.editModule.outdent();\n    }\n  };\n  /**\n   * To perform Zoom in action on Gantt timeline.\n   *\n   * @returns {void} .\n   * @public\n   */\n\n\n  Gantt.prototype.zoomIn = function () {\n    this.timelineModule.processZooming(true);\n  };\n  /**\n   * To perform zoom out action on Gantt timeline.\n   *\n   * @returns {void} .\n   * @public\n   */\n\n\n  Gantt.prototype.zoomOut = function () {\n    this.timelineModule.processZooming(false);\n  };\n  /**\n   * To show all project task in available chart width\n   *\n   * @returns {void} .\n   * @public\n   */\n\n\n  Gantt.prototype.fitToProject = function () {\n    this.timelineModule.processZoomToFit();\n    this.ganttChartModule.updateScrollLeft(0);\n  };\n  /**\n   * Reorder the rows based on given indexes and position\n   *\n   * @param {number[]} fromIndexes .\n   * @param {number} toIndex .\n   * @param {string} position .\n   * @returns {void} .\n   */\n\n\n  Gantt.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n    this.rowDragAndDropModule.reorderRows(fromIndexes, toIndex, position);\n  };\n  /**\n   * Method to update record by Index.\n   *\n   * @param  {number} index - Defines the index of data to modify.\n   * @param  {object} data - Defines the data to modify.\n   * @returns {void} .\n   * @public\n   */\n\n\n  Gantt.prototype.updateRecordByIndex = function (index, data) {\n    if (this.editModule && this.editSettings.allowEditing) {\n      var tasks = this.taskFields;\n      var record = this.updatedRecords.length > 0 ? !isNullOrUndefined(this.updatedRecords[index]) ? this.updatedRecords[index] : null : null;\n\n      if (!isNullOrUndefined(record)) {\n        data[tasks.id] = record[tasks.id];\n        this.editModule.updateRecordByID(data);\n      }\n    }\n  };\n  /**\n   * To add dependency for Task.\n   *\n   * @param  {number} id - Defines the ID of data to modify.\n   * @param  {string} predecessorString - Defines the predecessor string to add.\n   * @returns {void} .\n   * @public\n   */\n\n\n  Gantt.prototype.addPredecessor = function (id, predecessorString) {\n    var ganttRecord = this.getRecordByID(id.toString());\n\n    if (this.editModule && !isNullOrUndefined(ganttRecord) && this.editSettings.allowTaskbarEditing) {\n      this.connectorLineEditModule.addPredecessor(ganttRecord, predecessorString);\n    }\n  };\n  /**\n   * To remove dependency from task.\n   *\n   * @param  {number} id - Defines the ID of task to modify.\n   * @returns {void} .\n   * @public\n   */\n\n\n  Gantt.prototype.removePredecessor = function (id) {\n    var ganttRecord = this.getRecordByID(id.toString());\n\n    if (this.editModule && !isNullOrUndefined(ganttRecord) && this.editSettings.allowTaskbarEditing) {\n      this.connectorLineEditModule.removePredecessor(ganttRecord);\n    }\n  };\n  /**\n   * To modify current dependency values of Task by task id.\n   *\n   * @param  {number} id - Defines the ID of data to modify.\n   * @param  {string} predecessorString - Defines the predecessor string to update.\n   * @returns {void} .\n   * @public\n   */\n\n\n  Gantt.prototype.updatePredecessor = function (id, predecessorString) {\n    var ganttRecord = this.getRecordByID(id.toString());\n\n    if (this.editModule && !isNullOrUndefined(ganttRecord) && this.editSettings.allowTaskbarEditing) {\n      this.connectorLineEditModule.updatePredecessor(ganttRecord, predecessorString);\n    }\n  };\n  /**\n   * Method to open Add dialog.\n   *\n   * @returns {void} .\n   * @public\n   */\n\n\n  Gantt.prototype.openAddDialog = function () {\n    if (this.editModule && this.editModule.dialogModule && this.editSettings.allowAdding) {\n      this.editModule.dialogModule.openAddDialog();\n    }\n  };\n  /**\n   * Method to open Edit dialog.\n   *\n   * @param {number } taskId - Defines the id of task.\n   * @returns {void} .\n   * @public\n   */\n\n\n  Gantt.prototype.openEditDialog = function (taskId) {\n    if (this.editModule && this.editModule.dialogModule && this.editSettings.allowEditing) {\n      this.editModule.dialogModule.openEditDialog(taskId);\n    }\n  };\n  /**\n   * Changes the TreeGrid column positions by field names.\n   *\n   * @param {string | number} id .\n   * @param {number} index .\n   * @returns {void} .\n   * @private\n   */\n\n\n  Gantt.prototype.contructExpandCollapseArgs = function (id, index) {\n    var chartRow;\n    var record;\n    var rowIndex;\n\n    if (isNullOrUndefined(index)) {\n      record = this.getRecordByID(id.toString());\n      chartRow = this.getRowByID(id);\n      rowIndex = getValue('rowIndex', chartRow);\n    } else if (!isNullOrUndefined(index)) {\n      chartRow = this.getRowByIndex(index);\n      rowIndex = getValue('rowIndex', chartRow);\n      record = this.currentViewData[rowIndex];\n    }\n\n    var gridRow = this.treeGrid.getRows()[rowIndex];\n    return {\n      data: record,\n      gridRow: gridRow,\n      chartRow: chartRow,\n      cancel: false\n    };\n  };\n  /**\n   * Method to get chart row value by index.\n   *\n   * @param {number} index - Defines the index of row.\n   * @returns {HTMLElement} .\n   */\n\n\n  Gantt.prototype.getRowByIndex = function (index) {\n    try {\n      var gridRows = this.element.querySelectorAll('.e-chart-row');\n\n      if (!isNullOrUndefined(index)) {\n        return gridRows[index];\n      } else {\n        return null;\n      }\n    } catch (e) {\n      return null;\n    }\n  };\n  /**\n   * Method to get the row element by task id.\n   *\n   * @param {string | number} id - Defines the id of task.\n   * @returns {HTMLElement} .\n   */\n\n\n  Gantt.prototype.getRowByID = function (id) {\n    var record = this.getRecordByID(id.toString());\n    var index = this.updatedRecords.indexOf(record);\n\n    if (index !== -1) {\n      return this.getRowByIndex(index);\n    } else {\n      return null;\n    }\n  };\n  /**\n   * Method to get class name for unscheduled tasks\n   *\n   * @param {ITaskData} ganttProp .\n   * @returns {string} .\n   * @private\n   */\n\n\n  Gantt.prototype.getUnscheduledTaskClass = function (ganttProp) {\n    if (isNullOrUndefined(ganttProp.startDate) && isNullOrUndefined(ganttProp.endDate) && isNullOrUndefined(ganttProp.duration)) {\n      return ' ' + cls.traceUnscheduledTask;\n    } else if (isNullOrUndefined(ganttProp.startDate) || isNullOrUndefined(ganttProp.endDate) || isNullOrUndefined(ganttProp.duration)) {\n      return ' ' + cls.traceUnscheduledTask;\n    } else {\n      return '';\n    }\n  };\n  /**\n   * Method to get class name for unscheduled tasks\n   *\n   * @param {ITaskData} ganttProp .\n   * @returns {boolean} .\n   * @private\n   */\n\n\n  Gantt.prototype.isUnscheduledTask = function (ganttProp) {\n    if (isNullOrUndefined(ganttProp.startDate) || isNullOrUndefined(ganttProp.endDate) || isNullOrUndefined(ganttProp.duration)) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  Gantt.prototype.createGanttPopUpElement = function () {\n    var popup = this.createElement('div', {\n      className: 'e-ganttpopup',\n      styles: 'display:none;'\n    });\n    var content = this.createElement('div', {\n      className: 'e-content',\n      attrs: {\n        tabIndex: '-1'\n      }\n    });\n    append([content, this.createElement('div', {\n      className: 'e-uptail e-tail'\n    })], popup);\n    content.appendChild(this.createElement('span'));\n    append([content, this.createElement('div', {\n      className: 'e-downtail e-tail'\n    })], popup);\n    document.getElementById(this.element.id + 'GanttChart').appendChild(popup);\n  };\n  /**\n   * Method to get predecessor value as string.\n   *\n   * @param {string} type .\n   * @returns {HTMLElement} .\n   * @private\n   */\n\n\n  Gantt.prototype.getPredecessorTextValue = function (type) {\n    var textValue;\n\n    switch (type) {\n      case 'SS':\n        textValue = this.localeObj.getConstant('start') + '-' + this.localeObj.getConstant('start');\n        break;\n\n      case 'FF':\n        textValue = this.localeObj.getConstant('finish') + '-' + this.localeObj.getConstant('finish');\n        break;\n\n      case 'SF':\n        textValue = this.localeObj.getConstant('start') + '-' + this.localeObj.getConstant('finish');\n        break;\n\n      case 'FS':\n        textValue = this.localeObj.getConstant('finish') + '-' + this.localeObj.getConstant('start');\n        break;\n    }\n\n    return textValue;\n  };\n  /**\n   * Method to perform search action in Gantt.\n   *\n   * @param {string} keyVal - Defines key value to search.\n   * @returns {void} .\n   */\n\n\n  Gantt.prototype.search = function (keyVal) {\n    if (this.filterModule) {\n      this.searchSettings.key = keyVal;\n      this.dataBind();\n    }\n  };\n  /**\n   * Method to get offset rect value\n   *\n   * @param {HTMLElement} element .\n   * @returns {number} .\n   * @hidden\n   */\n\n\n  Gantt.prototype.getOffsetRect = function (element) {\n    var box = element.getBoundingClientRect();\n    var scrollTop = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop;\n    var scrollLeft = window.pageXOffset || document.documentElement.scrollLeft || document.body.scrollLeft;\n    var clientTop = document.documentElement.clientTop || document.body.clientTop || 0;\n    var clientLeft = document.documentElement.clientLeft || document.body.clientLeft || 0;\n    var top = box.top + scrollTop - clientTop;\n    var left = box.left + scrollLeft - clientLeft;\n    return {\n      top: Math.round(top),\n      left: Math.round(left),\n      width: box.width,\n      height: box.height\n    };\n  };\n  /**\n   * Method to expand all the rows of Gantt.\n   *\n   * @returns {void} .\n   * @public\n   */\n\n\n  Gantt.prototype.expandAll = function () {\n    this.ganttChartModule.expandCollapseAll('expand');\n  };\n  /**\n   * Method to update data source.\n   *\n   * @returns {void} .\n   * @param {object[]} dataSource - Defines a collection of data.\n   * @param {object} args - Defines the projectStartDate and projectEndDate values.\n   * @public\n   */\n\n\n  Gantt.prototype.updateDataSource = function (dataSource, args) {\n    if (!isNullOrUndefined(args)) {\n      for (var _i = 0, _a = Object.keys(args); _i < _a.length; _i++) {\n        // eslint-disable-line\n        var prop = _a[_i];\n\n        switch (prop) {\n          case 'projectStartDate':\n            this.setProperties({\n              projectStartDate: args[prop]\n            }, true);\n            break;\n\n          case 'projectEndDate':\n            this.setProperties({\n              projectEndDate: args[prop]\n            }, true);\n            break;\n        }\n      }\n    }\n\n    this.dataSource = dataSource;\n  };\n  /**\n   * Method to collapse all the rows of Gantt.\n   *\n   * @returns {void} .\n   * @public\n   */\n\n\n  Gantt.prototype.collapseAll = function () {\n    this.ganttChartModule.expandCollapseAll('collapse');\n  };\n  /**\n   * Gets the columns from the TreeGrid.\n   *\n   * @returns {Column[]} .\n   * @public\n   */\n\n\n  Gantt.prototype.getGridColumns = function () {\n    return this.treeGrid.getColumns();\n  };\n  /**\n   * Method to column from given column collection based on field value\n   *\n   * @param {string} field .\n   * @param {ColumnModel[]} columns .\n   * @returns {ColumnModel} .\n   * @private\n   */\n\n\n  Gantt.prototype.getColumnByField = function (field, columns) {\n    var column = columns.filter(function (value) {\n      return value.field === field;\n    });\n    return column.length > 0 ? column[0] : null;\n  };\n  /**\n   * Gets the Gantt columns.\n   *\n   * @returns {ColumnModel[]} .\n   * @public\n   */\n\n\n  Gantt.prototype.getGanttColumns = function () {\n    return this.ganttColumns;\n  };\n  /**\n   * Shows a column by its column name.\n   *\n   * @param  {string|string[]} keys - Defines a single or collection of column names.\n   * @param  {string} showBy - Defines the column key either as field name or header text.\n   * @returns {void} .\n   * @public\n   */\n\n\n  Gantt.prototype.showColumn = function (keys, showBy) {\n    this.treeGrid.showColumns(keys, showBy);\n  };\n  /**\n   * Hides a column by column name.\n   *\n   * @param  {string|string[]} keys - Defines a single or collection of column names.\n   * @param  {string} hideBy - Defines the column key either as field name or header text.\n   * @returns {void} .\n   * @public\n   */\n\n\n  Gantt.prototype.hideColumn = function (keys, hideBy) {\n    this.treeGrid.hideColumns(keys, hideBy);\n  };\n  /**\n   * To set scroll top for chart scroll container.\n   *\n   * @param {number} scrollTop - Defines scroll top value for scroll container.\n   * @returns {void} .\n   * @public\n   */\n\n\n  Gantt.prototype.setScrollTop = function (scrollTop) {\n    this.ganttChartModule.scrollObject.setScrollTop(scrollTop);\n  };\n  /**\n   * Cancels edited state.\n   *\n   * @returns {void} .\n   * @public\n   */\n\n\n  Gantt.prototype.cancelEdit = function () {\n    this.isCancelled = true;\n    this.closeGanttActions();\n  };\n  /**\n   * Selects a cell by the given index.\n   *\n   * @param  {IIndex} cellIndex - Defines the row and column indexes.\n   * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n   * @returns {void} .\n   */\n\n\n  Gantt.prototype.selectCell = function (cellIndex, isToggle) {\n    if (this.selectionModule) {\n      this.selectionModule.selectCell(cellIndex, isToggle);\n    }\n  };\n  /**\n   * Selects a collection of cells by row and column indexes.\n   *\n   * @param  {ISelectedCell[]} rowCellIndexes - Specifies the row and column indexes.\n   * @returns {void} .\n   */\n\n\n  Gantt.prototype.selectCells = function (rowCellIndexes) {\n    if (this.selectionModule) {\n      this.selectionModule.selectCells(rowCellIndexes);\n    }\n  };\n  /**\n   * Selects a row by given index.\n   *\n   * @param  {number} index - Defines the row index.\n   * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n   * @returns {void} .\n   */\n\n\n  Gantt.prototype.selectRow = function (index, isToggle) {\n    if (this.selectionModule) {\n      this.selectionModule.selectRow(index, isToggle);\n    }\n  };\n  /**\n   * Selects a collection of rows by indexes.\n   *\n   * @param  {number[]} records - Defines the collection of row indexes.\n   * @returns {void} .\n   */\n\n\n  Gantt.prototype.selectRows = function (records) {\n    if (this.selectionModule) {\n      this.selectionModule.selectRows(records);\n    }\n  };\n  /**\n   * Method to delete record.\n   *\n   * @param {number | string } taskDetail - Defines the details of data to delete.\n   * @returns {void} .\n   * @public\n   */\n\n\n  Gantt.prototype.deleteRecord = function (taskDetail) {\n    if (this.editModule) {\n      this.editModule.deleteRecord(taskDetail);\n    }\n  };\n  /**\n   * Enables or disables ToolBar items.\n   *\n   * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n   * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n   * @returns {void} .\n   */\n\n\n  Gantt.prototype.enableItems = function (items, isEnable) {\n    if (this.toolbarModule) {\n      this.toolbarModule.enableItems(items, isEnable);\n    }\n  };\n  /**\n   * Deselects the current selected rows and cells.\n   *\n   * @returns {void} .\n   */\n\n\n  Gantt.prototype.clearSelection = function () {\n    if (this.selectionModule) {\n      this.selectionModule.clearSelection();\n    }\n  };\n  /**\n   * @param {ITaskAddedEventArgs | IActionBeginEventArgs} args .\n   * @returns {ITaskAddedEventArgs | IActionBeginEventArgs} .\n   * @hidden\n   */\n\n\n  Gantt.prototype.updateDataArgs = function (args) {\n    if (!Array.isArray(args.data)) {\n      var customData = [];\n      customData.push(args.data);\n      setValue('data', customData, args);\n    }\n\n    return args;\n  };\n  /**\n   * Method to convert task data to milestone data.\n   *\n   * @param {string} id - Defines id of record.\n   * @returns {void} .\n   * @public\n   */\n\n\n  Gantt.prototype.convertToMilestone = function (id) {\n    var rowData = this.getRecordByID(id);\n\n    if (!isNullOrUndefined(rowData)) {\n      var data = extend({}, {}, rowData.taskData, true);\n      var taskfields = this.taskFields;\n\n      if (!isNullOrUndefined(taskfields.duration)) {\n        data[taskfields.duration] = 0;\n      } else {\n        data[taskfields.startDate] = new Date(rowData.taskData[taskfields.startDate]);\n        data[taskfields.endDate] = new Date(rowData.taskData[taskfields.startDate]);\n      }\n\n      if (!isNullOrUndefined(taskfields.milestone)) {\n        if (data[taskfields.milestone] === false) {\n          data[taskfields.milestone] = true;\n        }\n      }\n\n      if (!isNullOrUndefined(taskfields.progress)) {\n        data[taskfields.progress] = 0;\n      }\n\n      if (!isNullOrUndefined(taskfields.child) && data[taskfields.child]) {\n        data[taskfields.child] = [];\n      }\n\n      if (!isNullOrUndefined(taskfields.parentID) && data[taskfields.parentID]) {\n        data[taskfields.parentID] = null;\n      }\n\n      if (!isNullOrUndefined(taskfields.segments)) {\n        data[taskfields.segments] = null;\n      }\n\n      if (!isNullOrUndefined(this.contextMenuModule) && this.contextMenuModule.isOpen && this.contextMenuModule.item === 'Milestone') {\n        if (!isNullOrUndefined(taskfields.dependency)) {\n          data[taskfields.dependency] = null;\n        }\n\n        var position = 'Below';\n        this.addRecord(data, position);\n      } else {\n        if (!rowData.hasChildRecords && !rowData.ganttProperties.isMilestone) {\n          this.updateRecordByID(data);\n        }\n      }\n    }\n  };\n  /**\n   * To change the mode of a record.\n   *\n   * @param {object} data .\n   * @returns {void} .\n   */\n\n\n  Gantt.prototype.changeTaskMode = function (data) {\n    var tasks = this.taskFields;\n    var ganttData = this.getRecordByID(data[tasks.id]);\n    var ganttProp = ganttData.ganttProperties;\n    this.isOnEdit = true;\n    this.setRecordValue('isAutoSchedule', !ganttProp.isAutoSchedule, ganttProp, true);\n\n    if (!isNullOrUndefined(this.taskFields.manual)) {\n      this.setRecordValue('taskData.' + tasks.manual, !ganttProp.isAutoSchedule, ganttData);\n      this.setRecordValue(tasks.manual, !ganttProp.isAutoSchedule, ganttData);\n    }\n\n    this.editModule.updateTaskScheduleModes(ganttData);\n    var args = {\n      data: ganttData\n    };\n    this.editModule.initiateUpdateAction(args);\n  };\n  /**\n   * @returns {string[]} .\n   * @private\n   */\n\n\n  Gantt.prototype.getTaskIds = function () {\n    return this.taskIds;\n  };\n  /**\n   * @param {IGanttData} data .\n   * @returns {void} .\n   * @private\n   */\n\n\n  Gantt.prototype.setTaskIds = function (data) {\n    if (this.viewType !== 'ProjectView') {\n      var id = data.ganttProperties.taskId;\n      id = data.level === 0 ? 'R' + id : 'T' + id;\n      this.taskIds.push(id);\n    }\n  };\n  /**\n   * To render the react templates\n   *\n   * @returns {void} .\n   *  @hidden\n   */\n\n\n  Gantt.prototype.renderTemplates = function () {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    if (this.isReact) {\n      this.renderReactTemplates();\n    }\n  };\n  /**\n   * To reset the react templates\n   *\n   * @returns {void} .\n   *  @hidden\n   */\n\n\n  Gantt.prototype.resetTemplates = function () {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    if (this.isReact) {\n      this.clearTemplate();\n    }\n  };\n\n  __decorate([Property(true)], Gantt.prototype, \"allowKeyboard\", void 0);\n\n  __decorate([Property(false)], Gantt.prototype, \"enableImmutableMode\", void 0);\n\n  __decorate([Property(true)], Gantt.prototype, \"disableHtmlEncode\", void 0);\n\n  __decorate([Property(true)], Gantt.prototype, \"autoFocusTasks\", void 0);\n\n  __decorate([Property(true)], Gantt.prototype, \"allowSelection\", void 0);\n\n  __decorate([Property(false)], Gantt.prototype, \"allowSorting\", void 0);\n\n  __decorate([Property(true)], Gantt.prototype, \"enablePredecessorValidation\", void 0);\n\n  __decorate([Property(false)], Gantt.prototype, \"showColumnMenu\", void 0);\n\n  __decorate([Property()], Gantt.prototype, \"columnMenuItems\", void 0);\n\n  __decorate([Property()], Gantt.prototype, \"timezone\", void 0);\n\n  __decorate([Property(false)], Gantt.prototype, \"collapseAllParentTasks\", void 0);\n\n  __decorate([Property(false)], Gantt.prototype, \"highlightWeekends\", void 0);\n\n  __decorate([Property(0)], Gantt.prototype, \"treeColumnIndex\", void 0);\n\n  __decorate([Property([])], Gantt.prototype, \"dataSource\", void 0);\n\n  __decorate([Property('day')], Gantt.prototype, \"durationUnit\", void 0);\n\n  __decorate([Property(null)], Gantt.prototype, \"query\", void 0);\n\n  __decorate([Property(null)], Gantt.prototype, \"dateFormat\", void 0);\n\n  __decorate([Property('auto')], Gantt.prototype, \"height\", void 0);\n\n  __decorate([Property(false)], Gantt.prototype, \"renderBaseline\", void 0);\n\n  __decorate([Property('Horizontal')], Gantt.prototype, \"gridLines\", void 0);\n\n  __decorate([Complex({}, LabelSettings)], Gantt.prototype, \"labelSettings\", void 0);\n\n  __decorate([Property(null)], Gantt.prototype, \"taskbarTemplate\", void 0);\n\n  __decorate([Property(null)], Gantt.prototype, \"parentTaskbarTemplate\", void 0);\n\n  __decorate([Property(null)], Gantt.prototype, \"milestoneTemplate\", void 0);\n\n  __decorate([Property()], Gantt.prototype, \"baselineColor\", void 0);\n\n  __decorate([Property('auto')], Gantt.prototype, \"width\", void 0);\n\n  __decorate([Property(false)], Gantt.prototype, \"enableVirtualization\", void 0);\n\n  __decorate([Property()], Gantt.prototype, \"toolbar\", void 0);\n\n  __decorate([Property(['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'])], Gantt.prototype, \"workWeek\", void 0);\n\n  __decorate([Property(false)], Gantt.prototype, \"includeWeekend\", void 0);\n\n  __decorate([Property(false)], Gantt.prototype, \"allowUnscheduledTasks\", void 0);\n\n  __decorate([Property(false)], Gantt.prototype, \"showInlineNotes\", void 0);\n\n  __decorate([Property(36)], Gantt.prototype, \"rowHeight\", void 0);\n\n  __decorate([Property(null)], Gantt.prototype, \"taskbarHeight\", void 0);\n\n  __decorate([Property(null)], Gantt.prototype, \"projectStartDate\", void 0);\n\n  __decorate([Property(null)], Gantt.prototype, \"projectEndDate\", void 0);\n\n  __decorate([Property(null)], Gantt.prototype, \"resourceIDMapping\", void 0);\n\n  __decorate([Property(null)], Gantt.prototype, \"resourceNameMapping\", void 0);\n\n  __decorate([Property([])], Gantt.prototype, \"resources\", void 0);\n\n  __decorate([Property([])], Gantt.prototype, \"segmentData\", void 0);\n\n  __decorate([Property(null)], Gantt.prototype, \"connectorLineBackground\", void 0);\n\n  __decorate([Property(1)], Gantt.prototype, \"connectorLineWidth\", void 0);\n\n  __decorate([Property([])], Gantt.prototype, \"columns\", void 0);\n\n  __decorate([Property([])], Gantt.prototype, \"addDialogFields\", void 0);\n\n  __decorate([Property([])], Gantt.prototype, \"editDialogFields\", void 0);\n\n  __decorate([Property(-1)], Gantt.prototype, \"selectedRowIndex\", void 0);\n\n  __decorate([Property('hour')], Gantt.prototype, \"workUnit\", void 0);\n\n  __decorate([Property('FixedUnit')], Gantt.prototype, \"taskType\", void 0);\n\n  __decorate([Property('ProjectView')], Gantt.prototype, \"viewType\", void 0);\n\n  __decorate([Collection([{\n    from: 8,\n    to: 12\n  }, {\n    from: 13,\n    to: 17\n  }], DayWorkingTime)], Gantt.prototype, \"dayWorkingTime\", void 0);\n\n  __decorate([Collection([], Holiday)], Gantt.prototype, \"holidays\", void 0);\n\n  __decorate([Collection([], EventMarker)], Gantt.prototype, \"eventMarkers\", void 0);\n\n  __decorate([Complex({}, TaskFields)], Gantt.prototype, \"taskFields\", void 0);\n\n  __decorate([Complex({}, ResourceFields)], Gantt.prototype, \"resourceFields\", void 0);\n\n  __decorate([Complex({}, TimelineSettings)], Gantt.prototype, \"timelineSettings\", void 0);\n\n  __decorate([Complex({}, SortSettings)], Gantt.prototype, \"sortSettings\", void 0);\n\n  __decorate([Complex({}, EditSettings)], Gantt.prototype, \"editSettings\", void 0);\n\n  __decorate([Complex({}, TooltipSettings)], Gantt.prototype, \"tooltipSettings\", void 0);\n\n  __decorate([Complex({}, SelectionSettings)], Gantt.prototype, \"selectionSettings\", void 0);\n\n  __decorate([Property(false)], Gantt.prototype, \"allowFiltering\", void 0);\n\n  __decorate([Property(false)], Gantt.prototype, \"allowExcelExport\", void 0);\n\n  __decorate([Property(false)], Gantt.prototype, \"allowRowDragAndDrop\", void 0);\n\n  __decorate([Property(false)], Gantt.prototype, \"allowReordering\", void 0);\n\n  __decorate([Property(false)], Gantt.prototype, \"readOnly\", void 0);\n\n  __decorate([Property(false)], Gantt.prototype, \"allowResizing\", void 0);\n\n  __decorate([Property(false)], Gantt.prototype, \"enableContextMenu\", void 0);\n\n  __decorate([Property()], Gantt.prototype, \"contextMenuItems\", void 0);\n\n  __decorate([Property(false)], Gantt.prototype, \"allowPdfExport\", void 0);\n\n  __decorate([Property(false)], Gantt.prototype, \"validateManualTasksOnLinking\", void 0);\n\n  __decorate([Property(false)], Gantt.prototype, \"enableMultiTaskbar\", void 0);\n\n  __decorate([Property(false)], Gantt.prototype, \"showOverAllocation\", void 0);\n\n  __decorate([Property('Auto')], Gantt.prototype, \"taskMode\", void 0);\n\n  __decorate([Complex({}, FilterSettings)], Gantt.prototype, \"filterSettings\", void 0);\n\n  __decorate([Complex({}, SearchSettings)], Gantt.prototype, \"searchSettings\", void 0);\n\n  __decorate([Complex({}, SplitterSettings)], Gantt.prototype, \"splitterSettings\", void 0);\n\n  __decorate([Event()], Gantt.prototype, \"queryTaskbarInfo\", void 0);\n\n  __decorate([Event()], Gantt.prototype, \"beforeExcelExport\", void 0);\n\n  __decorate([Event()], Gantt.prototype, \"excelExportComplete\", void 0);\n\n  __decorate([Event()], Gantt.prototype, \"excelQueryCellInfo\", void 0);\n\n  __decorate([Event()], Gantt.prototype, \"excelHeaderQueryCellInfo\", void 0);\n\n  __decorate([Event()], Gantt.prototype, \"rowDrag\", void 0);\n\n  __decorate([Event()], Gantt.prototype, \"rowDragStart\", void 0);\n\n  __decorate([Event()], Gantt.prototype, \"rowDragStartHelper\", void 0);\n\n  __decorate([Event()], Gantt.prototype, \"rowDrop\", void 0);\n\n  __decorate([Event()], Gantt.prototype, \"collapsing\", void 0);\n\n  __decorate([Event()], Gantt.prototype, \"collapsed\", void 0);\n\n  __decorate([Event()], Gantt.prototype, \"expanding\", void 0);\n\n  __decorate([Event()], Gantt.prototype, \"expanded\", void 0);\n\n  __decorate([Event()], Gantt.prototype, \"actionBegin\", void 0);\n\n  __decorate([Event()], Gantt.prototype, \"actionComplete\", void 0);\n\n  __decorate([Event()], Gantt.prototype, \"actionFailure\", void 0);\n\n  __decorate([Event()], Gantt.prototype, \"dataStateChange\", void 0);\n\n  __decorate([Event()], Gantt.prototype, \"taskbarEdited\", void 0);\n\n  __decorate([Event()], Gantt.prototype, \"endEdit\", void 0);\n\n  __decorate([Event()], Gantt.prototype, \"cellEdit\", void 0);\n\n  __decorate([Event()], Gantt.prototype, \"load\", void 0);\n\n  __decorate([Event()], Gantt.prototype, \"created\", void 0);\n\n  __decorate([Event()], Gantt.prototype, \"destroyed\", void 0);\n\n  __decorate([Event()], Gantt.prototype, \"taskbarEditing\", void 0);\n\n  __decorate([Event()], Gantt.prototype, \"dataBound\", void 0);\n\n  __decorate([Event()], Gantt.prototype, \"resizeStart\", void 0);\n\n  __decorate([Event()], Gantt.prototype, \"resizing\", void 0);\n\n  __decorate([Event()], Gantt.prototype, \"resizeStop\", void 0);\n\n  __decorate([Event()], Gantt.prototype, \"splitterResizeStart\", void 0);\n\n  __decorate([Event()], Gantt.prototype, \"splitterResizing\", void 0);\n\n  __decorate([Event()], Gantt.prototype, \"splitterResized\", void 0);\n\n  __decorate([Event()], Gantt.prototype, \"columnDragStart\", void 0);\n\n  __decorate([Event()], Gantt.prototype, \"columnDrag\", void 0);\n\n  __decorate([Event()], Gantt.prototype, \"columnDrop\", void 0);\n\n  __decorate([Event()], Gantt.prototype, \"beforeTooltipRender\", void 0);\n\n  __decorate([Event()], Gantt.prototype, \"rowSelecting\", void 0);\n\n  __decorate([Event()], Gantt.prototype, \"rowSelected\", void 0);\n\n  __decorate([Event()], Gantt.prototype, \"rowDeselecting\", void 0);\n\n  __decorate([Event()], Gantt.prototype, \"rowDeselected\", void 0);\n\n  __decorate([Event()], Gantt.prototype, \"cellSelecting\", void 0);\n\n  __decorate([Event()], Gantt.prototype, \"cellSelected\", void 0);\n\n  __decorate([Event()], Gantt.prototype, \"cellDeselecting\", void 0);\n\n  __decorate([Event()], Gantt.prototype, \"cellDeselected\", void 0);\n\n  __decorate([Event()], Gantt.prototype, \"queryCellInfo\", void 0);\n\n  __decorate([Event()], Gantt.prototype, \"headerCellInfo\", void 0);\n\n  __decorate([Event()], Gantt.prototype, \"rowDataBound\", void 0);\n\n  __decorate([Event()], Gantt.prototype, \"columnMenuOpen\", void 0);\n\n  __decorate([Event()], Gantt.prototype, \"toolbarClick\", void 0);\n\n  __decorate([Event()], Gantt.prototype, \"columnMenuClick\", void 0);\n\n  __decorate([Event()], Gantt.prototype, \"contextMenuOpen\", void 0);\n\n  __decorate([Event()], Gantt.prototype, \"contextMenuClick\", void 0);\n\n  __decorate([Event()], Gantt.prototype, \"onTaskbarClick\", void 0);\n\n  __decorate([Event()], Gantt.prototype, \"recordDoubleClick\", void 0);\n\n  __decorate([Event()], Gantt.prototype, \"onMouseMove\", void 0);\n\n  __decorate([Event()], Gantt.prototype, \"beforePdfExport\", void 0);\n\n  __decorate([Event()], Gantt.prototype, \"pdfExportComplete\", void 0);\n\n  __decorate([Event()], Gantt.prototype, \"pdfQueryCellInfo\", void 0);\n\n  __decorate([Event()], Gantt.prototype, \"pdfQueryTaskbarInfo\", void 0);\n\n  __decorate([Event()], Gantt.prototype, \"pdfQueryTimelineCellInfo\", void 0);\n\n  __decorate([Event()], Gantt.prototype, \"pdfColumnHeaderQueryCellInfo\", void 0);\n\n  Gantt = __decorate([NotifyPropertyChanges], Gantt);\n  return Gantt;\n}(Component);\n\nexport { Gantt };","map":{"version":3,"sources":["/Users/tristanbilot/Desktop/Design4green/design4green/node_modules/@syncfusion/ej2-gantt/src/gantt/base/gantt.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","Component","createElement","Complex","addClass","removeClass","Event","formatUnit","Browser","Internationalization","extend","getValue","isObjectArray","isObject","setValue","isUndefined","Property","NotifyPropertyChanges","L10n","EventHandler","isNullOrUndefined","KeyboardEvents","Collection","append","remove","createSpinner","showSpinner","hideSpinner","TaskProcessor","GanttChart","Timeline","GanttTreeGrid","SortSettings","TaskFields","TimelineSettings","Holiday","EventMarker","DayWorkingTime","EditSettings","SelectionSettings","FilterSettings","SplitterSettings","TooltipSettings","LabelSettings","SearchSettings","ResourceFields","DateProcessor","ChartRows","Dependency","cls","getActualProperties","ConnectorLine","Splitter","Tooltip","FocusModule","isCountRequired","Gantt","_super","options","element","_this","call","isCancelled","previousRecords","editedRecords","modifiedRecords","isOnEdit","isOnDelete","isExpandCollapseLevelMethod","isConnectorLineUpdate","staticSelectedRowIndex","needsID","showActiveElement","addDeleteRecord","enableHeaderFocus","enableValidation","isTreeGridRendered","isFromOnPropertyChange","isGanttChartRendered","isEdit","getModuleName","preRender","initProperties","globalize","locale","isAdaptive","isDevice","flatData","currentViewData","updatedRecords","ids","ganttColumns","localeObj","getDefaultLocale","dataOperation","nonWorkingHours","nonWorkingTimeRanges","workingTimeRanges","defaultEndTime","defaultStartTime","durationUnitTexts","days","hours","minutes","day","hour","minute","durationUnitEditText","perDayWidth","isMileStoneEdited","chartVerticalLineContainer","updatedConnectorLineCollection","connectorLineIds","predecessorsCollection","isInPredecessorValidation","enablePredecessorValidation","isValidationEnabled","isLoad","editedTaskBarItem","validationDialogElement","currentEditedArgs","dialogValidateMode","respectLink","removeLink","preserveLinkWithEditing","secondsPerDay","getSecondsPerDay","nonWorkingDayIndex","getNonWorkingDayIndex","columnMapping","controlId","id","cloneProjectStartDate","cloneProjectEndDate","totalHolidayDates","getHolidayDates","ganttChartModule","timelineModule","chartRowsModule","treeGridModule","dateValidationModule","predecessorModule","connectorLineModule","splitterModule","tooltipModule","keyConfig","home","end","downArrow","upArrow","collapseAll","expandAll","collapseRow","expandRow","saveRequest","cancelRequest","addRow","addRowDialog","editRowDialog","delete","tab","shiftTab","focusTask","indentLevel","outdentLevel","focusSearch","contextMenu","focusModule","zoomingLevels","getZoomingLevels","resourceFieldsMapping","resourceFields","unit","taskFields","work","taskType","taskIds","getDateFormat","dateFormat","ganttDateFormat","getDatePattern","skeleton","resourceSettings","resourceIDMapping","name","resourceNameMapping","validateDimentionValue","value","indexOf","toString","calculateDimensions","settingsHeight","height","parentElement","style","ganttHeight","Number","split","window","innerHeight","settingsWidth","width","elementStyleHeight","elementStyleWidth","offsetHeight","ganttWidth","offsetWidth","render","isReact","treeGrid","grid","trigger","classList","add","root","adaptive","toolbarModule","renderToolbar","renderSplitter","notify","checkDataBinding","processTimeline","processTimelineUnit","calculateZoomingLevelsPerDayWidth","renderGantt","isChange","dependency","updatePredecessors","updatedRecordsDateByPredecessor","calculateProjectDates","validateTimelineProp","updateGanttData","dataSource","count","result","treeGridPane","querySelector","enableContextMenu","renderTreeGrid","wireEvents","updateSplitterPosition","gridLines","renderChartVerticalLines","allowKeyboard","keyboardModule","keyAction","keyActionHandler","bind","keyConfigs","eventName","windowResize","containerHeight","toolbarHeight","contentHeight","chartTimelineContainer","querySelectorAll","updateContentHeight","updateWidthAndHeight","ensureScrollBar","updateRowHeightInConnectorLine","renderConnectorLines","e","onKeyPress","collection","rowHeight","getChartRows","getBoundingClientRect","isNaN","refreshToolbarItems","updateCurrentViewData","getCurrentViewRecords","slice","getRecordFromFlatdata","records","updatedRecord","push","getTaskByUniqueID","uniqueID","args","virtualScrollModule","enableVirtualization","length_1","expandedRecords","getExpandedRecords","chartRow","getExpandStatus","data","parentRecord","getParentTask","parentItem","expanded","parentData","filter","record","topTier","format","bottomTier","timelineUnitSize","level","timelineViewMode","weekStartDay","updateTimescaleView","weekendBackground","showTooltip","formatter","displayHalfValue","displayQuarterValue","date","month","getMonth","getFormatedDate","formatDate","getDurationString","duration","durationUnit","getWorkString","workUnit","treeDataBound","isSingleTier","timelineSingleHeaderOuterDiv","getHeaderContent","createGanttPopUpElement","renderComplete","getCurrentRecords","removePreviousConnectorLines","virtualRender","adjustTable","scrollObject","updateTopPosition","onPropertyChanged","newProp","oldProp","isRefresh","_i","_a","keys","prop","dataBind","reUpdateGanttData","initiateTemplates","refreshGanttRows","refreshColumns","refreshTimeline","module","properties","columnMenuItems","sortSettings","updateChartByNewTimeline","reRenderConnectorLines","filterSettings","renderChartGridLines","toolTipObj","destroy","createTooltip","selectionSettings","enableToggle","searchSettings","undefined","updateSearchTextBox","reUpdateResources","editModule","dialogModule","processDialogFields","treeGridColumns","validateGanttColumns","columns","reUpdateDimention","editSettings","allowAdding","allowDeleting","showDeleteConfirmDialog","allowEditing","allowNextRowEdit","reUpdateEditModules","initPublicProp","treeColumnIndex","updateProjectDates","isTimelineRoundOff","selectionModule","selectRowByIndex","closeGanttActions","hasChildMapping","enable","contextMenuItems","validateManualTasksOnLinking","updateOverAllocationCotainer","refresh","showOverAllocation","viewType","renderOverAllocationContainer","rangeContainer","innerHTML","getPersistData","keyEntity","addOnPersist","isDestroyed","modules","resetTemplates","getTaskbarHeight","taskBarHeight","requiredModules","allowSorting","member","allowFiltering","toolbar","allowReordering","allowExcelExport","allowRowDragAndDrop","allowResizing","allowTaskbarEditing","allowSelection","tooltipSettings","highlightWeekends","holidays","eventMarkers","showColumnMenu","allowPdfExport","sortColumn","columnName","direction","isMultiSort","sortModule","clearSorting","className","verticalLines","chartRowsTD","document","getElementById","display","contains","updateGridLineContainerHeight","getContentHeight","scrollHeight","scrollElement","chartBodyContent","splitterObject","dayMarkersModule","holidayContainer","weekendContainer","eventMarkersContainer","setHeight","styles","appendChild","headerTable","getElementsByClassName","thElements","getElementsByTagName","thLength","thWidth","leftPos","containerDiv","n","parseFloat","divElement","ganttLocale","emptyRecord","startDate","endDate","progress","notes","baselineStartDate","baselineEndDate","taskMode","changeScheduleMode","subTasksStartDate","subTasksEndDate","scheduleStartDate","scheduleEndDate","auto","manual","type","offset","resourceName","resourceID","generalTab","customTab","writeNotes","addDialogTitle","editDialogTitle","edit","update","cancel","search","task","tasks","zoomIn","zoomOut","zoomToFit","excelExport","csvExport","pdfExport","nextTimeSpan","prevTimeSpan","saveButton","taskBeforePredecessorFS","taskAfterPredecessorFS","taskBeforePredecessorSS","taskAfterPredecessorSS","taskBeforePredecessorFF","taskAfterPredecessorFF","taskBeforePredecessorSF","taskAfterPredecessorSF","okText","confirmDelete","from","to","taskLink","lag","start","finish","enterValue","taskInformation","deleteTask","deleteDependency","convert","save","above","below","child","milestone","toTask","toMilestone","leftTaskLabel","rightTaskLabel","timelineCell","confirmPredecessorDelete","unassignedTask","group","indent","outdent","segments","splitTask","mergeTask","left","right","removeSortColumn","actionBeginTask","scrollToDate","tempDate","getDateFromFormat","getTaskLeft","updateScrollLeft","scrollToTask","taskId","ganttProperties","updateChartScrollOffset","top","scrollWidth","setScrollLeft","setScrollTop","cloneParent","parent_1","val","getRootParent","ganttRecord","filterByColumn","fieldName","filterOperator","filterValue","predicate","matchCase","ignoreAccent","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","pdfExportProperties","pdfDoc","pdfExportModule","export","clearFiltering","fields","removeFilteredColsByField","field","renderWorkingDayCell","includeWeekend","nonWorkingDays","getDay","isDisabled","Date","getTime","setHours","previousTimeSpan","mode","performTimeSpanAction","timelineStartDate","timelineEndDate","isFrom","totalTimelineWidth","refreshTimelineByTimeSpan","reUpdateGanttDataPosition","updateLastRowBottomWidth","splitDate","segmentIndexes","reorderColumns","fromFName","toFName","initiateEditAction","isStart","setRecordValue","isTaskData","makeCloneData","rowUniqueID","getRecordByID","enableImmutableMode","cloneData","prevValue","clonedValue","tempData","cellEditModule","isCellEdit","closeEdit","dialogObj","visible","hide","dialogClose","setSplitterPosition","tempSplitterSettings","splitterPosition","calculateSplitterPosition","pane1","pane2","splitterPreviousPositionGrid","splitterPreviousPositionChart","paneSettings","size","triggerCustomResizedEvent","expandByIndex","index","contructExpandCollapseArgs","isExpandCollapseFromChart","expandGanttRow","ind","expandByID","collapseByIndex","collapseGanttRow","collapseByID","addRecord","rowPosition","rowIndex","addRowPosition","addRowIndex","resources","resourceInfo","parentTask","getTaskIds","childRecords","dropChildRecord","position","updateRecordByID","updateTaskId","currentId","newId","expandAtLevel","processZooming","fitToProject","processZoomToFit","reorderRows","fromIndexes","toIndex","rowDragAndDropModule","updateRecordByIndex","addPredecessor","predecessorString","connectorLineEditModule","removePredecessor","updatePredecessor","openAddDialog","openEditDialog","getRowByID","getRowByIndex","gridRow","getRows","gridRows","getUnscheduledTaskClass","ganttProp","traceUnscheduledTask","isUnscheduledTask","popup","content","attrs","tabIndex","getPredecessorTextValue","textValue","getConstant","keyVal","filterModule","getOffsetRect","box","scrollTop","pageYOffset","documentElement","body","scrollLeft","pageXOffset","clientTop","clientLeft","Math","round","expandCollapseAll","updateDataSource","setProperties","projectStartDate","projectEndDate","getGridColumns","getColumns","getColumnByField","column","getGanttColumns","showColumn","showBy","showColumns","hideColumn","hideBy","hideColumns","cancelEdit","selectCell","cellIndex","isToggle","selectCells","rowCellIndexes","selectRow","selectRows","deleteRecord","taskDetail","enableItems","items","isEnable","clearSelection","updateDataArgs","isArray","customData","convertToMilestone","rowData","taskData","taskfields","parentID","contextMenuModule","isOpen","item","hasChildRecords","isMilestone","changeTaskMode","ganttData","isAutoSchedule","updateTaskScheduleModes","initiateUpdateAction","setTaskIds","renderTemplates","renderReactTemplates","clearTemplate"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, createElement, Complex, addClass, removeClass, Event, formatUnit, Browser } from '@syncfusion/ej2-base';\nimport { Internationalization, extend, getValue, isObjectArray, isObject, setValue, isUndefined } from '@syncfusion/ej2-base';\nimport { Property, NotifyPropertyChanges, L10n, EventHandler } from '@syncfusion/ej2-base';\nimport { isNullOrUndefined, KeyboardEvents, Collection, append, remove } from '@syncfusion/ej2-base';\nimport { createSpinner, showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { TaskProcessor } from './task-processor';\nimport { GanttChart } from './gantt-chart';\nimport { Timeline } from '../renderer/timeline';\nimport { GanttTreeGrid } from './tree-grid';\nimport { SortSettings } from '../models/models';\nimport { TaskFields, TimelineSettings, Holiday, EventMarker, DayWorkingTime, EditSettings, SelectionSettings } from '../models/models';\nimport { FilterSettings, SplitterSettings, TooltipSettings, LabelSettings } from '../models/models';\nimport { SearchSettings, ResourceFields } from '../models/models';\nimport { DateProcessor } from './date-processor';\nimport { ChartRows } from '../renderer/chart-rows';\nimport { Dependency } from '../actions/dependency';\nimport * as cls from './css-constants';\nimport { getActualProperties } from '@syncfusion/ej2-grids';\nimport { ConnectorLine } from '../renderer/connector-line';\nimport { Splitter } from './splitter';\nimport { Tooltip } from '../renderer/tooltip';\nimport { FocusModule } from '../actions/keyboard';\nimport { isCountRequired } from './utils';\n/**\n *\n * Represents the Gantt chart component.\n * ```html\n * <div id='gantt'></div>\n * <script>\n *  var ganttObject = new Gantt({\n *      taskFields: { id: 'taskId', name: 'taskName', startDate: 'startDate', duration: 'duration' }\n *  });\n *  ganttObject.appendTo('#gantt');\n * </script>\n * ```\n */\nvar Gantt = /** @class */ (function (_super) {\n    __extends(Gantt, _super);\n    function Gantt(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @hidden */\n        _this.isCancelled = false;\n        /** @hidden */\n        _this.previousRecords = {};\n        /** @hidden */\n        _this.editedRecords = [];\n        /** @hidden */\n        _this.modifiedRecords = [];\n        /** @hidden */\n        _this.isOnEdit = false;\n        /** @hidden */\n        _this.isOnDelete = false;\n        /** @hidden */\n        _this.isExpandCollapseLevelMethod = false;\n        /** @hidden */\n        _this.isConnectorLineUpdate = false;\n        /** @hidden */\n        _this.staticSelectedRowIndex = -1;\n        _this.needsID = true;\n        /** @hidden */\n        _this.showActiveElement = true;\n        /** @hidden */\n        _this.addDeleteRecord = false;\n        /** @hidden */\n        _this.enableHeaderFocus = true;\n        /** @hidden */\n        _this.enableValidation = true;\n        /**\n         * @private\n         */\n        _this.isTreeGridRendered = false;\n        /**\n         * @private\n         */\n        _this.isFromOnPropertyChange = false;\n        /**\n         * @private\n         */\n        _this.isGanttChartRendered = false;\n        /**\n         * @private\n         */\n        _this.isEdit = false;\n        return _this;\n    }\n    /**\n     * To get the module name\n     *\n     * @returns {string} .\n     * @private\n     */\n    Gantt.prototype.getModuleName = function () {\n        return 'gantt';\n    };\n    /**\n     * For internal use only - Initialize the event handler\n     *\n     * @returns {void} .\n     * @private\n     */\n    Gantt.prototype.preRender = function () {\n        this.initProperties();\n    };\n    Gantt.prototype.initProperties = function () {\n        this.globalize = new Internationalization(this.locale);\n        this.isAdaptive = Browser.isDevice;\n        this.flatData = [];\n        this.currentViewData = [];\n        this.updatedRecords = [];\n        this.ids = [];\n        this.ganttColumns = [];\n        this.localeObj = new L10n(this.getModuleName(), this.getDefaultLocale(), this.locale);\n        this.dataOperation = new TaskProcessor(this);\n        this.nonWorkingHours = [];\n        this.nonWorkingTimeRanges = [];\n        this.workingTimeRanges = [];\n        this.defaultEndTime = null;\n        this.defaultStartTime = null;\n        this.durationUnitTexts = {\n            days: 'days',\n            hours: 'hours',\n            minutes: 'minutes',\n            day: 'day',\n            hour: 'hour',\n            minute: 'minute'\n        };\n        this.durationUnitEditText = {\n            minute: ['m', 'min', 'minute', 'minutes'],\n            hour: ['h', 'hr', 'hour', 'hours'],\n            day: ['d', 'dy', 'day', 'days']\n        };\n        this.perDayWidth = null;\n        this.isMileStoneEdited = false;\n        this.chartVerticalLineContainer = null;\n        this.updatedConnectorLineCollection = [];\n        this.connectorLineIds = [];\n        this.predecessorsCollection = [];\n        this.isInPredecessorValidation = this.enablePredecessorValidation;\n        this.isValidationEnabled = true;\n        this.isLoad = true;\n        this.editedTaskBarItem = null;\n        this.validationDialogElement = null;\n        this.currentEditedArgs = {};\n        this.dialogValidateMode = {\n            respectLink: false,\n            removeLink: false,\n            preserveLinkWithEditing: true\n        };\n        this.secondsPerDay = this.dataOperation.getSecondsPerDay();\n        this.nonWorkingDayIndex = [];\n        this.dataOperation.getNonWorkingDayIndex();\n        this.columnMapping = {};\n        this.controlId = this.element.id;\n        this.cloneProjectStartDate = null;\n        this.cloneProjectEndDate = null;\n        this.totalHolidayDates = this.dataOperation.getHolidayDates();\n        this.ganttChartModule = new GanttChart(this);\n        this.timelineModule = new Timeline(this);\n        this.chartRowsModule = new ChartRows(this);\n        this.treeGridModule = new GanttTreeGrid(this);\n        this.dateValidationModule = new DateProcessor(this);\n        this.predecessorModule = new Dependency(this);\n        this.connectorLineModule = new ConnectorLine(this);\n        this.splitterModule = new Splitter(this);\n        this.tooltipModule = new Tooltip(this);\n        this.keyConfig = {\n            home: 'home',\n            end: 'end',\n            downArrow: 'downarrow',\n            upArrow: 'uparrow',\n            collapseAll: 'ctrl+uparrow',\n            expandAll: 'ctrl+downarrow',\n            collapseRow: 'ctrl+shift+uparrow',\n            expandRow: 'ctrl+shift+downarrow',\n            saveRequest: '13',\n            cancelRequest: '27',\n            addRow: 'insert',\n            addRowDialog: 'ctrl+insert',\n            editRowDialog: 'ctrl+f2',\n            delete: 'delete',\n            tab: 'tab',\n            shiftTab: 'shift+tab',\n            focusTask: 'shift+f5',\n            indentLevel: 'shift+leftarrow',\n            outdentLevel: 'shift+rightarrow',\n            focusSearch: 'ctrl+shift+70',\n            contextMenu: 'shift+F10' //F Key\n        };\n        this.focusModule = new FocusModule(this);\n        this.zoomingLevels = this.getZoomingLevels();\n        this.resourceFieldsMapping();\n        if (isNullOrUndefined(this.resourceFields.unit)) { //set resourceUnit as unit if not mapping\n            this.resourceFields.unit = 'unit';\n        }\n        if (!isNullOrUndefined(this.taskFields.work)) {\n            this.taskType = 'FixedWork';\n        }\n        this.taskIds = [];\n    };\n    /**\n     * @returns {string} .\n     * @private\n     */\n    Gantt.prototype.getDateFormat = function () {\n        if (!isNullOrUndefined(this.dateFormat)) {\n            return this.dateFormat;\n        }\n        else {\n            var ganttDateFormat = this.globalize.getDatePattern({ skeleton: 'yMd' });\n            return ganttDateFormat;\n        }\n    };\n    /**\n     * Method to map resource fields.\n     *\n     * @returns {void} .\n     */\n    Gantt.prototype.resourceFieldsMapping = function () {\n        var resourceSettings = this.resourceFields;\n        resourceSettings.id = !isNullOrUndefined(resourceSettings.id) ? resourceSettings.id : this.resourceIDMapping;\n        resourceSettings.name = !isNullOrUndefined(resourceSettings.name) ? resourceSettings.name : this.resourceNameMapping;\n    };\n    /**\n     * To validate height and width\n     *\n     * @param {string | number} value .\n     * @returns {string} .\n     */\n    Gantt.prototype.validateDimentionValue = function (value) {\n        if (!isNullOrUndefined(value)) {\n            if (typeof (value) === 'string' && value !== 'auto' && value.indexOf('%') === -1) {\n                return value.indexOf('px') === -1 ? value + 'px' : value;\n            }\n            else if (typeof (value) === 'number') {\n                return value + 'px';\n            }\n            else {\n                return value.toString();\n            }\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * To calculate dimensions of Gantt control\n     *\n     * @returns {void} .\n     */\n    Gantt.prototype.calculateDimensions = function () {\n        var settingsHeight;\n        if (typeof (this.height) !== 'number' && this.height.indexOf('%') !== -1 && (this.element.parentElement &&\n            !this.element.parentElement.style.height)) {\n            var ganttHeight = Number(this.height.split(\"%\")[0]);\n            ganttHeight = (ganttHeight * window.innerHeight) / 100;\n            if (this.height === '100%') {\n                ganttHeight = ganttHeight - 16;\n            }\n            settingsHeight = this.validateDimentionValue(ganttHeight);\n        }\n        else {\n            settingsHeight = this.validateDimentionValue(this.height);\n        }\n        var settingsWidth = this.validateDimentionValue(this.width);\n        if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n            settingsWidth = this.width;\n        }\n        var elementStyleHeight = this.element.style.height;\n        var elementStyleWidth = this.element.style.width;\n        if (settingsWidth) {\n            this.element.style.width = settingsWidth;\n        }\n        if (settingsHeight) {\n            this.element.style.height = settingsHeight;\n        }\n        if (!settingsHeight && !elementStyleHeight) {\n            this.element.style.height = 'auto'; // old 450px\n        }\n        if (!settingsWidth && !elementStyleWidth) {\n            this.element.style.width = 'auto';\n        }\n        this.ganttHeight = this.element.offsetHeight;\n        this.ganttWidth = this.element.offsetWidth;\n    };\n    /**\n     * @returns {void} .\n     * @private\n     */\n    Gantt.prototype.render = function () {\n        if (this.isReact) {\n            this.treeGrid.isReact = true;\n            this.treeGrid.grid.isReact = true;\n        }\n        createSpinner({ target: this.element }, this.createElement);\n        this.trigger('load', {});\n        this.element.classList.add(cls.root);\n        if (this.isAdaptive) {\n            this.element.classList.add(cls.adaptive);\n        }\n        else {\n            this.element.classList.remove(cls.adaptive);\n        }\n        this.calculateDimensions();\n        if (!isNullOrUndefined(this.toolbarModule)) {\n            this.renderToolbar();\n        }\n        this.splitterModule.renderSplitter();\n        this.notify('renderPanels', null);\n        this.showSpinner();\n        this.dataOperation.checkDataBinding();\n    };\n    /**\n     * Method used to show spinner.\n     *\n     * @returns {void} .\n     */\n    Gantt.prototype.showSpinner = function () {\n        showSpinner(this.element);\n    };\n    /**\n     * Method used to hide spinner.\n     *\n     * @returns {void} .\n     */\n    Gantt.prototype.hideSpinner = function () {\n        hideSpinner(this.element);\n    };\n    /**\n     * @returns {void} .\n     * @private\n     */\n    Gantt.prototype.processTimeline = function () {\n        this.timelineModule.processTimelineUnit();\n        this.timelineModule.calculateZoomingLevelsPerDayWidth(); // To calculate the perDaywidth\n    };\n    /**\n     * @param {boolean} isChange .\n     * @returns {void} .\n     * @private\n     */\n    Gantt.prototype.renderGantt = function (isChange) {\n        // predecessor calculation\n        if (this.predecessorModule && this.taskFields.dependency) {\n            this.predecessorModule.updatePredecessors();\n            if (this.isInPredecessorValidation && this.enableValidation) {\n                this.predecessorModule.updatedRecordsDateByPredecessor();\n            }\n        }\n        if (this.enableValidation) {\n            this.dataOperation.calculateProjectDates();\n            this.timelineModule.validateTimelineProp();\n        }\n        if (isChange) {\n            this.isFromOnPropertyChange = isChange;\n            if (this.enableValidation) {\n                this.dataOperation.updateGanttData();\n            }\n            if (this.dataSource instanceof Object && isCountRequired(this)) {\n                var count = getValue('count', this.dataSource);\n                this.treeGrid.dataSource = { result: this.flatData, count: count };\n            }\n            else {\n                this.treeGrid.dataSource = this.flatData.length > 0 ? this.flatData : [];\n            }\n        }\n        else {\n            if (this.enableValidation) {\n                this.dataOperation.updateGanttData();\n            }\n            this.treeGridPane.classList.remove('e-temp-content');\n            remove(this.treeGridPane.querySelector('.e-gantt-temp-header'));\n            this.notify('dataReady', {});\n            if (this.enableContextMenu) {\n                this.notify('initiate-contextMenu', {});\n            }\n            this.renderTreeGrid();\n            this.wireEvents();\n            this.notify('initPredessorDialog', {});\n        }\n        this.splitterModule.updateSplitterPosition();\n        if (this.gridLines === 'Vertical' || this.gridLines === 'Both') {\n            this.renderChartVerticalLines();\n        }\n    };\n    Gantt.prototype.wireEvents = function () {\n        if (this.allowKeyboard) {\n            this.keyboardModule = new KeyboardEvents(this.element, {\n                keyAction: this.keyActionHandler.bind(this),\n                keyConfigs: this.keyConfig,\n                eventName: 'keydown'\n            });\n        }\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        EventHandler.add(window, 'resize', this.windowResize, this);\n    };\n    /**\n     * Method trigger while user perform window resize.\n     *\n     * @returns {void} .\n     * @private\n     */\n    Gantt.prototype.windowResize = function () {\n        if (!isNullOrUndefined(this.element)) {\n            var settingsHeight = void 0;\n            if (this.height.indexOf('%') !== -1) {\n                var ganttHeight = Number(this.height.split(\"%\")[0]);\n                if (this.element.parentElement && this.element.parentElement.style.height) {\n                    var containerHeight = Number(this.element.parentElement.style.height.split(\"px\")[0]);\n                    ganttHeight = (ganttHeight * containerHeight) / 100;\n                }\n                else {\n                    ganttHeight = Number(this.height.split(\"%\")[0]);\n                    ganttHeight = (ganttHeight * window.innerHeight) / 100;\n                }\n                if (this.height === '100%') {\n                    ganttHeight = ganttHeight - 16;\n                }\n                var toolbarHeight = 0;\n                if (!isNullOrUndefined(this.toolbarModule) && !isNullOrUndefined(this.toolbarModule.element)) {\n                    toolbarHeight = this.toolbarModule.element.offsetHeight;\n                }\n                var contentHeight = ganttHeight - this.ganttChartModule.chartTimelineContainer.offsetHeight - toolbarHeight;\n                settingsHeight = this.validateDimentionValue(ganttHeight);\n                this.element.style.height = settingsHeight;\n                this.element.querySelectorAll('.e-content')[0]['style'].height = contentHeight + 'px';\n                this.element.querySelectorAll('.e-content')[2]['style'].height = contentHeight + 'px';\n            }\n            else {\n                settingsHeight = this.validateDimentionValue(this.height);\n            }\n            this.updateContentHeight();\n            this.ganttChartModule.updateWidthAndHeight(); // Updating chart scroll conatiner height for row mismatch\n            this.treeGridModule.ensureScrollBar();\n            if (this.predecessorModule && this.taskFields.dependency) {\n                this.updateRowHeightInConnectorLine(this.updatedConnectorLineCollection);\n                this.connectorLineModule.renderConnectorLines(this.updatedConnectorLineCollection);\n            }\n        }\n    };\n    Gantt.prototype.keyActionHandler = function (e) {\n        this.focusModule.onKeyPress(e);\n    };\n    /**\n     * Method for updating row height value in connector line collections\n     *\n     * @param {IConnectorLineObject[]} collection .\n     * @returns {void} .\n     * @private\n     */\n    Gantt.prototype.updateRowHeightInConnectorLine = function (collection) {\n        if (collection && collection.length) {\n            var rowHeight = this.ganttChartModule.getChartRows()[0]\n                && this.ganttChartModule.getChartRows()[0].getBoundingClientRect().height;\n            if (rowHeight && !isNaN(rowHeight)) {\n                for (var count = 0; count < collection.length; count++) {\n                    collection[count].rowHeight = rowHeight;\n                }\n            }\n        }\n    };\n    /**\n     * @returns {void} .\n     * @private\n     */\n    Gantt.prototype.renderToolbar = function () {\n        if (!isNullOrUndefined(this.toolbarModule)) {\n            this.toolbarModule.renderToolbar();\n            this.toolbarModule.refreshToolbarItems();\n        }\n    };\n    /**\n     * @returns {void} .\n     * @private\n     */\n    Gantt.prototype.renderTreeGrid = function () {\n        this.treeGridModule.renderTreeGrid();\n    };\n    Gantt.prototype.updateCurrentViewData = function () {\n        this.currentViewData = this.treeGrid.getCurrentViewRecords().slice();\n    };\n    /**\n     * @param {IGanttData} records .\n     * @returns {IGanttData} .\n     * @private\n     */\n    Gantt.prototype.getRecordFromFlatdata = function (records) {\n        var updatedRecord = [];\n        for (var i = 0; i < records.length; i++) {\n            updatedRecord.push(this.getTaskByUniqueID(records[i].uniqueID));\n        }\n        return updatedRecord;\n    };\n    /**\n     * @param {object} args .\n     * @returns {void} .\n     * @private\n     */\n    Gantt.prototype.updateContentHeight = function (args) {\n        if (this.virtualScrollModule && this.enableVirtualization && !isNullOrUndefined(args)) {\n            var length_1 = getValue('result.length', args);\n            this.contentHeight = length_1 * this.rowHeight;\n        }\n        else {\n            var expandedRecords = this.virtualScrollModule && this.enableVirtualization ?\n                this.currentViewData : this.getExpandedRecords(this.currentViewData);\n            var height = void 0;\n            var chartRow = this.ganttChartModule.getChartRows()[0];\n            if (!isNullOrUndefined(chartRow) && chartRow.getBoundingClientRect().height > 0) {\n                height = chartRow.getBoundingClientRect().height;\n            }\n            else {\n                height = this.rowHeight;\n            }\n            this.contentHeight = expandedRecords.length * height;\n        }\n    };\n    /**\n     * To get expand status.\n     *\n     * @param {IGanttData} data .\n     * @returns {boolean} .\n     * @private\n     */\n    Gantt.prototype.getExpandStatus = function (data) {\n        var parentRecord = this.getParentTask(data.parentItem);\n        if (!isNullOrUndefined(parentRecord)) {\n            if (parentRecord.expanded === false) {\n                return false;\n            }\n            else if (parentRecord.parentItem) {\n                var parentData = this.getParentTask(parentRecord.parentItem);\n                if (parentData.expanded === false) {\n                    return false;\n                }\n                else {\n                    return this.getExpandStatus(this.getParentTask(parentRecord.parentItem));\n                }\n            }\n            else {\n                return true;\n            }\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * Get expanded records from given record collection.\n     *\n     * @param {IGanttData[]} records - Defines record collection.\n     * @returns {IGanttData[]} .\n\n     */\n    Gantt.prototype.getExpandedRecords = function (records) {\n        var _this = this;\n        if (isNullOrUndefined(records)) {\n            return [];\n        }\n        var expandedRecords = records.filter(function (record) {\n            return _this.getExpandStatus(record) === true;\n        });\n        return expandedRecords;\n    };\n    /**\n     * Getting the Zooming collections of the Gantt control\n     *\n     * @returns {ZoomTimelineSettings} .\n     * @private\n     */\n    Gantt.prototype.getZoomingLevels = function () {\n        var zoomingLevels = [\n            {\n                topTier: { unit: 'Year', format: 'yyyy', count: 50 },\n                bottomTier: { unit: 'Year', format: 'yyyy', count: 10 }, timelineUnitSize: 99, level: 0,\n                timelineViewMode: 'Year', weekStartDay: 0, updateTimescaleView: true, weekendBackground: null, showTooltip: true\n            },\n            {\n                topTier: { unit: 'Year', format: 'yyyy', count: 20 },\n                bottomTier: { unit: 'Year', format: 'yyyy', count: 5 }, timelineUnitSize: 99, level: 1,\n                timelineViewMode: 'Year', weekStartDay: 0, updateTimescaleView: true, weekendBackground: null, showTooltip: true\n            },\n            {\n                topTier: { unit: 'Year', format: 'yyyy', count: 5 },\n                bottomTier: { unit: 'Year', format: 'yyyy', count: 1 }, timelineUnitSize: 99, level: 2,\n                timelineViewMode: 'Year', weekStartDay: 0, updateTimescaleView: true, weekendBackground: null, showTooltip: true\n            },\n            {\n                topTier: { unit: 'Year', format: 'MMM, yy', count: 1 },\n                bottomTier: {\n                    unit: 'Month', formatter: this.displayHalfValue, count: 6\n                }, timelineUnitSize: 66, level: 3,\n                timelineViewMode: 'Year', weekStartDay: 0, updateTimescaleView: true, weekendBackground: null, showTooltip: true\n            },\n            {\n                topTier: { unit: 'Year', format: 'MMM, yy', count: 1 },\n                bottomTier: {\n                    unit: 'Month', formatter: this.displayHalfValue, count: 6\n                }, timelineUnitSize: 99, level: 4,\n                timelineViewMode: 'Year', weekStartDay: 0, updateTimescaleView: true, weekendBackground: null, showTooltip: true\n            },\n            {\n                topTier: { unit: 'Year', format: 'MMM, yy', count: 1 },\n                bottomTier: {\n                    unit: 'Month', formatter: this.displayQuarterValue, count: 3\n                }, timelineUnitSize: 66, level: 5,\n                timelineViewMode: 'Year', weekStartDay: 0, updateTimescaleView: true, weekendBackground: null, showTooltip: true\n            },\n            {\n                topTier: { unit: 'Year', format: 'yyyy', count: 1 },\n                bottomTier: {\n                    unit: 'Month', formatter: this.displayQuarterValue, count: 3\n                }, timelineUnitSize: 99, level: 6,\n                timelineViewMode: 'Year', weekStartDay: 0, updateTimescaleView: true, weekendBackground: null, showTooltip: true\n            },\n            {\n                topTier: { unit: 'Year', format: 'yyyy', count: 1 },\n                bottomTier: { unit: 'Month', format: 'MMM yyyy', count: 1 }, timelineUnitSize: 99, level: 7,\n                timelineViewMode: 'Year', weekStartDay: 0, updateTimescaleView: true, weekendBackground: null, showTooltip: true\n            },\n            {\n                topTier: { unit: 'Month', format: 'MMM, yy', count: 1 },\n                bottomTier: { unit: 'Week', format: 'dd', count: 1 }, timelineUnitSize: 33, level: 8,\n                timelineViewMode: 'Month', weekStartDay: 0, updateTimescaleView: true, weekendBackground: null, showTooltip: true\n            },\n            {\n                topTier: { unit: 'Month', format: 'MMM, yyyy', count: 1 },\n                bottomTier: { unit: 'Week', format: 'dd MMM', count: 1 }, timelineUnitSize: 66, level: 9,\n                timelineViewMode: 'Month', weekStartDay: 0, updateTimescaleView: true, weekendBackground: null, showTooltip: true\n            },\n            {\n                topTier: { unit: 'Month', format: 'MMM, yyyy', count: 1 },\n                bottomTier: { unit: 'Week', format: 'dd MMM', count: 1 }, timelineUnitSize: 99, level: 10,\n                timelineViewMode: 'Month', weekStartDay: 0, updateTimescaleView: true, weekendBackground: null, showTooltip: true\n            },\n            {\n                topTier: { unit: 'Week', format: 'MMM dd, yyyy', count: 1 },\n                bottomTier: { unit: 'Day', format: 'd', count: 1 }, timelineUnitSize: 33, level: 11,\n                timelineViewMode: 'Week', weekStartDay: 0, updateTimescaleView: true, weekendBackground: null, showTooltip: true\n            },\n            {\n                topTier: { unit: 'Week', format: 'MMM dd, yyyy', count: 1 },\n                bottomTier: { unit: 'Day', format: 'd', count: 1 }, timelineUnitSize: 66, level: 12,\n                timelineViewMode: 'Week', weekStartDay: 0, updateTimescaleView: true, weekendBackground: null, showTooltip: true\n            },\n            {\n                topTier: { unit: 'Week', format: 'MMM dd, yyyy', count: 1 },\n                bottomTier: { unit: 'Day', format: 'd', count: 1 }, timelineUnitSize: 99, level: 13,\n                timelineViewMode: 'Week', weekStartDay: 0, updateTimescaleView: true, weekendBackground: null, showTooltip: true\n            },\n            {\n                topTier: { unit: 'Day', format: 'E dd yyyy', count: 1 },\n                bottomTier: { unit: 'Hour', format: 'hh a', count: 12 }, timelineUnitSize: 66, level: 14,\n                timelineViewMode: 'Day', weekStartDay: 0, updateTimescaleView: true, weekendBackground: null, showTooltip: true\n            },\n            {\n                topTier: { unit: 'Day', format: 'E dd yyyy', count: 1 },\n                bottomTier: { unit: 'Hour', format: 'hh a', count: 12 }, timelineUnitSize: 99, level: 15,\n                timelineViewMode: 'Day', weekStartDay: 0, updateTimescaleView: true, weekendBackground: null, showTooltip: true\n            },\n            {\n                topTier: { unit: 'Day', format: 'E dd yyyy', count: 1 },\n                bottomTier: { unit: 'Hour', format: 'hh a', count: 6 }, timelineUnitSize: 66, level: 16,\n                timelineViewMode: 'Day', weekStartDay: 0, updateTimescaleView: true, weekendBackground: null, showTooltip: true\n            },\n            {\n                topTier: { unit: 'Day', format: 'E dd yyyy', count: 1 },\n                bottomTier: { unit: 'Hour', format: 'hh a', count: 6 }, timelineUnitSize: 99, level: 17,\n                timelineViewMode: 'Day', weekStartDay: 0, updateTimescaleView: true, weekendBackground: null, showTooltip: true\n            },\n            {\n                topTier: { unit: 'Day', format: 'E dd yyyy', count: 1 },\n                bottomTier: { unit: 'Hour', format: 'hh a', count: 2 }, timelineUnitSize: 66, level: 18,\n                timelineViewMode: 'Day', weekStartDay: 0, updateTimescaleView: true, weekendBackground: null, showTooltip: true\n            },\n            {\n                topTier: { unit: 'Day', format: 'E dd yyyy', count: 1 },\n                bottomTier: { unit: 'Hour', format: 'hh a', count: 2 }, timelineUnitSize: 99, level: 19,\n                timelineViewMode: 'Day', weekStartDay: 0, updateTimescaleView: true, weekendBackground: null, showTooltip: true\n            },\n            {\n                topTier: { unit: 'Day', format: 'E dd yyyy', count: 1 },\n                bottomTier: { unit: 'Hour', format: 'hh a', count: 1 }, timelineUnitSize: 66, level: 20,\n                timelineViewMode: 'Day', weekStartDay: 0, updateTimescaleView: true, weekendBackground: null, showTooltip: true\n            },\n            {\n                topTier: { unit: 'Day', format: 'E dd yyyy', count: 1 },\n                bottomTier: { unit: 'Hour', format: 'hh a', count: 1 }, timelineUnitSize: 99, level: 21,\n                timelineViewMode: 'Day', weekStartDay: 0, updateTimescaleView: true, weekendBackground: null, showTooltip: true\n            },\n            {\n                topTier: { unit: 'Hour', format: 'ddd MMM, h a', count: 1 },\n                bottomTier: { unit: 'Minutes', format: 'mm', count: 30 }, timelineUnitSize: 66, level: 22,\n                timelineViewMode: 'Hour', weekStartDay: 0, updateTimescaleView: true, weekendBackground: null, showTooltip: true\n            },\n            {\n                topTier: { unit: 'Hour', format: 'ddd MMM, h a', count: 1 },\n                bottomTier: { unit: 'Minutes', format: 'mm', count: 15 }, timelineUnitSize: 66, level: 23,\n                timelineViewMode: 'Hour', weekStartDay: 0, updateTimescaleView: true, weekendBackground: null, showTooltip: true\n            },\n            {\n                topTier: { unit: 'Hour', format: 'ddd MMM, h a', count: 1 },\n                bottomTier: { unit: 'Minutes', format: 'mm', count: 1 }, timelineUnitSize: 66, level: 24,\n                timelineViewMode: 'Hour', weekStartDay: 0, updateTimescaleView: true, weekendBackground: null, showTooltip: true\n            }\n        ];\n        return zoomingLevels;\n    };\n    Gantt.prototype.displayQuarterValue = function (date) {\n        var month = date.getMonth();\n        if (month >= 0 && month <= 2) {\n            return 'Q1';\n        }\n        else if (month >= 3 && month <= 5) {\n            return 'Q2';\n        }\n        else if (month >= 6 && month <= 8) {\n            return 'Q3';\n        }\n        else {\n            return 'Q4';\n        }\n    };\n    Gantt.prototype.displayHalfValue = function (date) {\n        var month = date.getMonth();\n        if (month >= 0 && month <= 5) {\n            return 'H1';\n        }\n        else {\n            return 'H2';\n        }\n    };\n    /**\n     *\n     * @param {Date} date .\n     * @param {string} format .\n     * @returns {string} .\n     */\n    Gantt.prototype.getFormatedDate = function (date, format) {\n        if (isNullOrUndefined(date)) {\n            return null;\n        }\n        if (isNullOrUndefined(format)) {\n            format = this.getDateFormat();\n        }\n        return this.globalize.formatDate(date, { format: format });\n    };\n    /**\n     * Get duration value as string combined with duration and unit values.\n     *\n     * @param {number} duration - Defines the duration.\n     * @param {string} durationUnit - Defines the duration unit.\n     * @returns {string} .\n     */\n    Gantt.prototype.getDurationString = function (duration, durationUnit) {\n        var value = this.dateValidationModule.getDurationString(duration, durationUnit);\n        return value;\n    };\n    /**\n     * Get work value as string combined with work and unit values.\n     *\n     * @param {number} work - Defines the work value.\n     * @param {string} workUnit - Defines the work unit.\n     * @returns {string} .\n     */\n    Gantt.prototype.getWorkString = function (work, workUnit) {\n        var value = this.dateValidationModule.getWorkString(work, workUnit);\n        return value;\n    };\n    /**\n     *\n     * @param {object} args .\n     * @returns {void} .\n     * @private\n     */\n    Gantt.prototype.treeDataBound = function (args) {\n        if (this.isLoad) {\n            this.updateCurrentViewData();\n            if (!this.enableVirtualization) {\n                this.updateContentHeight();\n            }\n            if (!this.isTreeGridRendered) {\n                this.isTreeGridRendered = true;\n                var toolbarHeight = 0;\n                if (!isNullOrUndefined(this.toolbarModule) && !isNullOrUndefined(this.toolbarModule.element)) {\n                    toolbarHeight = this.toolbarModule.element.offsetHeight;\n                }\n                if (this.timelineModule.isSingleTier) {\n                    addClass(this.treeGrid.element.querySelectorAll('.e-headercell'), cls.timelineSingleHeaderOuterDiv);\n                    addClass(this.treeGrid.element.querySelectorAll('.e-columnheader'), cls.timelineSingleHeaderOuterDiv);\n                }\n                else {\n                    removeClass(this.treeGrid.element.querySelectorAll('.e-headercell'), cls.timelineSingleHeaderOuterDiv);\n                    removeClass(this.treeGrid.element.querySelectorAll('.e-columnheader'), cls.timelineSingleHeaderOuterDiv);\n                }\n                this.treeGrid.height = this.ganttHeight - toolbarHeight -\n                    this.treeGrid.grid.getHeaderContent().offsetHeight;\n                this.notify('tree-grid-created', {});\n                this.createGanttPopUpElement();\n                this.hideSpinner();\n                setValue('isGanttCreated', true, args);\n                this.renderComplete();\n            }\n        }\n        else {\n            this.getCurrentRecords(args);\n        }\n        this.notify('recordsUpdated', {});\n        this.isLoad = false;\n        this.trigger('dataBound', args);\n    };\n    /**\n     * @param {object} args .\n     * @returns {void} .\n     * @private\n     */\n    // eslint-disable-next-line\n    Gantt.prototype.getCurrentRecords = function (args) {\n        if (this.predecessorModule && this.taskFields.dependency) {\n            this.connectorLineModule.removePreviousConnectorLines(this.currentViewData);\n        }\n        this.updateCurrentViewData();\n        if (!this.enableVirtualization) {\n            this.updateContentHeight();\n        }\n        // this.chartRowsModule.refreshGanttRows();\n        if (this.virtualScrollModule && this.enableVirtualization) {\n            this.ganttChartModule.virtualRender.adjustTable();\n            this.ganttChartModule.scrollObject.updateTopPosition();\n        }\n    };\n    /**\n     * Called internally, if any of the property value changed.\n     *\n     * @param {GanttModel} newProp .\n     * @param {GanttModel} oldProp .\n     * @returns {void} .\n     * @private\n     */\n    // eslint-disable-next-line\n    Gantt.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var isRefresh = false;\n        // eslint-disable-next-line\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'allowSelection':\n                case 'allowRowDragAndDrop':\n                case 'allowFiltering':\n                case 'showColumnMenu':\n                case 'allowResizing':\n                case 'allowReordering':\n                case 'enableImmutableMode':\n                    this.treeGrid[prop] = this[prop];\n                    this.treeGrid.dataBind();\n                    break;\n                case 'workWeek':\n                    this.dataOperation.getNonWorkingDayIndex();\n                    this.dataOperation.reUpdateGanttData();\n                    this.chartRowsModule.initiateTemplates();\n                    if (this.taskFields.dependency) {\n                        this.predecessorModule.updatedRecordsDateByPredecessor();\n                    }\n                    this.chartRowsModule.refreshGanttRows();\n                    this.treeGrid.refreshColumns();\n                    this.timelineModule.refreshTimeline();\n                    break;\n                case 'toolbar':\n                    this.notify('ui-toolbarupdate', { module: 'toolbar', properties: newProp });\n                    break;\n                case 'columnMenuItems':\n                    this.treeGrid.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n                    break;\n                case 'eventMarkers':\n                case 'highlightWeekends':\n                    this.notify('ui-update', { module: 'day-markers', properties: newProp });\n                    break;\n                case 'sortSettings':\n                    this.treeGrid.sortSettings = getActualProperties(this.sortSettings);\n                    this.treeGrid.dataBind();\n                    break;\n                case 'timelineSettings':\n                    this.timelineModule.refreshTimeline();\n                    break;\n                case 'rowHeight':\n                case 'taskbarHeight':\n                    this.treeGrid.rowHeight = this.rowHeight;\n                    this.treeGrid.dataBind();\n                    this.chartRowsModule.initiateTemplates();\n                    this.timelineModule.updateChartByNewTimeline();\n                    if (this.taskFields.dependency) {\n                        this.ganttChartModule.reRenderConnectorLines();\n                    }\n                    break;\n                case 'timezone':\n                    this.dataOperation.checkDataBinding(true);\n                    break;\n                case 'filterSettings':\n                    this.treeGrid.filterSettings = getActualProperties(this.filterSettings);\n                    this.treeGrid.dataBind();\n                    break;\n                case 'gridLines':\n                    this.treeGrid.gridLines = this.gridLines;\n                    this.treeGrid.dataBind();\n                    this.renderChartGridLines();\n                    break;\n                case 'tooltipSettings':\n                    if (this.tooltipModule.toolTipObj) {\n                        this.tooltipModule.toolTipObj.destroy();\n                    }\n                    this.tooltipModule.createTooltip();\n                    break;\n                case 'splitterSettings':\n                    this.splitterModule.updateSplitterPosition();\n                    break;\n                case 'selectionSettings':\n                    this.treeGrid.selectionSettings = getActualProperties(this.selectionSettings);\n                    this.treeGrid.grid.selectionSettings.enableToggle = this.selectionSettings.enableToggle;\n                    this.treeGrid.dataBind();\n                    break;\n                case 'searchSettings':\n                    if (newProp.searchSettings.key !== (\"\" || undefined)) {\n                        this.treeGrid.grid.searchSettings = getActualProperties(this.searchSettings);\n                        this.treeGrid.grid.dataBind();\n                    }\n                    else {\n                        this.treeGrid.searchSettings = getActualProperties(this.searchSettings);\n                        this.treeGrid.dataBind();\n                    }\n                    if (this.toolbarModule) {\n                        this.toolbarModule.updateSearchTextBox();\n                    }\n                    break;\n                case 'labelSettings':\n                case 'renderBaseline':\n                case 'baselineColor':\n                    this.chartRowsModule.initiateTemplates();\n                    this.chartRowsModule.refreshGanttRows();\n                    break;\n                case 'resourceIDMapping':\n                case 'resourceNameMapping':\n                case 'resources':\n                    this.dataOperation.reUpdateResources();\n                    this.treeGrid.refreshColumns();\n                    this.chartRowsModule.initiateTemplates();\n                    this.chartRowsModule.refreshGanttRows();\n                    break;\n                case 'includeWeekend':\n                case 'dayWorkingTime':\n                case 'allowUnscheduledTasks':\n                case 'holidays':\n                    if (prop === 'holidays') {\n                        this.totalHolidayDates = this.dataOperation.getHolidayDates();\n                        this.notify('ui-update', { module: 'day-markers', properties: newProp });\n                    }\n                    this.dataOperation.reUpdateGanttData();\n                    this.treeGrid.refreshColumns();\n                    this.chartRowsModule.initiateTemplates();\n                    this.chartRowsModule.refreshGanttRows();\n                    break;\n                case 'addDialogFields':\n                case 'editDialogFields':\n                    if (this.editModule && this.editModule.dialogModule) {\n                        this.editModule.dialogModule.processDialogFields();\n                    }\n                    break;\n                case 'columns':\n                    this.treeGridModule.treeGridColumns = [];\n                    this.treeGridModule.validateGanttColumns();\n                    this.treeGrid.columns = this.treeGridModule.treeGridColumns;\n                    this.chartRowsModule.initiateTemplates();\n                    this.timelineModule.updateChartByNewTimeline();\n                    break;\n                case 'width':\n                case 'height':\n                    this.reUpdateDimention();\n                    break;\n                case 'editSettings':\n                    this.treeGrid.editSettings.allowAdding = this.editSettings.allowAdding;\n                    this.treeGrid.editSettings.allowDeleting = this.editSettings.allowDeleting;\n                    this.treeGrid.editSettings.showDeleteConfirmDialog = this.editSettings.showDeleteConfirmDialog;\n                    this.treeGrid.editSettings.allowEditing = this.editSettings.allowEditing;\n                    this.treeGrid.editSettings.allowNextRowEdit = this.editSettings.allowNextRowEdit;\n                    if (!isNullOrUndefined(this.editModule)) {\n                        this.editModule.reUpdateEditModules();\n                    }\n                    if (!isNullOrUndefined(this.toolbarModule)) {\n                        this.toolbarModule.refreshToolbarItems();\n                    }\n                    break;\n                case 'connectorLineBackground':\n                case 'connectorLineWidth':\n                    if (this.taskFields.dependency) {\n                        this.connectorLineModule.initPublicProp();\n                        this.ganttChartModule.reRenderConnectorLines();\n                    }\n                    break;\n                case 'treeColumnIndex':\n                    this.treeGrid.treeColumnIndex = this.treeColumnIndex;\n                    break;\n                case 'projectStartDate':\n                case 'projectEndDate':\n                    this.dataOperation.calculateProjectDates();\n                    this.updateProjectDates(this.cloneProjectStartDate, this.cloneProjectEndDate, this.isTimelineRoundOff);\n                    break;\n                case 'selectedRowIndex':\n                    if (!isNullOrUndefined(this.selectionModule)) {\n                        this.selectionModule.selectRowByIndex();\n                    }\n                    break;\n                case 'dataSource':\n                    this.closeGanttActions();\n                    if (this.dataSource instanceof Object && isCountRequired(this)) {\n                        // In order to bind the observable data at load time, hasChildMapping is necessary to be mapped.\n                        this.treeGrid.hasChildMapping = 'isParent';\n                        var count = getValue('count', this.dataSource);\n                        this.treeGrid.dataSource = { result: this.flatData, count: count };\n                    }\n                    else {\n                        this.treeGrid.hasChildMapping = null;\n                    }\n                    this.dataOperation.checkDataBinding(true);\n                    break;\n                case 'enableContextMenu':\n                case 'contextMenuItems':\n                    if (this.enableContextMenu || prop === 'contextMenuItems') {\n                        this.notify('reRender-contextMenu', { module: 'contextMenu', enable: this.contextMenuItems });\n                    }\n                    else {\n                        this.treeGrid.contextMenuItems = [];\n                    }\n                    this.treeGrid.dataBind();\n                    break;\n                case 'currencyCode':\n                case 'locale':\n                case 'enableRtl':\n                case 'readOnly':\n                case 'viewType':\n                    isRefresh = true;\n                    break;\n                case 'validateManualTasksOnLinking':\n                    this.validateManualTasksOnLinking = newProp.validateManualTasksOnLinking;\n                    break;\n                case 'showOverAllocation':\n                    this.updateOverAllocationCotainer();\n                    break;\n            }\n        }\n        if (isRefresh) {\n            this.refresh();\n        }\n    };\n    Gantt.prototype.updateOverAllocationCotainer = function () {\n        if (this.showOverAllocation && this.viewType === 'ResourceView') {\n            this.ganttChartModule.renderOverAllocationContainer();\n        }\n        else {\n            var rangeContainer = this.element.querySelector('.' + cls.rangeContainer);\n            if (rangeContainer) {\n                rangeContainer.innerHTML = '';\n            }\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     *\n     * @returns {string} .\n     * @private\n     */\n    Gantt.prototype.getPersistData = function () {\n        var keyEntity = ['allowSelection'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * @returns {void} .\n     * @private\n     */\n    Gantt.prototype.destroy = function () {\n        this.notify('destroy', {});\n        if (!isNullOrUndefined(this.validationDialogElement) && !this.validationDialogElement.isDestroyed) {\n            this.validationDialogElement.destroy();\n        }\n        var modules = ['ganttChartModule', 'timelineModule', 'chartRowsModule',\n            'treeGridModule', 'ganttDataUpdatesModule', 'dateValidationModule', 'tooltipModule'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[i]]) {\n                this[modules[i]] = null;\n            }\n        }\n        if (this.keyboardModule) {\n            this.keyboardModule.destroy();\n        }\n        if (this.editModule && this.editModule.dialogModule) {\n            this.editModule.dialogModule.destroy();\n        }\n        _super.prototype.destroy.call(this);\n        this.chartVerticalLineContainer = null;\n        this.element.innerHTML = '';\n        removeClass([this.element], cls.root);\n        this.element.innerHTML = '';\n        this.isTreeGridRendered = false;\n        this.resetTemplates();\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        EventHandler.remove(window, 'resize', this.windowResize);\n    };\n    /**\n     * Method to get taskbarHeight.\n     *\n     * @returns {number} .\n     * @public\n     */\n    Gantt.prototype.getTaskbarHeight = function () {\n        return this.chartRowsModule.taskBarHeight;\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     *\n     * @returns {ModuleDeclaration[]} .\n     * @hidden\n     */\n    Gantt.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.isDestroyed) {\n            return modules;\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this]\n            });\n        }\n        if (this.allowFiltering || (this.toolbar && this.toolbar.indexOf('Search') !== -1)) {\n            modules.push({\n                member: 'filter',\n                args: [this]\n            });\n        }\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'excelExport',\n                args: [this]\n            });\n        }\n        if (this.allowRowDragAndDrop) {\n            modules.push({\n                member: 'rowDragAndDrop',\n                args: [this]\n            });\n        }\n        if (this.allowResizing) {\n            modules.push({\n                member: 'resize',\n                args: [this]\n            });\n        }\n        if (this.toolbar) {\n            modules.push({\n                member: 'toolbar',\n                args: [this]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowEditing || this.editSettings.allowDeleting\n            || this.editSettings.allowTaskbarEditing || this.allowRowDragAndDrop) {\n            modules.push({\n                member: 'edit',\n                args: [this]\n            });\n        }\n        if (this.allowSelection) {\n            modules.push({\n                member: 'selection',\n                args: [this]\n            });\n        }\n        if (this.tooltipSettings.showTooltip) {\n            modules.push({\n                member: 'tooltip',\n                args: [this]\n            });\n        }\n        if (this.highlightWeekends || (this.holidays && this.holidays.length > 0)\n            || (this.eventMarkers && this.eventMarkers.length > 0)) {\n            modules.push({\n                member: 'dayMarkers',\n                args: [this]\n            });\n        }\n        if (this.enableContextMenu) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu',\n                args: [this]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'pdfExport',\n                args: [this]\n            });\n        }\n        if (this.enableVirtualization) {\n            modules.push({\n                member: 'virtualScroll',\n                args: [this]\n            });\n        }\n        return modules;\n    };\n    /**\n     * Sorts a column with the given options.\n     *\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @returns {void} .\n     */\n    Gantt.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        if (this.sortModule && this.allowSorting) {\n            this.sortModule.sortColumn(columnName, direction, isMultiSort);\n        }\n    };\n    /**\n     * Clears all the sorted columns of the Gantt.\n     *\n     * @returns {void} .\n     */\n    Gantt.prototype.clearSorting = function () {\n        this.sortModule.clearSorting();\n    };\n    /**\n     * To validate and render chart horizontal and vertical lines in the Gantt\n     *\n     * @returns {void} .\n     * @hidden\n     */\n    Gantt.prototype.renderChartGridLines = function () {\n        var className = 'e-chart-row-border';\n        var verticalLines = this.chartVerticalLineContainer;\n        var chartRowsTD = document.getElementById(this.element.id + 'GanttTaskTableBody').querySelectorAll('td');\n        if (this.gridLines === 'Vertical') {\n            if (isNullOrUndefined(verticalLines)) {\n                this.renderChartVerticalLines();\n            }\n            else {\n                if (verticalLines.style.display === 'none') {\n                    verticalLines.style.display = 'block';\n                }\n            }\n            if (chartRowsTD[0].classList.contains(className)) {\n                for (var c = 0; c < chartRowsTD.length; c++) {\n                    removeClass([chartRowsTD[c]], className);\n                }\n            }\n        }\n        else if (this.gridLines === 'Horizontal') {\n            if (!isNullOrUndefined(verticalLines)) {\n                verticalLines.style.display = 'none';\n            }\n            if (!chartRowsTD[0].classList.contains(className)) {\n                for (var c = 0; c < chartRowsTD.length; c++) {\n                    addClass([chartRowsTD[c]], className);\n                }\n            }\n        }\n        else if (this.gridLines === 'Both') {\n            if (isNullOrUndefined(verticalLines)) {\n                this.renderChartVerticalLines();\n            }\n            else {\n                if (verticalLines.style.display === 'none') {\n                    verticalLines.style.display = 'block';\n                }\n            }\n            if (!chartRowsTD[0].classList.contains(className)) {\n                for (var c = 0; c < chartRowsTD.length; c++) {\n                    addClass([chartRowsTD[c]], className);\n                }\n            }\n        }\n        else if (this.gridLines === 'None') {\n            if (!isNullOrUndefined(verticalLines) && verticalLines.style.display !== 'none') {\n                verticalLines.style.display = 'none';\n            }\n            if (chartRowsTD[0].classList.contains(className)) {\n                for (var c = 0; c < chartRowsTD.length; c++) {\n                    removeClass([chartRowsTD[c]], className);\n                }\n            }\n        }\n    };\n    /**\n     * To update height of the Grid lines in the Gantt chart side.\n     *\n     * @returns {void} .\n     * @private\n     */\n    Gantt.prototype.updateGridLineContainerHeight = function () {\n        if (this.chartVerticalLineContainer) {\n            this.chartVerticalLineContainer.style.height = formatUnit(this.getContentHeight());\n        }\n    };\n    /**\n     * To get actual height of grid lines, holidays, weekend and event markers.\n     *\n     * @returns {number} .\n     * @private\n     */\n    Gantt.prototype.getContentHeight = function () {\n        var scrollHeight = this.ganttChartModule.scrollElement.offsetHeight - 16; //16 is horizontal scrollbar height\n        var contentHeight = this.ganttChartModule.chartBodyContent.offsetHeight;\n        var height = contentHeight < scrollHeight ? contentHeight : scrollHeight;\n        return height;\n    };\n    /**\n     * To update height of the Grid lines in the Gantt chart side.\n     *\n     * @returns {void} .\n     * @private\n     */\n    Gantt.prototype.reUpdateDimention = function () {\n        var toolbarHeight = 0;\n        this.calculateDimensions();\n        if (!isNullOrUndefined(this.toolbarModule) && !isNullOrUndefined(this.toolbarModule.element)) {\n            this.toolbarModule.toolbar.refresh();\n            this.toolbarModule.refreshToolbarItems();\n            toolbarHeight = this.toolbarModule.element.offsetHeight;\n        }\n        this.treeGrid.height = this.ganttHeight - toolbarHeight -\n            this.treeGrid.grid.getHeaderContent().offsetHeight;\n        this.splitterModule.splitterObject.height = (this.ganttHeight - toolbarHeight).toString();\n        if (!isNullOrUndefined(this.chartVerticalLineContainer)) {\n            this.chartVerticalLineContainer.style.height = this.ganttHeight + 'px';\n        }\n        if (!isNullOrUndefined(this.dayMarkersModule)) {\n            var holidayContainer = getValue('nonworkingDayRender.holidayContainer', this.dayMarkersModule);\n            var weekendContainer = getValue('nonworkingDayRender.weekendContainer', this.dayMarkersModule);\n            var eventMarkersContainer = getValue('eventMarkerRender.eventMarkersContainer', this.dayMarkersModule);\n            if (holidayContainer) {\n                holidayContainer.style.height = this.ganttHeight + 'px';\n            }\n            if (weekendContainer) {\n                weekendContainer.style.height = this.ganttHeight + 'px';\n            }\n            if (eventMarkersContainer) {\n                eventMarkersContainer.style.height = this.ganttHeight + 'px';\n            }\n        }\n        this.splitterModule.splitterObject.width = this.ganttWidth.toString();\n        this.ganttChartModule.scrollObject.\n            setHeight(this.ganttHeight - this.ganttChartModule.chartTimelineContainer.offsetHeight - toolbarHeight);\n    };\n    /**\n     * To render vertical lines in the Gantt chart side.\n     *\n     * @returns {void} .\n     */\n    Gantt.prototype.renderChartVerticalLines = function () {\n        if (!this.element.contains(this.chartVerticalLineContainer)) {\n            this.chartVerticalLineContainer = createElement('div', {\n                id: this.element.id + 'line-container',\n                styles: 'position:absolute;height:100%;z-index:1'\n            });\n            this.ganttChartModule.chartBodyContent.appendChild(this.chartVerticalLineContainer);\n        }\n        this.chartVerticalLineContainer.innerHTML = '';\n        var headerTable = this.element.getElementsByClassName('e-timeline-header-table-container')[1];\n        if (isNullOrUndefined(headerTable)) {\n            headerTable = this.element.getElementsByClassName('e-timeline-header-table-container')[0];\n        }\n        var thElements = headerTable.getElementsByTagName('th');\n        var thLength = thElements.length;\n        var thWidth;\n        var leftPos = 0;\n        var containerDiv = createElement('div');\n        for (var n = 0; n < thLength; n++) {\n            leftPos = n === 0 ? -1 : (leftPos + parseFloat(thWidth));\n            thWidth = thElements[n].style.width;\n            var divElement = createElement('div', {\n                className: 'e-line-container-cell',\n                styles: 'left:' + leftPos + 'px'\n            });\n            containerDiv.appendChild(divElement);\n        }\n        this.chartVerticalLineContainer.innerHTML = containerDiv.innerHTML;\n    };\n    /**\n     * Method to get default localized text of the Gantt.\n     *\n     * @returns {void} .\n     * @hidden\n     */\n    Gantt.prototype.getDefaultLocale = function () {\n        var ganttLocale = {\n            emptyRecord: 'No records to display',\n            id: 'ID',\n            name: 'Name',\n            startDate: 'Start Date',\n            endDate: 'End Date',\n            duration: 'Duration',\n            progress: 'Progress',\n            dependency: 'Dependency',\n            notes: 'Notes',\n            baselineStartDate: 'Baseline Start Date',\n            baselineEndDate: 'Baseline End Date',\n            taskMode: 'Task Mode',\n            changeScheduleMode: 'Change Schedule Mode',\n            subTasksStartDate: 'SubTasks Start Date',\n            subTasksEndDate: 'SubTasks End Date',\n            scheduleStartDate: 'Schedule Start Date',\n            scheduleEndDate: 'Schedule End Date',\n            auto: 'Auto',\n            manual: 'Manual',\n            type: 'Type',\n            offset: 'Offset',\n            resourceName: 'Resources',\n            resourceID: 'Resource ID',\n            day: 'day',\n            hour: 'hour',\n            minute: 'minute',\n            days: 'days',\n            hours: 'hours',\n            minutes: 'minutes',\n            generalTab: 'General',\n            customTab: 'Custom Columns',\n            writeNotes: 'Write Notes',\n            addDialogTitle: 'New Task',\n            editDialogTitle: 'Task Information',\n            add: 'Add',\n            edit: 'Edit',\n            update: 'Update',\n            delete: 'Delete',\n            cancel: 'Cancel',\n            search: 'Search',\n            task: ' task',\n            tasks: ' tasks',\n            zoomIn: 'Zoom in',\n            zoomOut: 'Zoom out',\n            zoomToFit: 'Zoom to fit',\n            excelExport: 'Excel export',\n            csvExport: 'CSV export',\n            pdfExport: 'Pdf export',\n            expandAll: 'Expand all',\n            collapseAll: 'Collapse all',\n            nextTimeSpan: 'Next timespan',\n            prevTimeSpan: 'Previous timespan',\n            saveButton: 'Save',\n            taskBeforePredecessorFS: 'You moved \"{0}\" to start before \"{1}\" finishes and the two tasks are linked.'\n                + 'As the result, the links cannot be honored. Select one action below to perform',\n            taskAfterPredecessorFS: 'You moved \"{0}\" away from \"{1}\" and the two tasks are linked.'\n                + 'As the result, the links cannot be honored. Select one action below to perform',\n            taskBeforePredecessorSS: 'You moved \"{0}\" to start before \"{1}\" starts and the two tasks are linked.'\n                + 'As the result, the links cannot be honored. Select one action below to perform',\n            taskAfterPredecessorSS: 'You moved \"{0}\" to start after \"{1}\" starts and the two tasks are linked.'\n                + 'As the result, the links cannot be honored. Select one action below to perform',\n            taskBeforePredecessorFF: 'You moved \"{0}\" to finish before \"{1}\" finishes and the two tasks are linked.'\n                + 'As the result, the links cannot be honored. Select one action below to perform',\n            taskAfterPredecessorFF: 'You moved \"{0}\" to finish after \"{1}\" finishes and the two tasks are linked.'\n                + 'As the result, the links cannot be honored. Select one action below to perform',\n            taskBeforePredecessorSF: 'You moved \"{0}\" away from \"{1}\" to starts and the two tasks are linked.'\n                + 'As the result, the links cannot be honored. Select one action below to perform',\n            taskAfterPredecessorSF: 'You moved \"{0}\" to finish after \"{1}\" starts and the two tasks are linked.'\n                + 'As the result, the links cannot be honored. Select one action below to perform',\n            okText: 'Ok',\n            confirmDelete: 'Are you sure you want to Delete Record?',\n            from: 'From',\n            to: 'To',\n            taskLink: 'Task Link',\n            lag: 'Lag',\n            start: 'Start',\n            finish: 'Finish',\n            enterValue: 'Enter the value',\n            taskInformation: 'Task Information',\n            deleteTask: 'Delete Task',\n            deleteDependency: 'Delete Dependency',\n            convert: 'Convert',\n            save: 'Save',\n            above: 'Above',\n            below: 'Below',\n            child: 'Child',\n            milestone: 'Milestone',\n            toTask: 'To Task',\n            toMilestone: 'To Milestone',\n            eventMarkers: 'Event markers',\n            leftTaskLabel: 'Left task label',\n            rightTaskLabel: 'Right task label',\n            timelineCell: 'Timeline cell',\n            confirmPredecessorDelete: 'Are you sure you want to remove dependency link?',\n            unit: 'Unit',\n            work: 'Work',\n            taskType: 'Task Type',\n            unassignedTask: 'Unassigned Task',\n            group: 'Group',\n            indent: 'Indent',\n            outdent: 'Outdent',\n            segments: 'Segments',\n            splitTask: 'Split Task',\n            mergeTask: 'Merge Task',\n            left: 'Left',\n            right: 'Right'\n        };\n        return ganttLocale;\n    };\n    /**\n     * To remove sorted records of particular column.\n     *\n     * @param {string} columnName - Defines the sorted column name.\n     * @returns {void} .\n     */\n    Gantt.prototype.removeSortColumn = function (columnName) {\n        this.sortModule.removeSortColumn(columnName);\n    };\n    /**\n     *\n     * @param {object} args .\n     * @returns {void} .\n     * @private\n     */\n    Gantt.prototype.actionBeginTask = function (args) {\n        this.trigger('actionBegin', args);\n    };\n    /**\n     * To move horizontal scroll bar of Gantt to specific date.\n     *\n     * @param  {string} date - Defines the task date of data.\n     * @returns {void} .\n     */\n    Gantt.prototype.scrollToDate = function (date) {\n        var tempDate = this.dateValidationModule.getDateFromFormat(date);\n        var left = this.dataOperation.getTaskLeft(tempDate, false);\n        this.ganttChartModule.updateScrollLeft(left);\n    };\n    /**\n     * To move horizontal scroll bar of Gantt to specific task id.\n     *\n     * @param  {string} taskId - Defines the task id of data.\n     * @returns {void} .\n     */\n    Gantt.prototype.scrollToTask = function (taskId) {\n        if (this.ids.indexOf(taskId) !== -1) {\n            var left = this.flatData[this.ids.indexOf(taskId)].ganttProperties.left;\n            this.ganttChartModule.updateScrollLeft(left);\n        }\n    };\n    /**\n     * To set scroll left and top in chart side.\n     *\n     * @param  {number} left - Defines the scroll left value of chart side.\n     * @param  {number} top - Defines the scroll top value of chart side.\n     * @returns {void} .\n     */\n    Gantt.prototype.updateChartScrollOffset = function (left, top) {\n        if (!isNullOrUndefined(left)) {\n            left = this.ganttChartModule.scrollElement.scrollWidth <= left ?\n                this.ganttChartModule.scrollElement.scrollWidth : left;\n            this.ganttChartModule.scrollObject.setScrollLeft(left);\n        }\n        if (!isNullOrUndefined(top)) {\n            top = this.ganttChartModule.scrollElement.scrollHeight <= top ? this.ganttChartModule.scrollElement.scrollHeight : top;\n            this.ganttChartModule.scrollObject.setScrollTop(top);\n        }\n    };\n    /**\n     * Get parent task by clone parent item.\n     *\n     * @param {IParent} cloneParent - Defines the clone parent item.\n     * @returns {IGanttData} .\n     * @hidden\n     */\n    Gantt.prototype.getParentTask = function (cloneParent) {\n        if (!isNullOrUndefined(cloneParent)) {\n            var parent_1 = this.flatData.filter(function (val) {\n                return cloneParent.uniqueID === val.uniqueID;\n            });\n            if (parent_1.length > 0) {\n                return parent_1[0];\n            }\n            else {\n                return null;\n            }\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Get parent task by clone parent item.\n     *\n     * @param {IGanttData} ganttRecord .\n     * @param {number} level .\n     * @returns {IGanttData} .\n     * @hidden\n     */\n    Gantt.prototype.getRootParent = function (ganttRecord, level) {\n        if (ganttRecord.level === level) {\n            return ganttRecord;\n        }\n        return this.getRootParent(this.getParentTask(ganttRecord.parentItem), level);\n    };\n    /**\n     * Filters TreeGrid row by column name with the given options.\n     *\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean | number[] | string[] | Date[] | boolean[]} filterValue - Defines the value\n     *  used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, TreeGrid filters the records with exact match.if false, it filters case\n     * insensitive records (uppercase and lowercase letters treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent set to true,\n     * then filter ignores the diacritic characters or accents while filtering.\n     * @returns {void} .\n     */\n    Gantt.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent) {\n        this.treeGrid.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent);\n    };\n    /**\n     * Export Gantt data to Excel file(.xlsx).\n     *\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the Gantt.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<any>} .\n     */\n    Gantt.prototype.excelExport = function (excelExportProperties, isMultipleExport, \n    /* eslint-disable-next-line */\n    workbook, isBlob) {\n        return this.excelExportModule ? this.treeGrid.excelExport(excelExportProperties, isMultipleExport, workbook, isBlob) : null;\n    };\n    /**\n     * Export Gantt data to CSV file.\n     *\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the Gantt.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<any>} .\n     */\n    Gantt.prototype.csvExport = function (excelExportProperties, \n    /* eslint-disable-next-line */\n    isMultipleExport, workbook, isBlob) {\n        return this.excelExportModule ? this.treeGrid.csvExport(excelExportProperties, isMultipleExport, workbook, isBlob) : null;\n    };\n    /**\n     * Export Gantt data to PDF document.\n     *\n     * @param  {PdfExportProperties} pdfExportProperties - Defines the export properties of the Gantt.\n     * @param  {isMultipleExport} isMultipleExport - Define to enable multiple export.\n     * @param  {pdfDoc} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @returns {Promise<any>} .\n     */\n    Gantt.prototype.pdfExport = function (pdfExportProperties, isMultipleExport, pdfDoc) {\n        return this.pdfExportModule ? this.pdfExportModule.export(pdfExportProperties, isMultipleExport, pdfDoc)\n            : null;\n    };\n    /**\n     * Clears the filtered columns in Gantt.\n     *\n     * Can also be used to clear filtering of a specific column in Gantt.\n     *\n     * @param {string[]} fields - Defines the specific column to remove filter.\n     * @returns {void} .\n     */\n    Gantt.prototype.clearFiltering = function (fields) {\n        this.treeGrid.grid.clearFiltering(fields);\n    };\n    /**\n     * Removes filtered column by field name.\n     *\n     * @param  {string} field - Defines column field name to remove filter.\n     * @returns {void} .\n     * @hidden\n     */\n    Gantt.prototype.removeFilteredColsByField = function (field) {\n        this.treeGrid.removeFilteredColsByField(field, false);\n    };\n    /**\n     * Method to set holidays and non working days in date time and date picker controls\n     *\n     * @param {RenderDayCellEventArgs} args .\n     * @returns {void} .\n     * @private\n     */\n    Gantt.prototype.renderWorkingDayCell = function (args) {\n        var includeWeekend = this.taskMode !== 'Auto' ? true : this.includeWeekend ? true : false;\n        var nonWorkingDays = !includeWeekend ? this.nonWorkingDayIndex : [];\n        var holidays = this.totalHolidayDates;\n        if (nonWorkingDays.length > 0 && nonWorkingDays.indexOf(args.date.getDay()) !== -1) {\n            args.isDisabled = true;\n        }\n        else if (holidays.length > 0) {\n            var tempDate = new Date(args.date.getTime());\n            tempDate.setHours(0, 0, 0);\n            if (holidays.indexOf(tempDate.getTime()) !== -1) {\n                args.isDisabled = true;\n            }\n        }\n    };\n    /**\n     * To update timeline at start point with one unit.\n     *\n     * @param {string} mode .\n     * @returns {void} .\n     * @public\n     */\n    Gantt.prototype.previousTimeSpan = function (mode) {\n        this.timelineModule.performTimeSpanAction('prevTimeSpan', 'publicMethod', new Date(this.timelineModule.timelineStartDate.getTime()), new Date(this.timelineModule.timelineEndDate.getTime()), mode);\n    };\n    /**\n     * To update timeline at end point with one unit.\n     *\n     * @param {string} mode .\n     * @returns {void} .\n     * @public\n     */\n    Gantt.prototype.nextTimeSpan = function (mode) {\n        this.timelineModule.performTimeSpanAction('nextTimeSpan', 'publicMethod', new Date(this.timelineModule.timelineStartDate.getTime()), new Date(this.timelineModule.timelineEndDate.getTime()), mode);\n    };\n    /**\n     * To validate project start date and end date.\n     *\n     * @param  {Date} startDate - Defines start date of project.\n     * @param  {Date} endDate - Defines end date of project.\n     * @param  {boolean} isTimelineRoundOff - Defines project start date and end date need to be round off or not.\n     * @param {string} isFrom .\n     * @returns {void} .\n     * @public\n     */\n    Gantt.prototype.updateProjectDates = function (startDate, endDate, isTimelineRoundOff, isFrom) {\n        this.timelineModule.totalTimelineWidth = 0;\n        this.cloneProjectStartDate = startDate;\n        this.cloneProjectEndDate = endDate;\n        this.isTimelineRoundOff = isTimelineRoundOff;\n        this.timelineModule.refreshTimelineByTimeSpan();\n        this.dataOperation.reUpdateGanttDataPosition();\n        this.timelineModule.updateChartByNewTimeline();\n        this.ganttChartModule.chartBodyContent.style.width = formatUnit(this.timelineModule.totalTimelineWidth);\n        this.ganttChartModule.updateLastRowBottomWidth();\n        if (this.gridLines === 'Vertical' || this.gridLines === 'Both') {\n            this.renderChartVerticalLines();\n        }\n        if (this.taskFields.dependency) {\n            this.ganttChartModule.reRenderConnectorLines();\n        }\n        if (isFrom !== 'beforeAdd') {\n            this.notify('selectRowByIndex', {});\n        }\n    };\n    /**\n     * Split the taskbar into segment by the given date\n     *\n     * @param  {string} taskId - Defines the id of a task to be split.\n     * @param  {string} splitDate - Defines in which date the taskbar must be split up.\n     * @returns {void} .\n     * @public\n     */\n    Gantt.prototype.splitTask = function (taskId, splitDate) {\n        this.isEdit = true;\n        this.chartRowsModule.splitTask(taskId, splitDate);\n    };\n    /**\n     * merge the split taskbar with the given segment indexes.\n     *\n     * @param  {string} taskId - Defines the id of a task to be split.\n     * @param  {string} segmentIndexes - Defines the object array of indexes which must be merged.\n     * @returns {void} .\n     * @public\n     */\n    Gantt.prototype.mergeTask = function (taskId, segmentIndexes) {\n        this.chartRowsModule.mergeTask(taskId, segmentIndexes);\n    };\n    /**\n     * Changes the TreeGrid column positions by field names.\n     *\n     * @param  {string} fromFName - Defines origin field name.\n     * @param  {string} toFName - Defines destination field name.\n     * @returns {void} .\n     * @public\n     */\n    Gantt.prototype.reorderColumns = function (fromFName, toFName) {\n        this.treeGrid.reorderColumns(fromFName, toFName);\n    };\n    /**\n     * Method to clear edited collections in gantt set edit flag value\n     *\n     * @param {boolean} isStart .\n     * @returns {void} .\n     * @private\n     */\n    Gantt.prototype.initiateEditAction = function (isStart) {\n        this.isOnEdit = isStart;\n        this.previousRecords = {};\n        this.editedRecords = [];\n    };\n    /**\n     *\n     * @param {string} field Method to update value in Gantt record and make clone record for this\n     * @param {IGanttData | ITaskData} record .\n     * @param {boolean} isTaskData .\n     * @returns {void} .\n     * @private\n     */\n    /* eslint-disable-next-line */\n    Gantt.prototype.setRecordValue = function (field, value, record, isTaskData) {\n        if (this.isOnEdit || this.isOnDelete) {\n            this.makeCloneData(field, record, isTaskData);\n            var id = isTaskData ? record.rowUniqueID : record.ganttProperties.rowUniqueID;\n            var task = this.getRecordByID(id);\n            if (task && this.editedRecords.indexOf(task) === -1) {\n                this.editedRecords.push(task);\n                if (this.enableImmutableMode) {\n                    this.modifiedRecords.push(task);\n                }\n            }\n        }\n        value = isUndefined(value) ? null : value;\n        setValue(field, value, record);\n    };\n    Gantt.prototype.makeCloneData = function (field, record, isTaskData) {\n        var cloneData;\n        /* eslint-disable-next-line */\n        var value = getValue(field, record);\n        /* eslint-disable-next-line */\n        var prevValue;\n        /* eslint-disable-next-line */\n        var clonedValue;\n        if (isTaskData) {\n            field = 'ganttProperties.' + field;\n        }\n        if (isNullOrUndefined(this.previousRecords[record.uniqueID])) {\n            var tempData = {};\n            this.previousRecords[record.uniqueID] = tempData;\n        }\n        /* eslint-disable-next-line */\n        cloneData = this.previousRecords[record.uniqueID];\n        /* eslint-disable-next-line */\n        prevValue = getValue(field, cloneData);\n        if (isUndefined(prevValue)) {\n            if (value instanceof Date) {\n                clonedValue = new Date(value.getTime());\n            }\n            else if (isObjectArray(value)) {\n                clonedValue = extend([], value, [], true);\n            }\n            else if (isObject(value)) {\n                clonedValue = extend({}, {}, value, true);\n            }\n            else {\n                clonedValue = value;\n            }\n            if (!isUndefined(clonedValue)) {\n                setValue(field, clonedValue, cloneData);\n            }\n            else {\n                setValue(field, null, cloneData);\n            }\n        }\n    };\n    Gantt.prototype.closeGanttActions = function () {\n        if (this.editModule) {\n            if (this.editModule.cellEditModule && this.editModule.cellEditModule.isCellEdit) {\n                this.treeGrid.closeEdit();\n                this.editModule.cellEditModule.isCellEdit = false;\n                if (!isNullOrUndefined(this.toolbarModule)) {\n                    this.toolbarModule.refreshToolbarItems();\n                }\n            }\n            else if (this.editModule.dialogModule && this.editModule.dialogModule.dialogObj &&\n                this.editModule.dialogModule.dialogObj.visible) {\n                this.editModule.dialogModule.dialogObj.hide();\n                this.editModule.dialogModule.dialogClose();\n            }\n        }\n    };\n    /**\n     * Method to get task by uniqueId value.\n     *\n     * @param {string} id - Defines the task id.\n     * @returns {IGanttData} .\n     * @isGenericType true\n     */\n    Gantt.prototype.getTaskByUniqueID = function (id) {\n        var value = this.flatData.filter(function (val) {\n            return val.uniqueID === id;\n        });\n        if (value.length > 0) {\n            return value[0];\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Method to get record by id value.\n     *\n     * @param {string} id - Defines the id of record.\n     * @returns {IGanttData} .\n     * @isGenericType true\n     */\n    Gantt.prototype.getRecordByID = function (id) {\n        if (isNullOrUndefined(id)) {\n            return null;\n        }\n        return this.flatData[this.ids.indexOf(id.toString())];\n    };\n    /**\n     * Method to set splitter position.\n     *\n     * @param {string|number} value - Define value to splitter settings property.\n     * @param {string} type - Defines name of internal splitter settings property.\n     * @returns {void} .\n     */\n    Gantt.prototype.setSplitterPosition = function (value, type) {\n        var tempSplitterSettings = {};\n        tempSplitterSettings[type] = value;\n        var splitterPosition = this.splitterModule.calculateSplitterPosition(tempSplitterSettings, true);\n        var pane1 = this.splitterModule.splitterObject.element.querySelectorAll('.e-pane')[0];\n        var pane2 = this.splitterModule.splitterObject.element.querySelectorAll('.e-pane')[1];\n        this.splitterModule.splitterPreviousPositionGrid = pane1.scrollWidth + 1 + 'px';\n        this.splitterModule.splitterPreviousPositionChart = pane2.scrollWidth + 1 + 'px';\n        this.splitterModule.splitterObject.paneSettings[0].size = splitterPosition;\n        this.splitterModule.triggerCustomResizedEvent();\n    };\n    /**\n     * Expand the records by index value.\n     *\n     * @param {number[] | number} index - Defines the index of rows to be expand.\n     * @returns {void} .\n     * @public\n     */\n    Gantt.prototype.expandByIndex = function (index) {\n        if (typeof index === 'number') {\n            var args = this.contructExpandCollapseArgs(null, index);\n            this.ganttChartModule.isExpandCollapseFromChart = true;\n            this.ganttChartModule.expandGanttRow(args);\n        }\n        else {\n            for (var i = 0; i < index.length; i++) {\n                if (typeof index[i] === 'number') {\n                    var ind = index[i];\n                    var args = this.contructExpandCollapseArgs(null, ind);\n                    this.ganttChartModule.isExpandCollapseFromChart = true;\n                    this.ganttChartModule.expandGanttRow(args);\n                }\n            }\n        }\n    };\n    /**\n     * Expand the record by task id.\n     *\n     * @param {number} id - Defines the id of task.\n     * @returns {void} .\n     * @public\n     */\n    Gantt.prototype.expandByID = function (id) {\n        var args = this.contructExpandCollapseArgs(id);\n        this.ganttChartModule.isExpandCollapseFromChart = true;\n        this.ganttChartModule.expandGanttRow(args);\n    };\n    /**\n     * Collapse the record by index value.\n     *\n     * @param {number} index - Defines the index of row.\n     * @returns {void} .\n     * @public\n     */\n    Gantt.prototype.collapseByIndex = function (index) {\n        var args = this.contructExpandCollapseArgs(null, index);\n        this.ganttChartModule.isExpandCollapseFromChart = true;\n        this.ganttChartModule.collapseGanttRow(args);\n    };\n    /**\n     * Collapse the record by id value.\n     *\n     * @param {number} id - Defines the id of task.\n     * @returns {void} .\n     * @public\n     */\n    Gantt.prototype.collapseByID = function (id) {\n        var args = this.contructExpandCollapseArgs(id);\n        this.ganttChartModule.isExpandCollapseFromChart = true;\n        this.ganttChartModule.collapseGanttRow(args);\n    };\n    /**\n     * Method to add record.\n     *\n     * @param {Object[] | IGanttData | Object} data - Defines record to add.\n     * @param {RowPosition} rowPosition - Defines the position of row.\n     * @param {number} rowIndex - Defines the row index.\n     * @returns {void} .\n     * @public\n     */\n    Gantt.prototype.addRecord = function (data, rowPosition, rowIndex) {\n        if (this.editModule && this.editSettings.allowAdding) {\n            if (this.viewType === 'ResourceView') {\n                this.editModule.addRowPosition = rowPosition;\n                this.editModule.addRowIndex = rowIndex;\n                var resources = data[this.taskFields.resourceInfo];\n                var id = void 0;\n                var parentTask = void 0;\n                if (!isNullOrUndefined(resources) && resources.length) {\n                    for (var i = 0; i < resources.length; i++) {\n                        id = (typeof resources[i] === 'object') ? resources[i][this.resourceFields.id] :\n                            resources[0];\n                        parentTask = this.flatData[this.getTaskIds().indexOf('R' + id)];\n                        if (parentTask) {\n                            break;\n                        }\n                    }\n                    if (parentTask && parentTask.childRecords.length || parentTask.level === 0) {\n                        var dropChildRecord = parentTask.childRecords[rowIndex];\n                        if (dropChildRecord) {\n                            var position = rowPosition === 'Above' || rowPosition === 'Below' ? rowPosition :\n                                'Child';\n                            if (position === 'Child') {\n                                this.editModule.addRecord(data, position, this.getTaskIds().indexOf('R' + id));\n                            }\n                            else {\n                                this.editModule.addRecord(data, position, this.flatData.indexOf(dropChildRecord));\n                            }\n                        }\n                        else {\n                            this.editModule.addRecord(data, 'Child', this.getTaskIds().indexOf('R' + id));\n                        }\n                    }\n                    else {\n                        this.editModule.addRecord(data, 'Bottom');\n                    }\n                }\n                else {\n                    this.editModule.addRecord(data, 'Bottom');\n                }\n                this.editModule.addRowPosition = null;\n                this.editModule.addRowIndex = null;\n            }\n            else {\n                this.editModule.addRecord(data, rowPosition, rowIndex);\n            }\n        }\n    };\n    /**\n     * Method to update record by ID.\n     *\n     * @param  {Object} data - Defines the data to modify.\n     * @returns {void} .\n     * @public\n     */\n    Gantt.prototype.updateRecordByID = function (data) {\n        if (this.editModule && this.editSettings.allowEditing) {\n            this.editModule.updateRecordByID(data);\n        }\n    };\n    /**\n     * To update existing taskId with new unique Id.\n     *\n     * @param {number | string} currentId .\n     * @param {number | string} newId .\n     * @returns {void} .\n     */\n    Gantt.prototype.updateTaskId = function (currentId, newId) {\n        if (this.editModule && this.editSettings.allowEditing) {\n            this.editModule.updateTaskId(currentId, newId);\n        }\n    };\n    /**\n     * Public method to expand particular level of rows.\n     *\n     * @returns {void} .\n     * @param {number} level .\n     * @private\n     */\n    Gantt.prototype.expandAtLevel = function (level) {\n        if (this.enableVirtualization) {\n            this.isExpandCollapseLevelMethod = true;\n        }\n        this.ganttChartModule.expandAtLevel(level);\n    };\n    /**\n     * To indent the level of selected task to the hierarchical Gantt task.\n     *\n     * @returns {void} .\n     * @public\n     */\n    Gantt.prototype.indent = function () {\n        if (this.editModule && this.editSettings.allowEditing) {\n            this.editModule.indent();\n        }\n    };\n    /**\n     * To outdent the level of selected task from the hierarchical Gantt task.\n     *\n     * @returns {void} .\n     * @public\n     */\n    Gantt.prototype.outdent = function () {\n        if (this.editModule && this.editSettings.allowEditing) {\n            this.editModule.outdent();\n        }\n    };\n    /**\n     * To perform Zoom in action on Gantt timeline.\n     *\n     * @returns {void} .\n     * @public\n     */\n    Gantt.prototype.zoomIn = function () {\n        this.timelineModule.processZooming(true);\n    };\n    /**\n     * To perform zoom out action on Gantt timeline.\n     *\n     * @returns {void} .\n     * @public\n     */\n    Gantt.prototype.zoomOut = function () {\n        this.timelineModule.processZooming(false);\n    };\n    /**\n     * To show all project task in available chart width\n     *\n     * @returns {void} .\n     * @public\n     */\n    Gantt.prototype.fitToProject = function () {\n        this.timelineModule.processZoomToFit();\n        this.ganttChartModule.updateScrollLeft(0);\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     *\n     * @param {number[]} fromIndexes .\n     * @param {number} toIndex .\n     * @param {string} position .\n     * @returns {void} .\n     */\n    Gantt.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        this.rowDragAndDropModule.reorderRows(fromIndexes, toIndex, position);\n    };\n    /**\n     * Method to update record by Index.\n     *\n     * @param  {number} index - Defines the index of data to modify.\n     * @param  {object} data - Defines the data to modify.\n     * @returns {void} .\n     * @public\n     */\n    Gantt.prototype.updateRecordByIndex = function (index, data) {\n        if (this.editModule && this.editSettings.allowEditing) {\n            var tasks = this.taskFields;\n            var record = this.updatedRecords.length > 0 ?\n                !isNullOrUndefined(this.updatedRecords[index]) ? this.updatedRecords[index] : null : null;\n            if (!isNullOrUndefined(record)) {\n                data[tasks.id] = record[tasks.id];\n                this.editModule.updateRecordByID(data);\n            }\n        }\n    };\n    /**\n     * To add dependency for Task.\n     *\n     * @param  {number} id - Defines the ID of data to modify.\n     * @param  {string} predecessorString - Defines the predecessor string to add.\n     * @returns {void} .\n     * @public\n     */\n    Gantt.prototype.addPredecessor = function (id, predecessorString) {\n        var ganttRecord = this.getRecordByID(id.toString());\n        if (this.editModule && !isNullOrUndefined(ganttRecord) && this.editSettings.allowTaskbarEditing) {\n            this.connectorLineEditModule.addPredecessor(ganttRecord, predecessorString);\n        }\n    };\n    /**\n     * To remove dependency from task.\n     *\n     * @param  {number} id - Defines the ID of task to modify.\n     * @returns {void} .\n     * @public\n     */\n    Gantt.prototype.removePredecessor = function (id) {\n        var ganttRecord = this.getRecordByID(id.toString());\n        if (this.editModule && !isNullOrUndefined(ganttRecord) && this.editSettings.allowTaskbarEditing) {\n            this.connectorLineEditModule.removePredecessor(ganttRecord);\n        }\n    };\n    /**\n     * To modify current dependency values of Task by task id.\n     *\n     * @param  {number} id - Defines the ID of data to modify.\n     * @param  {string} predecessorString - Defines the predecessor string to update.\n     * @returns {void} .\n     * @public\n     */\n    Gantt.prototype.updatePredecessor = function (id, predecessorString) {\n        var ganttRecord = this.getRecordByID(id.toString());\n        if (this.editModule && !isNullOrUndefined(ganttRecord) && this.editSettings.allowTaskbarEditing) {\n            this.connectorLineEditModule.updatePredecessor(ganttRecord, predecessorString);\n        }\n    };\n    /**\n     * Method to open Add dialog.\n     *\n     * @returns {void} .\n     * @public\n     */\n    Gantt.prototype.openAddDialog = function () {\n        if (this.editModule && this.editModule.dialogModule && this.editSettings.allowAdding) {\n            this.editModule.dialogModule.openAddDialog();\n        }\n    };\n    /**\n     * Method to open Edit dialog.\n     *\n     * @param {number } taskId - Defines the id of task.\n     * @returns {void} .\n     * @public\n     */\n    Gantt.prototype.openEditDialog = function (taskId) {\n        if (this.editModule && this.editModule.dialogModule && this.editSettings.allowEditing) {\n            this.editModule.dialogModule.openEditDialog(taskId);\n        }\n    };\n    /**\n     * Changes the TreeGrid column positions by field names.\n     *\n     * @param {string | number} id .\n     * @param {number} index .\n     * @returns {void} .\n     * @private\n     */\n    Gantt.prototype.contructExpandCollapseArgs = function (id, index) {\n        var chartRow;\n        var record;\n        var rowIndex;\n        if (isNullOrUndefined(index)) {\n            record = this.getRecordByID(id.toString());\n            chartRow = this.getRowByID(id);\n            rowIndex = getValue('rowIndex', chartRow);\n        }\n        else if (!isNullOrUndefined(index)) {\n            chartRow = this.getRowByIndex(index);\n            rowIndex = getValue('rowIndex', chartRow);\n            record = this.currentViewData[rowIndex];\n        }\n        var gridRow = this.treeGrid.getRows()[rowIndex];\n        return { data: record, gridRow: gridRow, chartRow: chartRow, cancel: false };\n    };\n    /**\n     * Method to get chart row value by index.\n     *\n     * @param {number} index - Defines the index of row.\n     * @returns {HTMLElement} .\n     */\n    Gantt.prototype.getRowByIndex = function (index) {\n        try {\n            var gridRows = this.element.querySelectorAll('.e-chart-row');\n            if (!isNullOrUndefined(index)) {\n                return gridRows[index];\n            }\n            else {\n                return null;\n            }\n        }\n        catch (e) {\n            return null;\n        }\n    };\n    /**\n     * Method to get the row element by task id.\n     *\n     * @param {string | number} id - Defines the id of task.\n     * @returns {HTMLElement} .\n     */\n    Gantt.prototype.getRowByID = function (id) {\n        var record = this.getRecordByID(id.toString());\n        var index = this.updatedRecords.indexOf(record);\n        if (index !== -1) {\n            return this.getRowByIndex(index);\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Method to get class name for unscheduled tasks\n     *\n     * @param {ITaskData} ganttProp .\n     * @returns {string} .\n     * @private\n     */\n    Gantt.prototype.getUnscheduledTaskClass = function (ganttProp) {\n        if (isNullOrUndefined(ganttProp.startDate) && isNullOrUndefined(ganttProp.endDate) &&\n            isNullOrUndefined(ganttProp.duration)) {\n            return ' ' + cls.traceUnscheduledTask;\n        }\n        else if (isNullOrUndefined(ganttProp.startDate) || isNullOrUndefined(ganttProp.endDate) ||\n            isNullOrUndefined(ganttProp.duration)) {\n            return ' ' + cls.traceUnscheduledTask;\n        }\n        else {\n            return '';\n        }\n    };\n    /**\n     * Method to get class name for unscheduled tasks\n     *\n     * @param {ITaskData} ganttProp .\n     * @returns {boolean} .\n     * @private\n     */\n    Gantt.prototype.isUnscheduledTask = function (ganttProp) {\n        if (isNullOrUndefined(ganttProp.startDate) || isNullOrUndefined(ganttProp.endDate) ||\n            isNullOrUndefined(ganttProp.duration)) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    Gantt.prototype.createGanttPopUpElement = function () {\n        var popup = this.createElement('div', { className: 'e-ganttpopup', styles: 'display:none;' });\n        var content = this.createElement('div', { className: 'e-content', attrs: { tabIndex: '-1' } });\n        append([content, this.createElement('div', { className: 'e-uptail e-tail' })], popup);\n        content.appendChild(this.createElement('span'));\n        append([content, this.createElement('div', { className: 'e-downtail e-tail' })], popup);\n        document.getElementById(this.element.id + 'GanttChart').appendChild(popup);\n    };\n    /**\n     * Method to get predecessor value as string.\n     *\n     * @param {string} type .\n     * @returns {HTMLElement} .\n     * @private\n     */\n    Gantt.prototype.getPredecessorTextValue = function (type) {\n        var textValue;\n        switch (type) {\n            case 'SS':\n                textValue = this.localeObj.getConstant('start') + '-' + this.localeObj.getConstant('start');\n                break;\n            case 'FF':\n                textValue = this.localeObj.getConstant('finish') + '-' + this.localeObj.getConstant('finish');\n                break;\n            case 'SF':\n                textValue = this.localeObj.getConstant('start') + '-' + this.localeObj.getConstant('finish');\n                break;\n            case 'FS':\n                textValue = this.localeObj.getConstant('finish') + '-' + this.localeObj.getConstant('start');\n                break;\n        }\n        return textValue;\n    };\n    /**\n     * Method to perform search action in Gantt.\n     *\n     * @param {string} keyVal - Defines key value to search.\n     * @returns {void} .\n     */\n    Gantt.prototype.search = function (keyVal) {\n        if (this.filterModule) {\n            this.searchSettings.key = keyVal;\n            this.dataBind();\n        }\n    };\n    /**\n     * Method to get offset rect value\n     *\n     * @param {HTMLElement} element .\n     * @returns {number} .\n     * @hidden\n     */\n    Gantt.prototype.getOffsetRect = function (element) {\n        var box = element.getBoundingClientRect();\n        var scrollTop = window.pageYOffset || document.documentElement.scrollTop\n            || document.body.scrollTop;\n        var scrollLeft = window.pageXOffset || document.documentElement.scrollLeft ||\n            document.body.scrollLeft;\n        var clientTop = document.documentElement.clientTop || document.body.clientTop || 0;\n        var clientLeft = document.documentElement.clientLeft || document.body.clientLeft || 0;\n        var top = box.top + scrollTop - clientTop;\n        var left = box.left + scrollLeft - clientLeft;\n        return { top: Math.round(top), left: Math.round(left), width: box.width, height: box.height };\n    };\n    /**\n     * Method to expand all the rows of Gantt.\n     *\n     * @returns {void} .\n     * @public\n     */\n    Gantt.prototype.expandAll = function () {\n        this.ganttChartModule.expandCollapseAll('expand');\n    };\n    /**\n     * Method to update data source.\n     *\n     * @returns {void} .\n     * @param {object[]} dataSource - Defines a collection of data.\n     * @param {object} args - Defines the projectStartDate and projectEndDate values.\n     * @public\n     */\n    Gantt.prototype.updateDataSource = function (dataSource, args) {\n        if (!isNullOrUndefined(args)) {\n            for (var _i = 0, _a = Object.keys(args); _i < _a.length; _i++) { // eslint-disable-line\n                var prop = _a[_i];\n                switch (prop) {\n                    case 'projectStartDate':\n                        this.setProperties({ projectStartDate: args[prop] }, true);\n                        break;\n                    case 'projectEndDate':\n                        this.setProperties({ projectEndDate: args[prop] }, true);\n                        break;\n                }\n            }\n        }\n        this.dataSource = dataSource;\n    };\n    /**\n     * Method to collapse all the rows of Gantt.\n     *\n     * @returns {void} .\n     * @public\n     */\n    Gantt.prototype.collapseAll = function () {\n        this.ganttChartModule.expandCollapseAll('collapse');\n    };\n    /**\n     * Gets the columns from the TreeGrid.\n     *\n     * @returns {Column[]} .\n     * @public\n     */\n    Gantt.prototype.getGridColumns = function () {\n        return this.treeGrid.getColumns();\n    };\n    /**\n     * Method to column from given column collection based on field value\n     *\n     * @param {string} field .\n     * @param {ColumnModel[]} columns .\n     * @returns {ColumnModel} .\n     * @private\n     */\n    Gantt.prototype.getColumnByField = function (field, columns) {\n        var column = columns.filter(function (value) {\n            return value.field === field;\n        });\n        return column.length > 0 ? column[0] : null;\n    };\n    /**\n     * Gets the Gantt columns.\n     *\n     * @returns {ColumnModel[]} .\n     * @public\n     */\n    Gantt.prototype.getGanttColumns = function () {\n        return this.ganttColumns;\n    };\n    /**\n     * Shows a column by its column name.\n     *\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @returns {void} .\n     * @public\n     */\n    Gantt.prototype.showColumn = function (keys, showBy) {\n        this.treeGrid.showColumns(keys, showBy);\n    };\n    /**\n     * Hides a column by column name.\n     *\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @returns {void} .\n     * @public\n     */\n    Gantt.prototype.hideColumn = function (keys, hideBy) {\n        this.treeGrid.hideColumns(keys, hideBy);\n    };\n    /**\n     * To set scroll top for chart scroll container.\n     *\n     * @param {number} scrollTop - Defines scroll top value for scroll container.\n     * @returns {void} .\n     * @public\n     */\n    Gantt.prototype.setScrollTop = function (scrollTop) {\n        this.ganttChartModule.scrollObject.setScrollTop(scrollTop);\n    };\n    /**\n     * Cancels edited state.\n     *\n     * @returns {void} .\n     * @public\n     */\n    Gantt.prototype.cancelEdit = function () {\n        this.isCancelled = true;\n        this.closeGanttActions();\n    };\n    /**\n     * Selects a cell by the given index.\n     *\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @returns {void} .\n     */\n    Gantt.prototype.selectCell = function (cellIndex, isToggle) {\n        if (this.selectionModule) {\n            this.selectionModule.selectCell(cellIndex, isToggle);\n        }\n    };\n    /**\n     * Selects a collection of cells by row and column indexes.\n     *\n     * @param  {ISelectedCell[]} rowCellIndexes - Specifies the row and column indexes.\n     * @returns {void} .\n     */\n    Gantt.prototype.selectCells = function (rowCellIndexes) {\n        if (this.selectionModule) {\n            this.selectionModule.selectCells(rowCellIndexes);\n        }\n    };\n    /**\n     * Selects a row by given index.\n     *\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @returns {void} .\n     */\n    Gantt.prototype.selectRow = function (index, isToggle) {\n        if (this.selectionModule) {\n            this.selectionModule.selectRow(index, isToggle);\n        }\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     *\n     * @param  {number[]} records - Defines the collection of row indexes.\n     * @returns {void} .\n     */\n    Gantt.prototype.selectRows = function (records) {\n        if (this.selectionModule) {\n            this.selectionModule.selectRows(records);\n        }\n    };\n    /**\n     * Method to delete record.\n     *\n     * @param {number | string } taskDetail - Defines the details of data to delete.\n     * @returns {void} .\n     * @public\n     */\n    Gantt.prototype.deleteRecord = function (taskDetail) {\n        if (this.editModule) {\n            this.editModule.deleteRecord(taskDetail);\n        }\n    };\n    /**\n     * Enables or disables ToolBar items.\n     *\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @returns {void} .\n     */\n    Gantt.prototype.enableItems = function (items, isEnable) {\n        if (this.toolbarModule) {\n            this.toolbarModule.enableItems(items, isEnable);\n        }\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     *\n     * @returns {void} .\n     */\n    Gantt.prototype.clearSelection = function () {\n        if (this.selectionModule) {\n            this.selectionModule.clearSelection();\n        }\n    };\n    /**\n     * @param {ITaskAddedEventArgs | IActionBeginEventArgs} args .\n     * @returns {ITaskAddedEventArgs | IActionBeginEventArgs} .\n     * @hidden\n     */\n    Gantt.prototype.updateDataArgs = function (args) {\n        if (!Array.isArray(args.data)) {\n            var customData = [];\n            customData.push(args.data);\n            setValue('data', customData, args);\n        }\n        return args;\n    };\n    /**\n     * Method to convert task data to milestone data.\n     *\n     * @param {string} id - Defines id of record.\n     * @returns {void} .\n     * @public\n     */\n    Gantt.prototype.convertToMilestone = function (id) {\n        var rowData = this.getRecordByID(id);\n        if (!isNullOrUndefined(rowData)) {\n            var data = extend({}, {}, rowData.taskData, true);\n            var taskfields = this.taskFields;\n            if (!isNullOrUndefined(taskfields.duration)) {\n                data[taskfields.duration] = 0;\n            }\n            else {\n                data[taskfields.startDate] = new Date(rowData.taskData[taskfields.startDate]);\n                data[taskfields.endDate] = new Date(rowData.taskData[taskfields.startDate]);\n            }\n            if (!isNullOrUndefined(taskfields.milestone)) {\n                if (data[taskfields.milestone] === false) {\n                    data[taskfields.milestone] = true;\n                }\n            }\n            if (!isNullOrUndefined(taskfields.progress)) {\n                data[taskfields.progress] = 0;\n            }\n            if (!isNullOrUndefined(taskfields.child) && data[taskfields.child]) {\n                data[taskfields.child] = [];\n            }\n            if (!isNullOrUndefined(taskfields.parentID) && data[taskfields.parentID]) {\n                data[taskfields.parentID] = null;\n            }\n            if (!isNullOrUndefined(taskfields.segments)) {\n                data[taskfields.segments] = null;\n            }\n            if (!isNullOrUndefined(this.contextMenuModule) &&\n                this.contextMenuModule.isOpen &&\n                this.contextMenuModule.item === 'Milestone') {\n                if (!isNullOrUndefined(taskfields.dependency)) {\n                    data[taskfields.dependency] = null;\n                }\n                var position = 'Below';\n                this.addRecord(data, position);\n            }\n            else {\n                if (!rowData.hasChildRecords && !rowData.ganttProperties.isMilestone) {\n                    this.updateRecordByID(data);\n                }\n            }\n        }\n    };\n    /**\n     * To change the mode of a record.\n     *\n     * @param {object} data .\n     * @returns {void} .\n     */\n    Gantt.prototype.changeTaskMode = function (data) {\n        var tasks = this.taskFields;\n        var ganttData = this.getRecordByID(data[tasks.id]);\n        var ganttProp = ganttData.ganttProperties;\n        this.isOnEdit = true;\n        this.setRecordValue('isAutoSchedule', !ganttProp.isAutoSchedule, ganttProp, true);\n        if (!isNullOrUndefined(this.taskFields.manual)) {\n            this.setRecordValue('taskData.' + tasks.manual, !ganttProp.isAutoSchedule, ganttData);\n            this.setRecordValue(tasks.manual, !ganttProp.isAutoSchedule, ganttData);\n        }\n        this.editModule.updateTaskScheduleModes(ganttData);\n        var args = {\n            data: ganttData\n        };\n        this.editModule.initiateUpdateAction(args);\n    };\n    /**\n     * @returns {string[]} .\n     * @private\n     */\n    Gantt.prototype.getTaskIds = function () {\n        return this.taskIds;\n    };\n    /**\n     * @param {IGanttData} data .\n     * @returns {void} .\n     * @private\n     */\n    Gantt.prototype.setTaskIds = function (data) {\n        if (this.viewType !== 'ProjectView') {\n            var id = data.ganttProperties.taskId;\n            id = data.level === 0 ? 'R' + id : 'T' + id;\n            this.taskIds.push(id);\n        }\n    };\n    /**\n     * To render the react templates\n     *\n     * @returns {void} .\n     *  @hidden\n     */\n    Gantt.prototype.renderTemplates = function () {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        if (this.isReact) {\n            this.renderReactTemplates();\n        }\n    };\n    /**\n     * To reset the react templates\n     *\n     * @returns {void} .\n     *  @hidden\n     */\n    Gantt.prototype.resetTemplates = function () {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        if (this.isReact) {\n            this.clearTemplate();\n        }\n    };\n    __decorate([\n        Property(true)\n    ], Gantt.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(false)\n    ], Gantt.prototype, \"enableImmutableMode\", void 0);\n    __decorate([\n        Property(true)\n    ], Gantt.prototype, \"disableHtmlEncode\", void 0);\n    __decorate([\n        Property(true)\n    ], Gantt.prototype, \"autoFocusTasks\", void 0);\n    __decorate([\n        Property(true)\n    ], Gantt.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Property(false)\n    ], Gantt.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property(true)\n    ], Gantt.prototype, \"enablePredecessorValidation\", void 0);\n    __decorate([\n        Property(false)\n    ], Gantt.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Property()\n    ], Gantt.prototype, \"columnMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], Gantt.prototype, \"timezone\", void 0);\n    __decorate([\n        Property(false)\n    ], Gantt.prototype, \"collapseAllParentTasks\", void 0);\n    __decorate([\n        Property(false)\n    ], Gantt.prototype, \"highlightWeekends\", void 0);\n    __decorate([\n        Property(0)\n    ], Gantt.prototype, \"treeColumnIndex\", void 0);\n    __decorate([\n        Property([])\n    ], Gantt.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property('day')\n    ], Gantt.prototype, \"durationUnit\", void 0);\n    __decorate([\n        Property(null)\n    ], Gantt.prototype, \"query\", void 0);\n    __decorate([\n        Property(null)\n    ], Gantt.prototype, \"dateFormat\", void 0);\n    __decorate([\n        Property('auto')\n    ], Gantt.prototype, \"height\", void 0);\n    __decorate([\n        Property(false)\n    ], Gantt.prototype, \"renderBaseline\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Gantt.prototype, \"gridLines\", void 0);\n    __decorate([\n        Complex({}, LabelSettings)\n    ], Gantt.prototype, \"labelSettings\", void 0);\n    __decorate([\n        Property(null)\n    ], Gantt.prototype, \"taskbarTemplate\", void 0);\n    __decorate([\n        Property(null)\n    ], Gantt.prototype, \"parentTaskbarTemplate\", void 0);\n    __decorate([\n        Property(null)\n    ], Gantt.prototype, \"milestoneTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Gantt.prototype, \"baselineColor\", void 0);\n    __decorate([\n        Property('auto')\n    ], Gantt.prototype, \"width\", void 0);\n    __decorate([\n        Property(false)\n    ], Gantt.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property()\n    ], Gantt.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property(['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'])\n    ], Gantt.prototype, \"workWeek\", void 0);\n    __decorate([\n        Property(false)\n    ], Gantt.prototype, \"includeWeekend\", void 0);\n    __decorate([\n        Property(false)\n    ], Gantt.prototype, \"allowUnscheduledTasks\", void 0);\n    __decorate([\n        Property(false)\n    ], Gantt.prototype, \"showInlineNotes\", void 0);\n    __decorate([\n        Property(36)\n    ], Gantt.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(null)\n    ], Gantt.prototype, \"taskbarHeight\", void 0);\n    __decorate([\n        Property(null)\n    ], Gantt.prototype, \"projectStartDate\", void 0);\n    __decorate([\n        Property(null)\n    ], Gantt.prototype, \"projectEndDate\", void 0);\n    __decorate([\n        Property(null)\n    ], Gantt.prototype, \"resourceIDMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], Gantt.prototype, \"resourceNameMapping\", void 0);\n    __decorate([\n        Property([])\n    ], Gantt.prototype, \"resources\", void 0);\n    __decorate([\n        Property([])\n    ], Gantt.prototype, \"segmentData\", void 0);\n    __decorate([\n        Property(null)\n    ], Gantt.prototype, \"connectorLineBackground\", void 0);\n    __decorate([\n        Property(1)\n    ], Gantt.prototype, \"connectorLineWidth\", void 0);\n    __decorate([\n        Property([])\n    ], Gantt.prototype, \"columns\", void 0);\n    __decorate([\n        Property([])\n    ], Gantt.prototype, \"addDialogFields\", void 0);\n    __decorate([\n        Property([])\n    ], Gantt.prototype, \"editDialogFields\", void 0);\n    __decorate([\n        Property(-1)\n    ], Gantt.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Property('hour')\n    ], Gantt.prototype, \"workUnit\", void 0);\n    __decorate([\n        Property('FixedUnit')\n    ], Gantt.prototype, \"taskType\", void 0);\n    __decorate([\n        Property('ProjectView')\n    ], Gantt.prototype, \"viewType\", void 0);\n    __decorate([\n        Collection([{ from: 8, to: 12 }, { from: 13, to: 17 }], DayWorkingTime)\n    ], Gantt.prototype, \"dayWorkingTime\", void 0);\n    __decorate([\n        Collection([], Holiday)\n    ], Gantt.prototype, \"holidays\", void 0);\n    __decorate([\n        Collection([], EventMarker)\n    ], Gantt.prototype, \"eventMarkers\", void 0);\n    __decorate([\n        Complex({}, TaskFields)\n    ], Gantt.prototype, \"taskFields\", void 0);\n    __decorate([\n        Complex({}, ResourceFields)\n    ], Gantt.prototype, \"resourceFields\", void 0);\n    __decorate([\n        Complex({}, TimelineSettings)\n    ], Gantt.prototype, \"timelineSettings\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], Gantt.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], Gantt.prototype, \"editSettings\", void 0);\n    __decorate([\n        Complex({}, TooltipSettings)\n    ], Gantt.prototype, \"tooltipSettings\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], Gantt.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], Gantt.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Property(false)\n    ], Gantt.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], Gantt.prototype, \"allowRowDragAndDrop\", void 0);\n    __decorate([\n        Property(false)\n    ], Gantt.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], Gantt.prototype, \"readOnly\", void 0);\n    __decorate([\n        Property(false)\n    ], Gantt.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(false)\n    ], Gantt.prototype, \"enableContextMenu\", void 0);\n    __decorate([\n        Property()\n    ], Gantt.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property(false)\n    ], Gantt.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Property(false)\n    ], Gantt.prototype, \"validateManualTasksOnLinking\", void 0);\n    __decorate([\n        Property(false)\n    ], Gantt.prototype, \"enableMultiTaskbar\", void 0);\n    __decorate([\n        Property(false)\n    ], Gantt.prototype, \"showOverAllocation\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Gantt.prototype, \"taskMode\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], Gantt.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], Gantt.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Complex({}, SplitterSettings)\n    ], Gantt.prototype, \"splitterSettings\", void 0);\n    __decorate([\n        Event()\n    ], Gantt.prototype, \"queryTaskbarInfo\", void 0);\n    __decorate([\n        Event()\n    ], Gantt.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], Gantt.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], Gantt.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], Gantt.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], Gantt.prototype, \"rowDrag\", void 0);\n    __decorate([\n        Event()\n    ], Gantt.prototype, \"rowDragStart\", void 0);\n    __decorate([\n        Event()\n    ], Gantt.prototype, \"rowDragStartHelper\", void 0);\n    __decorate([\n        Event()\n    ], Gantt.prototype, \"rowDrop\", void 0);\n    __decorate([\n        Event()\n    ], Gantt.prototype, \"collapsing\", void 0);\n    __decorate([\n        Event()\n    ], Gantt.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], Gantt.prototype, \"expanding\", void 0);\n    __decorate([\n        Event()\n    ], Gantt.prototype, \"expanded\", void 0);\n    __decorate([\n        Event()\n    ], Gantt.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], Gantt.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], Gantt.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], Gantt.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], Gantt.prototype, \"taskbarEdited\", void 0);\n    __decorate([\n        Event()\n    ], Gantt.prototype, \"endEdit\", void 0);\n    __decorate([\n        Event()\n    ], Gantt.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], Gantt.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], Gantt.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Gantt.prototype, \"destroyed\", void 0);\n    __decorate([\n        Event()\n    ], Gantt.prototype, \"taskbarEditing\", void 0);\n    __decorate([\n        Event()\n    ], Gantt.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], Gantt.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], Gantt.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], Gantt.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], Gantt.prototype, \"splitterResizeStart\", void 0);\n    __decorate([\n        Event()\n    ], Gantt.prototype, \"splitterResizing\", void 0);\n    __decorate([\n        Event()\n    ], Gantt.prototype, \"splitterResized\", void 0);\n    __decorate([\n        Event()\n    ], Gantt.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], Gantt.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], Gantt.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], Gantt.prototype, \"beforeTooltipRender\", void 0);\n    __decorate([\n        Event()\n    ], Gantt.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], Gantt.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], Gantt.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], Gantt.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], Gantt.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], Gantt.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], Gantt.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], Gantt.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], Gantt.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], Gantt.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], Gantt.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], Gantt.prototype, \"columnMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], Gantt.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], Gantt.prototype, \"columnMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], Gantt.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], Gantt.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], Gantt.prototype, \"onTaskbarClick\", void 0);\n    __decorate([\n        Event()\n    ], Gantt.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], Gantt.prototype, \"onMouseMove\", void 0);\n    __decorate([\n        Event()\n    ], Gantt.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], Gantt.prototype, \"pdfExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], Gantt.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], Gantt.prototype, \"pdfQueryTaskbarInfo\", void 0);\n    __decorate([\n        Event()\n    ], Gantt.prototype, \"pdfQueryTimelineCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], Gantt.prototype, \"pdfColumnHeaderQueryCellInfo\", void 0);\n    Gantt = __decorate([\n        NotifyPropertyChanges\n    ], Gantt);\n    return Gantt;\n}(Component));\nexport { Gantt };\n"]},"metadata":{},"sourceType":"module"}