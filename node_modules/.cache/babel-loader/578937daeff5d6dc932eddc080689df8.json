{"ast":null,"code":"import { isScheduledTask } from '../base/utils';\nimport { getValue, isNullOrUndefined, extend } from '@syncfusion/ej2-base';\n\nvar Dependency =\n/** @class */\nfunction () {\n  function Dependency(gantt) {\n    this.parentRecord = [];\n    this.parentIds = [];\n    this.parent = gantt;\n    this.dateValidateModule = this.parent.dateValidationModule;\n  }\n  /**\n   * Method to populate predecessor collections in records\n   *\n   * @returns {void} .\n   * @private\n   */\n\n\n  Dependency.prototype.ensurePredecessorCollection = function () {\n    var predecessorTasks = this.parent.predecessorsCollection;\n    var length = predecessorTasks.length - 1;\n\n    for (var count = length; count >= 0; count--) {\n      var ganttData = predecessorTasks[count];\n      var ganttProp = ganttData.ganttProperties;\n\n      if (!ganttData.hasChildRecords) {\n        this.ensurePredecessorCollectionHelper(ganttData, ganttProp);\n      }\n    }\n  };\n  /**\n   *\n   * @param {IGanttData} ganttData .\n   * @param {ITaskData} ganttProp .\n   * @returns {void} .\n   * @private\n   */\n\n\n  Dependency.prototype.ensurePredecessorCollectionHelper = function (ganttData, ganttProp) {\n    var predecessorVal = ganttProp.predecessorsName;\n\n    if (predecessorVal && (typeof predecessorVal === 'string' || typeof predecessorVal === 'number')) {\n      this.parent.setRecordValue('predecessor', this.calculatePredecessor(predecessorVal, ganttData), ganttProp, true);\n    } else if (predecessorVal && typeof predecessorVal === 'object' && predecessorVal.length) {\n      var preValues = [];\n\n      for (var c = 0; c < predecessorVal.length; c++) {\n        var predecessorItem = predecessorVal[c];\n        var preValue = {};\n        preValue.from = getValue('from', predecessorItem);\n        preValue.to = getValue('to', predecessorItem) ? getValue('to', predecessorItem) : ganttProp.rowUniqueID;\n        preValue.type = getValue('type', predecessorItem) ? getValue('type', predecessorItem) : 'FS';\n        var offsetUnits = getValue('offset', predecessorItem);\n\n        if (isNullOrUndefined(offsetUnits)) {\n          preValue.offset = 0;\n          preValue.offsetUnit = this.parent.durationUnit.toLocaleLowerCase();\n        } else if (typeof offsetUnits === 'string') {\n          var tempOffsetUnits = this.getOffsetDurationUnit(getValue('offset', predecessorItem));\n          preValue.offset = tempOffsetUnits.duration;\n          preValue.offsetUnit = tempOffsetUnits.durationUnit;\n        } else {\n          preValue.offset = parseFloat(offsetUnits.toString());\n          preValue.offsetUnit = this.parent.durationUnit.toLocaleLowerCase();\n        }\n\n        var isOwnParent = this.checkIsParent(preValue.from.toString());\n\n        if (!isOwnParent) {\n          preValues.push(preValue);\n        }\n      }\n\n      this.parent.setRecordValue('predecessor', preValues, ganttProp, true);\n    }\n\n    this.parent.setRecordValue('predecessorsName', this.getPredecessorStringValue(ganttData), ganttProp, true);\n    this.parent.setRecordValue('taskData.' + this.parent.taskFields.dependency, ganttProp.predecessorsName, ganttData);\n    this.parent.setRecordValue(this.parent.taskFields.dependency, ganttProp.predecessorsName, ganttData);\n  };\n  /**\n   * To render unscheduled empty task with 1 day duration during predecessor map\n   *\n   * @param {IGanttData} data .\n   * @returns {void} .\n   * @private\n   */\n\n\n  Dependency.prototype.updateUnscheduledDependency = function (data) {\n    var task = this.parent.taskFields;\n    var prdList = !isNullOrUndefined(data[task.dependency]) ? data[task.dependency].toString().split(',') : [];\n\n    for (var i = 0; i < prdList.length; i++) {\n      var predId = parseInt(prdList[i], 10);\n\n      if (!isNaN(predId)) {\n        var predData = this.parent.getRecordByID(predId.toString());\n        var record = !isNullOrUndefined(predData) ? extend({}, {}, predData.taskData, true) : null;\n\n        if (!isNullOrUndefined(record) && isNullOrUndefined(record[task.startDate]) && isNullOrUndefined(record[task.duration]) && isNullOrUndefined(record[task.endDate])) {\n          record[task.duration] = 1;\n          record[task.startDate] = this.parent.projectStartDate;\n          this.parent.updateRecordByID(record);\n        }\n      }\n    }\n  };\n  /**\n   *\n   * @param {string} fromId .\n   * @returns {boolean} .\n   */\n\n\n  Dependency.prototype.checkIsParent = function (fromId) {\n    var boolValue = false;\n    var task = this.parent.connectorLineModule.getRecordByID(fromId);\n\n    if (task.hasChildRecords) {\n      boolValue = true;\n    }\n\n    return boolValue;\n  };\n  /**\n   * Get predecessor collection object from predecessor string value\n   *\n   * @param {string | number} predecessorValue .\n   * @param {IGanttData} ganttRecord .\n   * @returns {IPredecessor[]} .\n   * @private\n   */\n\n\n  Dependency.prototype.calculatePredecessor = function (predecessorValue, ganttRecord) {\n    var _this = this;\n\n    var predecessor = predecessorValue.toString();\n    var collection = [];\n    var match;\n    var values;\n    var offsetValue;\n    var predecessorText;\n    predecessor.split(',').forEach(function (el) {\n      values = el.split('+');\n      offsetValue = '+';\n\n      if (el.indexOf('-') >= 0) {\n        values = el.split('-');\n        offsetValue = '-';\n      }\n\n      match = values[0].match(/(\\d+|[A-z]+)/g);\n      var ids = _this.parent.viewType === 'ResourceView' ? _this.parent.getTaskIds() : _this.parent.ids;\n      var isExist = _this.parent.viewType === 'ResourceView' ? ids.indexOf('T' + match[0]) : ids.indexOf(match[0]);\n      /*Validate for appropriate predecessor*/\n\n      if (match[0] && isExist !== -1) {\n        if (match.length > 1) {\n          var type = match[1].toUpperCase();\n\n          if (type === 'FS' || type === 'FF' || type === 'SF' || type === 'SS') {\n            predecessorText = type;\n          } else {\n            predecessorText = 'FS';\n          }\n        } else {\n          predecessorText = 'FS';\n        }\n      } else {\n        return; // exit current loop for invalid id (match[0])\n      }\n\n      var tempOffset = values.length > 1 ? offsetValue + '' + values[1] : '0';\n\n      var offsetUnits = _this.getOffsetDurationUnit(tempOffset);\n\n      var obj = {\n        from: match[0],\n        type: predecessorText,\n        isDrawn: false,\n        to: _this.parent.viewType === 'ResourceView' ? ganttRecord.ganttProperties.taskId.toString() : ganttRecord.ganttProperties.rowUniqueID.toString(),\n        offsetUnit: offsetUnits.durationUnit,\n        offset: offsetUnits.duration\n      };\n\n      var isOwnParent = _this.checkIsParent(match[0]);\n\n      if (!isOwnParent) {\n        collection.push(obj);\n      }\n    });\n    return collection;\n  };\n  /**\n   * Get predecessor value as string with offset values\n   *\n   * @param {IGanttData} data .\n   * @returns {string} .\n   * @private\n   */\n\n\n  Dependency.prototype.getPredecessorStringValue = function (data) {\n    var predecessors = data.ganttProperties.predecessor;\n    var durationUnitTexts = this.parent.durationUnitTexts;\n    var resultString = '';\n\n    if (predecessors) {\n      var length_1 = predecessors.length;\n\n      for (var i = 0; i < length_1; i++) {\n        var currentValue = predecessors[i];\n        var temp = '';\n        var id = this.parent.viewType === 'ResourceView' ? data.ganttProperties.taskId : data.ganttProperties.rowUniqueID;\n\n        if (currentValue.from !== id.toString()) {\n          temp = currentValue.from + currentValue.type;\n\n          if (currentValue.offset !== 0) {\n            temp += currentValue.offset > 0 ? '+' + currentValue.offset + ' ' : currentValue.offset + ' ';\n            var multiple = currentValue.offset !== 1;\n\n            if (currentValue.offsetUnit === 'day') {\n              temp += multiple ? getValue('days', durationUnitTexts) : getValue('day', durationUnitTexts);\n            } else if (currentValue.offsetUnit === 'hour') {\n              temp += multiple ? getValue('hours', durationUnitTexts) : getValue('hour', durationUnitTexts);\n            } else {\n              temp += multiple ? getValue('minutes', durationUnitTexts) : getValue('minute', durationUnitTexts);\n            }\n          }\n\n          if (resultString.length > 0) {\n            resultString = resultString + ',' + temp;\n          } else {\n            resultString = temp;\n          }\n        }\n      }\n    }\n\n    return resultString;\n  };\n  /*Get duration and duration unit value from tasks*/\n\n\n  Dependency.prototype.getOffsetDurationUnit = function (val) {\n    var duration = 0;\n    var durationUnit = this.parent.durationUnit.toLocaleLowerCase();\n    var durationUnitLabels = this.parent.durationUnitEditText;\n\n    if (typeof val === 'string') {\n      var values = val.match(/[^0-9]+|[0-9]+/g);\n\n      for (var x = 0; x < values.length; x++) {\n        values[x] = values[x].trim();\n      }\n\n      if (values[0] === '-' && values[1]) {\n        values[1] = values[0] + values[1];\n        values.shift();\n      } else if (values[0] === '+') {\n        values.shift();\n      }\n\n      if (values[1] === '.' && !isNaN(parseInt(values[2], 10))) {\n        values[0] += values[1] + values[2];\n        values.splice(1, 2);\n      }\n\n      if (values && values.length <= 2) {\n        duration = parseFloat(values[0]);\n        durationUnit = values[1] ? values[1].toLowerCase().trim() : '';\n\n        if (getValue('minute', durationUnitLabels).indexOf(durationUnit) !== -1) {\n          durationUnit = 'minute';\n        } else if (getValue('hour', durationUnitLabels).indexOf(durationUnit) !== -1) {\n          durationUnit = 'hour';\n        } else if (getValue('day', durationUnitLabels).indexOf(durationUnit) !== -1) {\n          durationUnit = 'day';\n        } else {\n          durationUnit = this.parent.durationUnit.toLocaleLowerCase();\n        }\n      }\n    } else {\n      duration = val;\n      durationUnit = this.parent.durationUnit.toLocaleLowerCase();\n    }\n\n    if (isNaN(duration)) {\n      duration = 0;\n      durationUnit = this.parent.durationUnit.toLocaleLowerCase();\n    }\n\n    return {\n      duration: duration,\n      durationUnit: durationUnit\n    };\n  };\n  /**\n   * Update predecessor object in both from and to tasks collection\n   *\n   * @returns {void} .\n   * @private\n   */\n\n\n  Dependency.prototype.updatePredecessors = function () {\n    var predecessorsCollection = this.parent.predecessorsCollection;\n    var ganttRecord;\n    var length = predecessorsCollection.length;\n\n    for (var count = 0; count < length; count++) {\n      ganttRecord = predecessorsCollection[count];\n\n      if (!ganttRecord.hasChildRecords) {\n        this.updatePredecessorHelper(ganttRecord, predecessorsCollection);\n      }\n    }\n  };\n  /**\n   * To update predecessor collection to successor tasks\n   *\n   * @param {IGanttData} ganttRecord .\n   * @param {IGanttData[]} predecessorsCollection .\n   * @returns {void} .\n   * @private\n   */\n\n\n  Dependency.prototype.updatePredecessorHelper = function (ganttRecord, predecessorsCollection) {\n    var connectorsCollection = ganttRecord.ganttProperties.predecessor;\n    var successorGanttRecord;\n    var connectorCount = connectorsCollection.length;\n    predecessorsCollection = isNullOrUndefined(predecessorsCollection) ? [] : predecessorsCollection;\n\n    for (var i = 0; i < connectorCount; i++) {\n      var connector = connectorsCollection[i];\n      successorGanttRecord = this.parent.connectorLineModule.getRecordByID(connector.from);\n      var id = this.parent.viewType === 'ResourceView' ? ganttRecord.ganttProperties.taskId : ganttRecord.ganttProperties.rowUniqueID;\n\n      if (connector.from !== id.toString()) {\n        if (successorGanttRecord) {\n          var predecessorCollection = void 0;\n\n          if (successorGanttRecord.ganttProperties.predecessor) {\n            predecessorCollection = extend([], successorGanttRecord.ganttProperties.predecessor, [], true);\n            predecessorCollection.push(connector);\n            this.parent.setRecordValue('predecessor', predecessorCollection, successorGanttRecord.ganttProperties, true); //  successorGanttRecord.ganttProperties.predecessor.push(connector);\n          } else {\n            predecessorCollection = [];\n            predecessorCollection.push(connector);\n            this.parent.setRecordValue('predecessor', predecessorCollection, successorGanttRecord.ganttProperties, true); // this.parent.setRecordValue('predecessor', [], successorGanttRecord.ganttProperties, true);\n            // successorGanttRecord.ganttProperties.predecessor.push(connector);\n\n            predecessorsCollection.push(successorGanttRecord);\n          }\n        }\n      }\n    }\n  };\n  /**\n   * Method to validate date of tasks with predecessor values for all records\n   *\n   * @returns {void} .\n   * @private\n   */\n\n\n  Dependency.prototype.updatedRecordsDateByPredecessor = function () {\n    var flatData = this.parent.flatData;\n\n    for (var count = 0; count < flatData.length; count++) {\n      if (flatData[count].ganttProperties.predecessor) {\n        this.validatePredecessorDates(flatData[count]);\n      }\n    }\n  };\n  /**\n   * To validate task date values with dependency\n   *\n   * @param {IGanttData} ganttRecord .\n   * @returns {void} .\n   * @private\n   */\n\n\n  Dependency.prototype.validatePredecessorDates = function (ganttRecord) {\n    if (ganttRecord.ganttProperties.predecessor) {\n      var predecessorsCollection = ganttRecord.ganttProperties.predecessor;\n      var count = void 0;\n      var parentGanttRecord = void 0;\n      var record = null;\n      var currentTaskId_1 = this.parent.viewType === 'ResourceView' ? ganttRecord.ganttProperties.taskId.toString() : ganttRecord.ganttProperties.rowUniqueID.toString();\n      var predecessors = predecessorsCollection.filter(function (data) {\n        if (data.to === currentTaskId_1) {\n          return data;\n        } else {\n          return null;\n        }\n      });\n\n      for (count = 0; count < predecessors.length; count++) {\n        var predecessor = predecessors[count];\n        parentGanttRecord = this.parent.connectorLineModule.getRecordByID(predecessor.from);\n        record = this.parent.connectorLineModule.getRecordByID(predecessor.to);\n\n        if (record.ganttProperties.isAutoSchedule || this.parent.validateManualTasksOnLinking) {\n          this.validateChildGanttRecord(parentGanttRecord, record);\n        }\n      }\n    }\n  };\n  /**\n   * Method to validate task with predecessor\n   *\n   * @param {IGanttData} parentGanttRecord .\n   * @param {IGanttData} childGanttRecord .\n   * @returns {void} .\n   */\n\n\n  Dependency.prototype.validateChildGanttRecord = function (parentGanttRecord, childGanttRecord) {\n    if (this.parent.editedTaskBarItem === childGanttRecord || isNullOrUndefined(isScheduledTask(parentGanttRecord.ganttProperties)) || isNullOrUndefined(isScheduledTask(childGanttRecord.ganttProperties))) {\n      return;\n    }\n\n    if (this.parent.isInPredecessorValidation && (childGanttRecord.ganttProperties.isAutoSchedule || this.parent.validateManualTasksOnLinking)) {\n      var childRecordProperty = childGanttRecord.ganttProperties;\n      var currentTaskId_2 = this.parent.viewType === 'ResourceView' ? childRecordProperty.taskId.toString() : childRecordProperty.rowUniqueID.toString();\n      var predecessorsCollection = childRecordProperty.predecessor;\n      var childPredecessor = predecessorsCollection.filter(function (data) {\n        if (data.to === currentTaskId_2) {\n          return data;\n        } else {\n          return null;\n        }\n      });\n      var startDate = this.getPredecessorDate(childGanttRecord, childPredecessor);\n      this.parent.setRecordValue('startDate', startDate, childRecordProperty, true);\n      this.parent.dataOperation.updateMappingData(childGanttRecord, 'startDate');\n      var segments = childGanttRecord.ganttProperties.segments;\n\n      if (isNullOrUndefined(segments)) {\n        this.dateValidateModule.calculateEndDate(childGanttRecord);\n      }\n\n      this.parent.dataOperation.updateWidthLeft(childGanttRecord);\n\n      if (childGanttRecord.parentItem && this.parent.getParentTask(childGanttRecord.parentItem).ganttProperties.isAutoSchedule && this.parent.isInPredecessorValidation && !this.parent.isLoad) {\n        if (this.parentIds.indexOf(childGanttRecord.parentItem.uniqueID) === -1) {\n          this.parentIds.push(childGanttRecord.parentItem.uniqueID);\n          this.parentRecord.push(childGanttRecord.parentItem);\n        }\n      }\n    }\n  };\n  /**\n   *\n   * @param {IGanttData} ganttRecord .\n   * @param {IPredecessor[]} predecessorsCollection .\n   * @returns {Date} .\n   * @private\n   */\n\n\n  Dependency.prototype.getPredecessorDate = function (ganttRecord, predecessorsCollection) {\n    var _this = this;\n\n    var maxStartDate;\n    var tempStartDate;\n    var parentGanttRecord;\n    var childGanttRecord;\n    var validatedPredecessor = predecessorsCollection.filter(function (data) {\n      var id = _this.parent.viewType === 'ResourceView' ? ganttRecord.ganttProperties.taskId : ganttRecord.ganttProperties.rowUniqueID;\n\n      if (data.to === id.toString()) {\n        return data;\n      } else {\n        return null;\n      }\n    });\n\n    if (validatedPredecessor) {\n      var length_2 = validatedPredecessor.length;\n\n      for (var i = 0; i < length_2; i++) {\n        var predecessor = validatedPredecessor[i];\n        parentGanttRecord = this.parent.connectorLineModule.getRecordByID(predecessor.from);\n        childGanttRecord = this.parent.connectorLineModule.getRecordByID(predecessor.to);\n        tempStartDate = this.getValidatedStartDate(childGanttRecord.ganttProperties, parentGanttRecord.ganttProperties, predecessor);\n\n        if (maxStartDate == null || this.dateValidateModule.compareDates(tempStartDate, maxStartDate) === 1) {\n          maxStartDate = tempStartDate;\n        }\n      }\n    }\n\n    return maxStartDate;\n  };\n  /**\n   * Get validated start date as per predecessor type\n   *\n   * @param {ITaskData} ganttProperty .\n   * @param {ITaskData} parentRecordProperty .\n   * @param {IPredecessor} predecessor .\n   * @returns {Date} .\n   */\n\n\n  Dependency.prototype.getValidatedStartDate = function (ganttProperty, parentRecordProperty, predecessor) {\n    var type = predecessor.type;\n    var offset = predecessor.offset;\n    var tempDate;\n    var returnStartDate;\n\n    switch (type) {\n      case 'FS':\n        tempDate = this.dateValidateModule.getValidEndDate(parentRecordProperty);\n\n        if (!ganttProperty.isMilestone || offset !== 0) {\n          tempDate = this.dateValidateModule.checkStartDate(tempDate, ganttProperty);\n        }\n\n        if (offset !== 0) {\n          tempDate = this.updateDateByOffset(tempDate, predecessor, ganttProperty);\n        }\n\n        if (!ganttProperty.isMilestone) {\n          returnStartDate = this.dateValidateModule.checkStartDate(tempDate, ganttProperty);\n        } else {\n          returnStartDate = tempDate;\n        }\n\n        break;\n\n      case 'FF':\n      case 'SF':\n        tempDate = type === 'FF' ? this.dateValidateModule.getValidEndDate(parentRecordProperty) : this.dateValidateModule.getValidStartDate(parentRecordProperty);\n\n        if (offset !== 0) {\n          tempDate = this.updateDateByOffset(tempDate, predecessor, ganttProperty);\n        }\n\n        if (!ganttProperty.isMilestone) {\n          tempDate = this.dateValidateModule.checkEndDate(tempDate, ganttProperty);\n        }\n\n        returnStartDate = this.dateValidateModule.getStartDate(tempDate, ganttProperty.duration, ganttProperty.durationUnit, ganttProperty);\n        break;\n\n      case 'SS':\n        tempDate = this.dateValidateModule.getValidStartDate(parentRecordProperty);\n\n        if (offset !== 0) {\n          tempDate = this.updateDateByOffset(tempDate, predecessor, ganttProperty);\n        }\n\n        if (!ganttProperty.isMilestone) {\n          returnStartDate = this.dateValidateModule.checkStartDate(tempDate, ganttProperty);\n        } else {\n          returnStartDate = tempDate;\n        }\n\n        break;\n    }\n\n    return returnStartDate;\n  };\n  /**\n   *\n   * @param {Date} date .\n   * @param {IPredecessor} predecessor .\n   * @param {ITaskData} record .\n   * @returns {void} .\n   */\n\n\n  Dependency.prototype.updateDateByOffset = function (date, predecessor, record) {\n    var resultDate;\n    var offsetValue = predecessor.offset;\n    var durationUnit = predecessor.offsetUnit;\n\n    if (offsetValue < 0) {\n      resultDate = this.dateValidateModule.getStartDate(this.dateValidateModule.checkEndDate(date, record), offsetValue * -1, durationUnit, record);\n    } else {\n      resultDate = this.dateValidateModule.getEndDate(date, offsetValue, durationUnit, record, false);\n\n      if (!record.isMilestone) {\n        resultDate = this.dateValidateModule.checkStartDate(resultDate, record);\n      }\n    }\n\n    return resultDate;\n  };\n  /**\n   *\n   * @param {IGanttData} records .\n   * @returns {void} .\n   * @private\n   */\n\n\n  Dependency.prototype.createConnectorLinesCollection = function (records) {\n    var ganttRecords = records ? records : this.parent.currentViewData;\n    var recordLength = ganttRecords.length;\n    var count;\n    var ganttRecord;\n    var predecessorsCollection;\n    this.parent.connectorLineModule.expandedRecords = this.parent.virtualScrollModule && this.parent.enableVirtualization ? this.parent.updatedRecords : this.parent.getExpandedRecords(this.parent.updatedRecords);\n\n    for (count = 0; count < recordLength; count++) {\n      ganttRecord = ganttRecords[count];\n      predecessorsCollection = ganttRecord.ganttProperties.predecessor;\n\n      if (predecessorsCollection) {\n        this.addPredecessorsCollection(predecessorsCollection);\n      }\n    }\n  };\n  /**\n   *\n   * @param {object[]} predecessorsCollection .\n   * @returns {void} .\n   */\n\n\n  Dependency.prototype.addPredecessorsCollection = function (predecessorsCollection) {\n    var predecessorsLength;\n    var predecessorCount;\n    var predecessor;\n    var parentGanttRecord;\n    var childGanttRecord;\n\n    if (predecessorsCollection) {\n      predecessorsLength = predecessorsCollection.length;\n\n      for (predecessorCount = 0; predecessorCount < predecessorsLength; predecessorCount++) {\n        predecessor = predecessorsCollection[predecessorCount];\n        var from = 'from';\n        var to = 'to';\n        parentGanttRecord = this.parent.connectorLineModule.getRecordByID(predecessor[from]);\n        childGanttRecord = this.parent.connectorLineModule.getRecordByID(predecessor[to]);\n\n        if (this.parent.connectorLineModule.expandedRecords && this.parent.connectorLineModule.expandedRecords.indexOf(parentGanttRecord) !== -1 && this.parent.connectorLineModule.expandedRecords.indexOf(childGanttRecord) !== -1) {\n          this.updateConnectorLineObject(parentGanttRecord, childGanttRecord, predecessor);\n        }\n      }\n    }\n  };\n  /**\n   * To refresh connector line object collections\n   *\n   * @param {IGanttData} parentGanttRecord .\n   * @param {IGanttData} childGanttRecord .\n   * @param {IPredecessor} predecessor .\n   * @returns {void} .\n   * @private\n   */\n\n\n  Dependency.prototype.updateConnectorLineObject = function (parentGanttRecord, childGanttRecord, predecessor) {\n    var connectorObj = this.parent.connectorLineModule.createConnectorLineObject(parentGanttRecord, childGanttRecord, predecessor);\n\n    if (connectorObj) {\n      if (this.parent.connectorLineIds.length > 0 && this.parent.connectorLineIds.indexOf(connectorObj.connectorLineId) === -1 || this.parent.connectorLineIds.length === 0) {\n        this.parent.updatedConnectorLineCollection.push(connectorObj);\n        this.parent.connectorLineIds.push(connectorObj.connectorLineId);\n      } else if (this.parent.connectorLineIds.indexOf(connectorObj.connectorLineId) !== -1) {\n        var index = this.parent.connectorLineIds.indexOf(connectorObj.connectorLineId);\n        this.parent.updatedConnectorLineCollection[index] = connectorObj;\n      }\n\n      predecessor.isDrawn = true;\n    }\n\n    return connectorObj;\n  };\n  /**\n   *\n   * @param {IGanttData} childGanttRecord .\n   * @param {IPredecessor[]} previousValue .\n   * @param {string} validationOn .\n   * @returns {void} .\n   * @private\n   */\n\n\n  Dependency.prototype.validatePredecessor = function (childGanttRecord, previousValue, validationOn) {\n    if (!this.parent.isInPredecessorValidation) {\n      return;\n    }\n\n    if (childGanttRecord.ganttProperties.predecessor) {\n      var predecessorsCollection = childGanttRecord.ganttProperties.predecessor;\n      var parentGanttRecord = void 0;\n      var record = null;\n      var predecessor = void 0;\n      var successor = void 0;\n      var currentTaskId_3 = this.parent.viewType === 'ResourceView' ? childGanttRecord.ganttProperties.taskId.toString() : childGanttRecord.ganttProperties.rowUniqueID.toString();\n      var predecessors = predecessorsCollection.filter(function (data) {\n        if (data.to === currentTaskId_3) {\n          return data;\n        } else {\n          return null;\n        }\n      });\n      var successors = predecessorsCollection.filter(function (data) {\n        if (data.from === currentTaskId_3) {\n          return data;\n        } else {\n          return null;\n        }\n      });\n\n      for (var count = 0; count < predecessors.length; count++) {\n        predecessor = predecessors[count];\n        parentGanttRecord = this.parent.connectorLineModule.getRecordByID(predecessor.from);\n        record = this.parent.connectorLineModule.getRecordByID(predecessor.to);\n\n        if (this.parent.isInPredecessorValidation && record.ganttProperties.isAutoSchedule) {\n          this.parent.isValidationEnabled = true;\n        } else {\n          this.parent.isValidationEnabled = false;\n        }\n\n        var id = this.parent.viewType === 'ResourceView' ? childGanttRecord.ganttProperties.taskId : childGanttRecord.ganttProperties.rowUniqueID;\n\n        if ((id.toString() === predecessor.to || id.toString() === predecessor.from) && (!validationOn || validationOn === 'predecessor')) {\n          this.validateChildGanttRecord(parentGanttRecord, record);\n        }\n      }\n\n      for (var count = 0; count < successors.length; count++) {\n        successor = successors[count];\n        parentGanttRecord = this.parent.connectorLineModule.getRecordByID(successor.from);\n        record = this.parent.connectorLineModule.getRecordByID(successor.to);\n\n        if (this.parent.isInPredecessorValidation && record.ganttProperties.isAutoSchedule) {\n          this.parent.isValidationEnabled = true;\n        } else {\n          this.parent.isValidationEnabled = false;\n        }\n\n        if (validationOn !== 'predecessor' && this.parent.isValidationEnabled) {\n          this.validateChildGanttRecord(parentGanttRecord, record);\n        }\n\n        if (parentGanttRecord.expanded === false || record.expanded === false) {\n          if (record) {\n            this.validatePredecessor(record, undefined, 'successor');\n          }\n\n          continue;\n        }\n\n        if (record) {\n          this.validatePredecessor(record, undefined, 'successor');\n        }\n      }\n    }\n  };\n  /**\n   * Method to get validate able predecessor alone from record\n   *\n   * @param {IGanttData} record .\n   * @returns {IPredecessor[]} .\n   * @private\n   */\n\n\n  Dependency.prototype.getValidPredecessor = function (record) {\n    var _this = this;\n\n    var validPredecessor = [];\n\n    if (!isNullOrUndefined(record)) {\n      var recPredecessor = record.ganttProperties.predecessor;\n\n      if (recPredecessor && recPredecessor.length > 0) {\n        validPredecessor = recPredecessor.filter(function (value) {\n          var id = _this.parent.viewType === 'ResourceView' ? record.ganttProperties.taskId : record.ganttProperties.rowUniqueID;\n          return value.from !== id.toString();\n        });\n      }\n    }\n\n    return validPredecessor;\n  };\n\n  return Dependency;\n}();\n\nexport { Dependency };","map":{"version":3,"sources":["/Users/tristanbilot/Desktop/Design4green/design4green/node_modules/@syncfusion/ej2-gantt/src/gantt/actions/dependency.js"],"names":["isScheduledTask","getValue","isNullOrUndefined","extend","Dependency","gantt","parentRecord","parentIds","parent","dateValidateModule","dateValidationModule","prototype","ensurePredecessorCollection","predecessorTasks","predecessorsCollection","length","count","ganttData","ganttProp","ganttProperties","hasChildRecords","ensurePredecessorCollectionHelper","predecessorVal","predecessorsName","setRecordValue","calculatePredecessor","preValues","c","predecessorItem","preValue","from","to","rowUniqueID","type","offsetUnits","offset","offsetUnit","durationUnit","toLocaleLowerCase","tempOffsetUnits","getOffsetDurationUnit","duration","parseFloat","toString","isOwnParent","checkIsParent","push","getPredecessorStringValue","taskFields","dependency","updateUnscheduledDependency","data","task","prdList","split","i","predId","parseInt","isNaN","predData","getRecordByID","record","taskData","startDate","endDate","projectStartDate","updateRecordByID","fromId","boolValue","connectorLineModule","predecessorValue","ganttRecord","_this","predecessor","collection","match","values","offsetValue","predecessorText","forEach","el","indexOf","ids","viewType","getTaskIds","isExist","toUpperCase","tempOffset","obj","isDrawn","taskId","predecessors","durationUnitTexts","resultString","length_1","currentValue","temp","id","multiple","val","durationUnitLabels","durationUnitEditText","x","trim","shift","splice","toLowerCase","updatePredecessors","updatePredecessorHelper","connectorsCollection","successorGanttRecord","connectorCount","connector","predecessorCollection","updatedRecordsDateByPredecessor","flatData","validatePredecessorDates","parentGanttRecord","currentTaskId_1","filter","isAutoSchedule","validateManualTasksOnLinking","validateChildGanttRecord","childGanttRecord","editedTaskBarItem","isInPredecessorValidation","childRecordProperty","currentTaskId_2","childPredecessor","getPredecessorDate","dataOperation","updateMappingData","segments","calculateEndDate","updateWidthLeft","parentItem","getParentTask","isLoad","uniqueID","maxStartDate","tempStartDate","validatedPredecessor","length_2","getValidatedStartDate","compareDates","ganttProperty","parentRecordProperty","tempDate","returnStartDate","getValidEndDate","isMilestone","checkStartDate","updateDateByOffset","getValidStartDate","checkEndDate","getStartDate","date","resultDate","getEndDate","createConnectorLinesCollection","records","ganttRecords","currentViewData","recordLength","expandedRecords","virtualScrollModule","enableVirtualization","updatedRecords","getExpandedRecords","addPredecessorsCollection","predecessorsLength","predecessorCount","updateConnectorLineObject","connectorObj","createConnectorLineObject","connectorLineIds","connectorLineId","updatedConnectorLineCollection","index","validatePredecessor","previousValue","validationOn","successor","currentTaskId_3","successors","isValidationEnabled","expanded","undefined","getValidPredecessor","validPredecessor","recPredecessor","value"],"mappings":"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","sourcesContent":["import { isScheduledTask } from '../base/utils';\nimport { getValue, isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nvar Dependency = /** @class */ (function () {\n    function Dependency(gantt) {\n        this.parentRecord = [];\n        this.parentIds = [];\n        this.parent = gantt;\n        this.dateValidateModule = this.parent.dateValidationModule;\n    }\n    /**\n     * Method to populate predecessor collections in records\n     *\n     * @returns {void} .\n     * @private\n     */\n    Dependency.prototype.ensurePredecessorCollection = function () {\n        var predecessorTasks = this.parent.predecessorsCollection;\n        var length = predecessorTasks.length - 1;\n        for (var count = length; count >= 0; count--) {\n            var ganttData = predecessorTasks[count];\n            var ganttProp = ganttData.ganttProperties;\n            if (!ganttData.hasChildRecords) {\n                this.ensurePredecessorCollectionHelper(ganttData, ganttProp);\n            }\n        }\n    };\n    /**\n     *\n     * @param {IGanttData} ganttData .\n     * @param {ITaskData} ganttProp .\n     * @returns {void} .\n     * @private\n     */\n    Dependency.prototype.ensurePredecessorCollectionHelper = function (ganttData, ganttProp) {\n        var predecessorVal = ganttProp.predecessorsName;\n        if (predecessorVal && (typeof predecessorVal === 'string' || typeof predecessorVal === 'number')) {\n            this.parent.setRecordValue('predecessor', this.calculatePredecessor(predecessorVal, ganttData), ganttProp, true);\n        }\n        else if (predecessorVal && typeof predecessorVal === 'object' && predecessorVal.length) {\n            var preValues = [];\n            for (var c = 0; c < predecessorVal.length; c++) {\n                var predecessorItem = predecessorVal[c];\n                var preValue = {};\n                preValue.from = getValue('from', predecessorItem);\n                preValue.to = getValue('to', predecessorItem) ? getValue('to', predecessorItem) : ganttProp.rowUniqueID;\n                preValue.type = getValue('type', predecessorItem) ? getValue('type', predecessorItem) : 'FS';\n                var offsetUnits = getValue('offset', predecessorItem);\n                if (isNullOrUndefined(offsetUnits)) {\n                    preValue.offset = 0;\n                    preValue.offsetUnit = this.parent.durationUnit.toLocaleLowerCase();\n                }\n                else if (typeof offsetUnits === 'string') {\n                    var tempOffsetUnits = this.getOffsetDurationUnit(getValue('offset', predecessorItem));\n                    preValue.offset = tempOffsetUnits.duration;\n                    preValue.offsetUnit = tempOffsetUnits.durationUnit;\n                }\n                else {\n                    preValue.offset = parseFloat(offsetUnits.toString());\n                    preValue.offsetUnit = this.parent.durationUnit.toLocaleLowerCase();\n                }\n                var isOwnParent = this.checkIsParent(preValue.from.toString());\n                if (!isOwnParent) {\n                    preValues.push(preValue);\n                }\n            }\n            this.parent.setRecordValue('predecessor', preValues, ganttProp, true);\n        }\n        this.parent.setRecordValue('predecessorsName', this.getPredecessorStringValue(ganttData), ganttProp, true);\n        this.parent.setRecordValue('taskData.' + this.parent.taskFields.dependency, ganttProp.predecessorsName, ganttData);\n        this.parent.setRecordValue(this.parent.taskFields.dependency, ganttProp.predecessorsName, ganttData);\n    };\n    /**\n     * To render unscheduled empty task with 1 day duration during predecessor map\n     *\n     * @param {IGanttData} data .\n     * @returns {void} .\n     * @private\n     */\n    Dependency.prototype.updateUnscheduledDependency = function (data) {\n        var task = this.parent.taskFields;\n        var prdList = !isNullOrUndefined(data[task.dependency]) ?\n            data[task.dependency].toString().split(',') : [];\n        for (var i = 0; i < prdList.length; i++) {\n            var predId = parseInt(prdList[i], 10);\n            if (!isNaN(predId)) {\n                var predData = this.parent.getRecordByID(predId.toString());\n                var record = !isNullOrUndefined(predData) ?\n                    extend({}, {}, predData.taskData, true) : null;\n                if (!isNullOrUndefined(record) && isNullOrUndefined(record[task.startDate])\n                    && isNullOrUndefined(record[task.duration]) && isNullOrUndefined(record[task.endDate])) {\n                    record[task.duration] = 1;\n                    record[task.startDate] = this.parent.projectStartDate;\n                    this.parent.updateRecordByID(record);\n                }\n            }\n        }\n    };\n    /**\n     *\n     * @param {string} fromId .\n     * @returns {boolean} .\n     */\n    Dependency.prototype.checkIsParent = function (fromId) {\n        var boolValue = false;\n        var task = this.parent.connectorLineModule.getRecordByID(fromId);\n        if (task.hasChildRecords) {\n            boolValue = true;\n        }\n        return boolValue;\n    };\n    /**\n     * Get predecessor collection object from predecessor string value\n     *\n     * @param {string | number} predecessorValue .\n     * @param {IGanttData} ganttRecord .\n     * @returns {IPredecessor[]} .\n     * @private\n     */\n    Dependency.prototype.calculatePredecessor = function (predecessorValue, ganttRecord) {\n        var _this = this;\n        var predecessor = predecessorValue.toString();\n        var collection = [];\n        var match;\n        var values;\n        var offsetValue;\n        var predecessorText;\n        predecessor.split(',').forEach(function (el) {\n            values = el.split('+');\n            offsetValue = '+';\n            if (el.indexOf('-') >= 0) {\n                values = el.split('-');\n                offsetValue = '-';\n            }\n            match = values[0].match(/(\\d+|[A-z]+)/g);\n            var ids = _this.parent.viewType === 'ResourceView' ? _this.parent.getTaskIds() : _this.parent.ids;\n            var isExist = _this.parent.viewType === 'ResourceView' ? ids.indexOf('T' + match[0]) : ids.indexOf(match[0]);\n            /*Validate for appropriate predecessor*/\n            if (match[0] && isExist !== -1) {\n                if (match.length > 1) {\n                    var type = match[1].toUpperCase();\n                    if (type === 'FS' || type === 'FF' || type === 'SF' || type === 'SS') {\n                        predecessorText = type;\n                    }\n                    else {\n                        predecessorText = 'FS';\n                    }\n                }\n                else {\n                    predecessorText = 'FS';\n                }\n            }\n            else {\n                return; // exit current loop for invalid id (match[0])\n            }\n            var tempOffset = values.length > 1 ? offsetValue + '' + values[1] : '0';\n            var offsetUnits = _this.getOffsetDurationUnit(tempOffset);\n            var obj = {\n                from: match[0],\n                type: predecessorText,\n                isDrawn: false,\n                to: _this.parent.viewType === 'ResourceView' ? ganttRecord.ganttProperties.taskId.toString()\n                    : ganttRecord.ganttProperties.rowUniqueID.toString(),\n                offsetUnit: offsetUnits.durationUnit,\n                offset: offsetUnits.duration\n            };\n            var isOwnParent = _this.checkIsParent(match[0]);\n            if (!isOwnParent) {\n                collection.push(obj);\n            }\n        });\n        return collection;\n    };\n    /**\n     * Get predecessor value as string with offset values\n     *\n     * @param {IGanttData} data .\n     * @returns {string} .\n     * @private\n     */\n    Dependency.prototype.getPredecessorStringValue = function (data) {\n        var predecessors = data.ganttProperties.predecessor;\n        var durationUnitTexts = this.parent.durationUnitTexts;\n        var resultString = '';\n        if (predecessors) {\n            var length_1 = predecessors.length;\n            for (var i = 0; i < length_1; i++) {\n                var currentValue = predecessors[i];\n                var temp = '';\n                var id = this.parent.viewType === 'ResourceView' ? data.ganttProperties.taskId\n                    : data.ganttProperties.rowUniqueID;\n                if (currentValue.from !== id.toString()) {\n                    temp = currentValue.from + currentValue.type;\n                    if (currentValue.offset !== 0) {\n                        temp += currentValue.offset > 0 ? ('+' + currentValue.offset + ' ') : (currentValue.offset + ' ');\n                        var multiple = currentValue.offset !== 1;\n                        if (currentValue.offsetUnit === 'day') {\n                            temp += multiple ? getValue('days', durationUnitTexts) : getValue('day', durationUnitTexts);\n                        }\n                        else if (currentValue.offsetUnit === 'hour') {\n                            temp += multiple ? getValue('hours', durationUnitTexts) : getValue('hour', durationUnitTexts);\n                        }\n                        else {\n                            temp += multiple ? getValue('minutes', durationUnitTexts) : getValue('minute', durationUnitTexts);\n                        }\n                    }\n                    if (resultString.length > 0) {\n                        resultString = resultString + ',' + temp;\n                    }\n                    else {\n                        resultString = temp;\n                    }\n                }\n            }\n        }\n        return resultString;\n    };\n    /*Get duration and duration unit value from tasks*/\n    Dependency.prototype.getOffsetDurationUnit = function (val) {\n        var duration = 0;\n        var durationUnit = this.parent.durationUnit.toLocaleLowerCase();\n        var durationUnitLabels = this.parent.durationUnitEditText;\n        if (typeof val === 'string') {\n            var values = val.match(/[^0-9]+|[0-9]+/g);\n            for (var x = 0; x < values.length; x++) {\n                values[x] = (values[x]).trim();\n            }\n            if (values[0] === '-' && values[1]) {\n                values[1] = values[0] + values[1];\n                values.shift();\n            }\n            else if (values[0] === '+') {\n                values.shift();\n            }\n            if (values[1] === '.' && !isNaN(parseInt(values[2], 10))) {\n                values[0] += values[1] + values[2];\n                values.splice(1, 2);\n            }\n            if (values && values.length <= 2) {\n                duration = parseFloat(values[0]);\n                durationUnit = values[1] ? (values[1].toLowerCase()).trim() : '';\n                if (getValue('minute', durationUnitLabels).indexOf(durationUnit) !== -1) {\n                    durationUnit = 'minute';\n                }\n                else if (getValue('hour', durationUnitLabels).indexOf(durationUnit) !== -1) {\n                    durationUnit = 'hour';\n                }\n                else if (getValue('day', durationUnitLabels).indexOf(durationUnit) !== -1) {\n                    durationUnit = 'day';\n                }\n                else {\n                    durationUnit = this.parent.durationUnit.toLocaleLowerCase();\n                }\n            }\n        }\n        else {\n            duration = val;\n            durationUnit = this.parent.durationUnit.toLocaleLowerCase();\n        }\n        if (isNaN(duration)) {\n            duration = 0;\n            durationUnit = this.parent.durationUnit.toLocaleLowerCase();\n        }\n        return {\n            duration: duration,\n            durationUnit: durationUnit\n        };\n    };\n    /**\n     * Update predecessor object in both from and to tasks collection\n     *\n     * @returns {void} .\n     * @private\n     */\n    Dependency.prototype.updatePredecessors = function () {\n        var predecessorsCollection = this.parent.predecessorsCollection;\n        var ganttRecord;\n        var length = predecessorsCollection.length;\n        for (var count = 0; count < length; count++) {\n            ganttRecord = predecessorsCollection[count];\n            if (!ganttRecord.hasChildRecords) {\n                this.updatePredecessorHelper(ganttRecord, predecessorsCollection);\n            }\n        }\n    };\n    /**\n     * To update predecessor collection to successor tasks\n     *\n     * @param {IGanttData} ganttRecord .\n     * @param {IGanttData[]} predecessorsCollection .\n     * @returns {void} .\n     * @private\n     */\n    Dependency.prototype.updatePredecessorHelper = function (ganttRecord, predecessorsCollection) {\n        var connectorsCollection = ganttRecord.ganttProperties.predecessor;\n        var successorGanttRecord;\n        var connectorCount = connectorsCollection.length;\n        predecessorsCollection = isNullOrUndefined(predecessorsCollection) ? [] : predecessorsCollection;\n        for (var i = 0; i < connectorCount; i++) {\n            var connector = connectorsCollection[i];\n            successorGanttRecord = this.parent.connectorLineModule.getRecordByID(connector.from);\n            var id = this.parent.viewType === 'ResourceView' ? ganttRecord.ganttProperties.taskId\n                : ganttRecord.ganttProperties.rowUniqueID;\n            if (connector.from !== id.toString()) {\n                if (successorGanttRecord) {\n                    var predecessorCollection = void 0;\n                    if (successorGanttRecord.ganttProperties.predecessor) {\n                        predecessorCollection = (extend([], successorGanttRecord.ganttProperties.predecessor, [], true));\n                        predecessorCollection.push(connector);\n                        this.parent.setRecordValue('predecessor', predecessorCollection, successorGanttRecord.ganttProperties, true);\n                        //  successorGanttRecord.ganttProperties.predecessor.push(connector);\n                    }\n                    else {\n                        predecessorCollection = [];\n                        predecessorCollection.push(connector);\n                        this.parent.setRecordValue('predecessor', predecessorCollection, successorGanttRecord.ganttProperties, true);\n                        // this.parent.setRecordValue('predecessor', [], successorGanttRecord.ganttProperties, true);\n                        // successorGanttRecord.ganttProperties.predecessor.push(connector);\n                        predecessorsCollection.push(successorGanttRecord);\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Method to validate date of tasks with predecessor values for all records\n     *\n     * @returns {void} .\n     * @private\n     */\n    Dependency.prototype.updatedRecordsDateByPredecessor = function () {\n        var flatData = this.parent.flatData;\n        for (var count = 0; count < flatData.length; count++) {\n            if (flatData[count].ganttProperties.predecessor) {\n                this.validatePredecessorDates(flatData[count]);\n            }\n        }\n    };\n    /**\n     * To validate task date values with dependency\n     *\n     * @param {IGanttData} ganttRecord .\n     * @returns {void} .\n     * @private\n     */\n    Dependency.prototype.validatePredecessorDates = function (ganttRecord) {\n        if (ganttRecord.ganttProperties.predecessor) {\n            var predecessorsCollection = ganttRecord.ganttProperties.predecessor;\n            var count = void 0;\n            var parentGanttRecord = void 0;\n            var record = null;\n            var currentTaskId_1 = this.parent.viewType === 'ResourceView' ? ganttRecord.ganttProperties.taskId.toString()\n                : ganttRecord.ganttProperties.rowUniqueID.toString();\n            var predecessors = predecessorsCollection.filter(function (data) {\n                if (data.to === currentTaskId_1) {\n                    return data;\n                }\n                else {\n                    return null;\n                }\n            });\n            for (count = 0; count < predecessors.length; count++) {\n                var predecessor = predecessors[count];\n                parentGanttRecord = this.parent.connectorLineModule.getRecordByID(predecessor.from);\n                record = this.parent.connectorLineModule.getRecordByID(predecessor.to);\n                if (record.ganttProperties.isAutoSchedule || this.parent.validateManualTasksOnLinking) {\n                    this.validateChildGanttRecord(parentGanttRecord, record);\n                }\n            }\n        }\n    };\n    /**\n     * Method to validate task with predecessor\n     *\n     * @param {IGanttData} parentGanttRecord .\n     * @param {IGanttData} childGanttRecord .\n     * @returns {void} .\n     */\n    Dependency.prototype.validateChildGanttRecord = function (parentGanttRecord, childGanttRecord) {\n        if (this.parent.editedTaskBarItem === childGanttRecord || isNullOrUndefined(isScheduledTask(parentGanttRecord.ganttProperties))\n            || isNullOrUndefined(isScheduledTask(childGanttRecord.ganttProperties))) {\n            return;\n        }\n        if (this.parent.isInPredecessorValidation && (childGanttRecord.ganttProperties.isAutoSchedule ||\n            this.parent.validateManualTasksOnLinking)) {\n            var childRecordProperty = childGanttRecord.ganttProperties;\n            var currentTaskId_2 = this.parent.viewType === 'ResourceView' ? childRecordProperty.taskId.toString()\n                : childRecordProperty.rowUniqueID.toString();\n            var predecessorsCollection = childRecordProperty.predecessor;\n            var childPredecessor = predecessorsCollection.filter(function (data) {\n                if (data.to === currentTaskId_2) {\n                    return data;\n                }\n                else {\n                    return null;\n                }\n            });\n            var startDate = this.getPredecessorDate(childGanttRecord, childPredecessor);\n            this.parent.setRecordValue('startDate', startDate, childRecordProperty, true);\n            this.parent.dataOperation.updateMappingData(childGanttRecord, 'startDate');\n            var segments = childGanttRecord.ganttProperties.segments;\n            if (isNullOrUndefined(segments)) {\n                this.dateValidateModule.calculateEndDate(childGanttRecord);\n            }\n            this.parent.dataOperation.updateWidthLeft(childGanttRecord);\n            if (childGanttRecord.parentItem && this.parent.getParentTask(childGanttRecord.parentItem).ganttProperties.isAutoSchedule\n                && this.parent.isInPredecessorValidation && !this.parent.isLoad) {\n                if (this.parentIds.indexOf(childGanttRecord.parentItem.uniqueID) === -1) {\n                    this.parentIds.push(childGanttRecord.parentItem.uniqueID);\n                    this.parentRecord.push(childGanttRecord.parentItem);\n                }\n            }\n        }\n    };\n    /**\n     *\n     * @param {IGanttData} ganttRecord .\n     * @param {IPredecessor[]} predecessorsCollection .\n     * @returns {Date} .\n     * @private\n     */\n    Dependency.prototype.getPredecessorDate = function (ganttRecord, predecessorsCollection) {\n        var _this = this;\n        var maxStartDate;\n        var tempStartDate;\n        var parentGanttRecord;\n        var childGanttRecord;\n        var validatedPredecessor = predecessorsCollection.filter(function (data) {\n            var id = _this.parent.viewType === 'ResourceView' ? ganttRecord.ganttProperties.taskId\n                : ganttRecord.ganttProperties.rowUniqueID;\n            if (data.to === id.toString()) {\n                return data;\n            }\n            else {\n                return null;\n            }\n        });\n        if (validatedPredecessor) {\n            var length_2 = validatedPredecessor.length;\n            for (var i = 0; i < length_2; i++) {\n                var predecessor = validatedPredecessor[i];\n                parentGanttRecord = this.parent.connectorLineModule.getRecordByID(predecessor.from);\n                childGanttRecord = this.parent.connectorLineModule.getRecordByID(predecessor.to);\n                tempStartDate =\n                    this.getValidatedStartDate(childGanttRecord.ganttProperties, parentGanttRecord.ganttProperties, predecessor);\n                if (maxStartDate == null || this.dateValidateModule.compareDates(tempStartDate, maxStartDate) === 1) {\n                    maxStartDate = tempStartDate;\n                }\n            }\n        }\n        return maxStartDate;\n    };\n    /**\n     * Get validated start date as per predecessor type\n     *\n     * @param {ITaskData} ganttProperty .\n     * @param {ITaskData} parentRecordProperty .\n     * @param {IPredecessor} predecessor .\n     * @returns {Date} .\n     */\n    Dependency.prototype.getValidatedStartDate = function (ganttProperty, parentRecordProperty, predecessor) {\n        var type = predecessor.type;\n        var offset = predecessor.offset;\n        var tempDate;\n        var returnStartDate;\n        switch (type) {\n            case 'FS':\n                tempDate = this.dateValidateModule.getValidEndDate(parentRecordProperty);\n                if (!ganttProperty.isMilestone || offset !== 0) {\n                    tempDate = this.dateValidateModule.checkStartDate(tempDate, ganttProperty);\n                }\n                if (offset !== 0) {\n                    tempDate = this.updateDateByOffset(tempDate, predecessor, ganttProperty);\n                }\n                if (!ganttProperty.isMilestone) {\n                    returnStartDate = this.dateValidateModule.checkStartDate(tempDate, ganttProperty);\n                }\n                else {\n                    returnStartDate = tempDate;\n                }\n                break;\n            case 'FF':\n            case 'SF':\n                tempDate = type === 'FF' ? this.dateValidateModule.getValidEndDate(parentRecordProperty) :\n                    this.dateValidateModule.getValidStartDate(parentRecordProperty);\n                if (offset !== 0) {\n                    tempDate = this.updateDateByOffset(tempDate, predecessor, ganttProperty);\n                }\n                if (!ganttProperty.isMilestone) {\n                    tempDate = this.dateValidateModule.checkEndDate(tempDate, ganttProperty);\n                }\n                returnStartDate = this.dateValidateModule.getStartDate(tempDate, ganttProperty.duration, ganttProperty.durationUnit, ganttProperty);\n                break;\n            case 'SS':\n                tempDate = this.dateValidateModule.getValidStartDate(parentRecordProperty);\n                if (offset !== 0) {\n                    tempDate = this.updateDateByOffset(tempDate, predecessor, ganttProperty);\n                }\n                if (!ganttProperty.isMilestone) {\n                    returnStartDate = this.dateValidateModule.checkStartDate(tempDate, ganttProperty);\n                }\n                else {\n                    returnStartDate = tempDate;\n                }\n                break;\n        }\n        return returnStartDate;\n    };\n    /**\n     *\n     * @param {Date} date .\n     * @param {IPredecessor} predecessor .\n     * @param {ITaskData} record .\n     * @returns {void} .\n     */\n    Dependency.prototype.updateDateByOffset = function (date, predecessor, record) {\n        var resultDate;\n        var offsetValue = predecessor.offset;\n        var durationUnit = predecessor.offsetUnit;\n        if (offsetValue < 0) {\n            resultDate = this.dateValidateModule.getStartDate(this.dateValidateModule.checkEndDate(date, record), (offsetValue * -1), durationUnit, record);\n        }\n        else {\n            resultDate = this.dateValidateModule.getEndDate(date, offsetValue, durationUnit, record, false);\n            if (!record.isMilestone) {\n                resultDate = this.dateValidateModule.checkStartDate(resultDate, record);\n            }\n        }\n        return resultDate;\n    };\n    /**\n     *\n     * @param {IGanttData} records .\n     * @returns {void} .\n     * @private\n     */\n    Dependency.prototype.createConnectorLinesCollection = function (records) {\n        var ganttRecords = records ? records : this.parent.currentViewData;\n        var recordLength = ganttRecords.length;\n        var count;\n        var ganttRecord;\n        var predecessorsCollection;\n        this.parent.connectorLineModule.expandedRecords = this.parent.virtualScrollModule && this.parent.enableVirtualization ?\n            this.parent.updatedRecords : this.parent.getExpandedRecords(this.parent.updatedRecords);\n        for (count = 0; count < recordLength; count++) {\n            ganttRecord = ganttRecords[count];\n            predecessorsCollection = ganttRecord.ganttProperties.predecessor;\n            if (predecessorsCollection) {\n                this.addPredecessorsCollection(predecessorsCollection);\n            }\n        }\n    };\n    /**\n     *\n     * @param {object[]} predecessorsCollection .\n     * @returns {void} .\n     */\n    Dependency.prototype.addPredecessorsCollection = function (predecessorsCollection) {\n        var predecessorsLength;\n        var predecessorCount;\n        var predecessor;\n        var parentGanttRecord;\n        var childGanttRecord;\n        if (predecessorsCollection) {\n            predecessorsLength = predecessorsCollection.length;\n            for (predecessorCount = 0; predecessorCount < predecessorsLength; predecessorCount++) {\n                predecessor = predecessorsCollection[predecessorCount];\n                var from = 'from';\n                var to = 'to';\n                parentGanttRecord = this.parent.connectorLineModule.getRecordByID(predecessor[from]);\n                childGanttRecord = this.parent.connectorLineModule.getRecordByID(predecessor[to]);\n                if (this.parent.connectorLineModule.expandedRecords &&\n                    this.parent.connectorLineModule.expandedRecords.indexOf(parentGanttRecord) !== -1 &&\n                    this.parent.connectorLineModule.expandedRecords.indexOf(childGanttRecord) !== -1) {\n                    this.updateConnectorLineObject(parentGanttRecord, childGanttRecord, predecessor);\n                }\n            }\n        }\n    };\n    /**\n     * To refresh connector line object collections\n     *\n     * @param {IGanttData} parentGanttRecord .\n     * @param {IGanttData} childGanttRecord .\n     * @param {IPredecessor} predecessor .\n     * @returns {void} .\n     * @private\n     */\n    Dependency.prototype.updateConnectorLineObject = function (parentGanttRecord, childGanttRecord, predecessor) {\n        var connectorObj = this.parent.connectorLineModule.createConnectorLineObject(parentGanttRecord, childGanttRecord, predecessor);\n        if (connectorObj) {\n            if ((this.parent.connectorLineIds.length > 0 && this.parent.connectorLineIds.indexOf(connectorObj.connectorLineId) === -1) ||\n                this.parent.connectorLineIds.length === 0) {\n                this.parent.updatedConnectorLineCollection.push(connectorObj);\n                this.parent.connectorLineIds.push(connectorObj.connectorLineId);\n            }\n            else if (this.parent.connectorLineIds.indexOf(connectorObj.connectorLineId) !== -1) {\n                var index = this.parent.connectorLineIds.indexOf(connectorObj.connectorLineId);\n                this.parent.updatedConnectorLineCollection[index] = connectorObj;\n            }\n            predecessor.isDrawn = true;\n        }\n        return connectorObj;\n    };\n    /**\n     *\n     * @param {IGanttData} childGanttRecord .\n     * @param {IPredecessor[]} previousValue .\n     * @param {string} validationOn .\n     * @returns {void} .\n     * @private\n     */\n    Dependency.prototype.validatePredecessor = function (childGanttRecord, previousValue, validationOn) {\n        if (!this.parent.isInPredecessorValidation) {\n            return;\n        }\n        if (childGanttRecord.ganttProperties.predecessor) {\n            var predecessorsCollection = childGanttRecord.ganttProperties.predecessor;\n            var parentGanttRecord = void 0;\n            var record = null;\n            var predecessor = void 0;\n            var successor = void 0;\n            var currentTaskId_3 = this.parent.viewType === 'ResourceView' ? childGanttRecord.ganttProperties.taskId.toString()\n                : childGanttRecord.ganttProperties.rowUniqueID.toString();\n            var predecessors = predecessorsCollection.filter(function (data) {\n                if (data.to === currentTaskId_3) {\n                    return data;\n                }\n                else {\n                    return null;\n                }\n            });\n            var successors = predecessorsCollection.filter(function (data) {\n                if (data.from === currentTaskId_3) {\n                    return data;\n                }\n                else {\n                    return null;\n                }\n            });\n            for (var count = 0; count < predecessors.length; count++) {\n                predecessor = predecessors[count];\n                parentGanttRecord = this.parent.connectorLineModule.getRecordByID(predecessor.from);\n                record = this.parent.connectorLineModule.getRecordByID(predecessor.to);\n                if (this.parent.isInPredecessorValidation && record.ganttProperties.isAutoSchedule) {\n                    this.parent.isValidationEnabled = true;\n                }\n                else {\n                    this.parent.isValidationEnabled = false;\n                }\n                var id = this.parent.viewType === 'ResourceView' ? childGanttRecord.ganttProperties.taskId\n                    : childGanttRecord.ganttProperties.rowUniqueID;\n                if ((id.toString() === predecessor.to\n                    || id.toString() === predecessor.from)\n                    && (!validationOn || validationOn === 'predecessor')) {\n                    this.validateChildGanttRecord(parentGanttRecord, record);\n                }\n            }\n            for (var count = 0; count < successors.length; count++) {\n                successor = successors[count];\n                parentGanttRecord = this.parent.connectorLineModule.getRecordByID(successor.from);\n                record = this.parent.connectorLineModule.getRecordByID(successor.to);\n                if (this.parent.isInPredecessorValidation && record.ganttProperties.isAutoSchedule) {\n                    this.parent.isValidationEnabled = true;\n                }\n                else {\n                    this.parent.isValidationEnabled = false;\n                }\n                if (validationOn !== 'predecessor' && this.parent.isValidationEnabled) {\n                    this.validateChildGanttRecord(parentGanttRecord, record);\n                }\n                if (parentGanttRecord.expanded === false || record.expanded === false) {\n                    if (record) {\n                        this.validatePredecessor(record, undefined, 'successor');\n                    }\n                    continue;\n                }\n                if (record) {\n                    this.validatePredecessor(record, undefined, 'successor');\n                }\n            }\n        }\n    };\n    /**\n     * Method to get validate able predecessor alone from record\n     *\n     * @param {IGanttData} record .\n     * @returns {IPredecessor[]} .\n     * @private\n     */\n    Dependency.prototype.getValidPredecessor = function (record) {\n        var _this = this;\n        var validPredecessor = [];\n        if (!isNullOrUndefined(record)) {\n            var recPredecessor = record.ganttProperties.predecessor;\n            if (recPredecessor && recPredecessor.length > 0) {\n                validPredecessor = recPredecessor.filter(function (value) {\n                    var id = _this.parent.viewType === 'ResourceView' ? record.ganttProperties.taskId\n                        : record.ganttProperties.rowUniqueID;\n                    return value.from !== id.toString();\n                });\n            }\n        }\n        return validPredecessor;\n    };\n    return Dependency;\n}());\nexport { Dependency };\n"]},"metadata":{},"sourceType":"module"}