{"ast":null,"code":"import { PdfFontFamily } from '@syncfusion/ej2-pdf-export';\nimport { PdfStringFormat, PdfPageCountField, PdfPageNumberField } from '@syncfusion/ej2-pdf-export';\nimport { PdfPageTemplateElement, RectangleF, PdfCompositeField, PointF } from '@syncfusion/ej2-pdf-export';\nimport { PdfVerticalAlignment, PdfTextAlignment, PdfStandardFont } from '@syncfusion/ej2-pdf-export';\nimport { PdfFontStyle, PdfColor, PdfPen, PdfSolidBrush } from '@syncfusion/ej2-pdf-export';\nimport { PdfBorders, PdfPaddings } from './pdf-base/index';\nimport { isNullOrUndefined, Internationalization, getValue, extend } from '@syncfusion/ej2-base';\nimport { getForeignData, ValueFormatter } from '@syncfusion/ej2-grids';\nimport { pixelToPoint, isScheduledTask } from '../base/utils';\n/**\n * @hidden\n * `ExportHelper` for `PdfExport` & `ExcelExport`\n */\n\nvar ExportHelper =\n/** @class */\nfunction () {\n  function ExportHelper(parent) {\n    this.parent = parent;\n  }\n  /**\n   * @param {IGanttData[]} data .\n   * @param {PdfGantt} gantt .\n   * @param {PdfExportProperties} props .\n   * @returns {void} .\n   * @private\n   */\n\n\n  ExportHelper.prototype.processGridExport = function (data, gantt, props) {\n    this.flatData = data;\n    this.gantt = gantt;\n    this.exportValueFormatter = new ExportValueFormatter(this.parent.locale);\n    this.exportProps = props;\n    this.rowIndex = 0;\n    this.colIndex = 0;\n    this.columns = this.parent.treeGrid.columns;\n    this.gantt.treeColumnIndex = this.parent.treeColumnIndex;\n    this.gantt.rowHeight = pixelToPoint(this.parent.rowHeight);\n    this.gantt.style.cellPadding.left = 0;\n    this.gantt.style.cellPadding.right = 0;\n    this.ganttStyle = this.gantt.ganttStyle;\n    this.gantt.borderColor = this.ganttStyle.chartGridLineColor;\n    this.processHeaderContent();\n    this.processGanttContent();\n    this.processTimeline();\n    this.processTaskbar();\n    this.processPredecessor();\n  };\n\n  ExportHelper.prototype.processHeaderContent = function () {\n    var _this = this;\n\n    this.rowIndex++;\n    this.row = this.gantt.rows.addRow();\n    var index = 0;\n    this.columns.forEach(function (column) {\n      if (_this.isColumnVisible(column)) {\n        _this.processColumnHeader(column, index);\n\n        index++;\n      }\n    });\n  };\n\n  ExportHelper.prototype.processColumnHeader = function (column, index) {\n    this.gantt.columns.add(1);\n    var pdfColumn = this.gantt.columns.getColumn(index);\n\n    if (this.parent.treeColumnIndex === index) {\n      pdfColumn.isTreeColumn = true;\n    }\n\n    var width = parseInt(column.width, 10);\n    pdfColumn.width = pixelToPoint(width);\n    this.totalColumnWidth += pdfColumn.width;\n    pdfColumn.headerText = column.headerText;\n    pdfColumn.field = column.field;\n    var cell = this.row.cells.getCell(index);\n    cell.value = column.headerText;\n    cell.isHeaderCell = true;\n    var treeGridHeaderHeight = this.parent.timelineModule.isSingleTier ? 45 : 60;\n    this.copyStyles(this.ganttStyle.columnHeader, cell, false);\n    this.row.height = pixelToPoint(treeGridHeaderHeight);\n\n    if (column.headerTextAlign) {\n      cell.style.format.alignment = PdfTextAlignment[column.headerTextAlign];\n    }\n\n    var args = {\n      cell: cell,\n      style: cell.style,\n      value: cell.value,\n      column: column\n    };\n\n    if (this.parent.pdfColumnHeaderQueryCellInfo) {\n      this.parent.trigger('pdfColumnHeaderQueryCellInfo', args);\n    }\n\n    cell.value = args.value;\n  };\n\n  ExportHelper.prototype.isColumnVisible = function (column) {\n    var visibleColumn = column.visible || this.exportProps.includeHiddenColumn;\n    var templateColumn = !isNullOrUndefined(column.template) ? false : true;\n    return visibleColumn && templateColumn;\n  };\n\n  ExportHelper.prototype.processGanttContent = function () {\n    var _this = this;\n\n    if (this.flatData.length === 0) {\n      this.renderEmptyGantt();\n    } else {\n      this.flatData.forEach(function (data) {\n        _this.row = _this.gantt.rows.addRow();\n\n        if (data.hasChildRecords) {\n          _this.gantt.rows.getRow(_this.rowIndex).isParentRow = true;\n\n          _this.processRecordRow(data);\n        } else {\n          _this.processRecordRow(data);\n        }\n\n        _this.rowIndex++;\n      });\n    }\n  };\n  /**\n   * Method for processing the timeline details\n   *\n   * @returns {void} .\n   */\n\n\n  ExportHelper.prototype.processTimeline = function () {\n    var timelineSettings = this.parent.timelineModule;\n    this.gantt.chartHeader.topTierHeight = this.gantt.chartHeader.bottomTierHeight = this.parent.timelineModule.isSingleTier ? 45 : 60 / 2;\n    this.gantt.chartHeader.topTierCellWidth = timelineSettings.topTierCellWidth;\n    this.gantt.chartHeader.bottomTierCellWidth = timelineSettings.bottomTierCellWidth;\n    this.gantt.chartHeader.topTier = extend([], [], timelineSettings.topTierCollection, true);\n    this.gantt.chartHeader.bottomTier = extend([], [], timelineSettings.bottomTierCollection, true);\n    this.gantt.chartHeader.width = timelineSettings.totalTimelineWidth;\n    this.gantt.chartHeader.height = this.gantt.rows.getRow(0).height;\n    this.gantt.timelineStartDate = new Date(timelineSettings.timelineStartDate.getTime());\n  };\n  /**\n   * Method for create the predecessor collection for rendering\n   *\n   * @returns {void} .\n   */\n\n\n  ExportHelper.prototype.processPredecessor = function () {\n    var _this = this;\n\n    if (isNullOrUndefined(this.exportProps.showPredecessorLines) || this.exportProps.showPredecessorLines) {\n      this.parent.pdfExportModule.isPdfExport = true;\n      this.parent.predecessorModule.createConnectorLinesCollection();\n      this.parent.updatedConnectorLineCollection.forEach(function (data) {\n        var predecessor = _this.gantt.predecessor.add();\n\n        predecessor.parentLeft = data.parentLeft;\n        predecessor.childLeft = data.childLeft;\n        predecessor.parentWidth = data.parentWidth;\n        predecessor.childWidth = data.childWidth;\n        predecessor.parentIndex = data.parentIndex;\n        predecessor.childIndex = data.childIndex;\n        predecessor.rowHeight = data.rowHeight;\n        predecessor.type = data.type;\n        predecessor.milestoneParent = data.milestoneParent;\n        predecessor.milestoneChild = data.milestoneChild;\n        predecessor.lineWidth = _this.parent.connectorLineWidth > 5 ? pixelToPoint(5) : pixelToPoint(_this.parent.connectorLineWidth);\n        predecessor.connectorLineColor = _this.ganttStyle.connectorLineColor;\n\n        _this.gantt.predecessorCollection.push(predecessor);\n      });\n      this.parent.pdfExportModule.isPdfExport = false;\n    }\n  };\n\n  ExportHelper.prototype.processRecordRow = function (data) {\n    var _this = this;\n\n    this.colIndex = 0;\n    this.row.level = data.level;\n    this.columns.forEach(function (column) {\n      if (_this.isColumnVisible(column)) {\n        _this.processRecordCell(data, column, _this.row);\n\n        _this.colIndex++;\n      }\n    });\n  };\n\n  ExportHelper.prototype.processRecordCell = function (data, column, row) {\n    var cell = row.cells.getCell(this.colIndex);\n    var taskFields = this.parent.taskFields;\n    var ganttProps = data.ganttProperties;\n\n    if (column.editType === 'datepickeredit' || column.editType === 'datetimepickeredit') {\n      cell.value = data[column.field];\n    } else if (column.field === taskFields.duration) {\n      cell.value = this.parent.getDurationString(ganttProps.duration, ganttProps.durationUnit);\n    } else if (column.field === taskFields.resourceInfo) {\n      cell.value = ganttProps.resourceNames;\n    } else if (column.field === taskFields.work) {\n      cell.value = this.parent.getWorkString(ganttProps.work, ganttProps.workUnit);\n    } else {\n      cell.value = !isNullOrUndefined(data[column.field]) ? data[column.field].toString() : '';\n    }\n\n    cell.isHeaderCell = false;\n    cell.style.padding = new PdfPaddings();\n    this.copyStyles(this.ganttStyle.cell, cell, row.isParentRow);\n\n    if (this.colIndex !== this.parent.treeColumnIndex) {\n      cell.style.format.alignment = PdfTextAlignment[column.textAlign];\n    } else {\n      cell.style.format.paragraphIndent = cell.row.level * 10;\n    }\n\n    var args = {\n      data: data,\n      value: cell.value,\n      column: column,\n      style: cell.style,\n      cell: cell\n    };\n    args.value = this.exportValueFormatter.formatCellValue(args);\n\n    if (this.parent.pdfQueryCellInfo) {\n      this.parent.trigger('pdfQueryCellInfo', args);\n    }\n\n    cell.value = args.value;\n  };\n  /**\n   * Method for create the taskbar collection for rendering\n   *\n   * @returns {void} .\n   */\n\n\n  ExportHelper.prototype.processTaskbar = function () {\n    var _this = this;\n\n    this.flatData.forEach(function (data) {\n      var taskbar = _this.gantt.taskbar.add();\n\n      var ganttProp = data.ganttProperties;\n      taskbar.left = ganttProp.left;\n      taskbar.width = ganttProp.width;\n\n      if (taskbar.left < 0) {\n        taskbar.width = taskbar.width + taskbar.left;\n        taskbar.left = 0;\n      }\n\n      taskbar.progress = ganttProp.progress;\n      taskbar.isScheduledTask = isScheduledTask(ganttProp);\n\n      if (isScheduledTask) {\n        if (isNullOrUndefined(ganttProp.endDate) && isNullOrUndefined(ganttProp.duration)) {\n          taskbar.unscheduledTaskBy = 'startDate';\n        } else if (isNullOrUndefined(ganttProp.startDate) && isNullOrUndefined(ganttProp.duration)) {\n          taskbar.unscheduledTaskBy = 'endDate';\n        } else {\n          taskbar.unscheduledTaskBy = 'duration';\n          taskbar.unscheduleStarteDate = _this.parent.dateValidationModule.getValidStartDate(data.ganttProperties);\n          taskbar.unscheduleEndDate = _this.parent.dateValidationModule.getValidEndDate(data.ganttProperties);\n        }\n      } else {\n        taskbar.unscheduleStarteDate = null;\n        taskbar.unscheduleEndDate = null;\n      }\n\n      taskbar.startDate = ganttProp.startDate;\n      taskbar.endDate = ganttProp.endDate;\n      taskbar.height = _this.parent.chartRowsModule.taskBarHeight;\n      taskbar.isMilestone = ganttProp.isMilestone;\n      taskbar.milestoneColor = new PdfColor(_this.ganttStyle.taskbar.milestoneColor);\n      taskbar.isParentTask = data.hasChildRecords;\n\n      if (ganttProp.isMilestone) {\n        taskbar.height = ganttProp.width;\n      }\n\n      if (data[_this.parent.labelSettings.leftLabel]) {\n        taskbar.leftTaskLabel.value = data[_this.parent.labelSettings.leftLabel].toString();\n      }\n\n      if (data[_this.parent.labelSettings.rightLabel]) {\n        taskbar.rightTaskLabel.value = data[_this.parent.labelSettings.rightLabel].toString();\n      }\n\n      var reduceLeft = ganttProp.isMilestone ? Math.floor(_this.parent.chartRowsModule.taskBarHeight / 2) + 33 : 33; // 33 indicates default timeline cell width\n\n      taskbar.rightTaskLabel.left = ganttProp.left + ganttProp.width + reduceLeft; // right label left value\n\n      taskbar.fontFamily = _this.ganttStyle.fontFamily;\n      taskbar.progressWidth = ganttProp.progressWidth;\n      taskbar.labelColor = new PdfColor(_this.ganttStyle.label.fontColor);\n      taskbar.progressFontColor = new PdfColor(_this.ganttStyle.taskbar.progressFontColor);\n\n      if (taskbar.isParentTask) {\n        taskbar.taskColor = new PdfColor(_this.ganttStyle.taskbar.parentTaskColor);\n        taskbar.taskBorderColor = new PdfColor(_this.ganttStyle.taskbar.parentTaskBorderColor);\n        taskbar.progressColor = new PdfColor(_this.ganttStyle.taskbar.parentProgressColor);\n      } else {\n        taskbar.taskColor = new PdfColor(_this.ganttStyle.taskbar.taskColor);\n        taskbar.taskBorderColor = new PdfColor(_this.ganttStyle.taskbar.taskBorderColor);\n        taskbar.progressColor = new PdfColor(_this.ganttStyle.taskbar.progressColor);\n      }\n\n      taskbar.gridLineColor = new PdfColor(_this.ganttStyle.chartGridLineColor);\n\n      _this.gantt.taskbarCollection.push(taskbar);\n\n      var taskStyle = {};\n      taskStyle.progressFontColor = taskbar.progressFontColor;\n      taskStyle.taskColor = taskbar.taskColor;\n      taskStyle.taskBorderColor = taskbar.taskBorderColor;\n      taskStyle.progressColor = taskbar.progressColor;\n      taskStyle.milestoneColor = taskbar.milestoneColor;\n      var args = {\n        taskbar: taskStyle,\n        data: data\n      };\n\n      if (_this.parent.pdfQueryTaskbarInfo) {\n        _this.parent.trigger('pdfQueryTaskbarInfo', args);\n\n        taskbar.progressFontColor = args.taskbar.progressFontColor;\n        taskbar.taskColor = args.taskbar.taskColor;\n        taskbar.taskBorderColor = args.taskbar.taskBorderColor;\n        taskbar.progressColor = args.taskbar.progressColor;\n        taskbar.milestoneColor = args.taskbar.milestoneColor;\n      }\n    });\n  };\n  /**\n   * set text alignment of each columns in exporting grid\n   *\n   * @param {string} textAlign .\n   * @param {PdfStringFormat} format .\n   * @returns {PdfStringFormat} .\n   * @private\n   */\n\n\n  ExportHelper.prototype.getHorizontalAlignment = function (textAlign, format) {\n    if (format === undefined) {\n      format = new PdfStringFormat();\n    }\n\n    switch (textAlign) {\n      case 'Right':\n        format.alignment = PdfTextAlignment.Right;\n        break;\n\n      case 'Center':\n        format.alignment = PdfTextAlignment.Center;\n        break;\n\n      case 'Justify':\n        format.alignment = PdfTextAlignment.Justify;\n        break;\n\n      case 'Left':\n        format.alignment = PdfTextAlignment.Left;\n        break;\n    }\n\n    return format;\n  };\n  /**\n   * set vertical alignment of each columns in exporting grid\n   *\n   * @param {string} verticalAlign .\n   * @param {PdfStringFormat} format .\n   * @param {string} textAlign .\n   * @returns {PdfStringFormat} .\n   * @private\n   */\n\n\n  ExportHelper.prototype.getVerticalAlignment = function (verticalAlign, format, textAlign) {\n    if (format === undefined) {\n      format = new PdfStringFormat();\n      format = this.getHorizontalAlignment(textAlign, format);\n    }\n\n    switch (verticalAlign) {\n      case 'Bottom':\n        format.lineAlignment = PdfVerticalAlignment.Bottom;\n        break;\n\n      case 'Middle':\n        format.lineAlignment = PdfVerticalAlignment.Middle;\n        break;\n\n      case 'Top':\n        format.lineAlignment = PdfVerticalAlignment.Top;\n        break;\n    }\n\n    return format;\n  };\n\n  ExportHelper.prototype.getFontFamily = function (fontFamily) {\n    switch (fontFamily) {\n      case 'TimesRoman':\n        return 2;\n\n      case 'Courier':\n        return 1;\n\n      case 'Symbol':\n        return 3;\n\n      case 'ZapfDingbats':\n        return 4;\n\n      default:\n        return 0;\n    }\n  };\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n\n\n  ExportHelper.prototype.getFont = function (content) {\n    if (content.font) {\n      return content.font;\n    }\n\n    var fontSize = !isNullOrUndefined(content.style.fontSize) ? content.style.fontSize * 0.75 : 9.75;\n    var fontFamily = !isNullOrUndefined(content.style.fontFamily) ? this.getFontFamily(content.style.fontFamily) : PdfFontFamily.TimesRoman;\n    var fontStyle = PdfFontStyle.Regular;\n\n    if (!isNullOrUndefined(content.style.bold) && content.style.bold) {\n      fontStyle |= PdfFontStyle.Bold;\n    }\n\n    if (!isNullOrUndefined(content.style.italic) && content.style.italic) {\n      fontStyle |= PdfFontStyle.Italic;\n    }\n\n    if (!isNullOrUndefined(content.style.underline) && content.style.underline) {\n      fontStyle |= PdfFontStyle.Underline;\n    }\n\n    if (!isNullOrUndefined(content.style.strikeout) && content.style.strikeout) {\n      fontStyle |= PdfFontStyle.Strikeout;\n    }\n\n    return new PdfStandardFont(fontFamily, fontSize, fontStyle);\n  };\n\n  ExportHelper.prototype.renderEmptyGantt = function () {\n    var row = this.gantt.rows.addRow();\n    row.cells.getCell(0).isHeaderCell = false;\n    row.height = pixelToPoint(this.parent.rowHeight);\n    this.copyStyles(this.ganttStyle.columnHeader, row.cells.getCell(0), row.isParentRow);\n    var count = this.columns.length;\n    this.mergeCells(0, 0, count);\n  };\n\n  ExportHelper.prototype.mergeCells = function (rowIndex, colIndex, lastColIndex) {\n    this.gantt.rows.getRow(rowIndex).cells.getCell(colIndex).columnSpan = lastColIndex;\n  };\n  /* eslint-disable-next-line */\n\n\n  ExportHelper.prototype.copyStyles = function (style, cell, isParentRow) {\n    cell.style.fontColor = new PdfColor(style.fontColor);\n    cell.style.backgroundColor = new PdfColor(style.backgroundColor);\n    cell.style.borderColor = new PdfColor(style.borderColor);\n    cell.style.fontSize = style.fontSize;\n    cell.style.fontStyle = style.fontStyle;\n    /* eslint-disable-next-line */\n\n    cell.style.format = Object.assign(new PdfStringFormat(), style.format);\n    cell.style.borders = new PdfBorders();\n    cell.style.borders.all = new PdfPen(cell.style.borderColor);\n    cell.style.padding = new PdfPaddings();\n    var padding = 0;\n\n    if (cell.isHeaderCell) {\n      padding = this.parent.timelineModule.isSingleTier ? 45 / 2 : 60 / 2;\n    } else {\n      padding = this.parent.rowHeight / 2;\n    }\n\n    cell.style.padding.top = padding - style.fontSize;\n    cell.style.padding.bottom = padding - style.fontSize;\n    cell.style.padding.left = 10;\n    cell.style.padding.right = 10;\n  };\n  /**\n   * @param {PdfDocument} pdfDoc .\n   * @returns {void} .\n   * @private\n   */\n\n\n  ExportHelper.prototype.initializePdf = function (pdfDoc) {\n    this.pdfDoc = pdfDoc;\n    var widths = [];\n    var treeColumnIndex = 0;\n    var tWidth = this.pdfDoc.pageSettings.width - 82;\n\n    if (this.totalColumnWidth > this.pdfDoc.pageSettings.width - 82) {\n      this.gantt.style.allowHorizontalOverflow = true;\n    } else if (tWidth / this.columns.length < widths[treeColumnIndex]) {\n      this.gantt.columns.getColumn(treeColumnIndex).width = widths[treeColumnIndex];\n    }\n\n    if (this.exportProps.enableFooter || isNullOrUndefined(this.exportProps.enableFooter)) {\n      //code for draw the footer content\n      var bounds = new RectangleF(0, 0, pdfDoc.pageSettings.width, 35);\n      var pen = new PdfPen(this.ganttStyle.chartGridLineColor);\n      var footer = new PdfPageTemplateElement(bounds);\n      var footerBrush = new PdfSolidBrush(this.ganttStyle.footer.backgroundColor);\n      footer.graphics.drawRectangle(pen, footerBrush, 0, 0, pdfDoc.pageSettings.width, 35);\n      /* eslint-disable-next-line */\n\n      var font = new PdfStandardFont(this.ganttStyle.fontFamily, this.ganttStyle.footer.fontSize, this.ganttStyle.footer.fontStyle);\n      var brush = new PdfSolidBrush(this.ganttStyle.footer.fontColor);\n      var pageNumber = new PdfPageNumberField(font);\n      var count = new PdfPageCountField(font, brush);\n      var compositeField = new PdfCompositeField(font, brush, 'Page {0}', pageNumber, count);\n      compositeField.stringFormat = this.ganttStyle.footer.format;\n      compositeField.bounds = bounds;\n      compositeField.draw(footer.graphics, new PointF(0, 0));\n      pdfDoc.template.bottom = footer;\n    }\n  };\n\n  return ExportHelper;\n}();\n\nexport { ExportHelper };\n/**\n * @hidden\n * `ExportValueFormatter` for `PdfExport` & `ExcelExport`\n */\n\nvar ExportValueFormatter =\n/** @class */\nfunction () {\n  function ExportValueFormatter(culture) {\n    this.valueFormatter = new ValueFormatter(culture);\n    this.internationalization = new Internationalization(culture);\n  }\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n\n\n  ExportValueFormatter.prototype.returnFormattedValue = function (args, customFormat) {\n    if (!isNullOrUndefined(args.value) && args.value) {\n      return this.valueFormatter.getFormatFunction(customFormat)(args.value);\n    } else {\n      return '';\n    }\n  };\n  /**\n   * @private\n   */\n\n  /* eslint-disable-next-line  */\n\n\n  ExportValueFormatter.prototype.formatCellValue = function (args) {\n    if (args.isForeignKey) {\n      args.value = getValue(args.column.foreignKeyValue, getForeignData(args.column, {}, args.value)[0]);\n    }\n\n    if (args.column.type === 'number' && args.column.format !== undefined && args.column.format !== '') {\n      return args.value ? this.internationalization.getNumberFormat({\n        format: args.column.format\n      })(args.value) : '';\n    } else if (args.column.type === 'boolean') {\n      return args.value ? 'true' : 'false';\n    } else if ((args.column.type === 'date' || args.column.type === 'datetime' || args.column.type === 'time') && args.column.format !== undefined) {\n      if (typeof args.value === 'string') {\n        args.value = new Date(args.value);\n      }\n\n      if (typeof args.column.format === 'string') {\n        var format = void 0;\n\n        if (args.column.type === 'date') {\n          format = {\n            type: 'date',\n            skeleton: args.column.format\n          };\n        } else if (args.column.type === 'time') {\n          format = {\n            type: 'time',\n            skeleton: args.column.format\n          };\n        } else {\n          format = {\n            type: 'dateTime',\n            skeleton: args.column.format\n          };\n        }\n\n        return this.returnFormattedValue(args, format);\n      } else {\n        if (args.column.format instanceof Object && args.column.format.type === undefined) {\n          return args.value.toString();\n        } else {\n          var customFormat = void 0;\n\n          if (args.column.type === 'date') {\n            /* eslint-disable-next-line max-len */\n            customFormat = {\n              type: args.column.format.type,\n              format: args.column.format.format,\n              skeleton: args.column.format.skeleton\n            };\n          } else if (args.column.type === 'time') {\n            customFormat = {\n              type: 'time',\n              format: args.column.format.format,\n              skeleton: args.column.format.skeleton\n            };\n          } else {\n            customFormat = {\n              type: 'dateTime',\n              format: args.column.format.format,\n              skeleton: args.column.format.skeleton\n            };\n          }\n\n          return this.returnFormattedValue(args, customFormat);\n        }\n      }\n    } else {\n      if (!isNullOrUndefined(args.column.type) && !isNullOrUndefined(args.value) || !isNullOrUndefined(args.value)) {\n        return args.value.toString();\n      } else {\n        return '';\n      }\n    }\n  };\n\n  return ExportValueFormatter;\n}();\n\nexport { ExportValueFormatter };","map":{"version":3,"sources":["/Users/tristanbilot/Desktop/Design4green/design4green/node_modules/@syncfusion/ej2-gantt/src/gantt/export/export-helper.js"],"names":["PdfFontFamily","PdfStringFormat","PdfPageCountField","PdfPageNumberField","PdfPageTemplateElement","RectangleF","PdfCompositeField","PointF","PdfVerticalAlignment","PdfTextAlignment","PdfStandardFont","PdfFontStyle","PdfColor","PdfPen","PdfSolidBrush","PdfBorders","PdfPaddings","isNullOrUndefined","Internationalization","getValue","extend","getForeignData","ValueFormatter","pixelToPoint","isScheduledTask","ExportHelper","parent","prototype","processGridExport","data","gantt","props","flatData","exportValueFormatter","ExportValueFormatter","locale","exportProps","rowIndex","colIndex","columns","treeGrid","treeColumnIndex","rowHeight","style","cellPadding","left","right","ganttStyle","borderColor","chartGridLineColor","processHeaderContent","processGanttContent","processTimeline","processTaskbar","processPredecessor","_this","row","rows","addRow","index","forEach","column","isColumnVisible","processColumnHeader","add","pdfColumn","getColumn","isTreeColumn","width","parseInt","totalColumnWidth","headerText","field","cell","cells","getCell","value","isHeaderCell","treeGridHeaderHeight","timelineModule","isSingleTier","copyStyles","columnHeader","height","headerTextAlign","format","alignment","args","pdfColumnHeaderQueryCellInfo","trigger","visibleColumn","visible","includeHiddenColumn","templateColumn","template","length","renderEmptyGantt","hasChildRecords","getRow","isParentRow","processRecordRow","timelineSettings","chartHeader","topTierHeight","bottomTierHeight","topTierCellWidth","bottomTierCellWidth","topTier","topTierCollection","bottomTier","bottomTierCollection","totalTimelineWidth","timelineStartDate","Date","getTime","showPredecessorLines","pdfExportModule","isPdfExport","predecessorModule","createConnectorLinesCollection","updatedConnectorLineCollection","predecessor","parentLeft","childLeft","parentWidth","childWidth","parentIndex","childIndex","type","milestoneParent","milestoneChild","lineWidth","connectorLineWidth","connectorLineColor","predecessorCollection","push","level","processRecordCell","taskFields","ganttProps","ganttProperties","editType","duration","getDurationString","durationUnit","resourceInfo","resourceNames","work","getWorkString","workUnit","toString","padding","textAlign","paragraphIndent","formatCellValue","pdfQueryCellInfo","taskbar","ganttProp","progress","endDate","unscheduledTaskBy","startDate","unscheduleStarteDate","dateValidationModule","getValidStartDate","unscheduleEndDate","getValidEndDate","chartRowsModule","taskBarHeight","isMilestone","milestoneColor","isParentTask","labelSettings","leftLabel","leftTaskLabel","rightLabel","rightTaskLabel","reduceLeft","Math","floor","fontFamily","progressWidth","labelColor","label","fontColor","progressFontColor","taskColor","parentTaskColor","taskBorderColor","parentTaskBorderColor","progressColor","parentProgressColor","gridLineColor","taskbarCollection","taskStyle","pdfQueryTaskbarInfo","getHorizontalAlignment","undefined","Right","Center","Justify","Left","getVerticalAlignment","verticalAlign","lineAlignment","Bottom","Middle","Top","getFontFamily","getFont","content","font","fontSize","TimesRoman","fontStyle","Regular","bold","Bold","italic","Italic","underline","Underline","strikeout","Strikeout","count","mergeCells","lastColIndex","columnSpan","backgroundColor","Object","assign","borders","all","top","bottom","initializePdf","pdfDoc","widths","tWidth","pageSettings","allowHorizontalOverflow","enableFooter","bounds","pen","footer","footerBrush","graphics","drawRectangle","brush","pageNumber","compositeField","stringFormat","draw","culture","valueFormatter","internationalization","returnFormattedValue","customFormat","getFormatFunction","isForeignKey","foreignKeyValue","getNumberFormat","skeleton"],"mappings":"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","sourcesContent":["import { PdfFontFamily } from '@syncfusion/ej2-pdf-export';\nimport { PdfStringFormat, PdfPageCountField, PdfPageNumberField } from '@syncfusion/ej2-pdf-export';\nimport { PdfPageTemplateElement, RectangleF, PdfCompositeField, PointF } from '@syncfusion/ej2-pdf-export';\nimport { PdfVerticalAlignment, PdfTextAlignment, PdfStandardFont } from '@syncfusion/ej2-pdf-export';\nimport { PdfFontStyle, PdfColor, PdfPen, PdfSolidBrush } from '@syncfusion/ej2-pdf-export';\nimport { PdfBorders, PdfPaddings } from './pdf-base/index';\nimport { isNullOrUndefined, Internationalization, getValue, extend } from '@syncfusion/ej2-base';\nimport { getForeignData, ValueFormatter } from '@syncfusion/ej2-grids';\nimport { pixelToPoint, isScheduledTask } from '../base/utils';\n/**\n * @hidden\n * `ExportHelper` for `PdfExport` & `ExcelExport`\n */\nvar ExportHelper = /** @class */ (function () {\n    function ExportHelper(parent) {\n        this.parent = parent;\n    }\n    /**\n     * @param {IGanttData[]} data .\n     * @param {PdfGantt} gantt .\n     * @param {PdfExportProperties} props .\n     * @returns {void} .\n     * @private\n     */\n    ExportHelper.prototype.processGridExport = function (data, gantt, props) {\n        this.flatData = data;\n        this.gantt = gantt;\n        this.exportValueFormatter = new ExportValueFormatter(this.parent.locale);\n        this.exportProps = props;\n        this.rowIndex = 0;\n        this.colIndex = 0;\n        this.columns = this.parent.treeGrid.columns;\n        this.gantt.treeColumnIndex = this.parent.treeColumnIndex;\n        this.gantt.rowHeight = pixelToPoint(this.parent.rowHeight);\n        this.gantt.style.cellPadding.left = 0;\n        this.gantt.style.cellPadding.right = 0;\n        this.ganttStyle = this.gantt.ganttStyle;\n        this.gantt.borderColor = this.ganttStyle.chartGridLineColor;\n        this.processHeaderContent();\n        this.processGanttContent();\n        this.processTimeline();\n        this.processTaskbar();\n        this.processPredecessor();\n    };\n    ExportHelper.prototype.processHeaderContent = function () {\n        var _this = this;\n        this.rowIndex++;\n        this.row = this.gantt.rows.addRow();\n        var index = 0;\n        this.columns.forEach(function (column) {\n            if (_this.isColumnVisible(column)) {\n                _this.processColumnHeader(column, index);\n                index++;\n            }\n        });\n    };\n    ExportHelper.prototype.processColumnHeader = function (column, index) {\n        this.gantt.columns.add(1);\n        var pdfColumn = this.gantt.columns.getColumn(index);\n        if (this.parent.treeColumnIndex === index) {\n            pdfColumn.isTreeColumn = true;\n        }\n        var width = parseInt(column.width, 10);\n        pdfColumn.width = pixelToPoint(width);\n        this.totalColumnWidth += pdfColumn.width;\n        pdfColumn.headerText = column.headerText;\n        pdfColumn.field = column.field;\n        var cell = this.row.cells.getCell(index);\n        cell.value = column.headerText;\n        cell.isHeaderCell = true;\n        var treeGridHeaderHeight = this.parent.timelineModule.isSingleTier ? 45 : 60;\n        this.copyStyles(this.ganttStyle.columnHeader, cell, false);\n        this.row.height = pixelToPoint(treeGridHeaderHeight);\n        if (column.headerTextAlign) {\n            cell.style.format.alignment = PdfTextAlignment[column.headerTextAlign];\n        }\n        var args = {\n            cell: cell,\n            style: cell.style,\n            value: cell.value,\n            column: column\n        };\n        if (this.parent.pdfColumnHeaderQueryCellInfo) {\n            this.parent.trigger('pdfColumnHeaderQueryCellInfo', args);\n        }\n        cell.value = args.value;\n    };\n    ExportHelper.prototype.isColumnVisible = function (column) {\n        var visibleColumn = column.visible || this.exportProps.includeHiddenColumn;\n        var templateColumn = !isNullOrUndefined(column.template) ? false : true;\n        return (visibleColumn && templateColumn);\n    };\n    ExportHelper.prototype.processGanttContent = function () {\n        var _this = this;\n        if (this.flatData.length === 0) {\n            this.renderEmptyGantt();\n        }\n        else {\n            this.flatData.forEach(function (data) {\n                _this.row = _this.gantt.rows.addRow();\n                if (data.hasChildRecords) {\n                    _this.gantt.rows.getRow(_this.rowIndex).isParentRow = true;\n                    _this.processRecordRow(data);\n                }\n                else {\n                    _this.processRecordRow(data);\n                }\n                _this.rowIndex++;\n            });\n        }\n    };\n    /**\n     * Method for processing the timeline details\n     *\n     * @returns {void} .\n     */\n    ExportHelper.prototype.processTimeline = function () {\n        var timelineSettings = this.parent.timelineModule;\n        this.gantt.chartHeader.topTierHeight = this.gantt.chartHeader.bottomTierHeight\n            = (this.parent.timelineModule.isSingleTier ? 45 : 60 / 2);\n        this.gantt.chartHeader.topTierCellWidth = timelineSettings.topTierCellWidth;\n        this.gantt.chartHeader.bottomTierCellWidth = timelineSettings.bottomTierCellWidth;\n        this.gantt.chartHeader.topTier = extend([], [], timelineSettings.topTierCollection, true);\n        this.gantt.chartHeader.bottomTier = extend([], [], timelineSettings.bottomTierCollection, true);\n        this.gantt.chartHeader.width = timelineSettings.totalTimelineWidth;\n        this.gantt.chartHeader.height = this.gantt.rows.getRow(0).height;\n        this.gantt.timelineStartDate = new Date(timelineSettings.timelineStartDate.getTime());\n    };\n    /**\n     * Method for create the predecessor collection for rendering\n     *\n     * @returns {void} .\n     */\n    ExportHelper.prototype.processPredecessor = function () {\n        var _this = this;\n        if (isNullOrUndefined(this.exportProps.showPredecessorLines) || this.exportProps.showPredecessorLines) {\n            this.parent.pdfExportModule.isPdfExport = true;\n            this.parent.predecessorModule.createConnectorLinesCollection();\n            this.parent.updatedConnectorLineCollection.forEach(function (data) {\n                var predecessor = _this.gantt.predecessor.add();\n                predecessor.parentLeft = data.parentLeft;\n                predecessor.childLeft = data.childLeft;\n                predecessor.parentWidth = data.parentWidth;\n                predecessor.childWidth = data.childWidth;\n                predecessor.parentIndex = data.parentIndex;\n                predecessor.childIndex = data.childIndex;\n                predecessor.rowHeight = data.rowHeight;\n                predecessor.type = data.type;\n                predecessor.milestoneParent = data.milestoneParent;\n                predecessor.milestoneChild = data.milestoneChild;\n                predecessor.lineWidth = _this.parent.connectorLineWidth > 5 ? pixelToPoint(5) : pixelToPoint(_this.parent.connectorLineWidth);\n                predecessor.connectorLineColor = _this.ganttStyle.connectorLineColor;\n                _this.gantt.predecessorCollection.push(predecessor);\n            });\n            this.parent.pdfExportModule.isPdfExport = false;\n        }\n    };\n    ExportHelper.prototype.processRecordRow = function (data) {\n        var _this = this;\n        this.colIndex = 0;\n        this.row.level = data.level;\n        this.columns.forEach(function (column) {\n            if (_this.isColumnVisible(column)) {\n                _this.processRecordCell(data, column, _this.row);\n                _this.colIndex++;\n            }\n        });\n    };\n    ExportHelper.prototype.processRecordCell = function (data, column, row) {\n        var cell = row.cells.getCell(this.colIndex);\n        var taskFields = this.parent.taskFields;\n        var ganttProps = data.ganttProperties;\n        if (column.editType === 'datepickeredit' || column.editType === 'datetimepickeredit') {\n            cell.value = data[column.field];\n        }\n        else if (column.field === taskFields.duration) {\n            cell.value = this.parent.getDurationString(ganttProps.duration, ganttProps.durationUnit);\n        }\n        else if (column.field === taskFields.resourceInfo) {\n            cell.value = ganttProps.resourceNames;\n        }\n        else if (column.field === taskFields.work) {\n            cell.value = this.parent.getWorkString(ganttProps.work, ganttProps.workUnit);\n        }\n        else {\n            cell.value = !isNullOrUndefined(data[column.field]) ? data[column.field].toString() : '';\n        }\n        cell.isHeaderCell = false;\n        cell.style.padding = new PdfPaddings();\n        this.copyStyles(this.ganttStyle.cell, cell, row.isParentRow);\n        if (this.colIndex !== this.parent.treeColumnIndex) {\n            cell.style.format.alignment = PdfTextAlignment[column.textAlign];\n        }\n        else {\n            cell.style.format.paragraphIndent = cell.row.level * 10;\n        }\n        var args = {\n            data: data,\n            value: cell.value,\n            column: column,\n            style: cell.style,\n            cell: cell\n        };\n        args.value = this.exportValueFormatter.formatCellValue(args);\n        if (this.parent.pdfQueryCellInfo) {\n            this.parent.trigger('pdfQueryCellInfo', args);\n        }\n        cell.value = args.value;\n    };\n    /**\n     * Method for create the taskbar collection for rendering\n     *\n     * @returns {void} .\n     */\n    ExportHelper.prototype.processTaskbar = function () {\n        var _this = this;\n        this.flatData.forEach(function (data) {\n            var taskbar = _this.gantt.taskbar.add();\n            var ganttProp = data.ganttProperties;\n            taskbar.left = ganttProp.left;\n            taskbar.width = ganttProp.width;\n            if (taskbar.left < 0) {\n                taskbar.width = taskbar.width + taskbar.left;\n                taskbar.left = 0;\n            }\n            taskbar.progress = ganttProp.progress;\n            taskbar.isScheduledTask = isScheduledTask(ganttProp);\n            if (isScheduledTask) {\n                if (isNullOrUndefined(ganttProp.endDate) && isNullOrUndefined(ganttProp.duration)) {\n                    taskbar.unscheduledTaskBy = 'startDate';\n                }\n                else if (isNullOrUndefined(ganttProp.startDate) && isNullOrUndefined(ganttProp.duration)) {\n                    taskbar.unscheduledTaskBy = 'endDate';\n                }\n                else {\n                    taskbar.unscheduledTaskBy = 'duration';\n                    taskbar.unscheduleStarteDate = _this.parent.dateValidationModule.getValidStartDate(data.ganttProperties);\n                    taskbar.unscheduleEndDate = _this.parent.dateValidationModule.getValidEndDate(data.ganttProperties);\n                }\n            }\n            else {\n                taskbar.unscheduleStarteDate = null;\n                taskbar.unscheduleEndDate = null;\n            }\n            taskbar.startDate = ganttProp.startDate;\n            taskbar.endDate = ganttProp.endDate;\n            taskbar.height = _this.parent.chartRowsModule.taskBarHeight;\n            taskbar.isMilestone = ganttProp.isMilestone;\n            taskbar.milestoneColor = new PdfColor(_this.ganttStyle.taskbar.milestoneColor);\n            taskbar.isParentTask = data.hasChildRecords;\n            if (ganttProp.isMilestone) {\n                taskbar.height = ganttProp.width;\n            }\n            if (data[_this.parent.labelSettings.leftLabel]) {\n                taskbar.leftTaskLabel.value = data[_this.parent.labelSettings.leftLabel].toString();\n            }\n            if (data[_this.parent.labelSettings.rightLabel]) {\n                taskbar.rightTaskLabel.value = data[_this.parent.labelSettings.rightLabel].toString();\n            }\n            var reduceLeft = ganttProp.isMilestone ? Math.floor(_this.parent.chartRowsModule.taskBarHeight / 2) + 33 : 33; // 33 indicates default timeline cell width\n            taskbar.rightTaskLabel.left = ganttProp.left + ganttProp.width + reduceLeft; // right label left value\n            taskbar.fontFamily = _this.ganttStyle.fontFamily;\n            taskbar.progressWidth = ganttProp.progressWidth;\n            taskbar.labelColor = new PdfColor(_this.ganttStyle.label.fontColor);\n            taskbar.progressFontColor = new PdfColor(_this.ganttStyle.taskbar.progressFontColor);\n            if (taskbar.isParentTask) {\n                taskbar.taskColor = new PdfColor(_this.ganttStyle.taskbar.parentTaskColor);\n                taskbar.taskBorderColor = new PdfColor(_this.ganttStyle.taskbar.parentTaskBorderColor);\n                taskbar.progressColor = new PdfColor(_this.ganttStyle.taskbar.parentProgressColor);\n            }\n            else {\n                taskbar.taskColor = new PdfColor(_this.ganttStyle.taskbar.taskColor);\n                taskbar.taskBorderColor = new PdfColor(_this.ganttStyle.taskbar.taskBorderColor);\n                taskbar.progressColor = new PdfColor(_this.ganttStyle.taskbar.progressColor);\n            }\n            taskbar.gridLineColor = new PdfColor(_this.ganttStyle.chartGridLineColor);\n            _this.gantt.taskbarCollection.push(taskbar);\n            var taskStyle = {};\n            taskStyle.progressFontColor = taskbar.progressFontColor;\n            taskStyle.taskColor = taskbar.taskColor;\n            taskStyle.taskBorderColor = taskbar.taskBorderColor;\n            taskStyle.progressColor = taskbar.progressColor;\n            taskStyle.milestoneColor = taskbar.milestoneColor;\n            var args = {\n                taskbar: taskStyle,\n                data: data\n            };\n            if (_this.parent.pdfQueryTaskbarInfo) {\n                _this.parent.trigger('pdfQueryTaskbarInfo', args);\n                taskbar.progressFontColor = args.taskbar.progressFontColor;\n                taskbar.taskColor = args.taskbar.taskColor;\n                taskbar.taskBorderColor = args.taskbar.taskBorderColor;\n                taskbar.progressColor = args.taskbar.progressColor;\n                taskbar.milestoneColor = args.taskbar.milestoneColor;\n            }\n        });\n    };\n    /**\n     * set text alignment of each columns in exporting grid\n     *\n     * @param {string} textAlign .\n     * @param {PdfStringFormat} format .\n     * @returns {PdfStringFormat} .\n     * @private\n     */\n    ExportHelper.prototype.getHorizontalAlignment = function (textAlign, format) {\n        if (format === undefined) {\n            format = new PdfStringFormat();\n        }\n        switch (textAlign) {\n            case 'Right':\n                format.alignment = PdfTextAlignment.Right;\n                break;\n            case 'Center':\n                format.alignment = PdfTextAlignment.Center;\n                break;\n            case 'Justify':\n                format.alignment = PdfTextAlignment.Justify;\n                break;\n            case 'Left':\n                format.alignment = PdfTextAlignment.Left;\n                break;\n        }\n        return format;\n    };\n    /**\n     * set vertical alignment of each columns in exporting grid\n     *\n     * @param {string} verticalAlign .\n     * @param {PdfStringFormat} format .\n     * @param {string} textAlign .\n     * @returns {PdfStringFormat} .\n     * @private\n     */\n    ExportHelper.prototype.getVerticalAlignment = function (verticalAlign, format, textAlign) {\n        if (format === undefined) {\n            format = new PdfStringFormat();\n            format = this.getHorizontalAlignment(textAlign, format);\n        }\n        switch (verticalAlign) {\n            case 'Bottom':\n                format.lineAlignment = PdfVerticalAlignment.Bottom;\n                break;\n            case 'Middle':\n                format.lineAlignment = PdfVerticalAlignment.Middle;\n                break;\n            case 'Top':\n                format.lineAlignment = PdfVerticalAlignment.Top;\n                break;\n        }\n        return format;\n    };\n    ExportHelper.prototype.getFontFamily = function (fontFamily) {\n        switch (fontFamily) {\n            case 'TimesRoman':\n                return 2;\n            case 'Courier':\n                return 1;\n            case 'Symbol':\n                return 3;\n            case 'ZapfDingbats':\n                return 4;\n            default:\n                return 0;\n        }\n    };\n    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n    ExportHelper.prototype.getFont = function (content) {\n        if (content.font) {\n            return content.font;\n        }\n        var fontSize = (!isNullOrUndefined(content.style.fontSize)) ? (content.style.fontSize * 0.75) : 9.75;\n        var fontFamily = (!isNullOrUndefined(content.style.fontFamily)) ?\n            (this.getFontFamily(content.style.fontFamily)) : PdfFontFamily.TimesRoman;\n        var fontStyle = PdfFontStyle.Regular;\n        if (!isNullOrUndefined(content.style.bold) && content.style.bold) {\n            fontStyle |= PdfFontStyle.Bold;\n        }\n        if (!isNullOrUndefined(content.style.italic) && content.style.italic) {\n            fontStyle |= PdfFontStyle.Italic;\n        }\n        if (!isNullOrUndefined(content.style.underline) && content.style.underline) {\n            fontStyle |= PdfFontStyle.Underline;\n        }\n        if (!isNullOrUndefined(content.style.strikeout) && content.style.strikeout) {\n            fontStyle |= PdfFontStyle.Strikeout;\n        }\n        return new PdfStandardFont(fontFamily, fontSize, fontStyle);\n    };\n    ExportHelper.prototype.renderEmptyGantt = function () {\n        var row = this.gantt.rows.addRow();\n        row.cells.getCell(0).isHeaderCell = false;\n        row.height = pixelToPoint(this.parent.rowHeight);\n        this.copyStyles(this.ganttStyle.columnHeader, row.cells.getCell(0), row.isParentRow);\n        var count = this.columns.length;\n        this.mergeCells(0, 0, count);\n    };\n    ExportHelper.prototype.mergeCells = function (rowIndex, colIndex, lastColIndex) {\n        this.gantt.rows.getRow(rowIndex).cells.getCell(colIndex).columnSpan = lastColIndex;\n    };\n    /* eslint-disable-next-line */\n    ExportHelper.prototype.copyStyles = function (style, cell, isParentRow) {\n        cell.style.fontColor = new PdfColor(style.fontColor);\n        cell.style.backgroundColor = new PdfColor(style.backgroundColor);\n        cell.style.borderColor = new PdfColor(style.borderColor);\n        cell.style.fontSize = style.fontSize;\n        cell.style.fontStyle = style.fontStyle;\n        /* eslint-disable-next-line */\n        cell.style.format = Object.assign(new PdfStringFormat(), style.format);\n        cell.style.borders = new PdfBorders();\n        cell.style.borders.all = new PdfPen(cell.style.borderColor);\n        cell.style.padding = new PdfPaddings();\n        var padding = 0;\n        if (cell.isHeaderCell) {\n            padding = this.parent.timelineModule.isSingleTier ? 45 / 2 : 60 / 2;\n        }\n        else {\n            padding = this.parent.rowHeight / 2;\n        }\n        cell.style.padding.top = padding - style.fontSize;\n        cell.style.padding.bottom = padding - style.fontSize;\n        cell.style.padding.left = 10;\n        cell.style.padding.right = 10;\n    };\n    /**\n     * @param {PdfDocument} pdfDoc .\n     * @returns {void} .\n     * @private\n     */\n    ExportHelper.prototype.initializePdf = function (pdfDoc) {\n        this.pdfDoc = pdfDoc;\n        var widths = [];\n        var treeColumnIndex = 0;\n        var tWidth = (this.pdfDoc.pageSettings.width - 82);\n        if (this.totalColumnWidth > (this.pdfDoc.pageSettings.width - 82)) {\n            this.gantt.style.allowHorizontalOverflow = true;\n        }\n        else if ((tWidth / this.columns.length) < widths[treeColumnIndex]) {\n            this.gantt.columns.getColumn(treeColumnIndex).width = widths[treeColumnIndex];\n        }\n        if (this.exportProps.enableFooter || isNullOrUndefined(this.exportProps.enableFooter)) {\n            //code for draw the footer content\n            var bounds = new RectangleF(0, 0, pdfDoc.pageSettings.width, 35);\n            var pen = new PdfPen(this.ganttStyle.chartGridLineColor);\n            var footer = new PdfPageTemplateElement(bounds);\n            var footerBrush = new PdfSolidBrush(this.ganttStyle.footer.backgroundColor);\n            footer.graphics.drawRectangle(pen, footerBrush, 0, 0, pdfDoc.pageSettings.width, 35);\n            /* eslint-disable-next-line */\n            var font = new PdfStandardFont(this.ganttStyle.fontFamily, this.ganttStyle.footer.fontSize, this.ganttStyle.footer.fontStyle);\n            var brush = new PdfSolidBrush(this.ganttStyle.footer.fontColor);\n            var pageNumber = new PdfPageNumberField(font);\n            var count = new PdfPageCountField(font, brush);\n            var compositeField = new PdfCompositeField(font, brush, 'Page {0}', pageNumber, count);\n            compositeField.stringFormat = this.ganttStyle.footer.format;\n            compositeField.bounds = bounds;\n            compositeField.draw(footer.graphics, new PointF(0, 0));\n            pdfDoc.template.bottom = footer;\n        }\n    };\n    return ExportHelper;\n}());\nexport { ExportHelper };\n/**\n * @hidden\n * `ExportValueFormatter` for `PdfExport` & `ExcelExport`\n */\nvar ExportValueFormatter = /** @class */ (function () {\n    function ExportValueFormatter(culture) {\n        this.valueFormatter = new ValueFormatter(culture);\n        this.internationalization = new Internationalization(culture);\n    }\n    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n    ExportValueFormatter.prototype.returnFormattedValue = function (args, customFormat) {\n        if (!isNullOrUndefined(args.value) && args.value) {\n            return this.valueFormatter.getFormatFunction(customFormat)(args.value);\n        }\n        else {\n            return '';\n        }\n    };\n    /**\n     * @private\n     */\n    /* eslint-disable-next-line  */\n    ExportValueFormatter.prototype.formatCellValue = function (args) {\n        if (args.isForeignKey) {\n            args.value = getValue(args.column.foreignKeyValue, getForeignData(args.column, {}, args.value)[0]);\n        }\n        if (args.column.type === 'number' && args.column.format !== undefined && args.column.format !== '') {\n            return args.value ? this.internationalization.getNumberFormat({ format: args.column.format })(args.value) : '';\n        }\n        else if (args.column.type === 'boolean') {\n            return args.value ? 'true' : 'false';\n        }\n        else if ((args.column.type === 'date' || args.column.type === 'datetime' || args.column.type === 'time') && args.column.format !== undefined) {\n            if (typeof args.value === 'string') {\n                args.value = new Date(args.value);\n            }\n            if (typeof args.column.format === 'string') {\n                var format = void 0;\n                if (args.column.type === 'date') {\n                    format = { type: 'date', skeleton: args.column.format };\n                }\n                else if (args.column.type === 'time') {\n                    format = { type: 'time', skeleton: args.column.format };\n                }\n                else {\n                    format = { type: 'dateTime', skeleton: args.column.format };\n                }\n                return this.returnFormattedValue(args, format);\n            }\n            else {\n                if (args.column.format instanceof Object && args.column.format.type === undefined) {\n                    return (args.value.toString());\n                }\n                else {\n                    var customFormat = void 0;\n                    if (args.column.type === 'date') {\n                        /* eslint-disable-next-line max-len */\n                        customFormat = { type: args.column.format.type, format: args.column.format.format, skeleton: args.column.format.skeleton };\n                    }\n                    else if (args.column.type === 'time') {\n                        customFormat = { type: 'time', format: args.column.format.format, skeleton: args.column.format.skeleton };\n                    }\n                    else {\n                        customFormat = { type: 'dateTime', format: args.column.format.format, skeleton: args.column.format.skeleton };\n                    }\n                    return this.returnFormattedValue(args, customFormat);\n                }\n            }\n        }\n        else {\n            if ((!isNullOrUndefined(args.column.type) && !isNullOrUndefined(args.value)) || !isNullOrUndefined(args.value)) {\n                return (args.value).toString();\n            }\n            else {\n                return '';\n            }\n        }\n    };\n    return ExportValueFormatter;\n}());\nexport { ExportValueFormatter };\n"]},"metadata":{},"sourceType":"module"}