{"ast":null,"code":"import { Grid, Edit as GridEdit, getUid, getObject, resetRowIndex } from '@syncfusion/ej2-grids';\nimport { parentsUntil } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass, addClass, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, RemoteSaveAdaptor } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, isCountRequired, isRemoteData } from '../utils';\nimport { editAction, updateParentRow } from './crud-actions';\nimport { BatchEdit } from './batch-edit';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\n\nvar Edit =\n/** @class */\nfunction () {\n  /**\n   * Constructor for Edit module\n   *\n   * @param {TreeGrid} parent - Tree Grid instance\n   */\n  function Edit(parent) {\n    this.addedRecords = 'addedRecords';\n    this.deletedRecords = 'deletedRecords';\n    this.prevAriaRowIndex = '-1';\n    this.isAddedRowByMethod = false;\n    Grid.Inject(GridEdit);\n    this.parent = parent;\n    this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n    this.previousNewRowPosition = null;\n    this.internalProperties = {};\n    this.batchEditModule = new BatchEdit(this.parent);\n    this.addEventListener();\n  }\n  /**\n   * For internal use only - Get the module name.\n   *\n   * @private\n   * @returns {string} Returns Edit module name\n   */\n\n\n  Edit.prototype.getModuleName = function () {\n    return 'edit';\n  };\n  /**\n   * @hidden\n   * @returns {void}\n   */\n\n\n  Edit.prototype.addEventListener = function () {\n    this.parent.on(events.crudAction, this.crudAction, this);\n    this.parent.on(events.beginEdit, this.beginEdit, this);\n    this.parent.on(events.beginAdd, this.beginAdd, this);\n    this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n    this.parent.on(events.cellSave, this.cellSave, this);\n    this.parent.on(events.batchCancel, this.batchCancel, this);\n    this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n    this.parent.grid.on('batchedit-form', this.lastCellTab, this);\n    this.parent.grid.on('content-ready', this.contentready, this);\n    this.parent.on(events.cellEdit, this.cellEdit, this);\n    this.parent.on('actionBegin', this.editActionEvents, this);\n    this.parent.on('actionComplete', this.editActionEvents, this);\n    this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n    this.parent.grid.on('dblclick', this.gridDblClick, this);\n    this.parent.grid.on('recordAdded', this.customCellSave, this);\n    this.parent.on('savePreviousRowPosition', this.savePreviousRowPosition, this); // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n\n    this.parent.grid.on(events.beforeStartEdit, this.beforeStartEdit, this);\n    this.parent.grid.on(events.beforeBatchCancel, this.beforeBatchCancel, this);\n    this.parent.grid.on('reset-edit-props', this.resetIsOnBatch, this);\n    this.parent.grid.on('get-row-position', this.getRowPosition, this);\n  };\n\n  Edit.prototype.gridDblClick = function (e) {\n    this.doubleClickTarget = e.target;\n  };\n\n  Edit.prototype.getRowPosition = function (addArgs) {\n    addArgs.newRowPosition = this.parent.editSettings.newRowPosition;\n    addArgs.addRowIndex = this.addRowIndex;\n    addArgs.ariaRowIndex = +this.prevAriaRowIndex;\n  };\n\n  Edit.prototype.beforeStartEdit = function (args) {\n    this.parent.trigger(events.actionBegin, args);\n  };\n\n  Edit.prototype.beforeBatchCancel = function (args) {\n    if (this.parent.editSettings.mode === 'Cell') {\n      this.parent.trigger(events.actionComplete, args);\n    }\n  };\n  /**\n   * @hidden\n   * @returns {void}\n   */\n\n\n  Edit.prototype.removeEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    this.parent.off(events.crudAction, this.crudAction);\n    this.parent.off(events.beginEdit, this.beginEdit);\n    this.parent.off(events.beginAdd, this.beginAdd);\n    this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n    this.parent.off(events.batchCancel, this.batchCancel);\n    this.parent.grid.off(events.keyPressed, this.keyPressed);\n    this.parent.grid.off('batchedit-form', this.lastCellTab);\n    this.parent.grid.off('content-ready', this.contentready);\n    this.parent.off(events.cellEdit, this.cellEdit);\n    this.parent.off('actionBegin', this.editActionEvents);\n    this.parent.off('actionComplete', this.editActionEvents);\n    this.parent.grid.off('recordAdded', this.customCellSave);\n    this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n    this.parent.off('savePreviousRowPosition', this.savePreviousRowPosition);\n    this.parent.grid.off(events.beforeStartEdit, this.beforeStartEdit);\n    this.parent.grid.off(events.beforeBatchCancel, this.beforeBatchCancel);\n    this.parent.grid.off('dblclick', this.gridDblClick);\n    this.parent.grid.off('reset-edit-props', this.resetIsOnBatch);\n    this.parent.grid.off('get-row-position', this.getRowPosition); //this.parent.grid.off('click', this.gridSingleClick);\n  };\n  /**\n   * To destroy the editModule\n   *\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Edit.prototype.destroy = function () {\n    this.removeEventListener();\n  };\n  /**\n   * @param {Column[]} cols - Column property Collection\n   * @hidden\n   * @returns {void}\n   */\n\n\n  Edit.prototype.applyFormValidation = function (cols) {\n    this.parent.grid.editModule.applyFormValidation(cols);\n  };\n\n  Edit.prototype.editActionEvents = function (args) {\n    var eventArgs = getObject('editAction', args);\n    var eventName = getObject('name', eventArgs);\n    var treeObj = this.parent;\n    var adaptor = treeObj.dataSource.adaptor;\n\n    if ((isRemoteData(treeObj) || adaptor instanceof RemoteSaveAdaptor) && eventArgs.requestType === 'save' && eventArgs.action === 'add' && (treeObj.editSettings.newRowPosition === 'Child' || treeObj.editSettings.newRowPosition === 'Below' || treeObj.editSettings.newRowPosition === 'Above')) {\n      if (eventName === 'actionBegin') {\n        var rowIndex = isNullOrUndefined(eventArgs.row) || !Object.keys(eventArgs.row).length ? this.selectedIndex : eventArgs.row.rowIndex - 1;\n        var keyData = !isNullOrUndefined(rowIndex) && rowIndex !== -1 ? treeObj.getCurrentViewRecords()[rowIndex][treeObj.getPrimaryKeyFieldNames()[0]] : -1;\n        treeObj.grid.query.addParams('relationalKey', keyData);\n      } else if (eventName === 'actionComplete') {\n        var paramsLength = treeObj.grid.query.params.length;\n\n        for (var i = 0; i < paramsLength; i++) {\n          if (treeObj.grid.query.params[i].key === 'relationalKey') {\n            treeObj.grid.query.params.splice(i);\n          }\n        }\n      }\n    }\n\n    if (this.parent.enableInfiniteScrolling && eventName === 'actionComplete') {\n      this.infiniteAddAction(eventArgs);\n    }\n\n    if (this.parent.editSettings.mode === 'Batch' && eventArgs.requestType === 'paging') {\n      this.parent.notify('batchPageAction', {});\n    }\n  };\n\n  Edit.prototype.infiniteAddAction = function (args) {\n    if (args.requestType === 'save' && args.action === 'add' || args.requestType === 'delete') {\n      if (this.parent.editSettings.newRowPosition !== 'Top' && this.selectedIndex !== -1 && args.requestType === 'save' && args.action === 'add') {\n        var rowObjects = this.parent.grid.getRowsObject();\n        var newRowObject = rowObjects.splice(0, 1)[0];\n        var newRowObjectIndex = this.addRowIndex;\n        var currentData = this.parent.getCurrentViewRecords();\n\n        if (this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n          newRowObjectIndex += findChildrenRecords(currentData[newRowObjectIndex + 1]).length;\n        }\n\n        newRowObjectIndex = this.parent.editSettings.newRowPosition === 'Below' ? newRowObjectIndex + 1 : newRowObjectIndex;\n        rowObjects.splice(newRowObjectIndex, 0, newRowObject);\n        var newRecord = currentData.splice(0, 1)[0];\n        currentData.splice(newRowObjectIndex, 0, newRecord);\n        this.updateInfiniteCurrentViewData(newRecord, this.addRowIndex);\n      }\n\n      var movableRows = this.parent.grid.getMovableRows();\n      var movableRowsObject = this.parent.grid.getMovableRowsObject();\n      var isCache = this.parent.infiniteScrollSettings.enableCache;\n\n      if (!isCache) {\n        resetRowIndex(this.parent.grid, this.parent.grid.getRowsObject(), this.parent.grid.getRows(), 0);\n        this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n      }\n\n      if (!isCache && this.parent.getFrozenColumns() > 0) {\n        resetRowIndex(this.parent.grid, movableRowsObject, movableRows, 0);\n        this.updateIndex(this.parent.grid.dataSource, movableRows, this.parent.getCurrentViewRecords());\n      }\n    }\n  };\n\n  Edit.prototype.updateInfiniteCurrentViewData = function (newRecord, newRowIndex) {\n    var _this = this;\n\n    var infiniteData = 'infiniteCurrentViewData';\n    var updateCurrentViewData = 'updateCurrentViewData';\n    var size = Math.ceil(newRowIndex / this.parent.grid.pageSettings.pageSize);\n    var page = size > 0 ? size : 1;\n    var dataIndex = newRowIndex - (page - 1) * this.parent.pageSettings.pageSize;\n    var infiniteCurrentViewData = this.parent.grid.infiniteScrollModule[infiniteData];\n    infiniteCurrentViewData[1].splice(0, 1);\n    var data = infiniteCurrentViewData[page];\n\n    if (!isNullOrUndefined(this.addRowRecord)) {\n      data.filter(function (e, index) {\n        if (e.uniqueID === _this.addRowRecord.uniqueID) {\n          dataIndex = index;\n        }\n      });\n\n      if (this.addRowRecord.hasChildRecords && this.addRowRecord.childRecords.length && this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n        dataIndex += findChildrenRecords(this.addRowRecord).length;\n      }\n    }\n\n    if (dataIndex >= this.parent.pageSettings.pageSize) {\n      page += 1;\n      data = infiniteCurrentViewData[page];\n      dataIndex = dataIndex - this.parent.pageSettings.pageSize >= 0 ? dataIndex - this.parent.pageSettings.pageSize : 0;\n    }\n\n    dataIndex = this.parent.editSettings.newRowPosition === 'Below' ? dataIndex + 1 : dataIndex;\n    data.splice(dataIndex, 0, newRecord);\n    this.parent.grid.infiniteScrollModule[updateCurrentViewData]();\n  };\n\n  Edit.prototype.recordDoubleClick = function (args) {\n    var target = args.target;\n\n    if (isNullOrUndefined(target.closest('td.e-rowcell'))) {\n      return;\n    }\n\n    if (!this.parent.grid.editSettings.allowEditing || this.parent.grid.isEdit) {\n      return;\n    }\n\n    var column = this.parent.grid.getColumnByIndex(+target.closest('td.e-rowcell').getAttribute('aria-colindex'));\n\n    if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey && this.parent.editSettings.allowEditing && column.allowEditing && !(target.classList.contains('e-treegridexpand') || target.classList.contains('e-treegridcollapse')) && this.parent.editSettings.allowEditOnDblClick) {\n      this.isOnBatch = true;\n      this.parent.grid.setProperties({\n        selectedRowIndex: args.rowIndex\n      }, true);\n\n      if (this.parent.enableVirtualization) {\n        var tr = parentsUntil(args.target, 'e-row');\n        this.prevAriaRowIndex = tr.getAttribute('aria-rowindex');\n        tr.setAttribute('aria-rowindex', tr.rowIndex + '');\n      }\n\n      this.updateGridEditMode('Batch');\n    }\n  };\n\n  Edit.prototype.updateGridEditMode = function (mode) {\n    this.parent.grid.setProperties({\n      editSettings: {\n        mode: mode\n      }\n    }, true);\n    var updateMethod = getObject('updateEditObj', this.parent.grid.editModule);\n    updateMethod.apply(this.parent.grid.editModule);\n    this.parent.grid.isEdit = false;\n  };\n\n  Edit.prototype.resetIsOnBatch = function () {\n    if (this.parent.enableVirtualization && this.parent.editSettings.mode === 'Cell') {\n      this.isOnBatch = false;\n      this.updateGridEditMode('Normal');\n    }\n  };\n\n  Edit.prototype.keyPressed = function (args) {\n    if (this.isOnBatch) {\n      this.keyPress = args.action;\n    }\n\n    if (args.action === 'f2') {\n      this.recordDoubleClick(args);\n    }\n\n    if (args.action === 'escape') {\n      this.parent.closeEdit();\n    }\n  };\n\n  Edit.prototype.deleteUniqueID = function (value) {\n    var idFilter = 'uniqueIDFilterCollection';\n    delete this.parent[idFilter][value];\n    var id = 'uniqueIDCollection';\n    delete this.parent[id][value];\n  };\n\n  Edit.prototype.cellEdit = function (args) {\n    var _this = this;\n\n    var promise = 'promise';\n    var prom = args[promise];\n    delete args[promise];\n\n    if (this.parent.enableVirtualization && !isNullOrUndefined(this.prevAriaRowIndex)) {\n      args.row.setAttribute('aria-rowindex', this.prevAriaRowIndex);\n      this.prevAriaRowIndex = undefined;\n    }\n\n    if (this.keyPress !== 'enter') {\n      this.parent.trigger(events.cellEdit, args, function (celleditArgs) {\n        if (!celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n          _this.enableToolbarItems('edit');\n        } else if (celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n          _this.isOnBatch = false;\n\n          _this.updateGridEditMode('Normal');\n        }\n\n        if (!isNullOrUndefined(prom)) {\n          prom.resolve(celleditArgs);\n        }\n      });\n    }\n\n    if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') || this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-summarycell'))) {\n      args.cancel = true;\n      this.doubleClickTarget = null;\n      return;\n    }\n\n    if (this.parent.editSettings.mode === 'Cell') {\n      if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n        this.keyPress = null;\n      } else if (this.keyPress === 'enter') {\n        args.cancel = true;\n        this.keyPress = null;\n        setValue('isEditCollapse', false, this.parent);\n      }\n\n      if (!args.columnObject.allowEditing) {\n        args.cancel = true;\n      }\n    } // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n    //   this.isAdd = false;\n    // }\n\n  };\n\n  Edit.prototype.enableToolbarItems = function (request) {\n    if (!isNullOrUndefined(this.parent.grid.toolbarModule)) {\n      var toolbarID = this.parent.element.id + '_gridcontrol_';\n      this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], request === 'save');\n      this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], request === 'edit');\n    }\n  };\n\n  Edit.prototype.batchCancel = function () {\n    if (this.parent.editSettings.mode === 'Cell') {\n      var cellDetails = getValue('editModule.cellDetails', this.parent.grid.editModule);\n      var treeCell = this.parent.getCellFromIndex(cellDetails.rowIndex, this.parent.treeColumnIndex);\n      this.parent.renderModule.cellRender({\n        data: cellDetails.rowData,\n        cell: treeCell,\n        column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n      });\n      this.updateGridEditMode('Normal');\n      this.isOnBatch = false;\n    }\n\n    if (this.parent.editSettings.mode === 'Batch') {\n      this.parent.notify('batchCancelAction', {});\n    }\n  };\n\n  Edit.prototype.customCellSave = function (args) {\n    if (isCountRequired(this.parent) && this.parent.editSettings.mode === 'Cell' && args.action === 'edit') {\n      this.updateCell(args, args.rowIndex);\n      this.afterCellSave(args, args.row, args.rowIndex);\n    }\n  };\n\n  Edit.prototype.cellSave = function (args) {\n    var _this = this;\n\n    if (this.parent.editSettings.mode === 'Cell' && this.parent.element.querySelector('form')) {\n      args.cancel = true;\n      var editModule = 'editModule';\n      setValue('isEdit', false, this.parent.grid);\n      setValue('isEditCollapse', true, this.parent);\n      args.rowData[args.columnName] = args.value;\n      var row_1;\n\n      if (isNullOrUndefined(args.cell)) {\n        row_1 = this.parent.grid.editModule[editModule].form.parentElement.parentNode;\n      } else {\n        row_1 = args.cell.parentNode;\n      }\n\n      var rowIndex_1;\n      var primaryKeys_1 = this.parent.getPrimaryKeyFieldNames();\n\n      if (isNullOrUndefined(row_1)) {\n        this.parent.grid.getCurrentViewRecords().filter(function (e, i) {\n          if (e[primaryKeys_1[0]] === args.rowData[primaryKeys_1[0]]) {\n            rowIndex_1 = i;\n            return;\n          }\n        });\n      } else {\n        var freeze = this.parent.getFrozenLeftColumnsCount() > 0 || this.parent.getFrozenRightColumnsCount() > 0 ? true : false;\n\n        if (freeze) {\n          if (this.parent.getRows().indexOf(row_1) !== -1) {\n            rowIndex_1 = this.parent.getRows().indexOf(row_1);\n          } else if (this.parent.getFrozenRightRows().indexOf(row_1) !== -1) {\n            rowIndex_1 = this.parent.getFrozenRightRows().indexOf(row_1);\n          } else {\n            rowIndex_1 = this.parent.getMovableRows().indexOf(row_1);\n          }\n        } else {\n          rowIndex_1 = this.parent.getRows().indexOf(row_1) === -1 && this.parent.getFrozenColumns() > 0 ? this.parent.grid.getMovableRows().indexOf(row_1) : this.parent.getRows().indexOf(row_1);\n        }\n      }\n\n      var arg = {};\n      extend(arg, args);\n      arg.cancel = false;\n      arg.type = 'save';\n      row_1 = this.parent.grid.getRows()[row_1.rowIndex];\n      this.parent.trigger(events.actionBegin, arg);\n\n      if (!arg.cancel) {\n        if (row_1.rowIndex === this.parent.getCurrentViewRecords().length - 1 && this.keyPress === 'tab') {\n          this.isTabLastRow = true;\n        }\n\n        if (!isRemoteData(this.parent) && !(this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n          if (isCountRequired(this.parent)) {\n            var eventPromise = 'eventPromise';\n            var editArgs = {\n              requestType: 'save',\n              data: args.rowData,\n              action: 'edit',\n              row: row_1,\n              rowIndex: rowIndex_1,\n              rowData: args.rowData,\n              columnName: args.columnName,\n              filterChoiceCount: null,\n              excelSearchOperator: null\n            };\n            this.parent.grid.getDataModule()[eventPromise](editArgs, this.parent.grid.query);\n          } else {\n            this.updateCell(args, rowIndex_1);\n            this.afterCellSave(args, row_1, rowIndex_1);\n          }\n        } else if (isRemoteData(this.parent) || this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n          var query = this.parent.grid.query;\n          var crud = null;\n          crud = this.parent.grid.dataSource.update(primaryKeys_1[0], args.rowData, query.fromTable, query, args.previousValue);\n          crud.then(function (e) {\n            if (!isNullOrUndefined(e)) {\n              args.rowData[args.columnName] = e[args.columnName];\n            }\n\n            _this.updateCell(args, rowIndex_1);\n\n            _this.afterCellSave(args, row_1, rowIndex_1);\n          });\n        }\n      } else {\n        this.parent.grid.isEdit = true;\n      }\n    }\n  };\n\n  Edit.prototype.afterCellSave = function (args, row, rowIndex) {\n    var mRow;\n\n    if (this.parent.grid.aggregateModule) {\n      this.parent.grid.aggregateModule.refresh(args.rowData);\n    }\n\n    this.parent.grid.editModule.destroyWidgets([this.parent.grid.getColumnByField(args.columnName)]);\n    this.parent.grid.editModule.formObj.destroy();\n\n    if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n      this.updateGridEditMode('Normal');\n      this.isOnBatch = false;\n    }\n\n    this.enableToolbarItems('save');\n    var freeze = this.parent.getFrozenLeftColumnsCount() > 0 || this.parent.getFrozenRightColumnsCount() > 0 ? true : false;\n\n    if (freeze) {\n      if (args.cell.closest('.e-frozen-left-header') || args.cell.closest('.e-frozen-left-content')) {\n        mRow = this.parent.grid.getRows()[rowIndex];\n      } else if (args.cell.closest('.e-movableheader') || args.cell.closest('.e-movablecontent')) {\n        mRow = this.parent.grid.getMovableRows()[rowIndex];\n      } else {\n        mRow = this.parent.grid.getFrozenRightRows()[rowIndex];\n      }\n\n      removeClass([mRow], ['e-editedrow', 'e-batchrow']);\n      removeClass(mRow.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n    } else if (this.parent.getFrozenColumns() > 0) {\n      if (args.cell.closest('.e-frozenheader') || args.cell.closest('.e-frozencontent')) {\n        mRow = this.parent.grid.getRows()[rowIndex];\n      } else {\n        mRow = this.parent.grid.getMovableRows()[rowIndex];\n      }\n\n      removeClass([mRow], ['e-editedrow', 'e-batchrow']);\n      removeClass(mRow.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n    }\n\n    removeClass([row], ['e-editedrow', 'e-batchrow']);\n    removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n\n    if (this.parent['isCellSaveFocus'] !== false) {\n      this.parent.grid.focusModule.restoreFocus();\n    }\n\n    editAction({\n      value: args.rowData,\n      action: 'edit'\n    }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, args.columnName);\n\n    if (row.rowIndex === this.parent.getCurrentViewRecords().length - 1 && this.keyPress === 'enter') {\n      this.keyPress = null;\n    }\n\n    var saveArgs = {\n      type: 'save',\n      column: this.parent.getColumnByField(args.columnName),\n      data: args.rowData,\n      previousData: args.previousValue,\n      row: row,\n      target: args.cell\n    };\n\n    if (this.parent.aggregates.map(function (ag) {\n      return ag.showChildSummary === true;\n    }).length) {\n      this.parent.grid.refresh();\n    }\n\n    this.parent.trigger(events.actionComplete, saveArgs);\n  };\n\n  Edit.prototype.lastCellTab = function () {\n    if (!this.parent.grid.isEdit && this.isOnBatch && this.keyPress === 'tab' && this.parent.editSettings.mode === 'Cell') {\n      if (!this.parent.editSettings.allowNextRowEdit) {\n        this.updateGridEditMode('Normal');\n        this.isOnBatch = false;\n        this.keyPress = null;\n      } else {\n        this.enableToolbarItems('edit');\n      }\n    }\n  };\n\n  Edit.prototype.updateCell = function (args, rowIndex) {\n    this.parent.grid.editModule.updateCell(rowIndex, args.columnName, args.rowData[args.columnName]);\n    this.parent.grid.getRowsObject()[rowIndex].data = args.rowData;\n  };\n\n  Edit.prototype.crudAction = function (details, columnName) {\n    editAction(details, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName, this.addRowRecord);\n    this.parent.parentData = [];\n    var data = this.parent.grid.dataSource instanceof DataManager ? this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource;\n\n    for (var i = 0; i < data.length; i++) {\n      data[i].index = i;\n      var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n\n      if (details.value[key] === data[i][key]) {\n        if (details.action === 'add') {\n          data[i].level = this.internalProperties.level;\n          data[i].taskData = this.internalProperties.taskData;\n          data[i].uniqueID = this.internalProperties.uniqueID;\n\n          if (!isNullOrUndefined(this.internalProperties.parentItem)) {\n            data[i].parentItem = this.internalProperties.parentItem;\n            data[i].parentUniqueID = this.internalProperties.parentUniqueID;\n          }\n\n          data[i].childRecords = this.internalProperties.childRecords;\n        }\n      }\n\n      setValue('uniqueIDCollection.' + data[i].uniqueID + '.index', i, this.parent);\n      var adaptor = this.parent.dataSource.adaptor;\n\n      if (isRemoteData(this.parent) || adaptor instanceof RemoteSaveAdaptor) {\n        setValue('uniqueIDCollection.' + data[i].uniqueID, data[i], this.parent);\n      }\n\n      if (!data[i].level) {\n        this.parent.parentData.push(data[i]);\n      }\n    }\n\n    if (details.action === 'add' && this.previousNewRowPosition != null) {\n      this.parent.setProperties({\n        editSettings: {\n          newRowPosition: this.previousNewRowPosition\n        }\n      }, true);\n      this.previousNewRowPosition = null;\n    }\n  };\n\n  Edit.prototype.updateIndex = function (data, rows, records) {\n    for (var j = 0; j < this.parent.getDataRows().length; j++) {\n      var data1 = records[j];\n      var index = getValue('uniqueIDCollection.' + data1.uniqueID + '.index', this.parent);\n      data1.index = index;\n\n      if (!isNullOrUndefined(data1.parentItem)) {\n        var parentIndex = getValue('uniqueIDCollection.' + data1.parentItem.uniqueID + '.index', this.parent);\n        data1.parentItem.index = parentIndex;\n      }\n    }\n\n    var count = -1;\n    var treeColIndex = this.parent.treeColumnIndex;\n\n    if (this.parent.getFrozenColumns() > 0) {\n      var cells = rows[0].querySelectorAll('.e-rowcell');\n\n      for (var l = 0; l < cells.length; l++) {\n        if (cells[l].classList.contains('e-gridrowindex0level0')) {\n          treeColIndex = l;\n          break;\n        }\n      }\n    }\n\n    for (var k = 0; k < this.parent.getRows().length; k++) {\n      if (!rows[k].classList.contains('e-detailrow')) {\n        count++;\n      }\n\n      var data2 = records[count];\n      var index = data2.index;\n      var level = data2.level;\n      var row = rows[k];\n\n      if (!isNullOrUndefined(data2.parentItem)) {\n        index = getValue('uniqueIDCollection.' + data2.parentItem.uniqueID + '.index', this.parent);\n      }\n\n      var treecell = row.cells[treeColIndex];\n\n      if (!isNullOrUndefined(treecell)) {\n        for (var l = 0; l < treecell.classList.length; l++) {\n          var value = treecell.classList[l];\n          var remove = /e-gridrowindex/i;\n          var removed = /e-griddetailrowindex/i;\n          var result = value.match(remove);\n          var results = value.match(removed);\n\n          if (result != null) {\n            removeClass([treecell], value);\n          }\n\n          if (results != null) {\n            removeClass([treecell], value);\n          }\n        }\n\n        if (!rows[k].classList.contains('e-detailrow')) {\n          addClass([treecell], 'e-gridrowindex' + index + 'level' + level);\n        } else {\n          addClass([treecell], 'e-griddetailrowindex' + index + 'level' + level);\n        }\n      }\n    }\n  };\n\n  Edit.prototype.beginAdd = function () {\n    var position;\n    var index = this.addRowIndex;\n    var records = this.parent.grid.getCurrentViewRecords();\n\n    if (this.parent.editSettings.mode === 'Batch') {\n      index = this.batchEditModule.getAddRowIndex();\n      this.selectedIndex = this.batchEditModule.getSelectedIndex();\n\n      if (this.parent.getBatchChanges()[this.addedRecords].length > 1 || this.parent.getBatchChanges()[this.deletedRecords].length) {\n        records = this.batchEditModule.getBatchRecords();\n      }\n    }\n\n    var rows = this.parent.grid.getDataRows();\n    var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n    var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n    var withinRange = this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n    var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n\n    if (this.parent.editSettings.mode !== 'Dialog') {\n      if (this.parent.editSettings.newRowPosition === 'Above') {\n        position = 'before';\n      } else if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n        position = 'after';\n\n        if (!isNullOrUndefined(records[index]) && records[index].expanded) {\n          if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1 || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n            index += findChildrenRecords(records[index]).length;\n\n            if (this.parent.editSettings.newRowPosition !== 'Child') {\n              var batchChildCount = this.batchEditModule.getBatchChildCount();\n              index = index + batchChildCount;\n            }\n          } else {\n            index += findChildrenRecords(records[index]).length;\n          }\n        }\n      }\n\n      if ((this.selectedIndex > -1 || isVirtualization) && withinRange && (index || this.parent.editSettings.newRowPosition === 'Child' || this.parent.editSettings.newRowPosition === 'Below')) {\n        if (index >= rows.length - 1) {\n          index = rows.length - 2;\n        }\n\n        var r = 'rows';\n        var newRowObject = this.parent.grid.contentModule[r][0];\n        var focussedElement = document.activeElement;\n        rows[index + 1][position](rows[0]);\n        setValue('batchIndex', index + 1, this.batchEditModule);\n        var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Above' ? index : index + 1;\n\n        if (this.parent.editSettings.mode === 'Batch') {\n          this.parent.grid.contentModule[r].splice(0, 1);\n          this.parent.grid.contentModule[r].splice(rowObjectIndex, 0, newRowObject);\n        }\n\n        var freeze = this.parent.getFrozenLeftColumnsCount() > 0 || this.parent.getFrozenRightColumnsCount() > 0 ? true : false;\n\n        if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns || freeze) {\n          var movableRows = this.parent.getMovableDataRows();\n          var frows = 'freezeRows';\n          var newFreezeRowObject = this.parent.grid.getRowsObject()[0];\n          movableRows[index + 1][position](movableRows[0]);\n\n          if (freeze) {\n            var rightFrozenRows = this.parent.getFrozenRightDataRows();\n            rightFrozenRows[index + 1][position](rightFrozenRows[0]);\n          }\n\n          if (this.parent.editSettings.mode === 'Batch') {\n            this.parent.grid.contentModule[frows].splice(0, 1);\n            this.parent.grid.contentModule[frows].splice(rowObjectIndex, 0, newFreezeRowObject);\n          }\n\n          setValue('batchIndex', index + 1, this.batchEditModule);\n        }\n\n        if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n          var errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n\n          for (var i = 0; i < errors.length; i++) {\n            errors[i].remove();\n          }\n\n          setValue('errorRules', [], this.parent.grid.editModule.formObj);\n        }\n\n        if (isVirtualization) {\n          this.prevAriaRowIndex = '-1';\n        }\n\n        focussedElement.focus();\n      }\n    }\n  }; // private beforeDataBound(args: BeforeDataBoundArgs): void {\n  //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n  //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n  //     let action: string = getValue('action', args);\n  //     let data: Object = getValue('data', args);\n  //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n  //       data = extend(this.editedData, data);\n  //       this.editedData = null;\n  //     }\n  //     if (!isNullOrUndefined(this.addedData)) {\n  //       let addedData: Object = args.result[args.result.length - 1];\n  //       addedData = extend(this.addedData, addedData);\n  //       this.addedData = null;\n  //       args.result.splice(this.addedIndex, 0, addedData);\n  //       args.result.splice(args.result.length, 1);\n  //     }\n  //   }\n  // }\n\n\n  Edit.prototype.beginEdit = function (args) {\n    if (args.requestType === 'refresh' && this.isOnBatch) {\n      args.cancel = true;\n      return;\n    }\n\n    if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n      args.cancel = true;\n      return;\n    }\n\n    if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') || this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-frame'))) {\n      args.cancel = true;\n      this.doubleClickTarget = null;\n      return;\n    }\n\n    if (args.requestType === 'delete') {\n      var data = args.data;\n\n      for (var i = 0; i < data.length; i++) {\n        this.deleteUniqueID(data[i].uniqueID);\n        var childs = findChildrenRecords(data[i]);\n\n        for (var c = 0; c < childs.length; c++) {\n          this.deleteUniqueID(childs[c].uniqueID);\n        }\n\n        args.data = data.concat(childs);\n      }\n    }\n\n    if (args.requestType === 'add' || this.isAddedRowByMethod && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling)) {\n      if (!(this.parent.grid.selectedRowIndex === -1 && this.isAddedRowByMethod) && args.index === this.parent.grid.selectedRowIndex || args.index === 0) {\n        this.selectedIndex = this.parent.grid.selectedRowIndex;\n      }\n\n      if (this.parent.enableVirtualization) {\n        var selector = '.e-row[aria-rowindex=\"' + this.selectedIndex + '\"]';\n        var row = void 0;\n\n        if (this.selectedIndex > -1 && this.parent.editSettings.newRowPosition !== 'Top' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n          this.prevAriaRowIndex = this.selectedIndex.toString();\n          row = this.parent.getContent().querySelector(selector);\n          this.addRowIndex = row ? row.rowIndex : 0;\n        } else {\n          if (this.prevAriaRowIndex && this.prevAriaRowIndex !== '-1') {\n            selector = '.e-row[aria-rowindex=\"' + this.prevAriaRowIndex + '\"]';\n            row = this.parent.getContent().querySelector(selector);\n            this.addRowIndex = row ? row.rowIndex : 0;\n          } else {\n            this.addRowIndex = 0;\n          }\n        }\n      } else {\n        if (this.isAddedRowByMethod && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling)) {\n          this.addRowIndex = args.index;\n        } else {\n          this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n        }\n      }\n\n      if (this.isAddedRowByMethod && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling)) {\n        this.addRowRecord = this.parent.flatData[args.index];\n      } else {\n        this.addRowRecord = this.parent.getSelectedRecords()[0];\n      }\n    }\n\n    if (this.isAddedRowByMethod && args.index !== 0) {\n      this.addRowRecord = this.parent.flatData[args.index];\n    }\n\n    if (this.parent.editSettings.newRowPosition === 'Child' && isNullOrUndefined(this.addRowRecord) && !isNullOrUndefined(this.parent.getSelectedRecords()[0])) {\n      this.addRowRecord = this.parent.getSelectedRecords()[0];\n    }\n\n    this.isAddedRowByMethod = false;\n    args = this.beginAddEdit(args); // if (args.requestType === 'save' &&\n    //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n    //      if (args.action === 'edit') {\n    //           this.editedData = args.data;\n    //      } else if (args.action === 'add') {\n    //           this.addedData = value;\n    //      }\n    // }\n  };\n\n  Edit.prototype.savePreviousRowPosition = function () {\n    if (this.previousNewRowPosition === null) {\n      this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n    }\n  };\n\n  Edit.prototype.beginAddEdit = function (args) {\n    var value = args.data;\n\n    if (args.action === 'add') {\n      var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n      var position = null;\n      value.taskData = isNullOrUndefined(value.taskData) ? extend({}, args.data) : value.taskData;\n      var currentData = this.parent.grid.getCurrentViewRecords();\n      var index = this.addRowIndex;\n      value.uniqueID = getUid(this.parent.element.id + '_data_');\n      setValue('uniqueIDCollection.' + value.uniqueID, value, this.parent);\n      var level = 0;\n      var idMapping = void 0;\n      var parentUniqueID = void 0;\n      var parentItem = void 0;\n      var parentIdMapping = void 0;\n      var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n      var rows = this.parent.getRows();\n      var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n      var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n      var withinRange = this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n\n      if (currentData.length) {\n        idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n        parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n\n        if (currentData[this.addRowIndex].parentItem) {\n          parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n        }\n\n        parentItem = currentData[this.addRowIndex].parentItem;\n      }\n\n      if (this.parent.editSettings.newRowPosition !== 'Top' && currentData.length) {\n        level = currentData[this.addRowIndex].level;\n\n        if (this.parent.editSettings.newRowPosition === 'Above') {\n          position = 'before';\n          index = currentData[this.addRowIndex].index;\n        } else if (this.parent.editSettings.newRowPosition === 'Below') {\n          position = 'after';\n          var childRecordCount = findChildrenRecords(currentData[this.addRowIndex]).length;\n          var currentDataIndex = currentData[this.addRowIndex].index;\n          index = childRecordCount > 0 ? currentDataIndex + childRecordCount : currentDataIndex;\n        } else if (this.parent.editSettings.newRowPosition === 'Child') {\n          position = 'after';\n\n          if ((this.selectedIndex > -1 || isVirtualization) && withinRange) {\n            value.parentItem = extend({}, currentData[this.addRowIndex]);\n            value.parentUniqueID = value.parentItem.uniqueID;\n            delete value.parentItem.childRecords;\n            delete value.parentItem[this.parent.childMapping];\n          }\n\n          var childRecordCount1 = findChildrenRecords(currentData[this.addRowIndex]).length;\n          var currentDataIndex1 = currentData[this.addRowIndex].index;\n\n          if (this.selectedIndex >= 0) {\n            value.level = level + 1;\n          }\n\n          index = childRecordCount1 > 0 ? currentDataIndex1 + childRecordCount1 : currentDataIndex1;\n\n          if (this.isSelfReference) {\n            value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = idMapping;\n\n            if (!isNullOrUndefined(value.parentItem)) {\n              updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n            }\n          }\n        }\n\n        if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n          if ((this.selectedIndex > -1 || isVirtualization) && level && withinRange) {\n            value.parentUniqueID = parentUniqueID;\n            value.parentItem = extend({}, parentItem);\n            delete value.parentItem.childRecords;\n            delete value.parentItem[this.parent.childMapping];\n          }\n\n          value.level = level;\n\n          if (this.isSelfReference) {\n            value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = parentIdMapping;\n\n            if (!isNullOrUndefined(value.parentItem)) {\n              updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n            }\n          }\n        }\n\n        if (position != null && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n          args.index = position === 'before' ? index : index + 1;\n        }\n\n        if (this.parent.editSettings.newRowPosition === 'Bottom') {\n          var dataSource = this.parent.grid.dataSource instanceof DataManager ? this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource;\n          args.index = dataSource.length;\n        }\n      }\n\n      if (isNullOrUndefined(value.level)) {\n        value.level = level;\n      }\n\n      value.hasChildRecords = false;\n      value.childRecords = [];\n      value.index = 0;\n    }\n\n    if (args.action === 'add') {\n      this.internalProperties = {\n        level: value.level,\n        parentItem: value.parentItem,\n        uniqueID: value.uniqueID,\n        taskData: value.taskData,\n        parentUniqueID: isNullOrUndefined(value.parentItem) ? undefined : value.parentItem.uniqueID,\n        childRecords: value.childRecords\n      };\n    }\n\n    if (args.requestType === 'delete') {\n      var deletedValues = args.data;\n\n      for (var i = 0; i < deletedValues.length; i++) {\n        if (deletedValues[i].parentItem) {\n          var parentItem = getParentData(this.parent, deletedValues[i].parentItem.uniqueID);\n\n          if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n            var childIndex = parentItem.childRecords.indexOf(deletedValues[i]);\n            parentItem.childRecords.splice(childIndex, 1);\n          }\n        }\n      }\n    }\n\n    return args;\n  };\n  /**\n   * If the data,index and position given, Adds the record to treegrid rows otherwise it will create edit form.\n   *\n   * @returns {void}\n   */\n\n\n  Edit.prototype.addRecord = function (data, index, position) {\n    if (this.parent.editSettings.newRowPosition === this.previousNewRowPosition || this.previousNewRowPosition === null) {\n      this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n    }\n\n    if (!this.isSelfReference && !isNullOrUndefined(data) && Object.hasOwnProperty.call(data, this.parent.childMapping)) {\n      var addRecords = [];\n      var previousEditMode = this.parent.editSettings.mode;\n      var previousGridEditMode = this.parent.grid.editSettings.mode;\n      addRecords.push(data);\n      this.parent.setProperties({\n        editSettings: {\n          mode: 'Batch'\n        }\n      }, true);\n      this.parent.grid.setProperties({\n        editSettings: {\n          mode: 'Batch'\n        }\n      }, true);\n\n      if (!isNullOrUndefined(position)) {\n        this.parent.setProperties({\n          editSettings: {\n            newRowPosition: position\n          }\n        }, true);\n      }\n\n      var updatedRecords = {\n        addedRecords: addRecords,\n        changedRecords: [],\n        deletedRecords: []\n      };\n      this.parent.notify(events.batchSave, {\n        updatedRecords: updatedRecords,\n        index: index\n      });\n      this.parent.setProperties({\n        editSettings: {\n          mode: previousEditMode\n        }\n      }, true);\n      this.parent.grid.setProperties({\n        editSettings: {\n          mode: previousGridEditMode\n        }\n      }, true);\n      this.parent.refresh();\n    } else {\n      if (data) {\n        if (index > -1) {\n          this.selectedIndex = index;\n          this.addRowIndex = index;\n        } else {\n          this.selectedIndex = this.parent.selectedRowIndex;\n          this.addRowIndex = this.parent.selectedRowIndex;\n        }\n\n        if (position) {\n          this.parent.setProperties({\n            editSettings: {\n              newRowPosition: position\n            }\n          }, true);\n        }\n\n        this.parent.grid.editModule.addRecord(data, index);\n      } else {\n        this.parent.grid.editModule.addRecord(data, index);\n      }\n    }\n  };\n  /**\n   * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n   *\n   * @returns {boolean} Returns form validation results\n   */\n\n\n  Edit.prototype.editFormValidate = function () {\n    return this.parent.grid.editModule.editFormValidate();\n  };\n  /**\n   * @hidden\n   * @returns {void}\n   */\n\n\n  Edit.prototype.destroyForm = function () {\n    this.parent.grid.editModule.destroyForm();\n  };\n\n  Edit.prototype.contentready = function (e) {\n    if (!isNullOrUndefined(e.args.requestType) && (e.args.requestType.toString() === 'delete' || e.args.requestType.toString() === 'save' || this.parent.editSettings.mode === 'Batch' && e.args.requestType.toString() === 'batchsave')) {\n      this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n\n      if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n        if (this.parent.grid.dataSource.length === this.parent.getMovableDataRows().length) {\n          this.updateIndex(this.parent.grid.dataSource, this.parent.getMovableDataRows(), this.parent.getCurrentViewRecords());\n        }\n      }\n    }\n  };\n  /**\n   * If the row index and field is given, edits the particular cell in a row.\n   *\n   * @returns {void}\n   */\n\n\n  Edit.prototype.editCell = function (rowIndex, field) {\n    if (this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch') {\n      if (this.parent.editSettings.mode !== 'Batch') {\n        this.isOnBatch = true;\n        this.updateGridEditMode('Batch');\n      }\n\n      this.parent.grid.editModule.editCell(rowIndex, field);\n    }\n  };\n\n  return Edit;\n}();\n\nexport { Edit };","map":{"version":3,"sources":["/Users/tristanbilot/Desktop/Design4green/design4green/node_modules/@syncfusion/ej2-treegrid/src/treegrid/actions/edit.js"],"names":["Grid","Edit","GridEdit","getUid","getObject","resetRowIndex","parentsUntil","events","isNullOrUndefined","extend","setValue","removeClass","addClass","getValue","DataManager","RemoteSaveAdaptor","findChildrenRecords","getParentData","isCountRequired","isRemoteData","editAction","updateParentRow","BatchEdit","parent","addedRecords","deletedRecords","prevAriaRowIndex","isAddedRowByMethod","Inject","isSelfReference","parentIdMapping","previousNewRowPosition","internalProperties","batchEditModule","addEventListener","prototype","getModuleName","on","crudAction","beginEdit","beginAdd","recordDoubleClick","cellSave","batchCancel","grid","keyPressed","lastCellTab","contentready","cellEdit","editActionEvents","doubleTap","gridDblClick","customCellSave","savePreviousRowPosition","beforeStartEdit","beforeBatchCancel","resetIsOnBatch","getRowPosition","e","doubleClickTarget","target","addArgs","newRowPosition","editSettings","addRowIndex","ariaRowIndex","args","trigger","actionBegin","mode","actionComplete","removeEventListener","isDestroyed","off","destroy","applyFormValidation","cols","editModule","eventArgs","eventName","treeObj","adaptor","dataSource","requestType","action","rowIndex","row","Object","keys","length","selectedIndex","keyData","getCurrentViewRecords","getPrimaryKeyFieldNames","query","addParams","paramsLength","params","i","key","splice","enableInfiniteScrolling","infiniteAddAction","notify","rowObjects","getRowsObject","newRowObject","newRowObjectIndex","currentData","newRecord","updateInfiniteCurrentViewData","movableRows","getMovableRows","movableRowsObject","getMovableRowsObject","isCache","infiniteScrollSettings","enableCache","getRows","updateIndex","getFrozenColumns","newRowIndex","_this","infiniteData","updateCurrentViewData","size","Math","ceil","pageSettings","pageSize","page","dataIndex","infiniteCurrentViewData","infiniteScrollModule","data","addRowRecord","filter","index","uniqueID","hasChildRecords","childRecords","closest","allowEditing","isEdit","column","getColumnByIndex","getAttribute","isOnBatch","isPrimaryKey","classList","contains","allowEditOnDblClick","setProperties","selectedRowIndex","enableVirtualization","tr","setAttribute","updateGridEditMode","updateMethod","apply","keyPress","closeEdit","deleteUniqueID","value","idFilter","id","promise","prom","undefined","celleditArgs","cancel","enableToolbarItems","resolve","columnObject","request","toolbarModule","toolbarID","element","enableItems","cellDetails","treeCell","getCellFromIndex","treeColumnIndex","renderModule","cellRender","rowData","cell","getColumns","updateCell","afterCellSave","querySelector","columnName","row_1","form","parentElement","parentNode","rowIndex_1","primaryKeys_1","freeze","getFrozenLeftColumnsCount","getFrozenRightColumnsCount","indexOf","getFrozenRightRows","arg","type","isTabLastRow","eventPromise","editArgs","filterChoiceCount","excelSearchOperator","getDataModule","crud","update","fromTable","previousValue","then","mRow","aggregateModule","refresh","destroyWidgets","getColumnByField","formObj","querySelectorAll","focusModule","restoreFocus","saveArgs","previousData","aggregates","map","ag","showChildSummary","allowNextRowEdit","details","parentData","json","level","taskData","parentItem","parentUniqueID","push","rows","records","j","getDataRows","data1","parentIndex","count","treeColIndex","cells","l","k","data2","treecell","remove","removed","result","match","results","position","getAddRowIndex","getSelectedIndex","getBatchChanges","getBatchRecords","firstAriaIndex","lastAriaIndex","withinRange","isVirtualization","expanded","batchChildCount","getBatchChildCount","r","contentModule","focussedElement","document","activeElement","rowObjectIndex","frozenRows","frozenColumns","getMovableDataRows","frows","newFreezeRowObject","rightFrozenRows","getFrozenRightDataRows","errors","getContentTable","focus","childs","c","concat","selector","toString","getContent","flatData","getSelectedRecords","beginAddEdit","idMapping","childRecordCount","currentDataIndex","childMapping","childRecordCount1","currentDataIndex1","deletedValues","childIndex","addRecord","hasOwnProperty","call","addRecords","previousEditMode","previousGridEditMode","updatedRecords","changedRecords","batchSave","editFormValidate","destroyForm","editCell","field"],"mappings":"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","sourcesContent":["import { Grid, Edit as GridEdit, getUid, getObject, resetRowIndex } from '@syncfusion/ej2-grids';\nimport { parentsUntil } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass, addClass, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, RemoteSaveAdaptor } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, isCountRequired, isRemoteData } from '../utils';\nimport { editAction, updateParentRow } from './crud-actions';\nimport { BatchEdit } from './batch-edit';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\nvar Edit = /** @class */ (function () {\n    /**\n     * Constructor for Edit module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Edit(parent) {\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.prevAriaRowIndex = '-1';\n        this.isAddedRowByMethod = false;\n        Grid.Inject(GridEdit);\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.previousNewRowPosition = null;\n        this.internalProperties = {};\n        this.batchEditModule = new BatchEdit(this.parent);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Edit module name\n     */\n    Edit.prototype.getModuleName = function () {\n        return 'edit';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.addEventListener = function () {\n        this.parent.on(events.crudAction, this.crudAction, this);\n        this.parent.on(events.beginEdit, this.beginEdit, this);\n        this.parent.on(events.beginAdd, this.beginAdd, this);\n        this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n        this.parent.on(events.cellSave, this.cellSave, this);\n        this.parent.on(events.batchCancel, this.batchCancel, this);\n        this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n        this.parent.grid.on('batchedit-form', this.lastCellTab, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n        this.parent.on(events.cellEdit, this.cellEdit, this);\n        this.parent.on('actionBegin', this.editActionEvents, this);\n        this.parent.on('actionComplete', this.editActionEvents, this);\n        this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n        this.parent.grid.on('dblclick', this.gridDblClick, this);\n        this.parent.grid.on('recordAdded', this.customCellSave, this);\n        this.parent.on('savePreviousRowPosition', this.savePreviousRowPosition, this);\n        // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n        this.parent.grid.on(events.beforeStartEdit, this.beforeStartEdit, this);\n        this.parent.grid.on(events.beforeBatchCancel, this.beforeBatchCancel, this);\n        this.parent.grid.on('reset-edit-props', this.resetIsOnBatch, this);\n        this.parent.grid.on('get-row-position', this.getRowPosition, this);\n    };\n    Edit.prototype.gridDblClick = function (e) {\n        this.doubleClickTarget = e.target;\n    };\n    Edit.prototype.getRowPosition = function (addArgs) {\n        addArgs.newRowPosition = this.parent.editSettings.newRowPosition;\n        addArgs.addRowIndex = this.addRowIndex;\n        addArgs.ariaRowIndex = +this.prevAriaRowIndex;\n    };\n    Edit.prototype.beforeStartEdit = function (args) {\n        this.parent.trigger(events.actionBegin, args);\n    };\n    Edit.prototype.beforeBatchCancel = function (args) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            this.parent.trigger(events.actionComplete, args);\n        }\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.crudAction, this.crudAction);\n        this.parent.off(events.beginEdit, this.beginEdit);\n        this.parent.off(events.beginAdd, this.beginAdd);\n        this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n        this.parent.off(events.batchCancel, this.batchCancel);\n        this.parent.grid.off(events.keyPressed, this.keyPressed);\n        this.parent.grid.off('batchedit-form', this.lastCellTab);\n        this.parent.grid.off('content-ready', this.contentready);\n        this.parent.off(events.cellEdit, this.cellEdit);\n        this.parent.off('actionBegin', this.editActionEvents);\n        this.parent.off('actionComplete', this.editActionEvents);\n        this.parent.grid.off('recordAdded', this.customCellSave);\n        this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n        this.parent.off('savePreviousRowPosition', this.savePreviousRowPosition);\n        this.parent.grid.off(events.beforeStartEdit, this.beforeStartEdit);\n        this.parent.grid.off(events.beforeBatchCancel, this.beforeBatchCancel);\n        this.parent.grid.off('dblclick', this.gridDblClick);\n        this.parent.grid.off('reset-edit-props', this.resetIsOnBatch);\n        this.parent.grid.off('get-row-position', this.getRowPosition);\n        //this.parent.grid.off('click', this.gridSingleClick);\n    };\n    /**\n     * To destroy the editModule\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Edit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @param {Column[]} cols - Column property Collection\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.applyFormValidation = function (cols) {\n        this.parent.grid.editModule.applyFormValidation(cols);\n    };\n    Edit.prototype.editActionEvents = function (args) {\n        var eventArgs = getObject('editAction', args);\n        var eventName = getObject('name', eventArgs);\n        var treeObj = this.parent;\n        var adaptor = treeObj.dataSource.adaptor;\n        if ((isRemoteData(treeObj) || adaptor instanceof RemoteSaveAdaptor) &&\n            (eventArgs.requestType === 'save' && eventArgs.action === 'add') &&\n            (treeObj.editSettings.newRowPosition === 'Child' || treeObj.editSettings.newRowPosition === 'Below'\n                || treeObj.editSettings.newRowPosition === 'Above')) {\n            if (eventName === 'actionBegin') {\n                var rowIndex = isNullOrUndefined(eventArgs.row) || !Object.keys(eventArgs.row).length ? this.selectedIndex :\n                    eventArgs.row.rowIndex - 1;\n                var keyData = (!isNullOrUndefined(rowIndex) && rowIndex !== -1) ?\n                    treeObj.getCurrentViewRecords()[rowIndex][treeObj.getPrimaryKeyFieldNames()[0]] : -1;\n                treeObj.grid.query.addParams('relationalKey', keyData);\n            }\n            else if (eventName === 'actionComplete') {\n                var paramsLength = treeObj.grid.query.params.length;\n                for (var i = 0; i < paramsLength; i++) {\n                    if (treeObj.grid.query.params[i].key === 'relationalKey') {\n                        treeObj.grid.query.params.splice(i);\n                    }\n                }\n            }\n        }\n        if (this.parent.enableInfiniteScrolling && eventName === 'actionComplete') {\n            this.infiniteAddAction(eventArgs);\n        }\n        if (this.parent.editSettings.mode === 'Batch' && eventArgs.requestType === 'paging') {\n            this.parent.notify('batchPageAction', {});\n        }\n    };\n    Edit.prototype.infiniteAddAction = function (args) {\n        if ((args.requestType === 'save' && args.action === 'add') || args.requestType === 'delete') {\n            if (this.parent.editSettings.newRowPosition !== 'Top' && this.selectedIndex !== -1\n                && (args.requestType === 'save' && args.action === 'add')) {\n                var rowObjects = this.parent.grid.getRowsObject();\n                var newRowObject = rowObjects.splice(0, 1)[0];\n                var newRowObjectIndex = this.addRowIndex;\n                var currentData = this.parent.getCurrentViewRecords();\n                if (this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n                    newRowObjectIndex += findChildrenRecords(currentData[newRowObjectIndex + 1]).length;\n                }\n                newRowObjectIndex = this.parent.editSettings.newRowPosition === 'Below' ? newRowObjectIndex + 1 : newRowObjectIndex;\n                rowObjects.splice(newRowObjectIndex, 0, newRowObject);\n                var newRecord = currentData.splice(0, 1)[0];\n                currentData.splice(newRowObjectIndex, 0, newRecord);\n                this.updateInfiniteCurrentViewData(newRecord, this.addRowIndex);\n            }\n            var movableRows = this.parent.grid.getMovableRows();\n            var movableRowsObject = this.parent.grid.getMovableRowsObject();\n            var isCache = this.parent.infiniteScrollSettings.enableCache;\n            if (!isCache) {\n                resetRowIndex(this.parent.grid, this.parent.grid.getRowsObject(), this.parent.grid.getRows(), 0);\n                this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            }\n            if (!isCache && this.parent.getFrozenColumns() > 0) {\n                resetRowIndex(this.parent.grid, movableRowsObject, movableRows, 0);\n                this.updateIndex(this.parent.grid.dataSource, movableRows, this.parent.getCurrentViewRecords());\n            }\n        }\n    };\n    Edit.prototype.updateInfiniteCurrentViewData = function (newRecord, newRowIndex) {\n        var _this = this;\n        var infiniteData = 'infiniteCurrentViewData';\n        var updateCurrentViewData = 'updateCurrentViewData';\n        var size = Math.ceil(newRowIndex / this.parent.grid.pageSettings.pageSize);\n        var page = size > 0 ? size : 1;\n        var dataIndex = newRowIndex - ((page - 1) * this.parent.pageSettings.pageSize);\n        var infiniteCurrentViewData = this.parent.grid.infiniteScrollModule[infiniteData];\n        infiniteCurrentViewData[1].splice(0, 1);\n        var data = infiniteCurrentViewData[page];\n        if (!isNullOrUndefined(this.addRowRecord)) {\n            data.filter(function (e, index) {\n                if (e.uniqueID === _this.addRowRecord.uniqueID) {\n                    dataIndex = index;\n                }\n            });\n            if (this.addRowRecord.hasChildRecords && this.addRowRecord.childRecords.length &&\n                this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n                dataIndex += findChildrenRecords(this.addRowRecord).length;\n            }\n        }\n        if (dataIndex >= this.parent.pageSettings.pageSize) {\n            page += 1;\n            data = infiniteCurrentViewData[page];\n            dataIndex = dataIndex - this.parent.pageSettings.pageSize >= 0 ? dataIndex - this.parent.pageSettings.pageSize : 0;\n        }\n        dataIndex = this.parent.editSettings.newRowPosition === 'Below' ? dataIndex + 1 : dataIndex;\n        data.splice(dataIndex, 0, newRecord);\n        this.parent.grid.infiniteScrollModule[updateCurrentViewData]();\n    };\n    Edit.prototype.recordDoubleClick = function (args) {\n        var target = args.target;\n        if (isNullOrUndefined(target.closest('td.e-rowcell'))) {\n            return;\n        }\n        if (!(this.parent.grid.editSettings.allowEditing) || this.parent.grid.isEdit) {\n            return;\n        }\n        var column = this.parent.grid.getColumnByIndex(+target.closest('td.e-rowcell').getAttribute('aria-colindex'));\n        if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey &&\n            this.parent.editSettings.allowEditing && column.allowEditing && !(target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && this.parent.editSettings.allowEditOnDblClick) {\n            this.isOnBatch = true;\n            this.parent.grid.setProperties({ selectedRowIndex: args.rowIndex }, true);\n            if (this.parent.enableVirtualization) {\n                var tr = parentsUntil(args.target, 'e-row');\n                this.prevAriaRowIndex = tr.getAttribute('aria-rowindex');\n                tr.setAttribute('aria-rowindex', tr.rowIndex + '');\n            }\n            this.updateGridEditMode('Batch');\n        }\n    };\n    Edit.prototype.updateGridEditMode = function (mode) {\n        this.parent.grid.setProperties({ editSettings: { mode: mode } }, true);\n        var updateMethod = getObject('updateEditObj', this.parent.grid.editModule);\n        updateMethod.apply(this.parent.grid.editModule);\n        this.parent.grid.isEdit = false;\n    };\n    Edit.prototype.resetIsOnBatch = function () {\n        if (this.parent.enableVirtualization && this.parent.editSettings.mode === 'Cell') {\n            this.isOnBatch = false;\n            this.updateGridEditMode('Normal');\n        }\n    };\n    Edit.prototype.keyPressed = function (args) {\n        if (this.isOnBatch) {\n            this.keyPress = args.action;\n        }\n        if (args.action === 'f2') {\n            this.recordDoubleClick(args);\n        }\n        if (args.action === 'escape') {\n            this.parent.closeEdit();\n        }\n    };\n    Edit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    Edit.prototype.cellEdit = function (args) {\n        var _this = this;\n        var promise = 'promise';\n        var prom = args[promise];\n        delete args[promise];\n        if (this.parent.enableVirtualization && !isNullOrUndefined(this.prevAriaRowIndex)) {\n            args.row.setAttribute('aria-rowindex', this.prevAriaRowIndex);\n            this.prevAriaRowIndex = undefined;\n        }\n        if (this.keyPress !== 'enter') {\n            this.parent.trigger(events.cellEdit, args, function (celleditArgs) {\n                if (!celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.enableToolbarItems('edit');\n                }\n                else if (celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.isOnBatch = false;\n                    _this.updateGridEditMode('Normal');\n                }\n                if (!isNullOrUndefined(prom)) {\n                    prom.resolve(celleditArgs);\n                }\n            });\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-summarycell'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell') {\n            if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n                this.keyPress = null;\n            }\n            else if (this.keyPress === 'enter') {\n                args.cancel = true;\n                this.keyPress = null;\n                setValue('isEditCollapse', false, this.parent);\n            }\n            if (!args.columnObject.allowEditing) {\n                args.cancel = true;\n            }\n        }\n        // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n        //   this.isAdd = false;\n        // }\n    };\n    Edit.prototype.enableToolbarItems = function (request) {\n        if (!isNullOrUndefined(this.parent.grid.toolbarModule)) {\n            var toolbarID = this.parent.element.id + '_gridcontrol_';\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], request === 'save');\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], request === 'edit');\n        }\n    };\n    Edit.prototype.batchCancel = function () {\n        if (this.parent.editSettings.mode === 'Cell') {\n            var cellDetails = getValue('editModule.cellDetails', this.parent.grid.editModule);\n            var treeCell = this.parent.getCellFromIndex(cellDetails.rowIndex, this.parent.treeColumnIndex);\n            this.parent.renderModule.cellRender({\n                data: cellDetails.rowData,\n                cell: treeCell,\n                column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n            });\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        if (this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify('batchCancelAction', {});\n        }\n    };\n    Edit.prototype.customCellSave = function (args) {\n        if (isCountRequired(this.parent) && this.parent.editSettings.mode === 'Cell' && args.action === 'edit') {\n            this.updateCell(args, args.rowIndex);\n            this.afterCellSave(args, args.row, args.rowIndex);\n        }\n    };\n    Edit.prototype.cellSave = function (args) {\n        var _this = this;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.element.querySelector('form')) {\n            args.cancel = true;\n            var editModule = 'editModule';\n            setValue('isEdit', false, this.parent.grid);\n            setValue('isEditCollapse', true, this.parent);\n            args.rowData[args.columnName] = args.value;\n            var row_1;\n            if (isNullOrUndefined(args.cell)) {\n                row_1 = this.parent.grid.editModule[editModule].form.parentElement.parentNode;\n            }\n            else {\n                row_1 = args.cell.parentNode;\n            }\n            var rowIndex_1;\n            var primaryKeys_1 = this.parent.getPrimaryKeyFieldNames();\n            if (isNullOrUndefined(row_1)) {\n                this.parent.grid.getCurrentViewRecords().filter(function (e, i) {\n                    if (e[primaryKeys_1[0]] === args.rowData[primaryKeys_1[0]]) {\n                        rowIndex_1 = i;\n                        return;\n                    }\n                });\n            }\n            else {\n                var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n                    this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n                if (freeze) {\n                    if (this.parent.getRows().indexOf(row_1) !== -1) {\n                        rowIndex_1 = this.parent.getRows().indexOf(row_1);\n                    }\n                    else if (this.parent.getFrozenRightRows().indexOf(row_1) !== -1) {\n                        rowIndex_1 = this.parent.getFrozenRightRows().indexOf(row_1);\n                    }\n                    else {\n                        rowIndex_1 = this.parent.getMovableRows().indexOf(row_1);\n                    }\n                }\n                else {\n                    rowIndex_1 = (this.parent.getRows().indexOf(row_1) === -1 && (this.parent.getFrozenColumns() > 0)) ?\n                        this.parent.grid.getMovableRows().indexOf(row_1) : this.parent.getRows().indexOf(row_1);\n                }\n            }\n            var arg = {};\n            extend(arg, args);\n            arg.cancel = false;\n            arg.type = 'save';\n            row_1 = this.parent.grid.getRows()[row_1.rowIndex];\n            this.parent.trigger(events.actionBegin, arg);\n            if (!arg.cancel) {\n                if ((row_1.rowIndex === this.parent.getCurrentViewRecords().length - 1) && this.keyPress === 'tab') {\n                    this.isTabLastRow = true;\n                }\n                if (!isRemoteData(this.parent) &&\n                    !(this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n                    if (isCountRequired(this.parent)) {\n                        var eventPromise = 'eventPromise';\n                        var editArgs = { requestType: 'save', data: args.rowData, action: 'edit', row: row_1,\n                            rowIndex: rowIndex_1, rowData: args.rowData, columnName: args.columnName,\n                            filterChoiceCount: null, excelSearchOperator: null };\n                        this.parent.grid.getDataModule()[eventPromise](editArgs, this.parent.grid.query);\n                    }\n                    else {\n                        this.updateCell(args, rowIndex_1);\n                        this.afterCellSave(args, row_1, rowIndex_1);\n                    }\n                }\n                else if (isRemoteData(this.parent) ||\n                    (this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n                    var query = this.parent.grid.query;\n                    var crud = null;\n                    crud = this.parent.grid.dataSource.update(primaryKeys_1[0], args.rowData, query.fromTable, query, args.previousValue);\n                    crud.then(function (e) {\n                        if (!isNullOrUndefined(e)) {\n                            args.rowData[args.columnName] = e[args.columnName];\n                        }\n                        _this.updateCell(args, rowIndex_1);\n                        _this.afterCellSave(args, row_1, rowIndex_1);\n                    });\n                }\n            }\n            else {\n                this.parent.grid.isEdit = true;\n            }\n        }\n    };\n    Edit.prototype.afterCellSave = function (args, row, rowIndex) {\n        var mRow;\n        if (this.parent.grid.aggregateModule) {\n            this.parent.grid.aggregateModule.refresh(args.rowData);\n        }\n        this.parent.grid.editModule.destroyWidgets([this.parent.grid.getColumnByField(args.columnName)]);\n        this.parent.grid.editModule.formObj.destroy();\n        if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        this.enableToolbarItems('save');\n        var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n            this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (freeze) {\n            if (args.cell.closest('.e-frozen-left-header') || args.cell.closest('.e-frozen-left-content')) {\n                mRow = this.parent.grid.getRows()[rowIndex];\n            }\n            else if (args.cell.closest('.e-movableheader') || args.cell.closest('.e-movablecontent')) {\n                mRow = this.parent.grid.getMovableRows()[rowIndex];\n            }\n            else {\n                mRow = this.parent.grid.getFrozenRightRows()[rowIndex];\n            }\n            removeClass([mRow], ['e-editedrow', 'e-batchrow']);\n            removeClass(mRow.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        }\n        else if (this.parent.getFrozenColumns() > 0) {\n            if (args.cell.closest('.e-frozenheader') || args.cell.closest('.e-frozencontent')) {\n                mRow = this.parent.grid.getRows()[rowIndex];\n            }\n            else {\n                mRow = this.parent.grid.getMovableRows()[rowIndex];\n            }\n            removeClass([mRow], ['e-editedrow', 'e-batchrow']);\n            removeClass(mRow.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        }\n        removeClass([row], ['e-editedrow', 'e-batchrow']);\n        removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        if (this.parent['isCellSaveFocus'] !== false) {\n            this.parent.grid.focusModule.restoreFocus();\n        }\n        editAction({ value: args.rowData, action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, args.columnName);\n        if ((row.rowIndex === this.parent.getCurrentViewRecords().length - 1) && this.keyPress === 'enter') {\n            this.keyPress = null;\n        }\n        var saveArgs = {\n            type: 'save', column: this.parent.getColumnByField(args.columnName), data: args.rowData,\n            previousData: args.previousValue, row: row, target: args.cell\n        };\n        if (this.parent.aggregates.map(function (ag) { return ag.showChildSummary === true; }).length) {\n            this.parent.grid.refresh();\n        }\n        this.parent.trigger(events.actionComplete, saveArgs);\n    };\n    Edit.prototype.lastCellTab = function () {\n        if (!this.parent.grid.isEdit && this.isOnBatch && this.keyPress === 'tab' && this.parent.editSettings.mode === 'Cell') {\n            if (!this.parent.editSettings.allowNextRowEdit) {\n                this.updateGridEditMode('Normal');\n                this.isOnBatch = false;\n                this.keyPress = null;\n            }\n            else {\n                this.enableToolbarItems('edit');\n            }\n        }\n    };\n    Edit.prototype.updateCell = function (args, rowIndex) {\n        this.parent.grid.editModule.updateCell(rowIndex, args.columnName, args.rowData[args.columnName]);\n        this.parent.grid.getRowsObject()[rowIndex].data = args.rowData;\n    };\n    Edit.prototype.crudAction = function (details, columnName) {\n        editAction(details, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName, this.addRowRecord);\n        this.parent.parentData = [];\n        var data = this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            data[i].index = i;\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            if (details.value[key] === data[i][key]) {\n                if (details.action === 'add') {\n                    data[i].level = this.internalProperties.level;\n                    data[i].taskData = this.internalProperties.taskData;\n                    data[i].uniqueID = this.internalProperties.uniqueID;\n                    if (!isNullOrUndefined(this.internalProperties.parentItem)) {\n                        data[i].parentItem = this.internalProperties.parentItem;\n                        data[i].parentUniqueID = this.internalProperties.parentUniqueID;\n                    }\n                    data[i].childRecords = this.internalProperties.childRecords;\n                }\n            }\n            setValue('uniqueIDCollection.' + data[i].uniqueID + '.index', i, this.parent);\n            var adaptor = this.parent.dataSource.adaptor;\n            if ((isRemoteData(this.parent) || adaptor instanceof RemoteSaveAdaptor)) {\n                setValue('uniqueIDCollection.' + data[i].uniqueID, data[i], this.parent);\n            }\n            if (!data[i].level) {\n                this.parent.parentData.push(data[i]);\n            }\n        }\n        if (details.action === 'add' && this.previousNewRowPosition != null) {\n            this.parent.setProperties({ editSettings: { newRowPosition: this.previousNewRowPosition } }, true);\n            this.previousNewRowPosition = null;\n        }\n    };\n    Edit.prototype.updateIndex = function (data, rows, records) {\n        for (var j = 0; j < this.parent.getDataRows().length; j++) {\n            var data1 = records[j];\n            var index = getValue('uniqueIDCollection.' + data1.uniqueID + '.index', this.parent);\n            data1.index = index;\n            if (!isNullOrUndefined(data1.parentItem)) {\n                var parentIndex = getValue('uniqueIDCollection.' + data1.parentItem.uniqueID + '.index', this.parent);\n                data1.parentItem.index = parentIndex;\n            }\n        }\n        var count = -1;\n        var treeColIndex = this.parent.treeColumnIndex;\n        if (this.parent.getFrozenColumns() > 0) {\n            var cells = rows[0].querySelectorAll('.e-rowcell');\n            for (var l = 0; l < cells.length; l++) {\n                if (cells[l].classList.contains('e-gridrowindex0level0')) {\n                    treeColIndex = l;\n                    break;\n                }\n            }\n        }\n        for (var k = 0; k < this.parent.getRows().length; k++) {\n            if (!rows[k].classList.contains('e-detailrow')) {\n                count++;\n            }\n            var data2 = records[count];\n            var index = data2.index;\n            var level = data2.level;\n            var row = rows[k];\n            if (!isNullOrUndefined(data2.parentItem)) {\n                index = getValue('uniqueIDCollection.' + data2.parentItem.uniqueID + '.index', this.parent);\n            }\n            var treecell = row.cells[treeColIndex];\n            if (!isNullOrUndefined(treecell)) {\n                for (var l = 0; l < treecell.classList.length; l++) {\n                    var value = treecell.classList[l];\n                    var remove = /e-gridrowindex/i;\n                    var removed = /e-griddetailrowindex/i;\n                    var result = value.match(remove);\n                    var results = value.match(removed);\n                    if (result != null) {\n                        removeClass([treecell], value);\n                    }\n                    if (results != null) {\n                        removeClass([treecell], value);\n                    }\n                }\n                if (!rows[k].classList.contains('e-detailrow')) {\n                    addClass([treecell], 'e-gridrowindex' + index + 'level' + level);\n                }\n                else {\n                    addClass([treecell], 'e-griddetailrowindex' + index + 'level' + level);\n                }\n            }\n        }\n    };\n    Edit.prototype.beginAdd = function () {\n        var position;\n        var index = this.addRowIndex;\n        var records = this.parent.grid.getCurrentViewRecords();\n        if (this.parent.editSettings.mode === 'Batch') {\n            index = this.batchEditModule.getAddRowIndex();\n            this.selectedIndex = this.batchEditModule.getSelectedIndex();\n            if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                records = this.batchEditModule.getBatchRecords();\n            }\n        }\n        var rows = this.parent.grid.getDataRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n        var withinRange = this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n        var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n        if (this.parent.editSettings.mode !== 'Dialog') {\n            if (this.parent.editSettings.newRowPosition === 'Above') {\n                position = 'before';\n            }\n            else if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n                && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                position = 'after';\n                if (!isNullOrUndefined(records[index]) && records[index].expanded) {\n                    if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                        || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                        index += findChildrenRecords(records[index]).length;\n                        if (this.parent.editSettings.newRowPosition !== 'Child') {\n                            var batchChildCount = this.batchEditModule.getBatchChildCount();\n                            index = index + batchChildCount;\n                        }\n                    }\n                    else {\n                        index += findChildrenRecords(records[index]).length;\n                    }\n                }\n            }\n            if ((this.selectedIndex > -1 || isVirtualization) && withinRange\n                && (index || (this.parent.editSettings.newRowPosition === 'Child'\n                    || this.parent.editSettings.newRowPosition === 'Below'))) {\n                if (index >= rows.length - 1) {\n                    index = rows.length - 2;\n                }\n                var r = 'rows';\n                var newRowObject = this.parent.grid.contentModule[r][0];\n                var focussedElement = document.activeElement;\n                rows[index + 1][position](rows[0]);\n                setValue('batchIndex', index + 1, this.batchEditModule);\n                var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Above' ? index : index + 1;\n                if (this.parent.editSettings.mode === 'Batch') {\n                    this.parent.grid.contentModule[r].splice(0, 1);\n                    this.parent.grid.contentModule[r].splice(rowObjectIndex, 0, newRowObject);\n                }\n                var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n                    this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n                if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns || freeze) {\n                    var movableRows = this.parent.getMovableDataRows();\n                    var frows = 'freezeRows';\n                    var newFreezeRowObject = this.parent.grid.getRowsObject()[0];\n                    movableRows[index + 1][position](movableRows[0]);\n                    if (freeze) {\n                        var rightFrozenRows = this.parent.getFrozenRightDataRows();\n                        rightFrozenRows[index + 1][position](rightFrozenRows[0]);\n                    }\n                    if (this.parent.editSettings.mode === 'Batch') {\n                        this.parent.grid.contentModule[frows].splice(0, 1);\n                        this.parent.grid.contentModule[frows].splice(rowObjectIndex, 0, newFreezeRowObject);\n                    }\n                    setValue('batchIndex', index + 1, this.batchEditModule);\n                }\n                if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n                    var errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n                    for (var i = 0; i < errors.length; i++) {\n                        errors[i].remove();\n                    }\n                    setValue('errorRules', [], this.parent.grid.editModule.formObj);\n                }\n                if (isVirtualization) {\n                    this.prevAriaRowIndex = '-1';\n                }\n                focussedElement.focus();\n            }\n        }\n    };\n    // private beforeDataBound(args: BeforeDataBoundArgs): void {\n    //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n    //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n    //     let action: string = getValue('action', args);\n    //     let data: Object = getValue('data', args);\n    //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n    //       data = extend(this.editedData, data);\n    //       this.editedData = null;\n    //     }\n    //     if (!isNullOrUndefined(this.addedData)) {\n    //       let addedData: Object = args.result[args.result.length - 1];\n    //       addedData = extend(this.addedData, addedData);\n    //       this.addedData = null;\n    //       args.result.splice(this.addedIndex, 0, addedData);\n    //       args.result.splice(args.result.length, 1);\n    //     }\n    //   }\n    // }\n    Edit.prototype.beginEdit = function (args) {\n        if (args.requestType === 'refresh' && this.isOnBatch) {\n            args.cancel = true;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n            args.cancel = true;\n            return;\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-frame'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (args.requestType === 'delete') {\n            var data = args.data;\n            for (var i = 0; i < data.length; i++) {\n                this.deleteUniqueID(data[i].uniqueID);\n                var childs = findChildrenRecords(data[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                args.data = data.concat(childs);\n            }\n        }\n        if (args.requestType === 'add' || (this.isAddedRowByMethod && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling))) {\n            if (!(this.parent.grid.selectedRowIndex === -1 && this.isAddedRowByMethod)\n                && args.index === this.parent.grid.selectedRowIndex || args.index === 0) {\n                this.selectedIndex = this.parent.grid.selectedRowIndex;\n            }\n            if (this.parent.enableVirtualization) {\n                var selector = '.e-row[aria-rowindex=\"' + this.selectedIndex + '\"]';\n                var row = void 0;\n                if (this.selectedIndex > -1 && this.parent.editSettings.newRowPosition !== 'Top' &&\n                    this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    this.prevAriaRowIndex = this.selectedIndex.toString();\n                    row = this.parent.getContent().querySelector(selector);\n                    this.addRowIndex = row ? row.rowIndex : 0;\n                }\n                else {\n                    if (this.prevAriaRowIndex && this.prevAriaRowIndex !== '-1') {\n                        selector = '.e-row[aria-rowindex=\"' + this.prevAriaRowIndex + '\"]';\n                        row = this.parent.getContent().querySelector(selector);\n                        this.addRowIndex = row ? row.rowIndex : 0;\n                    }\n                    else {\n                        this.addRowIndex = 0;\n                    }\n                }\n            }\n            else {\n                if (this.isAddedRowByMethod && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling)) {\n                    this.addRowIndex = args.index;\n                }\n                else {\n                    this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n                }\n            }\n            if (this.isAddedRowByMethod && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling)) {\n                this.addRowRecord = this.parent.flatData[args.index];\n            }\n            else {\n                this.addRowRecord = this.parent.getSelectedRecords()[0];\n            }\n        }\n        if (this.isAddedRowByMethod && args.index !== 0) {\n            this.addRowRecord = this.parent.flatData[args.index];\n        }\n        if (this.parent.editSettings.newRowPosition === 'Child' && isNullOrUndefined(this.addRowRecord)\n            && !isNullOrUndefined(this.parent.getSelectedRecords()[0])) {\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n        this.isAddedRowByMethod = false;\n        args = this.beginAddEdit(args);\n        // if (args.requestType === 'save' &&\n        //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n        //      if (args.action === 'edit') {\n        //           this.editedData = args.data;\n        //      } else if (args.action === 'add') {\n        //           this.addedData = value;\n        //      }\n        // }\n    };\n    Edit.prototype.savePreviousRowPosition = function () {\n        if (this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n    };\n    Edit.prototype.beginAddEdit = function (args) {\n        var value = args.data;\n        if (args.action === 'add') {\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var position = null;\n            value.taskData = isNullOrUndefined(value.taskData) ? extend({}, args.data) : value.taskData;\n            var currentData = this.parent.grid.getCurrentViewRecords();\n            var index = this.addRowIndex;\n            value.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + value.uniqueID, value, this.parent);\n            var level = 0;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentItem = void 0;\n            var parentIdMapping = void 0;\n            var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n            var rows = this.parent.getRows();\n            var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n            var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n            var withinRange = this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n            if (currentData.length) {\n                idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n                parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n                if (currentData[this.addRowIndex].parentItem) {\n                    parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n                }\n                parentItem = currentData[this.addRowIndex].parentItem;\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top' && currentData.length) {\n                level = currentData[this.addRowIndex].level;\n                if (this.parent.editSettings.newRowPosition === 'Above') {\n                    position = 'before';\n                    index = currentData[this.addRowIndex].index;\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Below') {\n                    position = 'after';\n                    var childRecordCount = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex = currentData[this.addRowIndex].index;\n                    index = (childRecordCount > 0) ? (currentDataIndex + childRecordCount) : (currentDataIndex);\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Child') {\n                    position = 'after';\n                    if ((this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                        value.parentItem = extend({}, currentData[this.addRowIndex]);\n                        value.parentUniqueID = value.parentItem.uniqueID;\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    var childRecordCount1 = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex1 = currentData[this.addRowIndex].index;\n                    if (this.selectedIndex >= 0) {\n                        value.level = level + 1;\n                    }\n                    index = (childRecordCount1 > 0) ? (currentDataIndex1 + childRecordCount1) : (currentDataIndex1);\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = idMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                    if ((this.selectedIndex > -1 || isVirtualization) && level && withinRange) {\n                        value.parentUniqueID = parentUniqueID;\n                        value.parentItem = extend({}, parentItem);\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    value.level = level;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = parentIdMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (position != null && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                    args.index = position === 'before' ? index : index + 1;\n                }\n                if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    var dataSource = (this.parent.grid.dataSource instanceof DataManager ?\n                        this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n                    args.index = dataSource.length;\n                }\n            }\n            if (isNullOrUndefined(value.level)) {\n                value.level = level;\n            }\n            value.hasChildRecords = false;\n            value.childRecords = [];\n            value.index = 0;\n        }\n        if (args.action === 'add') {\n            this.internalProperties = { level: value.level, parentItem: value.parentItem, uniqueID: value.uniqueID,\n                taskData: value.taskData, parentUniqueID: isNullOrUndefined(value.parentItem) ? undefined : value.parentItem.uniqueID,\n                childRecords: value.childRecords };\n        }\n        if (args.requestType === 'delete') {\n            var deletedValues = args.data;\n            for (var i = 0; i < deletedValues.length; i++) {\n                if (deletedValues[i].parentItem) {\n                    var parentItem = getParentData(this.parent, deletedValues[i].parentItem.uniqueID);\n                    if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                        var childIndex = parentItem.childRecords.indexOf(deletedValues[i]);\n                        parentItem.childRecords.splice(childIndex, 1);\n                    }\n                }\n            }\n        }\n        return args;\n    };\n    /**\n     * If the data,index and position given, Adds the record to treegrid rows otherwise it will create edit form.\n     *\n     * @returns {void}\n     */\n    Edit.prototype.addRecord = function (data, index, position) {\n        if (this.parent.editSettings.newRowPosition === this.previousNewRowPosition || this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n        if (!this.isSelfReference && !isNullOrUndefined(data) && Object.hasOwnProperty.call(data, this.parent.childMapping)) {\n            var addRecords = [];\n            var previousEditMode = this.parent.editSettings.mode;\n            var previousGridEditMode = this.parent.grid.editSettings.mode;\n            addRecords.push(data);\n            this.parent.setProperties({ editSettings: { mode: 'Batch' } }, true);\n            this.parent.grid.setProperties({ editSettings: { mode: 'Batch' } }, true);\n            if (!isNullOrUndefined(position)) {\n                this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n            }\n            var updatedRecords = { addedRecords: addRecords, changedRecords: [], deletedRecords: [] };\n            this.parent.notify(events.batchSave, { updatedRecords: updatedRecords, index: index });\n            this.parent.setProperties({ editSettings: { mode: previousEditMode } }, true);\n            this.parent.grid.setProperties({ editSettings: { mode: previousGridEditMode } }, true);\n            this.parent.refresh();\n        }\n        else {\n            if (data) {\n                if (index > -1) {\n                    this.selectedIndex = index;\n                    this.addRowIndex = index;\n                }\n                else {\n                    this.selectedIndex = this.parent.selectedRowIndex;\n                    this.addRowIndex = this.parent.selectedRowIndex;\n                }\n                if (position) {\n                    this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n                }\n                this.parent.grid.editModule.addRecord(data, index);\n            }\n            else {\n                this.parent.grid.editModule.addRecord(data, index);\n            }\n        }\n    };\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     *\n     * @returns {boolean} Returns form validation results\n     */\n    Edit.prototype.editFormValidate = function () {\n        return this.parent.grid.editModule.editFormValidate();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.destroyForm = function () {\n        this.parent.grid.editModule.destroyForm();\n    };\n    Edit.prototype.contentready = function (e) {\n        if (!isNullOrUndefined(e.args.requestType)\n            && (e.args.requestType.toString() === 'delete' || e.args.requestType.toString() === 'save'\n                || (this.parent.editSettings.mode === 'Batch' && e.args.requestType.toString() === 'batchsave'))) {\n            this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n                if (this.parent.grid.dataSource.length === this.parent.getMovableDataRows().length) {\n                    this.updateIndex(this.parent.grid.dataSource, this.parent.getMovableDataRows(), this.parent.getCurrentViewRecords());\n                }\n            }\n        }\n    };\n    /**\n     * If the row index and field is given, edits the particular cell in a row.\n     *\n     * @returns {void}\n     */\n    Edit.prototype.editCell = function (rowIndex, field) {\n        if (this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch') {\n            if (this.parent.editSettings.mode !== 'Batch') {\n                this.isOnBatch = true;\n                this.updateGridEditMode('Batch');\n            }\n            this.parent.grid.editModule.editCell(rowIndex, field);\n        }\n    };\n    return Edit;\n}());\nexport { Edit };\n"]},"metadata":{},"sourceType":"module"}