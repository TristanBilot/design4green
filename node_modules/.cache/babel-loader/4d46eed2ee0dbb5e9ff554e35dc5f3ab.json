{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { Component, ChildProperty, Browser, closest, extend } from '@syncfusion/ej2-base';\nimport { addClass, removeClass, append, remove, classList, setStyleAttribute } from '@syncfusion/ej2-base';\nimport { Property, Collection, Complex, Event, NotifyPropertyChanges, L10n } from '@syncfusion/ej2-base';\nimport { EventHandler, KeyboardEvents } from '@syncfusion/ej2-base';\nimport { DataManager, DataUtil, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner, Tooltip } from '@syncfusion/ej2-popups';\nimport { iterateArrayOrObject, prepareColumns, parentsUntil, wrap, templateCompiler, isGroupAdaptive, refreshForeignData } from './util';\nimport { getRowHeight, setColumnIndex, Global, ispercentageWidth, renderMovable, getNumberFormat } from './util';\nimport { setRowElements, resetRowIndex, compareChanges, getCellByColAndRowIndex, performComplexDataOperation } from './util';\nimport * as events from '../base/constant';\nimport { Render } from '../renderer/render';\nimport { RenderType } from './enum';\nimport { RowRenderer } from '../renderer/row-renderer';\nimport { CellRenderer } from '../renderer/cell-renderer';\nimport { CellRendererFactory } from '../services/cell-render-factory';\nimport { ServiceLocator } from '../services/service-locator';\nimport { ValueFormatter } from '../services/value-formatter';\nimport { RendererFactory } from '../services/renderer-factory';\nimport { ColumnWidthService } from '../services/width-controller';\nimport { AriaService } from '../services/aria-service';\nimport { FocusStrategy } from '../services/focus-strategy';\nimport { PageSettings } from '../models/page-settings';\nimport { ColumnChooserSettings } from '../models/column-chooser-settings';\nimport { Selection } from '../actions/selection';\nimport { Search } from '../actions/search';\nimport { ShowHide } from '../actions/show-hide';\nimport { Scroll } from '../actions/scroll';\nimport { Print } from '../actions/print';\nimport { AggregateRow } from '../models/aggregate';\nimport { Clipboard } from '../actions/clipboard';\nimport { RowModelGenerator } from '../services/row-model-generator';\nimport * as literals from '../base/string-literals';\n/**\n * Represents the field name and direction of sort column.\n */\n\nvar SortDescriptor =\n/** @class */\nfunction (_super) {\n  __extends(SortDescriptor, _super);\n\n  function SortDescriptor() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property()], SortDescriptor.prototype, \"field\", void 0);\n\n  __decorate([Property()], SortDescriptor.prototype, \"direction\", void 0);\n\n  __decorate([Property(false)], SortDescriptor.prototype, \"isFromGroup\", void 0);\n\n  return SortDescriptor;\n}(ChildProperty);\n\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of Grid.\n */\n\nvar SortSettings =\n/** @class */\nfunction (_super) {\n  __extends(SortSettings, _super);\n\n  function SortSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Collection([], SortDescriptor)], SortSettings.prototype, \"columns\", void 0);\n\n  __decorate([Property(true)], SortSettings.prototype, \"allowUnsort\", void 0);\n\n  return SortSettings;\n}(ChildProperty);\n\nexport { SortSettings };\n/**\n * Represents the predicate for the filter column.\n */\n\nvar Predicate =\n/** @class */\nfunction (_super) {\n  __extends(Predicate, _super);\n\n  function Predicate() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property()], Predicate.prototype, \"field\", void 0);\n\n  __decorate([Property()], Predicate.prototype, \"operator\", void 0);\n\n  __decorate([Property()], Predicate.prototype, \"value\", void 0);\n\n  __decorate([Property()], Predicate.prototype, \"matchCase\", void 0);\n\n  __decorate([Property(false)], Predicate.prototype, \"ignoreAccent\", void 0);\n\n  __decorate([Property()], Predicate.prototype, \"predicate\", void 0);\n\n  __decorate([Property({})], Predicate.prototype, \"actualFilterValue\", void 0);\n\n  __decorate([Property({})], Predicate.prototype, \"actualOperator\", void 0);\n\n  __decorate([Property()], Predicate.prototype, \"type\", void 0);\n\n  __decorate([Property()], Predicate.prototype, \"ejpredicate\", void 0);\n\n  __decorate([Property()], Predicate.prototype, \"uid\", void 0);\n\n  __decorate([Property()], Predicate.prototype, \"isForeignKey\", void 0);\n\n  return Predicate;\n}(ChildProperty);\n\nexport { Predicate };\n/**\n * Configures the infinite scroll behavior of Grid.\n */\n\nvar InfiniteScrollSettings =\n/** @class */\nfunction (_super) {\n  __extends(InfiniteScrollSettings, _super);\n\n  function InfiniteScrollSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property(false)], InfiniteScrollSettings.prototype, \"enableCache\", void 0);\n\n  __decorate([Property(3)], InfiniteScrollSettings.prototype, \"maxBlocks\", void 0);\n\n  __decorate([Property(3)], InfiniteScrollSettings.prototype, \"initialBlocks\", void 0);\n\n  return InfiniteScrollSettings;\n}(ChildProperty);\n\nexport { InfiniteScrollSettings };\n/**\n * Configures the filtering behavior of the Grid.\n */\n\nvar FilterSettings =\n/** @class */\nfunction (_super) {\n  __extends(FilterSettings, _super);\n\n  function FilterSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Collection([], Predicate)], FilterSettings.prototype, \"columns\", void 0);\n\n  __decorate([Property('FilterBar')], FilterSettings.prototype, \"type\", void 0);\n\n  __decorate([Property()], FilterSettings.prototype, \"mode\", void 0);\n\n  __decorate([Property(true)], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n\n  __decorate([Property(1500)], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n\n  __decorate([Property()], FilterSettings.prototype, \"operators\", void 0);\n\n  __decorate([Property(false)], FilterSettings.prototype, \"ignoreAccent\", void 0);\n\n  __decorate([Property(false)], FilterSettings.prototype, \"enableCaseSensitivity\", void 0);\n\n  __decorate([Property(false)], FilterSettings.prototype, \"showFilterBarOperator\", void 0);\n\n  return FilterSettings;\n}(ChildProperty);\n\nexport { FilterSettings };\n/**\n * Configures the selection behavior of the Grid.\n */\n\nvar SelectionSettings =\n/** @class */\nfunction (_super) {\n  __extends(SelectionSettings, _super);\n\n  function SelectionSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property('Row')], SelectionSettings.prototype, \"mode\", void 0);\n\n  __decorate([Property('Flow')], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n\n  __decorate([Property('Single')], SelectionSettings.prototype, \"type\", void 0);\n\n  __decorate([Property(false)], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n\n  __decorate([Property(false)], SelectionSettings.prototype, \"persistSelection\", void 0);\n\n  __decorate([Property('Default')], SelectionSettings.prototype, \"checkboxMode\", void 0);\n\n  __decorate([Property(false)], SelectionSettings.prototype, \"enableSimpleMultiRowSelection\", void 0);\n\n  __decorate([Property(true)], SelectionSettings.prototype, \"enableToggle\", void 0);\n\n  __decorate([Property(false)], SelectionSettings.prototype, \"allowColumnSelection\", void 0);\n\n  return SelectionSettings;\n}(ChildProperty);\n\nexport { SelectionSettings };\n/**\n * Configures the search behavior of the Grid.\n */\n\nvar SearchSettings =\n/** @class */\nfunction (_super) {\n  __extends(SearchSettings, _super);\n\n  function SearchSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property([])], SearchSettings.prototype, \"fields\", void 0);\n\n  __decorate([Property('')], SearchSettings.prototype, \"key\", void 0);\n\n  __decorate([Property('contains')], SearchSettings.prototype, \"operator\", void 0);\n\n  __decorate([Property(true)], SearchSettings.prototype, \"ignoreCase\", void 0);\n\n  __decorate([Property(false)], SearchSettings.prototype, \"ignoreAccent\", void 0);\n\n  return SearchSettings;\n}(ChildProperty);\n\nexport { SearchSettings };\n/**\n * Configures the row drop settings of the Grid.\n */\n\nvar RowDropSettings =\n/** @class */\nfunction (_super) {\n  __extends(RowDropSettings, _super);\n\n  function RowDropSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property()], RowDropSettings.prototype, \"targetID\", void 0);\n\n  return RowDropSettings;\n}(ChildProperty);\n\nexport { RowDropSettings };\n/**\n * Configures the text wrap settings of the Grid.\n */\n\nvar TextWrapSettings =\n/** @class */\nfunction (_super) {\n  __extends(TextWrapSettings, _super);\n\n  function TextWrapSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property('Both')], TextWrapSettings.prototype, \"wrapMode\", void 0);\n\n  return TextWrapSettings;\n}(ChildProperty);\n\nexport { TextWrapSettings };\n/**\n * Configures the resize behavior of the Grid.\n */\n\nvar ResizeSettings =\n/** @class */\nfunction (_super) {\n  __extends(ResizeSettings, _super);\n\n  function ResizeSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property('Normal')], ResizeSettings.prototype, \"mode\", void 0);\n\n  return ResizeSettings;\n}(ChildProperty);\n\nexport { ResizeSettings };\n/**\n * Configures the group behavior of the Grid.\n */\n\nvar GroupSettings =\n/** @class */\nfunction (_super) {\n  __extends(GroupSettings, _super);\n\n  function GroupSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property(true)], GroupSettings.prototype, \"showDropArea\", void 0);\n\n  __decorate([Property(false)], GroupSettings.prototype, \"allowReordering\", void 0);\n\n  __decorate([Property(false)], GroupSettings.prototype, \"showToggleButton\", void 0);\n\n  __decorate([Property(false)], GroupSettings.prototype, \"showGroupedColumn\", void 0);\n\n  __decorate([Property(true)], GroupSettings.prototype, \"showUngroupButton\", void 0);\n\n  __decorate([Property(false)], GroupSettings.prototype, \"disablePageWiseAggregates\", void 0);\n\n  __decorate([Property([])], GroupSettings.prototype, \"columns\", void 0);\n\n  __decorate([Property()], GroupSettings.prototype, \"captionTemplate\", void 0);\n\n  __decorate([Property(false)], GroupSettings.prototype, \"enableLazyLoading\", void 0);\n\n  return GroupSettings;\n}(ChildProperty);\n\nexport { GroupSettings };\n/**\n * Configures the edit behavior of the Grid.\n */\n\nvar EditSettings =\n/** @class */\nfunction (_super) {\n  __extends(EditSettings, _super);\n\n  function EditSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property(false)], EditSettings.prototype, \"allowAdding\", void 0);\n\n  __decorate([Property(false)], EditSettings.prototype, \"allowEditing\", void 0);\n\n  __decorate([Property(false)], EditSettings.prototype, \"allowDeleting\", void 0);\n\n  __decorate([Property('Normal')], EditSettings.prototype, \"mode\", void 0);\n\n  __decorate([Property(true)], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n\n  __decorate([Property(true)], EditSettings.prototype, \"showConfirmDialog\", void 0);\n\n  __decorate([Property(false)], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n\n  __decorate([Property('')], EditSettings.prototype, \"template\", void 0);\n\n  __decorate([Property('')], EditSettings.prototype, \"headerTemplate\", void 0);\n\n  __decorate([Property('')], EditSettings.prototype, \"footerTemplate\", void 0);\n\n  __decorate([Property('Top')], EditSettings.prototype, \"newRowPosition\", void 0);\n\n  __decorate([Property({})], EditSettings.prototype, \"dialog\", void 0);\n\n  __decorate([Property(false)], EditSettings.prototype, \"allowNextRowEdit\", void 0);\n\n  return EditSettings;\n}(ChildProperty);\n\nexport { EditSettings };\n/**\n * Represents the Grid component.\n * ```html\n * <div id=\"grid\"></div>\n * <script>\n *  var gridObj = new Grid({ allowPaging: true });\n *  gridObj.appendTo(\"#grid\");\n * </script>\n * ```\n */\n\nvar Grid =\n/** @class */\nfunction (_super) {\n  __extends(Grid, _super);\n  /**\n   * Constructor for creating the component\n   *\n   * @param {GridModel} options - specifies the options\n   * @param {string | HTMLElement} element - specifies the element\n   * @hidden\n   */\n\n\n  function Grid(options, element) {\n    var _this = _super.call(this, options, element) || this;\n\n    _this.isPreventScrollEvent = false;\n    _this.inViewIndexes = [];\n    _this.keyA = false;\n    _this.frozenRightCount = 0;\n    _this.frozenLeftCount = 0;\n    _this.tablesCount = 1;\n    _this.movableCount = 0;\n    _this.visibleFrozenLeft = 0;\n    _this.visibleFrozenRight = 0;\n    _this.visibleMovable = 0;\n    _this.frozenLeftColumns = [];\n    _this.frozenRightColumns = [];\n    _this.movableColumns = [];\n    _this.media = {};\n    _this.isFreezeRefresh = false;\n    /** @hidden */\n\n    _this.tableIndex = 0;\n    _this.componentRefresh = Component.prototype.refresh;\n    /** @hidden */\n\n    _this.isVirtualAdaptive = false;\n    /** @hidden */\n\n    _this.vRows = [];\n    /** @hidden */\n\n    _this.vcRows = [];\n    /** @hidden */\n\n    _this.vGroupOffsets = {};\n    /** @hidden */\n\n    _this.rowUid = 0;\n    /**\n     * Gets the currently visible records of the Grid.\n     */\n\n    _this.currentViewData = [];\n    /** @hidden */\n\n    _this.isManualRefresh = false;\n    /** @hidden */\n\n    _this.enableDeepCompare = false;\n    /** @hidden */\n\n    _this.lockcolPositionCount = 0;\n    /** @hidden */\n\n    _this.prevPageMoving = false;\n    /** @hidden */\n\n    _this.pageTemplateChange = false;\n    /** @hidden */\n\n    _this.isAutoGen = false;\n    _this.mediaBindInstance = {};\n    /** @hidden */\n\n    _this.commandDelIndex = undefined;\n    /** @hidden */\n\n    _this.asyncTimeOut = 50;\n    /** @hidden */\n\n    _this.isExportGrid = false; // enable/disable logger for MVC & Core\n\n    _this.enableLogger = true;\n    _this.needsID = true;\n    Grid_1.Inject(Selection);\n    setValue('mergePersistData', _this.mergePersistGridData, _this);\n    return _this;\n  }\n\n  Grid_1 = Grid;\n  /**\n   * Get the properties to be maintained in the persisted state.\n   *\n   * @returns {string} returns the persist data\n   */\n\n  Grid.prototype.getPersistData = function () {\n    var keyEntity = ['pageSettings', 'sortSettings', 'filterSettings', 'groupSettings', 'columns', 'searchSettings', 'selectedRowIndex', 'scrollPosition'];\n    var ignoreOnPersist = {\n      pageSettings: ['template', 'pageSizes', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n      filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent'],\n      groupSettings: ['showDropArea', 'showToggleButton', 'showGroupedColumn', 'showUngroupButton', 'disablePageWiseAggregates', 'hideCaptionCount'],\n      searchSettings: ['fields', 'operator', 'ignoreCase'],\n      sortSettings: [],\n      columns: [],\n      selectedRowIndex: [],\n      scrollPosition: []\n    };\n\n    for (var i = 0; i < keyEntity.length; i++) {\n      var currentObject = this[keyEntity[i]];\n\n      for (var _i = 0, _a = ignoreOnPersist[keyEntity[i]]; _i < _a.length; _i++) {\n        var val = _a[_i];\n        delete currentObject[val];\n      }\n    }\n\n    var temp = this.pageSettings.template;\n    var settings = Object.assign({\n      template: undefined\n    }, this.pageSettings);\n    this.setProperties({\n      pageSettings: settings\n    }, true); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n    if (this.isAngular) {\n      delete this.groupSettings['properties']['captionTemplate'];\n    }\n\n    this.pageTemplateChange = !isNullOrUndefined(this.pagerTemplate);\n    var persistData = this.addOnPersist(keyEntity);\n    settings.template = temp;\n    this.setProperties({\n      pageSettings: settings\n    }, true);\n    return persistData;\n  };\n  /**\n   * To provide the array of modules needed for component rendering\n   *\n   * @returns {ModuleDeclaration[]} Returns the module Declaration\n   * @hidden\n   */\n\n\n  Grid.prototype.requiredModules = function () {\n    this.setFrozenCount();\n    this.enableInfiniteAggrgate();\n    var modules = [];\n\n    if (this.isDestroyed) {\n      return modules;\n    }\n\n    if (this.allowFiltering) {\n      modules.push({\n        member: 'filter',\n        args: [this, this.filterSettings, this.serviceLocator]\n      });\n    }\n\n    if (this.allowExcelExport) {\n      modules.push({\n        member: 'ExcelExport',\n        args: [this, this.serviceLocator]\n      });\n    }\n\n    if (this.allowPdfExport) {\n      modules.push({\n        member: 'PdfExport',\n        args: [this]\n      });\n    }\n\n    if (this.allowSorting) {\n      modules.push({\n        member: 'sort',\n        args: [this, this.sortSettings, this.sortedColumns, this.serviceLocator]\n      });\n    }\n\n    if (this.allowPaging) {\n      modules.push({\n        member: 'pager',\n        args: [this, this.pageSettings]\n      });\n    }\n\n    if (this.allowSelection) {\n      modules.push({\n        member: 'selection',\n        args: [this, this.selectionSettings, this.serviceLocator]\n      });\n    }\n\n    modules.push({\n      member: 'resize',\n      args: [this]\n    });\n\n    if (this.allowReordering) {\n      modules.push({\n        member: 'reorder',\n        args: [this]\n      });\n    }\n\n    if (this.allowRowDragAndDrop) {\n      modules.push({\n        member: 'rowDragAndDrop',\n        args: [this]\n      });\n    }\n\n    if (this.allowGrouping) {\n      modules.push({\n        member: 'group',\n        args: [this, this.groupSettings, this.sortedColumns, this.serviceLocator]\n      });\n    }\n\n    if (this.aggregates.length) {\n      modules.push({\n        member: 'aggregate',\n        args: [this, this.serviceLocator]\n      });\n    }\n\n    if (this.isDetail()) {\n      modules.push({\n        member: 'detailRow',\n        args: [this, this.serviceLocator]\n      });\n    }\n\n    if (this.toolbar || this.toolbarTemplate) {\n      modules.push({\n        member: 'toolbar',\n        args: [this, this.serviceLocator]\n      });\n    }\n\n    if (this.enableVirtualization || this.enableColumnVirtualization) {\n      modules.push({\n        member: 'virtualscroll',\n        args: [this, this.serviceLocator]\n      });\n    }\n\n    if (this.getFrozenColumns() || this.frozenRows || this.frozenRightCount || this.frozenLeftCount) {\n      modules.push({\n        member: 'freeze',\n        args: [this, this.serviceLocator]\n      });\n    }\n\n    if (this.isCommandColumn(this.columns)) {\n      modules.push({\n        member: 'commandColumn',\n        args: [this, this.serviceLocator]\n      });\n    }\n\n    if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n      modules.push({\n        member: 'edit',\n        args: [this, this.serviceLocator]\n      });\n    }\n\n    this.extendRequiredModules(modules);\n    return modules;\n  };\n\n  Grid.prototype.extendRequiredModules = function (modules) {\n    if (this.enableInfiniteScrolling) {\n      modules.push({\n        member: 'infiniteScroll',\n        args: [this, this.serviceLocator]\n      });\n    }\n\n    if (this.groupSettings.enableLazyLoading) {\n      modules.push({\n        member: 'lazyLoadGroup',\n        args: [this, this.serviceLocator]\n      });\n    }\n\n    if (this.contextMenuItems) {\n      modules.push({\n        member: 'contextMenu',\n        args: [this, this.serviceLocator]\n      });\n    }\n\n    if (this.showColumnMenu) {\n      modules.push({\n        member: 'columnMenu',\n        args: [this, this.serviceLocator]\n      });\n    }\n\n    if (this.showColumnChooser) {\n      modules.push({\n        member: 'columnChooser',\n        args: [this, this.serviceLocator]\n      });\n    }\n\n    if (this.isForeignKeyEnabled(this.columns)) {\n      modules.push({\n        member: 'foreignKey',\n        args: [this, this.serviceLocator]\n      });\n    }\n\n    if (this.enableLogger) {\n      modules.push({\n        member: 'logger',\n        args: [this]\n      });\n    }\n  };\n  /**\n   * For internal use only - Initialize the event handler;\n   *\n   * @returns {void}\n   * @private\n   */\n\n\n  Grid.prototype.preRender = function () {\n    this.serviceLocator = new ServiceLocator();\n    this.initProperties();\n    this.initializeServices();\n  };\n\n  Grid.prototype.initProperties = function () {\n    this.isInitial = true;\n    this.sortedColumns = [];\n    this.inViewIndexes = [];\n    this.mediaCol = [];\n    this.isInitialLoad = false;\n    this.allowServerDataBinding = false;\n    this.ignoreCollectionWatch = true;\n    this.mergeCells = {};\n    this.isEdit = false;\n    this.checkAllRows = 'None';\n    this.isCheckBoxSelection = false;\n    this.isPersistSelection = false;\n    this.componentRefresh = Component.prototype.refresh;\n    this.filterOperators = {\n      contains: 'contains',\n      endsWith: 'endswith',\n      equal: 'equal',\n      greaterThan: 'greaterthan',\n      greaterThanOrEqual: 'greaterthanorequal',\n      lessThan: 'lessthan',\n      lessThanOrEqual: 'lessthanorequal',\n      notEqual: 'notequal',\n      startsWith: 'startswith'\n    };\n    this.defaultLocale = {\n      EmptyRecord: 'No records to display',\n      True: 'true',\n      False: 'false',\n      InvalidFilterMessage: 'Invalid Filter Data',\n      GroupDropArea: 'Drag a column header here to group its column',\n      UnGroup: 'Click here to ungroup',\n      UnGroupButton: 'Click here to ungroup',\n      GroupDisable: 'Grouping is disabled for this column',\n      FilterbarTitle: '\\'s filter bar cell',\n      EmptyDataSourceError: 'DataSource must not be empty at initial load since columns are generated from dataSource in AutoGenerate Column Grid',\n      // Toolbar Items\n      Add: 'Add',\n      Edit: 'Edit',\n      Cancel: 'Cancel',\n      Update: 'Update',\n      Delete: 'Delete',\n      Print: 'Print',\n      Pdfexport: 'PDF Export',\n      Excelexport: 'Excel Export',\n      Wordexport: 'Word Export',\n      Csvexport: 'CSV Export',\n      Search: 'Search',\n      Columnchooser: 'Columns',\n      Save: 'Save',\n      Item: 'item',\n      Items: 'items',\n      EditOperationAlert: 'No records selected for edit operation',\n      DeleteOperationAlert: 'No records selected for delete operation',\n      SaveButton: 'Save',\n      OKButton: 'OK',\n      CancelButton: 'Cancel',\n      EditFormTitle: 'Details of ',\n      AddFormTitle: 'Add New Record',\n      BatchSaveConfirm: 'Are you sure you want to save changes?',\n      BatchSaveLostChanges: 'Unsaved changes will be lost. Are you sure you want to continue?',\n      ConfirmDelete: 'Are you sure you want to Delete Record?',\n      CancelEdit: 'Are you sure you want to Cancel the changes?',\n      ChooseColumns: 'Choose Column',\n      SearchColumns: 'search columns',\n      Matchs: 'No matches found',\n      FilterButton: 'Filter',\n      ClearButton: 'Clear',\n      StartsWith: 'Starts With',\n      EndsWith: 'Ends With',\n      Contains: 'Contains',\n      Equal: 'Equal',\n      NotEqual: 'Not Equal',\n      LessThan: 'Less Than',\n      LessThanOrEqual: 'Less Than Or Equal',\n      GreaterThan: 'Greater Than',\n      GreaterThanOrEqual: 'Greater Than Or Equal',\n      ChooseDate: 'Choose a Date',\n      EnterValue: 'Enter the value',\n      Copy: 'Copy',\n      Group: 'Group by this column',\n      Ungroup: 'Ungroup by this column',\n      autoFitAll: 'Autofit all columns',\n      autoFit: 'Autofit this column',\n      AutoFitAll: 'Autofit all columns',\n      AutoFit: 'Autofit this column',\n      Export: 'Export',\n      FirstPage: 'First Page',\n      LastPage: 'Last Page',\n      PreviousPage: 'Previous Page',\n      NextPage: 'Next Page',\n      SortAscending: 'Sort Ascending',\n      SortDescending: 'Sort Descending',\n      EditRecord: 'Edit Record',\n      DeleteRecord: 'Delete Record',\n      FilterMenu: 'Filter',\n      SelectAll: 'Select All',\n      Blanks: 'Blanks',\n      FilterTrue: 'True',\n      FilterFalse: 'False',\n      NoResult: 'No matches found',\n      ClearFilter: 'Clear Filter',\n      Clear: 'Clear',\n      NumberFilter: 'Number Filters',\n      TextFilter: 'Text Filters',\n      DateFilter: 'Date Filters',\n      DateTimeFilter: 'DateTime Filters',\n      MatchCase: 'Match Case',\n      Between: 'Between',\n      CustomFilter: 'Custom Filter',\n      CustomFilterPlaceHolder: 'Enter the value',\n      CustomFilterDatePlaceHolder: 'Choose a date',\n      AND: 'AND',\n      OR: 'OR',\n      ShowRowsWhere: 'Show rows where:',\n      FilterMenuDialogARIA: 'Filter menu dialog',\n      ExcelFilterDialogARIA: 'Excel filter dialog',\n      DialogEditARIA: 'Edit dialog',\n      ColumnChooserDialogARIA: 'Column chooser dialog',\n      ColumnMenuDialogARIA: 'Column menu dialog',\n      CustomFilterDialogARIA: 'Customer filter dialog',\n      SortAtoZ: 'Sort A to Z',\n      SortZtoA: 'Sort Z to A',\n      SortByOldest: 'Sort by Oldest',\n      SortByNewest: 'Sort by Newest',\n      SortSmallestToLargest: 'Sort Smallest to Largest',\n      SortLargestToSmallest: 'Sort Largest to Smallest',\n      Sort: 'Sort'\n    };\n    this.keyConfigs = {\n      downArrow: 'downarrow',\n      upArrow: 'uparrow',\n      rightArrow: 'rightarrow',\n      leftArrow: 'leftarrow',\n      shiftDown: 'shift+downarrow',\n      shiftUp: 'shift+uparrow',\n      shiftRight: 'shift+rightarrow',\n      shiftLeft: 'shift+leftarrow',\n      home: 'home',\n      end: 'end',\n      escape: 'escape',\n      ctrlHome: 'ctrl+home',\n      ctrlEnd: 'ctrl+end',\n      pageUp: 'pageup',\n      pageDown: 'pagedown',\n      ctrlAltPageUp: 'ctrl+alt+pageup',\n      ctrlAltPageDown: 'ctrl+alt+pagedown',\n      altPageUp: 'alt+pageup',\n      altPageDown: 'alt+pagedown',\n      altDownArrow: 'alt+downarrow',\n      altUpArrow: 'alt+uparrow',\n      ctrlDownArrow: 'ctrl+downarrow',\n      ctrlUpArrow: 'ctrl+uparrow',\n      ctrlPlusA: 'ctrl+A',\n      ctrlPlusP: 'ctrl+P',\n      insert: 'insert',\n      delete: 'delete',\n      f2: 'f2',\n      enter: 'enter',\n      ctrlEnter: 'ctrl+enter',\n      shiftEnter: 'shift+enter',\n      tab: 'tab',\n      shiftTab: 'shift+tab',\n      space: 'space',\n      ctrlPlusC: 'ctrl+C',\n      ctrlShiftPlusH: 'ctrl+shift+H',\n      ctrlSpace: 'ctrl+space',\n      ctrlLeftArrow: 'ctrl+leftarrow',\n      ctrlRightArrow: 'ctrl+rightarrow'\n    };\n  };\n  /**\n   * For internal use only - To Initialize the component rendering.\n   *\n   * @returns {void}\n   * @private\n   */\n\n\n  Grid.prototype.render = function () {\n    this.log(['module_missing', 'promise_enabled', 'locale_missing', 'check_datasource_columns']);\n    this.ariaService.setOptions(this.element, {\n      role: 'grid'\n    });\n    createSpinner({\n      target: this.element\n    }, this.createElement);\n    this.renderModule = new Render(this, this.serviceLocator);\n    this.searchModule = new Search(this);\n    this.scrollModule = new Scroll(this);\n    this.notify(events.initialLoad, {});\n\n    if (this.getDataModule().dataManager.dataSource.offline === true || this.getDataModule().dataManager.dataSource.url === undefined) {\n      this.isVirtualAdaptive = true;\n    }\n\n    this.trigger(events.load);\n    prepareColumns(this.columns, this.enableColumnVirtualization, this);\n\n    if (this.enablePersistence) {\n      this.notify(events.columnsPrepared, {});\n    }\n\n    this.getMediaColumns();\n    setColumnIndex(this.columns);\n    this.checkLockColumns(this.columns);\n    this.getColumns();\n    this.processModel();\n    this.gridRender();\n    this.wireEvents();\n    this.addListener();\n    this.updateDefaultCursor();\n    this.updateStackedFilter();\n    this.showSpinner();\n    this.notify(events.initialEnd, {});\n  };\n  /**\n   * By default, grid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n   *\n   * @returns {void}\n   */\n\n\n  Grid.prototype.showSpinner = function () {\n    if (!this.isExportGrid) {\n      showSpinner(this.element);\n    }\n  };\n  /**\n   * By default, grid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n   *\n   * @returns {void}\n   */\n\n\n  Grid.prototype.hideSpinner = function () {\n    if (!this.isExportGrid) {\n      hideSpinner(this.element);\n    }\n  };\n\n  Grid.prototype.updateStackedFilter = function () {\n    if (this.allowFiltering && this.filterSettings.type === 'FilterBar' && this.getHeaderContent().getElementsByClassName('e-stackedheadercell').length) {\n      this.getHeaderContent().classList.add('e-stackedfilter');\n    } else {\n      this.getHeaderContent().classList.remove('e-stackedfilter');\n    }\n  };\n\n  Grid.prototype.getMediaColumns = function () {\n    if (!this.enableColumnVirtualization) {\n      var gcol = this.getColumns();\n      this.getShowHideService = this.serviceLocator.getService('showHideService');\n\n      if (!isNullOrUndefined(gcol)) {\n        for (var index = 0; index < gcol.length; index++) {\n          if (!isNullOrUndefined(gcol[index].hideAtMedia) && (isNullOrUndefined(gcol[index].visible) || gcol[index].visible)) {\n            this.pushMediaColumn(gcol[index], index);\n          }\n        }\n      }\n    }\n  };\n\n  Grid.prototype.pushMediaColumn = function (col, index) {\n    this.mediaCol.push(col);\n    this.media[col.uid] = window.matchMedia(col.hideAtMedia);\n    this.mediaQueryUpdate(index, this.media[col.uid]);\n    this.mediaBindInstance[index] = this.mediaQueryUpdate.bind(this, index);\n    this.media[col.uid].addListener(this.mediaBindInstance[index]);\n  };\n  /**\n   * @param {Column} col - specifies the column\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Grid.prototype.updateMediaColumns = function (col) {\n    if (!this.enableColumnVirtualization) {\n      var index = this.getColumnIndexByUid(col.uid);\n\n      for (var i = 0; i < this.mediaCol.length; i++) {\n        if (col.uid === this.mediaCol[i].uid) {\n          this.mediaCol.splice(i, 1);\n          return;\n        }\n      }\n\n      this.pushMediaColumn(col, index);\n    }\n  };\n  /**\n   * @param {number} columnIndex - specifies the column index\n   * @param {MediaQueryList} e - specifies the MediaQueryList\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Grid.prototype.mediaQueryUpdate = function (columnIndex, e) {\n    var col = this.getColumns()[columnIndex];\n\n    if (this.mediaCol.some(function (mediaColumn) {\n      return mediaColumn.uid === col.uid;\n    })) {\n      col.visible = e.matches;\n\n      if (this.isInitialLoad) {\n        this.invokedFromMedia = true;\n\n        if (col.visible) {\n          this.showHider.show(col.headerText, 'headerText');\n        } else {\n          this.showHider.hide(col.headerText, 'headerText');\n        }\n      }\n    }\n  };\n\n  Grid.prototype.refreshMediaCol = function () {\n    this.isInitialLoad = true;\n    var footerContent = this.element.querySelector('.' + literals.gridFooter);\n\n    if (this.aggregates.length && this.element.scrollHeight > this.height && footerContent) {\n      addClass([footerContent], ['e-footerpadding']);\n    }\n\n    var checkboxColumn = this.getColumns().filter(function (col) {\n      return col.type === 'checkbox';\n    });\n\n    if (checkboxColumn.length && this.selectionSettings.checkboxMode === 'ResetOnRowClick') {\n      this.isCheckBoxSelection = false;\n    }\n\n    if (this.rowRenderingMode === 'Vertical') {\n      if (this.enableHover) {\n        this.setProperties({\n          enableAdaptiveUI: true,\n          enableHover: false\n        }, true);\n        removeClass([this.element], 'e-gridhover');\n      }\n    }\n\n    if (this.enableAdaptiveUI && this.scrollModule) {\n      this.scrollModule.refresh();\n    }\n  };\n\n  Grid.prototype.removeMediaListener = function () {\n    for (var i = 0; i < this.mediaCol.length; i++) {\n      this.media[this.mediaCol[i].uid].removeListener(this.mediaBindInstance[this.mediaCol[i].index]);\n    }\n  };\n  /**\n   * For internal use only - Initialize the event handler\n   *\n   * @returns {void}\n   * @private\n   */\n\n\n  Grid.prototype.eventInitializer = function () {//eventInitializer\n  };\n  /**\n   * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n   *\n   * @function destroy\n   * @returns {void}\n   */\n\n\n  Grid.prototype.destroy = function () {\n    var gridElement = this.element;\n\n    if (!gridElement) {\n      return;\n    }\n\n    var hasGridChild = gridElement.querySelector('.' + literals.gridHeader) && gridElement.querySelector('.' + literals.gridContent) ? true : false;\n\n    if (hasGridChild) {\n      this.unwireEvents();\n    }\n\n    this.removeListener();\n    this.removeMediaListener();\n    this.notify(events.destroy, {});\n    this.destroyDependentModules();\n    this.destroyTemplate(['template']);\n\n    if (hasGridChild) {\n      _super.prototype.destroy.call(this);\n    }\n\n    this.toolTipObj.destroy();\n    var modules = ['renderModule', 'headerModule', 'contentModule', 'valueFormatterService', 'serviceLocator', 'ariaService', 'keyboardModule', 'widthService', 'searchModule', 'showHider', 'scrollModule', 'printModule', 'clipboardModule', 'focusModule'];\n\n    for (var i = 0; i < modules.length; i++) {\n      if (this[modules[i]]) {\n        this[modules[i]] = null;\n      }\n    }\n\n    this.element.innerHTML = '';\n    classList(this.element, [], ['e-rtl', 'e-gridhover', 'e-responsive', 'e-default', 'e-device', 'e-grid-min-height']);\n    this.isFreezeRefresh = false;\n  };\n\n  Grid.prototype.destroyDependentModules = function () {\n    var gridElement = this.element;\n\n    if (!gridElement || !gridElement.querySelector('.' + literals.gridHeader) && !gridElement.querySelector('.' + literals.gridContent)) {\n      return;\n    }\n\n    this.scrollModule.destroy();\n    this.keyboardModule.destroy();\n    this.focusModule.destroy();\n    this.clipboardModule.destroy();\n    this.printModule.destroy();\n  };\n  /**\n   * For internal use only - Get the module name.\n   *\n   * @returns {string} returns the module name\n   * @private\n   */\n\n\n  Grid.prototype.getModuleName = function () {\n    return 'grid';\n  };\n\n  Grid.prototype.enableBoxSelection = function () {\n    if (this.enableAutoFill) {\n      this.selectionSettings.cellSelectionMode = 'BoxWithBorder';\n      this.element.classList.add('e-afenabled');\n    } else {\n      this.element.classList.remove('e-afenabled');\n    }\n  };\n  /**\n   * Called internally if any of the property value changed.\n   *\n   * @param {GridModel} newProp - Defines new properties\n   * @param {GridModel} oldProp - Defines old properties\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Grid.prototype.onPropertyChanged = function (newProp, oldProp) {\n    var requireRefresh = false;\n    var requireGridRefresh = false;\n    var freezeRefresh = false;\n    var checkCursor;\n    var args = {\n      requestType: 'refresh'\n    };\n\n    if (this.isDestroyed) {\n      return;\n    }\n\n    this.log('module_missing');\n\n    if (this.isEllipsisTooltip()) {\n      this.toolTipObj.close();\n    }\n\n    var properties = Object.keys(newProp);\n\n    if (properties.indexOf('columns') > -1) {\n      if (this.enableColumnVirtualization) {\n        this.columnModel = [];\n      }\n\n      this.updateColumnObject();\n      requireGridRefresh = true;\n    }\n\n    for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n      var prop = properties_1[_i];\n\n      switch (prop) {\n        case 'allowPaging':\n          this.notify(events.uiUpdate, {\n            module: 'pager',\n            enable: this.allowPaging\n          });\n          requireRefresh = true;\n          break;\n\n        case 'pageSettings':\n          if (this.pageTemplateChange) {\n            this.pageTemplateChange = false;\n            this.notify(events.inBoundModelChanged, {\n              module: 'pager',\n              properties: newProp.pageSettings\n            });\n            break;\n          }\n\n          this.notify(events.inBoundModelChanged, {\n            module: 'pager',\n            properties: newProp.pageSettings\n          });\n\n          if (isNullOrUndefined(newProp.pageSettings.currentPage) && isNullOrUndefined(newProp.pageSettings.pageSize) && isNullOrUndefined(newProp.pageSettings.totalRecordsCount) || !isNullOrUndefined(oldProp.pageSettings) && newProp.pageSettings.currentPage !== oldProp.pageSettings.currentPage && !this.enableColumnVirtualization && !this.enableVirtualization && this.pageSettings.totalRecordsCount <= this.pageSettings.pageSize) {\n            requireRefresh = true;\n          }\n\n          break;\n\n        case 'allowSorting':\n          this.notify(events.uiUpdate, {\n            module: 'sort',\n            enable: this.allowSorting\n          });\n          requireRefresh = true;\n          checkCursor = true;\n          break;\n\n        case 'allowFiltering':\n          this.updateStackedFilter();\n          this.notify(events.uiUpdate, {\n            module: 'filter',\n            enable: this.allowFiltering\n          });\n          requireRefresh = true;\n\n          if (this.filterSettings.type !== 'FilterBar') {\n            this.refreshHeader();\n          }\n\n          break;\n\n        case 'height':\n        case 'width':\n          this.notify(events.uiUpdate, {\n            module: 'scroll',\n            properties: {\n              width: newProp.width,\n              height: newProp.height\n            }\n          });\n          break;\n\n        case 'allowReordering':\n          this.headerModule.refreshUI();\n          checkCursor = true;\n          break;\n\n        case 'allowRowDragAndDrop':\n          this.notify(events.uiUpdate, {\n            module: 'rowDragAndDrop',\n            enable: this.allowRowDragAndDrop\n          });\n          this.renderModule.refresh();\n          this.headerModule.refreshUI();\n          break;\n\n        case 'allowSelection':\n          this.notify(events.uiUpdate, {\n            module: 'selection',\n            enable: this.allowSelection\n          });\n          break;\n\n        case 'enableAutoFill':\n          if (this.selectionModule) {\n            this.enableBoxSelection();\n            this.selectionModule.updateAutoFillPosition();\n          }\n\n          break;\n\n        case 'rowTemplate':\n          this.rowTemplateFn = templateCompiler(this.rowTemplate);\n          requireRefresh = true;\n          break;\n\n        case 'detailTemplate':\n          this.detailTemplateFn = templateCompiler(this.detailTemplate);\n          requireRefresh = true;\n          break;\n\n        case 'allowGrouping':\n          this.notify(events.uiUpdate, {\n            module: 'group',\n            enable: this.allowGrouping\n          });\n          this.headerModule.refreshUI();\n          requireRefresh = true;\n          checkCursor = true;\n          break;\n\n        case 'enableInfiniteScrolling':\n        case 'childGrid':\n          requireRefresh = true;\n          break;\n\n        case 'toolbar':\n          this.notify(events.uiUpdate, {\n            module: 'toolbar'\n          });\n          break;\n\n        case 'groupSettings':\n          this.notify(events.inBoundModelChanged, {\n            module: 'group',\n            properties: newProp.groupSettings,\n            oldProperties: oldProp.groupSettings\n          });\n          break;\n\n        case 'aggregates':\n          if (!this.aggregates.length && this.allowGrouping && this.groupSettings.columns.length) {\n            requireRefresh = true;\n          }\n\n          this.notify(events.uiUpdate, {\n            module: 'aggregate',\n            properties: newProp\n          });\n          break;\n\n        case 'frozenColumns':\n        case 'frozenRows':\n        case 'enableVirtualization':\n        case 'currencyCode':\n        case 'locale':\n          this.log('frozen_rows_columns');\n          freezeRefresh = true;\n          requireGridRefresh = true;\n          break;\n\n        case 'query':\n          if (!this.getDataModule().isQueryInvokedFromData) {\n            requireRefresh = true;\n          }\n\n          this.getDataModule().isQueryInvokedFromData = false;\n          break;\n\n        default:\n          this.extendedPropertyChange(prop, newProp, requireGridRefresh);\n      }\n    }\n\n    if (checkCursor) {\n      this.updateDefaultCursor();\n    }\n\n    if (requireGridRefresh) {\n      if (freezeRefresh || this.getFrozenColumns() || this.frozenRows) {\n        this.freezeRefresh();\n      } else {\n        this.refresh();\n      }\n    } else if (requireRefresh) {\n      this.notify(events.modelChanged, args);\n      requireRefresh = false;\n      this.maintainSelection(newProp.selectedRowIndex);\n    }\n  };\n\n  Grid.prototype.extendedPropertyChange = function (prop, newProp, requireGridRefresh) {\n    switch (prop) {\n      case 'enableRtl':\n        this.updateRTL();\n\n        if (this.allowPaging) {\n          this.element.querySelector('.e-gridpager').ej2_instances[0].enableRtl = newProp.enableRtl;\n          this.element.querySelector('.e-gridpager').ej2_instances[0].dataBind();\n        }\n\n        if (this.height !== 'auto') {\n          this.scrollModule.removePadding(!newProp.enableRtl);\n          this.scrollModule.setPadding();\n        }\n\n        if (this.toolbar && this.toolbarModule) {\n          this.toolbarModule.getToolbar().ej2_instances[0].enableRtl = newProp.enableRtl;\n          this.toolbarModule.getToolbar().ej2_instances[0].dataBind();\n        }\n\n        if (this.contextMenuItems && this.contextMenuModule) {\n          this.contextMenuModule.getContextMenu().ej2_instances[0].enableRtl = newProp.enableRtl;\n          this.contextMenuModule.getContextMenu().ej2_instances[0].dataBind();\n        }\n\n        if (this.showColumnMenu && this.columnMenuModule) {\n          this.columnMenuModule.getColumnMenu().ej2_instances[0].enableRtl = newProp.enableRtl;\n          this.columnMenuModule.getColumnMenu().ej2_instances[0].dataBind();\n        }\n\n        if (this.filterSettings.type === 'FilterBar' && this.filterSettings.showFilterBarOperator) {\n          this.refreshHeader();\n        }\n\n        this.notify(events.rtlUpdated, {});\n        break;\n\n      case 'enableAltRow':\n        this.renderModule.refresh();\n        break;\n\n      case 'allowResizing':\n        this.headerModule.refreshUI();\n        this.updateResizeLines();\n        break;\n\n      case 'rowHeight':\n        if (this.rowHeight) {\n          addClass([this.element], 'e-grid-min-height');\n        } else {\n          removeClass([this.element], 'e-grid-min-height');\n        }\n\n        this.renderModule.refresh();\n        this.headerModule.refreshUI();\n        break;\n\n      case 'gridLines':\n        this.updateGridLines();\n        break;\n\n      case 'showColumnMenu':\n        this.headerModule.refreshUI();\n        this.notify(events.uiUpdate, {\n          module: 'columnMenu',\n          enable: true\n        });\n        break;\n\n      case 'columnMenuItems':\n        this.notify(events.uiUpdate, {\n          module: 'columnMenu',\n          enable: this.columnMenuItems\n        });\n        break;\n\n      case 'contextMenuItems':\n        this.notify(events.uiUpdate, {\n          module: 'contextMenu',\n          enable: this.contextMenuItems\n        });\n        break;\n\n      case 'showColumnChooser':\n        this.notify(events.uiUpdate, {\n          module: 'columnChooser',\n          enable: this.showColumnChooser\n        });\n        break;\n\n      case 'filterSettings':\n        this.updateStackedFilter();\n        this.notify(events.inBoundModelChanged, {\n          module: 'filter',\n          properties: newProp.filterSettings\n        });\n        break;\n\n      case 'searchSettings':\n        this.notify(events.inBoundModelChanged, {\n          module: 'search',\n          properties: newProp.searchSettings\n        });\n        break;\n\n      case 'sortSettings':\n        this.notify(events.inBoundModelChanged, {\n          module: 'sort'\n        });\n        break;\n\n      case 'selectionSettings':\n        this.notify(events.inBoundModelChanged, {\n          module: 'selection',\n          properties: newProp.selectionSettings\n        });\n        break;\n\n      case 'editSettings':\n        this.notify(events.inBoundModelChanged, {\n          module: 'edit',\n          properties: newProp.editSettings\n        });\n        break;\n\n      case 'allowTextWrap':\n      case 'textWrapSettings':\n        if (this.allowTextWrap) {\n          this.applyTextWrap();\n        } else {\n          this.removeTextWrap();\n        }\n\n        this.notify(events.freezeRender, {\n          case: 'textwrap',\n          isModeChg: prop === 'textWrapSettings'\n        });\n        break;\n\n      case 'dataSource':\n        // eslint-disable-next-line no-case-declarations\n        var pending_1 = this.getDataModule().getState();\n\n        if (Object.getPrototypeOf(newProp).deepWatch) {\n          var pKeyField = this.getPrimaryKeyFieldNames()[0];\n\n          for (var i = 0, props = Object.keys(newProp.dataSource); i < props.length; i++) {\n            this.setRowData(getValue(pKeyField, this.dataSource[props[i]]), this.dataSource[props[i]]);\n          }\n        } else if (pending_1.isPending) {\n          var gResult = !isNullOrUndefined(this.dataSource) ? this.dataSource.result : [];\n          var names = pending_1.group || [];\n\n          for (var i = 0; i < names.length; i++) {\n            gResult = DataUtil.group(gResult, names[i], pending_1.aggregates || []);\n          }\n\n          this.dataSource = {\n            result: gResult,\n            count: this.dataSource.count,\n            aggregates: this.dataSource.aggregates\n          };\n          this.getDataModule().setState({});\n          pending_1.resolver(this.dataSource);\n        } else {\n          this.getDataModule().setState({\n            isDataChanged: false\n          });\n          this.notify(events.dataSourceModified, {});\n\n          if (!requireGridRefresh) {\n            this.renderModule.refresh();\n\n            if (this.isCheckBoxSelection) {\n              this.notify(events.beforeRefreshOnDataChange, {});\n            }\n          }\n        }\n\n        this.scrollRefresh();\n        break;\n\n      case 'enableHover':\n        // eslint-disable-next-line no-case-declarations\n        var action = newProp.enableHover ? addClass : removeClass;\n        action([this.element], 'e-gridhover');\n        break;\n\n      case 'selectedRowIndex':\n        if (!this.isSelectedRowIndexUpdating) {\n          this.selectRow(newProp.selectedRowIndex);\n        }\n\n        this.isSelectedRowIndexUpdating = false;\n        break;\n\n      case 'resizeSettings':\n        this.widthService.setWidthToTable();\n        break;\n\n      case 'enableAdaptiveUI':\n        this.notify(events.setFullScreenDialog, {});\n        break;\n\n      case 'rowRenderingMode':\n        this.enableVerticalRendering();\n        this.notify(events.rowModeChange, {});\n        this.refresh();\n        break;\n\n      case 'enableStickyHeader':\n        this.scrollModule.addStickyListener(newProp.enableStickyHeader);\n        break;\n    }\n  };\n\n  Grid.prototype.maintainSelection = function (index) {\n    var _this = this;\n\n    if (index !== -1) {\n      var fn_1 = function () {\n        _this.selectRow(index);\n\n        _this.off(events.contentReady, fn_1);\n      };\n\n      this.on(events.contentReady, fn_1, this);\n    }\n  };\n  /**\n   * @param {Object} prop - Defines the property\n   * @param {boolean} muteOnChange - Defines the mute on change\n   * @returns {void}\n   * @private\n   */\n\n\n  Grid.prototype.setProperties = function (prop, muteOnChange) {\n    _super.prototype.setProperties.call(this, prop, muteOnChange);\n\n    var filterSettings = 'filterSettings';\n\n    if (prop[filterSettings] && this.filterModule && muteOnChange) {\n      this.filterModule.refreshFilter();\n    }\n  };\n  /**\n   * @hidden\n   * @returns {void}\n   */\n\n\n  Grid.prototype.setTablesCount = function () {\n    var frozenCols = this.getFrozenColumns();\n    var frozenLeft = this.getFrozenLeftColumnsCount();\n    var frozenRight = this.getFrozenRightColumnsCount();\n\n    if (frozenCols && !frozenLeft && !frozenRight) {\n      this.tablesCount = 2;\n    } else if (!frozenCols && (frozenLeft || frozenRight)) {\n      if (frozenLeft && !frozenRight || frozenRight && !frozenLeft) {\n        this.tablesCount = 2;\n      } else if (frozenLeft && frozenRight) {\n        this.tablesCount = 3;\n      }\n    }\n  };\n  /**\n   * @hidden\n   * @returns {number} - Returns the tables count\n   */\n\n\n  Grid.prototype.getTablesCount = function () {\n    return this.tablesCount;\n  };\n  /**\n   * @hidden\n   * @returns {void}\n   */\n\n\n  Grid.prototype.updateDefaultCursor = function () {\n    var headerCells = [].slice.call(this.getHeaderContent().querySelectorAll('.e-headercell:not(.e-stackedheadercell)'));\n    var stdHdrCell = [].slice.call(this.getHeaderContent().getElementsByClassName('e-stackedheadercell'));\n    var cols = this.getColumns();\n\n    if (this.enableColumnVirtualization && this.getFrozenColumns()) {\n      var cells = this.contentModule.getHeaderCells();\n      headerCells = cells.length ? cells : headerCells;\n    }\n\n    for (var i = 0; i < headerCells.length; i++) {\n      var cell = headerCells[i];\n\n      if (this.allowGrouping || this.allowReordering || this.allowSorting) {\n        if (!cols[i].allowReordering || !cols[i].allowSorting || !cols[i].allowGrouping) {\n          cell.classList.add('e-defaultcursor');\n        } else {\n          cell.classList.add('e-mousepointer');\n        }\n      }\n    }\n\n    for (var count = 0; count < stdHdrCell.length; count++) {\n      if (this.allowReordering) {\n        stdHdrCell[count].classList.add('e-mousepointer');\n      }\n    }\n  };\n\n  Grid.prototype.updateColumnModel = function (columns) {\n    for (var i = 0, len = columns.length; i < len; i++) {\n      if (columns[i].columns) {\n        this.updateColumnModel(columns[i].columns);\n      } else {\n        this.columnModel.push(columns[i]);\n      }\n    }\n\n    this.updateColumnLevelFrozen();\n    this.updateFrozenColumns();\n    this.updateLockableColumns();\n  };\n\n  Grid.prototype.updateColumnLevelFrozen = function () {\n    var cols = this.columnModel;\n    var leftCols = [];\n    var rightCols = [];\n    var movableCols = [];\n\n    if (this.frozenLeftCount || this.frozenRightCount) {\n      for (var i = 0, len = cols.length; i < len; i++) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var col = cols[i];\n\n        if (col.freeze === 'Left') {\n          col.freezeTable = literals.frozenLeft;\n          leftCols.push(col);\n        } else if (col.freeze === 'Right') {\n          col.freezeTable = literals.frozenRight;\n          rightCols.push(col);\n        } else {\n          col.freezeTable = 'movable';\n          movableCols.push(col);\n        }\n      }\n\n      this.columnModel = leftCols.concat(movableCols).concat(rightCols);\n    }\n  };\n\n  Grid.prototype.updateFrozenColumns = function () {\n    if (this.frozenLeftCount || this.frozenRightCount) {\n      return;\n    }\n\n    var cols = this.columnModel;\n    var directFrozenCount = this.frozenColumns;\n    var totalFrozenCount = this.getFrozenColumns();\n    var count = 0;\n\n    for (var i = 0, len = cols.length; i < len; i++) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      var col = cols[i];\n\n      if (directFrozenCount) {\n        if (i < directFrozenCount) {\n          col.freezeTable = literals.frozenLeft;\n        } else {\n          col.freezeTable = 'movable';\n        }\n      }\n\n      if (col.isFrozen && i >= directFrozenCount) {\n        col.freezeTable = literals.frozenLeft;\n        cols.splice(this.frozenColumns + count, 0, cols.splice(i, 1)[0]);\n        count++;\n      } else if (totalFrozenCount && !directFrozenCount) {\n        col.freezeTable = 'movable';\n      }\n    }\n  };\n\n  Grid.prototype.getFrozenLeftCount = function () {\n    return this.getFrozenColumns() || this.getFrozenLeftColumnsCount();\n  };\n\n  Grid.prototype.isFrozenGrid = function () {\n    return this.getFrozenColumns() !== 0 || this.getFrozenLeftColumnsCount() !== 0 || this.getFrozenRightColumnsCount() !== 0;\n  };\n\n  Grid.prototype.getFrozenMode = function () {\n    return this.frozenName;\n  };\n\n  Grid.prototype.updateLockableColumns = function () {\n    var cols = this.columnModel;\n    var frozenCount = 0;\n    var movableCount = 0;\n    var frozenColumns = this.getFrozenColumns();\n\n    for (var i = 0; i < cols.length; i++) {\n      if (cols[i].lockColumn) {\n        if (i < frozenColumns) {\n          cols.splice(frozenCount, 0, cols.splice(i, 1)[0]);\n          frozenCount++;\n        } else {\n          cols.splice(frozenColumns + movableCount, 0, cols.splice(i, 1)[0]);\n          movableCount++;\n        }\n      }\n    }\n  };\n\n  Grid.prototype.checkLockColumns = function (cols) {\n    for (var i = 0; i < cols.length; i++) {\n      if (cols[i].columns) {\n        this.checkLockColumns(cols[i].columns);\n      } else if (cols[i].lockColumn) {\n        this.lockcolPositionCount++;\n      }\n    }\n  };\n  /**\n   * Gets the columns from the Grid.\n   *\n   * @param {boolean} isRefresh - Defines the boolean whether to refresh\n   * @returns {Column[]} - returns the column\n   */\n\n\n  Grid.prototype.getColumns = function (isRefresh) {\n    var _this = this;\n\n    var inview = this.inViewIndexes.map(function (v) {\n      return v - _this.groupSettings.columns.length;\n    }).filter(function (v) {\n      return v > -1;\n    });\n    var vLen = inview.length;\n\n    if (!this.enableColumnVirtualization || isNullOrUndefined(this.columnModel) || this.columnModel.length === 0 || isRefresh) {\n      this.columnModel = [];\n      this.updateColumnModel(this.columns);\n    }\n\n    var columns = vLen === 0 ? this.columnModel : this.columnModel.slice(inview[0], inview[vLen - 1] + 1);\n\n    if (this.contentModule && this.enableColumnVirtualization && this.isFrozenGrid() && inview.length && inview[0] > 0) {\n      var frozenCols = this.contentModule.ensureFrozenCols(columns);\n      columns = frozenCols;\n    }\n\n    return columns;\n  };\n  /**\n   * @private\n   * @param {string} stackedHeader - Defines the stacked header\n   * @param {Column[]} col - Defines the column\n   * @returns {Column} Returns the Column\n   */\n\n\n  Grid.prototype.getStackedHeaderColumnByHeaderText = function (stackedHeader, col) {\n    for (var i = 0; i < col.length; i++) {\n      var individualColumn = col[i];\n\n      if (individualColumn.field === stackedHeader || individualColumn.headerText === stackedHeader) {\n        this.stackedColumn = individualColumn;\n        break;\n      } else if (individualColumn.columns) {\n        this.getStackedHeaderColumnByHeaderText(stackedHeader, individualColumn.columns);\n      }\n    }\n\n    return this.stackedColumn;\n  };\n  /**\n   * @private\n   * @returns {number[]} Returns the column indexes\n   */\n\n\n  Grid.prototype.getColumnIndexesInView = function () {\n    return this.inViewIndexes;\n  };\n  /**\n   * @private\n   * @returns {Query} - returns the query\n   */\n\n\n  Grid.prototype.getQuery = function () {\n    return this.query;\n  };\n  /**\n   * @private\n   * @returns {object} - returns the locale constants\n   */\n\n\n  Grid.prototype.getLocaleConstants = function () {\n    return this.defaultLocale;\n  };\n  /**\n   * @param {number[]} indexes - specifies the indexes\n   * @returns {void}\n   * @private\n   */\n\n\n  Grid.prototype.setColumnIndexesInView = function (indexes) {\n    this.inViewIndexes = indexes;\n  };\n  /**\n   * Gets the visible columns from the Grid.\n   *\n   * @returns {Column[]} returns the column\n   */\n\n\n  Grid.prototype.getVisibleColumns = function () {\n    return this.getCurrentVisibleColumns();\n  };\n  /**\n   * Gets the header div of the Grid.\n   *\n   * @returns {Element} - Returns the element\n   */\n\n\n  Grid.prototype.getHeaderContent = function () {\n    return this.headerModule.getPanel();\n  };\n  /**\n   * Sets the header div of the Grid to replace the old header.\n   *\n   * @param  {Element} element - Specifies the Grid header.\n   * @returns {void}\n   */\n\n\n  Grid.prototype.setGridHeaderContent = function (element) {\n    this.headerModule.setPanel(element);\n  };\n  /**\n   * Gets the content table of the Grid.\n   *\n   * @returns {Element} - Returns the element\n   */\n\n\n  Grid.prototype.getContentTable = function () {\n    return this.contentModule.getTable();\n  };\n  /**\n   * Sets the content table of the Grid to replace the old content table.\n   *\n   * @param  {Element} element - Specifies the Grid content table.\n   * @returns {void}\n   */\n\n\n  Grid.prototype.setGridContentTable = function (element) {\n    this.contentModule.setTable(element);\n  };\n  /**\n   * Gets the content div of the Grid.\n   *\n   * @returns {Element} Returns the element\n   */\n\n\n  Grid.prototype.getContent = function () {\n    return this.contentModule.getPanel();\n  };\n  /**\n   * Sets the content div of the Grid to replace the old Grid content.\n   *\n   * @param  {Element} element - Specifies the Grid content.\n   * @returns {void}\n   */\n\n\n  Grid.prototype.setGridContent = function (element) {\n    this.contentModule.setPanel(element);\n  };\n  /**\n   * Gets the header table element of the Grid.\n   *\n   * @returns {Element} returns the element\n   */\n\n\n  Grid.prototype.getHeaderTable = function () {\n    return this.headerModule.getTable();\n  };\n  /**\n   * Sets the header table of the Grid to replace the old one.\n   *\n   * @param  {Element} element - Specifies the Grid header table.\n   * @returns {void}\n   */\n\n\n  Grid.prototype.setGridHeaderTable = function (element) {\n    this.headerModule.setTable(element);\n  };\n  /**\n   * Gets the footer div of the Grid.\n   *\n   * @returns {Element} returns the element\n   */\n\n\n  Grid.prototype.getFooterContent = function () {\n    this.footerElement = this.element.getElementsByClassName(literals.gridFooter)[0];\n    return this.footerElement;\n  };\n  /**\n   * Gets the footer table element of the Grid.\n   *\n   * @returns {Element} returns the element\n   */\n\n\n  Grid.prototype.getFooterContentTable = function () {\n    this.footerElement = this.element.getElementsByClassName(literals.gridFooter)[0];\n    return this.footerElement.firstChild.firstChild;\n  };\n  /**\n   * Gets the pager of the Grid.\n   *\n   * @returns {Element} returns the element\n   */\n\n\n  Grid.prototype.getPager = function () {\n    return this.gridPager; //get element from pager\n  };\n  /**\n   * Sets the pager of the Grid to replace the old pager.\n   *\n   * @param  {Element} element - Specifies the Grid pager.\n   * @returns {void}\n   */\n\n\n  Grid.prototype.setGridPager = function (element) {\n    this.gridPager = element;\n  };\n  /**\n   * Gets a row by index.\n   *\n   * @param  {number} index - Specifies the row index.\n   * @returns {Element} returns the element\n   */\n\n\n  Grid.prototype.getRowByIndex = function (index) {\n    return this.contentModule.getRowByIndex(index);\n  };\n  /**\n   * Gets a movable tables row by index.\n   *\n   * @param  {number} index - Specifies the row index.\n   * @returns {Element} returns the element\n   */\n\n\n  Grid.prototype.getMovableRowByIndex = function (index) {\n    return this.contentModule.getMovableRowByIndex(index);\n  };\n  /**\n   * Gets a frozen tables row by index.\n   *\n   * @param  {number} index - Specifies the row index.\n   * @returns {Element} returns the element\n   */\n\n\n  Grid.prototype.getFrozenRowByIndex = function (index) {\n    return this.getFrozenDataRows()[index];\n  };\n  /**\n   * Gets all the data rows of the Grid.\n   *\n   * @returns {Element[]} returns the element\n   */\n\n\n  Grid.prototype.getRows = function () {\n    return this.contentModule.getRowElements();\n  };\n  /**\n   * Gets a frozen right tables row element by index.\n   *\n   * @param  {number} index - Specifies the row index.\n   * @returns {Element} returns the element\n   */\n\n\n  Grid.prototype.getFrozenRightRowByIndex = function (index) {\n    return this.contentModule.getFrozenRightRowByIndex(index);\n  };\n  /**\n   * Get a row information based on cell\n   *\n   * @param {Element | EventTarget} target - specifies the element\n   * @returns {RowInfo} returns the row info\n   */\n\n\n  Grid.prototype.getRowInfo = function (target) {\n    var ele = target;\n    var args = {\n      target: target\n    };\n\n    if (!isNullOrUndefined(target) && isNullOrUndefined(parentsUntil(ele, 'e-detailrowcollapse') && isNullOrUndefined(parentsUntil(ele, 'e-recordplusexpand')))) {\n      var cell = closest(ele, '.' + literals.rowCell);\n\n      if (!cell) {\n        var row = closest(ele, '.' + literals.row);\n\n        if (!isNullOrUndefined(row) && !row.classList.contains('e-addedrow')) {\n          var rowObj = this.getRowObjectFromUID(row.getAttribute('data-uid'));\n          var rowIndex = parseInt(row.getAttribute(literals.ariaRowIndex), 10);\n          args = {\n            row: row,\n            rowData: rowObj.data,\n            rowIndex: rowIndex\n          };\n        }\n\n        return args;\n      }\n\n      var cellIndex = parseInt(cell.getAttribute(literals.ariaColIndex), 10);\n\n      if (!isNullOrUndefined(cell) && !isNaN(cellIndex)) {\n        var row_1 = closest(cell, '.' + literals.row);\n        var rowIndex = parseInt(row_1.getAttribute(literals.ariaRowIndex), 10);\n        var frzCols = this.getFrozenColumns();\n        var tableName = this.columnModel[cellIndex].getFreezeTableName();\n        var rows = this.contentModule.getRows();\n        var index = cellIndex + this.getIndentCount();\n\n        if (this.isFrozenGrid()) {\n          if (tableName === literals.frozenLeft) {\n            rows = this.contentModule.getRows();\n          } else if (tableName === 'movable') {\n            index = cellIndex - frzCols - this.frozenLeftCount;\n            rows = this.contentModule.getMovableRows();\n          } else if (tableName === literals.frozenRight) {\n            index = cellIndex - (this.frozenLeftCount + this.movableCount);\n            rows = this.contentModule.getFrozenRightRows();\n          }\n        }\n\n        var rowsObject = rows.filter(function (r) {\n          return r.uid === row_1.getAttribute('data-uid');\n        });\n        var rowData = {};\n        var column = void 0;\n\n        if (Object.keys(rowsObject).length) {\n          rowData = rowsObject[0].data;\n          column = rowsObject[0].cells[index].column;\n        }\n\n        args = {\n          cell: cell,\n          cellIndex: cellIndex,\n          row: row_1,\n          rowIndex: rowIndex,\n          rowData: rowData,\n          column: column,\n          target: target\n        };\n      }\n    }\n\n    return args;\n  };\n  /**\n   * Gets the Grid's movable content rows from frozen grid.\n   *\n   * @returns {Element[]} returns the element\n   */\n\n\n  Grid.prototype.getMovableRows = function () {\n    return this.contentModule.getMovableRowElements();\n  };\n  /**\n   * Gets the Grid's frozen right content rows from frozen grid.\n   *\n   * @returns {Element[]} returns the element\n   */\n\n\n  Grid.prototype.getFrozenRightRows = function () {\n    return this.contentModule.getFrozenRightRowElements();\n  };\n  /**\n   * Gets all the Grid's data rows.\n   *\n   * @returns {Element[]} returns the element\n   */\n\n\n  Grid.prototype.getDataRows = function () {\n    return this.getAllDataRows();\n  };\n  /**\n   * @param {boolean} includeAdd - specifies includeAdd\n   * @returns {Element[]} returns the element\n   * @hidden\n   */\n\n\n  Grid.prototype.getAllDataRows = function (includeAdd) {\n    if (isNullOrUndefined(this.getContentTable().querySelector(literals.tbody))) {\n      return [];\n    }\n\n    var tbody = this.isFrozenGrid() ? this.getFrozenLeftContentTbody() : this.getContentTable().querySelector(literals.tbody);\n    var rows = [].slice.call(tbody.children);\n\n    if (this.frozenRows) {\n      var hdrTbody = this.isFrozenGrid() ? this.getHeaderContent().querySelector('.' + literals.frozenHeader).querySelector(literals.tbody) : this.getHeaderTable().querySelector(literals.tbody);\n      var freezeRows = [].slice.call(hdrTbody.children);\n      rows = this.addMovableRows(freezeRows, rows);\n    }\n\n    var dataRows = this.generateDataRows(rows, includeAdd);\n    return dataRows;\n  };\n  /**\n   * @param {HTMLElement[]} fRows - Defines the frozen Rows\n   * @param {HTMLElement[]} mrows - Defines the movable Rows\n   * @returns {HTMLElement[]} Returns the element\n   * @hidden\n   */\n\n\n  Grid.prototype.addMovableRows = function (fRows, mrows) {\n    for (var i = 0, len = mrows.length; i < len; i++) {\n      fRows.push(mrows[i]);\n    }\n\n    return fRows;\n  };\n\n  Grid.prototype.generateDataRows = function (rows, includAdd) {\n    var dRows = [];\n\n    for (var i = 0, len = rows.length; i < len; i++) {\n      if (rows[i].classList.contains(literals.row) && (!rows[i].classList.contains('e-hiddenrow') || includAdd)) {\n        if (this.isCollapseStateEnabled()) {\n          dRows[parseInt(rows[i].getAttribute('aria-rowindex'), 10)] = rows[i];\n        } else {\n          dRows.push(rows[i]);\n        }\n      }\n    }\n\n    return dRows;\n  };\n  /**\n   * Gets all the Grid's movable table data rows.\n   *\n   * @returns {Element[]} Returns the element\n   */\n\n\n  Grid.prototype.getMovableDataRows = function () {\n    return this.getAllMovableDataRows();\n  };\n  /**\n   * @param {boolean} includeAdd Defines the include add in boolean\n   * @returns {Element[]} Returns the element\n   * @hidden\n   */\n\n\n  Grid.prototype.getAllMovableDataRows = function (includeAdd) {\n    if (!this.isFrozenGrid()) {\n      return [];\n    }\n\n    var rows = [].slice.call(this.getContent().querySelector('.' + literals.movableContent).querySelector(literals.tbody).children);\n\n    if (this.frozenRows) {\n      var freezeRows = [].slice.call(this.getHeaderContent().querySelector('.' + literals.movableHeader).querySelector(literals.tbody).children);\n      rows = this.addMovableRows(freezeRows, rows);\n    }\n\n    var dataRows = this.generateDataRows(rows, includeAdd);\n    return dataRows;\n  };\n  /**\n   * Gets all the Grid's frozen table data rows.\n   *\n   * @returns {Element[]} returns the element\n   */\n\n\n  Grid.prototype.getFrozenDataRows = function () {\n    return this.getAllFrozenDataRows();\n  };\n  /**\n   * @param {boolean} includeAdd Defines the include add in boolean\n   * @returns {Element[]} Returns the element\n   * @hidden\n   */\n\n\n  Grid.prototype.getAllFrozenDataRows = function (includeAdd) {\n    var rows = [].slice.call(this.getContent().querySelector('.' + literals.frozenContent).querySelector(literals.tbody).children);\n\n    if (this.frozenRows) {\n      var freezeRows = [].slice.call(this.getHeaderContent().querySelector('.' + literals.frozenHeader).querySelector(literals.tbody).children);\n      rows = this.addMovableRows(freezeRows, rows);\n    }\n\n    var dataRows = this.generateDataRows(rows, includeAdd);\n    return dataRows;\n  };\n  /**\n   * Gets all the Grid's frozen right table data rows.\n   *\n   * @returns {Element[]} Returns the Element\n   */\n\n\n  Grid.prototype.getFrozenRightDataRows = function () {\n    return this.getAllFrozenRightDataRows();\n  };\n  /**\n   * @param {boolean} includeAdd Defines the include add in boolean\n   * @returns {Element[]} Returns the element\n   * @hidden\n   */\n\n\n  Grid.prototype.getAllFrozenRightDataRows = function (includeAdd) {\n    if (this.getFrozenMode() !== 'Right' && this.getFrozenMode() !== 'Left-Right') {\n      return [];\n    }\n\n    var rows = [].slice.call(this.getContent().querySelector('.e-frozen-right-content').querySelector(literals.tbody).children);\n\n    if (this.frozenRows) {\n      var freezeRows = [].slice.call(this.getHeaderContent().querySelector('.e-frozen-right-header').querySelector(literals.tbody).children);\n      rows = this.addMovableRows(freezeRows, rows);\n    }\n\n    var dataRows = this.generateDataRows(rows, includeAdd);\n    return dataRows;\n  };\n  /**\n   * Updates particular cell value based on the given primary key value.\n   * > Primary key column must be specified using `columns.isPrimaryKey` property.\n   *\n   * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n   * @param {string } field - Specifies the field name which you want to update.\n   * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n   * @returns {void}\n   */\n\n\n  Grid.prototype.setCellValue = function (key, field, value) {\n    var cells = 'cells';\n    var rowData = 'data';\n    var rowIdx = 'index';\n    var rowuID = 'uid';\n    var isRight = this.getFrozenMode() === 'Right';\n    var pkName = this.getPrimaryKeyFieldNames()[0];\n    var cell = new CellRenderer(this, this.serviceLocator);\n    var fieldIdx = this.getColumnIndexByField(field);\n    var col = this.getColumnByField(field);\n    var rowObjects = col.getFreezeTableName() === 'movable' ? this.contentModule.getMovableRows() : col.getFreezeTableName() === 'frozen-right' ? this.getFrozenRightRowsObject() : this.contentModule.getRows();\n    var selectedRow = rowObjects.filter(function (r) {\n      return getValue(pkName, r.data) === key;\n    })[0];\n    var tr = selectedRow ? this.element.querySelector('[data-uid=' + selectedRow[rowuID] + ']') : null;\n\n    if (!isNullOrUndefined(tr)) {\n      setValue(field, value, selectedRow[rowData]);\n      var left = this.getFrozenLeftColumnsCount() || this.getFrozenColumns();\n      var movable = this.getMovableColumnsCount();\n\n      if (this.isRowDragable() && !isRight) {\n        left++;\n      }\n\n      var frIdx = left + movable;\n      var td = this.getCellFromIndex(selectedRow[rowIdx], fieldIdx);\n\n      if (!isNullOrUndefined(td)) {\n        var Idx = col.getFreezeTableName() === 'movable' ? left : col.getFreezeTableName() === 'frozen-right' ? frIdx : 0;\n\n        if (this.groupSettings.columns.length) {\n          fieldIdx = fieldIdx + this.groupSettings.columns.length;\n        }\n\n        if (this.childGrid || this.detailTemplate) {\n          fieldIdx++;\n        }\n\n        if (this.isRowDragable() && !isRight) {\n          fieldIdx++;\n        }\n\n        var sRow = selectedRow[cells][fieldIdx - Idx];\n        cell.refreshTD(td, sRow, selectedRow[rowData], {\n          index: selectedRow[rowIdx]\n        });\n\n        if (this.aggregates.length > 0) {\n          this.notify(events.refreshFooterRenderer, {});\n\n          if (this.groupSettings.columns.length > 0) {\n            this.notify(events.groupAggregates, {});\n          }\n        }\n        /* tslint:disable:no-string-literal */\n\n\n        if (!isNullOrUndefined(selectedRow) && !isNullOrUndefined(selectedRow['changes'])) {\n          selectedRow['changes'][field] = value;\n        }\n        /* tslint:disable:no-string-literal */\n\n\n        this.trigger(events.queryCellInfo, {\n          cell: td,\n          column: col,\n          data: selectedRow[rowData]\n        });\n      }\n    } else {\n      return;\n    }\n  };\n  /**\n   * @param {string} columnUid - Defines column uid\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Grid.prototype.refreshReactColumnTemplateByUid = function (columnUid) {\n    var _this = this;\n\n    if (this.isReact) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      this.clearTemplate(['columnTemplate'], undefined, function () {\n        var cells = 'cells';\n        var rowIdx = 'index';\n\n        var rowsObj = _this.getRowsObject();\n\n        var indent = _this.getIndentCount();\n\n        var cellIndex = _this.getNormalizedColumnIndex(columnUid);\n\n        for (var j = 0; j < rowsObj.length; j++) {\n          if (rowsObj[j].isDataRow && !isNullOrUndefined(rowsObj[j].index)) {\n            var cell = rowsObj[j][cells][cellIndex];\n            var cellRenderer = new CellRenderer(_this, _this.serviceLocator);\n\n            var td = _this.getCellFromIndex(rowsObj[j].index, cellIndex - indent);\n\n            cellRenderer.refreshTD(td, cell, rowsObj[j].data, {\n              index: rowsObj[j][rowIdx]\n            });\n          }\n        }\n      });\n    }\n  };\n  /**\n   * Updates and refresh the particular row values based on the given primary key value.\n   * > Primary key column must be specified using `columns.isPrimaryKey` property.\n   *\n   * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n   * @param {Object} rowData - To update new data for the particular row.\n   * @returns {void}\n   */\n\n\n  Grid.prototype.setRowData = function (key, rowData) {\n    var rowuID = 'uid';\n    var rowObjects = this.contentModule.getRows();\n    var pkName = this.getPrimaryKeyFieldNames()[0];\n    var rowRenderer = new RowRenderer(this.serviceLocator, null, this);\n\n    if (this.groupSettings.columns.length > 0 && this.aggregates.length > 0) {\n      rowObjects = rowObjects.filter(function (row) {\n        return row.isDataRow;\n      });\n    }\n\n    var selectedRow = rowObjects.filter(function (r) {\n      return getValue(pkName, r.data) === key;\n    })[0];\n\n    if (!isNullOrUndefined(selectedRow) && this.element.querySelectorAll('[data-uid=' + selectedRow[rowuID] + ']').length) {\n      selectedRow.changes = rowData;\n      refreshForeignData(selectedRow, this.getForeignKeyColumns(), selectedRow.changes);\n      rowRenderer.refresh(selectedRow, this.getColumns(), true);\n\n      if (this.aggregates.length > 0) {\n        this.notify(events.refreshFooterRenderer, {});\n\n        if (this.groupSettings.columns.length > 0) {\n          this.notify(events.groupAggregates, {});\n        }\n      }\n    } else {\n      return;\n    }\n  };\n  /**\n   * Gets a cell by row and column index.\n   *\n   * @param  {number} rowIndex - Specifies the row index.\n   * @param  {number} columnIndex - Specifies the column index.\n   * @returns {Element} Returns the Element\n   */\n\n\n  Grid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n    var col = this.getColumnByIndex(columnIndex);\n    return getCellByColAndRowIndex(this, col, rowIndex, columnIndex);\n  };\n  /**\n   * Gets a movable table cell by row and column index.\n   *\n   * @param  {number} rowIndex - Specifies the row index.\n   * @param  {number} columnIndex - Specifies the column index.\n   * @returns {Element} Returns the Element\n   */\n\n\n  Grid.prototype.getMovableCellFromIndex = function (rowIndex, columnIndex) {\n    if (this.frozenName === 'Left-Right' && columnIndex >= this.movableCount) {\n      return undefined;\n    }\n\n    var index = this.getFrozenColumns() || this.getFrozenLeftColumnsCount();\n    return this.getMovableDataRows()[rowIndex] && this.getMovableDataRows()[rowIndex].getElementsByClassName(literals.rowCell)[columnIndex - index];\n  };\n  /**\n   * Gets a frozen right table cell by row and column index.\n   *\n   * @param  {number} rowIndex - Specifies the row index.\n   * @param  {number} columnIndex - Specifies the column index.\n   * @returns {Element} Returns the Element\n   */\n\n\n  Grid.prototype.getFrozenRightCellFromIndex = function (rowIndex, columnIndex) {\n    var index = this.getFrozenLeftColumnsCount() + this.getMovableColumnsCount();\n    var rows = this.getFrozenRightDataRows();\n    return rows[rowIndex] && rows[rowIndex].getElementsByClassName(literals.rowCell)[columnIndex - index];\n  };\n  /**\n   * Gets a column header by column index.\n   *\n   * @param  {number} index - Specifies the column index.\n   * @returns {Element} Returns the Element\n   */\n\n\n  Grid.prototype.getColumnHeaderByIndex = function (index) {\n    return this.getHeaderTable().getElementsByClassName('e-headercell')[index];\n  };\n  /**\n   * Gets a movable column header by column index.\n   *\n   * @param  {number} index - Specifies the column index.\n   * @returns {Element} Returns the Element\n   */\n\n\n  Grid.prototype.getMovableColumnHeaderByIndex = function (index) {\n    var left = this.getFrozenColumns() || this.getFrozenLeftColumnsCount();\n    return this.getMovableVirtualHeader().getElementsByClassName('e-headercell')[index - left];\n  };\n  /**\n   * Gets a frozen right column header by column index.\n   *\n   * @param  {number} index - Specifies the column index.\n   * @returns {Element} Returns the Element\n   */\n\n\n  Grid.prototype.getFrozenRightColumnHeaderByIndex = function (index) {\n    var left = this.getFrozenLeftColumnsCount() + this.getMovableColumnsCount();\n    return this.getFrozenRightHeader().getElementsByClassName('e-headercell')[index - left];\n  };\n  /**\n   * Gets a frozen left column header by column index.\n   *\n   * @param  {number} index - Specifies the column index.\n   * @returns {Element} Returns the Element\n   */\n\n\n  Grid.prototype.getFrozenLeftColumnHeaderByIndex = function (index) {\n    return this.getFrozenVirtualHeader().getElementsByClassName('e-headercell')[index];\n  };\n  /**\n   * @param {string} uid - Defines the uid\n   * @param {boolean} isMovable - Defines isMovable\n   * @param {boolean} isFrozenRight - Defines isFrozenRight\n   * @returns {Row<Column>} Returns the row object\n   * @hidden\n   */\n\n\n  Grid.prototype.getRowObjectFromUID = function (uid, isMovable, isFrozenRight) {\n    var rows = this.contentModule.getRows();\n    var row = this.rowObject(rows, uid);\n\n    if (this.isFrozenGrid()) {\n      if (!row || isMovable || isFrozenRight) {\n        row = this.rowObject(this.contentModule.getMovableRows(), uid);\n\n        if (!row && this.getFrozenMode() === 'Left-Right' || isFrozenRight) {\n          row = this.rowObject(this.contentModule.getFrozenRightRows(), uid);\n        }\n\n        return row;\n      }\n    }\n\n    if (isNullOrUndefined(row) && this.enableVirtualization && this.groupSettings.columns.length > 0) {\n      row = this.rowObject(this.vRows, uid);\n      return row;\n    }\n\n    return row;\n  };\n\n  Grid.prototype.rowObject = function (rows, uid) {\n    for (var _i = 0, rows_1 = rows; _i < rows_1.length; _i++) {\n      var row = rows_1[_i];\n\n      if (row.uid === uid) {\n        return row;\n      }\n    }\n\n    return null;\n  };\n  /**\n   * @hidden\n   * @returns {Row<Column>[]} Returns the Row object\n   */\n\n\n  Grid.prototype.getRowsObject = function () {\n    return this.contentModule.getRows();\n  };\n  /**\n   * @hidden\n   * @returns {Row<Column>[]} Returns the Row object\n   */\n\n\n  Grid.prototype.getMovableRowsObject = function () {\n    var rows = [];\n\n    if (this.isFrozenGrid()) {\n      rows = this.contentModule.getMovableRows();\n    }\n\n    return rows;\n  };\n  /**\n   * @hidden\n   * @returns {Row<Column>[]} Returns the Row object\n   */\n\n\n  Grid.prototype.getFrozenRightRowsObject = function () {\n    var rows = [];\n\n    if (this.getFrozenMode() === 'Right' || this.getFrozenMode() === 'Left-Right') {\n      rows = this.contentModule.getFrozenRightRows();\n    }\n\n    return rows;\n  };\n  /**\n   * Gets a column header by column name.\n   *\n   * @param  {string} field - Specifies the column name.\n   * @returns {Element} - Returns the element\n   */\n\n\n  Grid.prototype.getColumnHeaderByField = function (field) {\n    var column = this.getColumnByField(field);\n    return column ? this.getColumnHeaderByUid(column.uid) : undefined;\n  };\n  /**\n   * Gets a column header by UID.\n   *\n   * @param {string} uid - Specifies the column uid.\n   * @returns {Element} - Returns the element\n   */\n\n\n  Grid.prototype.getColumnHeaderByUid = function (uid) {\n    var element = this.getHeaderContent().querySelector('[e-mappinguid=' + uid + ']');\n    return element ? element.parentElement : undefined;\n  };\n  /**\n   * @hidden\n   * @param {number} index - Defines the index\n   * @returns {Column} Returns the column\n   */\n\n\n  Grid.prototype.getColumnByIndex = function (index) {\n    var column;\n    this.getColumns().some(function (col, i) {\n      column = col;\n      return i === index;\n    });\n    return column;\n  };\n  /**\n   * Gets a Column by column name.\n   *\n   * @param  {string} field - Specifies the column name.\n   * @returns {Column} Returns the column\n   */\n\n\n  Grid.prototype.getColumnByField = function (field) {\n    return iterateArrayOrObject(this.getColumns(), function (item) {\n      if (item.field === field) {\n        return item;\n      }\n\n      return undefined;\n    })[0];\n  };\n  /**\n   * Gets a column index by column name.\n   *\n   * @param  {string} field - Specifies the column name.\n   * @returns {number} Returns the index by field\n   */\n\n\n  Grid.prototype.getColumnIndexByField = function (field) {\n    var cols = this.getColumns();\n\n    for (var i = 0; i < cols.length; i++) {\n      if (cols[i].field === field) {\n        return i;\n      }\n    }\n\n    return -1;\n  };\n  /**\n   * Gets a column by UID.\n   *\n   * @param  {string} uid - Specifies the column UID.\n   * @returns {Column} Returns the column\n   */\n\n\n  Grid.prototype.getColumnByUid = function (uid) {\n    return iterateArrayOrObject(this.getColumns().concat(this.getStackedColumns(this.columns)), function (item) {\n      if (item.uid === uid) {\n        return item;\n      }\n\n      return undefined;\n    })[0];\n  };\n  /**\n   * @param {Column[]} columns - Defines the columns\n   * @param {Column[]} stackedColumn - Defines the stacked columns\n   * @returns {Column[]} Returns the columns\n   * @hidden\n   */\n\n\n  Grid.prototype.getStackedColumns = function (columns, stackedColumn) {\n    if (stackedColumn === void 0) {\n      stackedColumn = [];\n    }\n\n    for (var _i = 0, columns_1 = columns; _i < columns_1.length; _i++) {\n      var column = columns_1[_i];\n\n      if (column.columns) {\n        stackedColumn.push(column);\n        this.getStackedColumns(column.columns, stackedColumn);\n      }\n    }\n\n    return stackedColumn;\n  };\n  /**\n   * Gets a column index by UID.\n   *\n   * @param  {string} uid - Specifies the column UID.\n   * @returns {number} Returns the column by index\n   */\n\n\n  Grid.prototype.getColumnIndexByUid = function (uid) {\n    var index = iterateArrayOrObject(this.getColumns(), function (item, index) {\n      if (item.uid === uid) {\n        return index;\n      }\n\n      return undefined;\n    })[0];\n    return !isNullOrUndefined(index) ? index : -1;\n  };\n  /**\n   * Gets UID by column name.\n   *\n   * @param  {string} field - Specifies the column name.\n   * @returns {string} Returns the column by field\n   */\n\n\n  Grid.prototype.getUidByColumnField = function (field) {\n    return iterateArrayOrObject(this.getColumns(), function (item) {\n      if (item.field === field) {\n        return item.uid;\n      }\n\n      return undefined;\n    })[0];\n  };\n  /**\n   * Gets column index by column uid value.\n   *\n   * @private\n   * @param  {string} uid - Specifies the column uid.\n   * @returns {number} Returns the column by field\n   */\n\n\n  Grid.prototype.getNormalizedColumnIndex = function (uid) {\n    var index = this.getColumnIndexByUid(uid);\n    return index + this.getIndentCount();\n  };\n  /**\n   * Gets indent cell count.\n   *\n   * @private\n   * @returns {number} Returns the indent count\n   */\n\n\n  Grid.prototype.getIndentCount = function () {\n    var index = 0;\n\n    if (this.allowGrouping) {\n      index += this.groupSettings.columns.length;\n    }\n\n    if (this.isDetail()) {\n      index++;\n    }\n\n    if (this.isRowDragable() && isNullOrUndefined(this.rowDropSettings.targetID)) {\n      index++;\n    }\n    /**\n     * TODO: index normalization based on the stacked header, grouping and detailTemplate\n     * and frozen should be handled here\n     */\n\n\n    return index;\n  };\n  /**\n   * Gets the collection of column fields.\n   *\n   * @returns {string[]} Returns the Field names\n   */\n\n\n  Grid.prototype.getColumnFieldNames = function () {\n    var columnNames = [];\n    var column;\n\n    for (var i = 0, len = this.getColumns().length; i < len; i++) {\n      column = this.getColumns()[i];\n\n      if (column.visible) {\n        columnNames.push(column.field);\n      }\n    }\n\n    return columnNames;\n  };\n  /**\n   * Gets a compiled row template.\n   *\n   * @returns {Function} Returns the row TEmplate\n   * @private\n   */\n\n\n  Grid.prototype.getRowTemplate = function () {\n    return this.rowTemplateFn;\n  };\n  /**\n   * Gets a compiled detail row template.\n   *\n   * @private\n   * @returns {Function} Returns the Detail template\n   */\n\n\n  Grid.prototype.getDetailTemplate = function () {\n    return this.detailTemplateFn;\n  };\n  /**\n   * Gets a compiled detail row template.\n   *\n   * @private\n   * @returns {Function}Returns the Edit template\n   */\n\n\n  Grid.prototype.getEditTemplate = function () {\n    return this.editTemplateFn;\n  };\n  /**\n   * Gets a compiled dialog edit header template.\n   *\n   * @private\n   * @returns {Function} returns template function\n   */\n\n\n  Grid.prototype.getEditHeaderTemplate = function () {\n    return this.editHeaderTemplateFn;\n  };\n  /**\n   * Gets a compiled dialog edit footer template.\n   *\n   * @private\n   * @returns {Function} Returns the Footer template\n   */\n\n\n  Grid.prototype.getEditFooterTemplate = function () {\n    return this.editFooterTemplateFn;\n  };\n  /**\n   * Get the names of the primary key columns of the Grid.\n   *\n   * @returns {string[]} Returns the field names\n   */\n\n\n  Grid.prototype.getPrimaryKeyFieldNames = function () {\n    var keys = [];\n\n    for (var k = 0; k < this.columnModel.length; k++) {\n      if (this.columnModel[k].isPrimaryKey) {\n        keys.push(this.columnModel[k].field);\n      }\n    }\n\n    return keys;\n  };\n  /**\n   * Refreshes the Grid header and content.\n   *\n   * @returns {void}\n   */\n\n\n  Grid.prototype.refresh = function () {\n    if (!this.isDestroyed) {\n      this.isManualRefresh = true;\n      this.headerModule.refreshUI();\n      this.updateStackedFilter();\n      this.renderModule.refresh();\n    }\n  };\n  /**\n   * Refreshes the Grid header.\n   *\n   * @returns {void}\n   */\n\n\n  Grid.prototype.refreshHeader = function () {\n    this.headerModule.refreshUI();\n  };\n  /**\n   * Gets the collection of selected rows.\n   *\n   * @returns {Element[]} Returns the element\n   */\n\n\n  Grid.prototype.getSelectedRows = function () {\n    return this.selectionModule ? this.selectionModule.selectedRecords : [];\n  };\n  /**\n   * Gets the collection of selected row indexes.\n   *\n   * @returns {number[]} Returns the Selected row indexes\n   */\n\n\n  Grid.prototype.getSelectedRowIndexes = function () {\n    return this.selectionModule ? this.selectionModule.selectedRowIndexes : [];\n  };\n  /**\n   * Gets the collection of selected row and cell indexes.\n   *\n   * @returns {number[]} Returns the Selected row cell indexes\n   */\n\n\n  Grid.prototype.getSelectedRowCellIndexes = function () {\n    return this.selectionModule ? this.selectionModule.selectedRowCellIndexes : [];\n  };\n  /**\n   * Gets the collection of selected records.\n   *\n   * @returns {Object[]} Returns the selected records\n   * @isGenericType true\n   */\n\n\n  Grid.prototype.getSelectedRecords = function () {\n    return this.selectionModule ? this.selectionModule.getSelectedRecords() : [];\n  };\n  /**\n   * Gets the collection of selected columns uid.\n   *\n   * @returns {string[]} Returns the selected column uid\n   * @isGenericType true\n   */\n\n\n  Grid.prototype.getSelectedColumnsUid = function () {\n    var _this = this;\n\n    var uid = [];\n\n    if (this.selectionModule) {\n      this.selectionModule.selectedColumnsIndexes.filter(function (i) {\n        return uid.push(_this.getColumns()[i].uid);\n      });\n    }\n\n    return uid;\n  };\n  /**\n   * Gets the data module.\n   *\n   * @returns {Data} Returns the data\n   */\n\n\n  Grid.prototype.getDataModule = function () {\n    return this.renderModule.data;\n  };\n  /**\n   * Shows a column by its column name.\n   *\n   * @param  {string|string[]} keys - Defines a single or collection of column names.\n   * @param  {string} showBy - Defines the column key either as field name or header text.\n   * @returns {void}\n   */\n\n\n  Grid.prototype.showColumns = function (keys, showBy) {\n    showBy = showBy ? showBy : 'headerText';\n    this.showHider.show(keys, showBy);\n  };\n  /**\n   * Hides a column by column name.\n   *\n   * @param  {string|string[]} keys - Defines a single or collection of column names.\n   * @param  {string} hideBy - Defines the column key either as field name or header text.\n   * @returns {void}\n   */\n\n\n  Grid.prototype.hideColumns = function (keys, hideBy) {\n    hideBy = hideBy ? hideBy : 'headerText';\n    this.showHider.hide(keys, hideBy);\n  };\n  /**\n   * @hidden\n   * @returns {number} Returns the Frozen column\n   */\n\n\n  Grid.prototype.getFrozenColumns = function () {\n    return this.frozenColumns + this.getFrozenCount(this.columns, 0, 0);\n  };\n  /**\n   * @hidden\n   * @returns {number} Returns the Frozen Right column count\n   */\n\n\n  Grid.prototype.getFrozenRightColumnsCount = function () {\n    return this.frozenRightCount;\n  };\n  /**\n   * @hidden\n   * @returns {number} Returns the Frozen Left column\n   */\n\n\n  Grid.prototype.getFrozenLeftColumnsCount = function () {\n    return this.frozenLeftCount;\n  };\n  /**\n   * @hidden\n   * @returns {number} Returns the movable column count\n   */\n\n\n  Grid.prototype.getMovableColumnsCount = function () {\n    return this.movableCount;\n  };\n  /**\n   * @hidden\n   * @returns {void}\n   */\n\n\n  Grid.prototype.setFrozenCount = function () {\n    this.frozenLeftCount = this.frozenRightCount = this.movableCount = 0;\n    this.visibleFrozenLeft = this.visibleFrozenRight = this.visibleMovable = 0;\n    this.frozenLeftColumns = [];\n    this.frozenRightColumns = [];\n    this.movableColumns = [];\n    this.splitFrozenCount(this.columns);\n\n    if (this.frozenColumns && (this.frozenLeftCount || this.frozenRightCount)) {\n      this.setProperties({\n        frozenColumns: 0\n      }, true);\n    }\n\n    this.setTablesCount();\n\n    if (this.frozenLeftCount && !this.frozenRightCount) {\n      this.frozenName = 'Left';\n    } else if (this.frozenRightCount && !this.frozenLeftCount) {\n      this.frozenName = 'Right';\n    } else if (this.frozenLeftCount && this.frozenRightCount) {\n      this.frozenName = 'Left-Right';\n    }\n  };\n  /**\n   * @hidden\n   * @returns {number} Returns the visible Frozen left count\n   */\n\n\n  Grid.prototype.getVisibleFrozenLeftCount = function () {\n    return this.visibleFrozenLeft;\n  };\n  /**\n   * @hidden\n   * @returns {number} Returns the visible Frozen Right count\n   */\n\n\n  Grid.prototype.getVisibleFrozenRightCount = function () {\n    return this.visibleFrozenRight;\n  };\n  /**\n   * @hidden\n   * @returns {number} Returns the visible movable count\n   */\n\n\n  Grid.prototype.getVisibleMovableCount = function () {\n    return this.visibleMovable;\n  };\n  /**\n   * @hidden\n   * @returns {Column[]} Returns the column\n   */\n\n\n  Grid.prototype.getFrozenRightColumns = function () {\n    return this.frozenRightColumns;\n  };\n  /**\n   * @hidden\n   * @returns {Column[]} Returns the column\n   */\n\n\n  Grid.prototype.getFrozenLeftColumns = function () {\n    return this.frozenLeftColumns;\n  };\n  /**\n   * @hidden\n   * @returns {Column[]} Returns the column\n   */\n\n\n  Grid.prototype.getMovableColumns = function () {\n    return this.movableColumns;\n  };\n\n  Grid.prototype.splitFrozenCount = function (columns) {\n    for (var i = 0; i < columns.length; i++) {\n      if (columns[i].columns) {\n        this.splitFrozenCount(columns[i].columns);\n      } else {\n        if (columns[i].freeze === 'Right') {\n          if (columns[i].visible !== false) {\n            this.visibleFrozenRight++;\n          }\n\n          this.frozenRightColumns.push(columns[i]);\n          this.frozenRightCount++;\n        } else if (columns[i].freeze === 'Left') {\n          if (columns[i].visible !== false) {\n            this.visibleFrozenLeft++;\n          }\n\n          this.frozenLeftColumns.push(columns[i]);\n          this.frozenLeftCount++;\n        } else {\n          if (columns[i].visible !== false) {\n            this.visibleMovable++;\n          }\n\n          this.movableColumns.push(columns[i]);\n          this.movableCount++;\n        }\n      }\n    }\n  };\n  /**\n   * @hidden\n   * @returns {number} Returns the visible frozen columns count\n   */\n\n\n  Grid.prototype.getVisibleFrozenColumns = function () {\n    return this.getVisibleFrozenColumnsCount() + this.getVisibleFrozenCount(this.columns, 0);\n  };\n  /**\n   * Get the current Filter operator and field.\n   *\n   * @returns {FilterUI} Returns the filter UI\n   */\n\n\n  Grid.prototype.getFilterUIInfo = function () {\n    return this.filterModule ? this.filterModule.getFilterUIInfo() : {};\n  };\n\n  Grid.prototype.getVisibleFrozenColumnsCount = function () {\n    var visibleFrozenColumns = 0;\n    var columns = this.columnModel;\n\n    for (var i = 0; i < this.frozenColumns; i++) {\n      if (columns[i].visible) {\n        visibleFrozenColumns++;\n      }\n    }\n\n    if (this.frozenLeftCount || this.frozenRightCount) {\n      for (var i = 0; i < columns.length; i++) {\n        if (columns[i].visible && (columns[i].freeze === 'Left' || columns[i].freeze === 'Right')) {\n          visibleFrozenColumns++;\n        }\n      }\n    }\n\n    return visibleFrozenColumns;\n  };\n\n  Grid.prototype.getVisibleFrozenCount = function (cols, cnt) {\n    if (!this.frozenLeftCount && !this.frozenRightCount) {\n      for (var i = 0, len = cols.length; i < len; i++) {\n        if (cols[i].columns) {\n          cnt = this.getVisibleFrozenCount(cols[i].columns, cnt);\n        } else {\n          if (cols[i].isFrozen && cols[i].visible) {\n            cnt++;\n          }\n        }\n      }\n    }\n\n    return cnt;\n  };\n\n  Grid.prototype.getFrozenCount = function (cols, cnt, index) {\n    for (var i = 0, len = cols.length; i < len; i++) {\n      if (cols[i].columns) {\n        cnt = this.getFrozenCount(cols[i].columns, cnt, index);\n      } else {\n        if (cols[i].isFrozen && index > this.frozenColumns - 1) {\n          cnt++;\n        }\n\n        index++;\n      }\n    }\n\n    return cnt;\n  };\n  /**\n   * Navigates to the specified target page.\n   *\n   * @param  {number} pageNo - Defines the page number to navigate.\n   * @returns {void}\n   */\n\n\n  Grid.prototype.goToPage = function (pageNo) {\n    if (this.pagerModule) {\n      this.pagerModule.goToPage(pageNo);\n    }\n  };\n  /**\n   * Defines the text of external message.\n   *\n   * @param  {string} message - Defines the message to update.\n   * @returns {void}\n   */\n\n\n  Grid.prototype.updateExternalMessage = function (message) {\n    if (this.pagerModule) {\n      this.pagerModule.updateExternalMessage(message);\n    }\n  };\n  /**\n   * Sorts a column with the given options.\n   *\n   * @param {string} columnName - Defines the column name to be sorted.\n   * @param {SortDirection} direction - Defines the direction of sorting field.\n   * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n   * @returns {void}\n   */\n\n\n  Grid.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n    if (this.sortModule) {\n      this.sortModule.sortColumn(columnName, direction, isMultiSort);\n    }\n  };\n  /**\n   * Clears all the sorted columns of the Grid.\n   *\n   * @returns {void}\n   */\n\n\n  Grid.prototype.clearSorting = function () {\n    if (this.sortModule) {\n      this.sortModule.clearSorting();\n    }\n  };\n  /**\n   * Remove sorted column by field name.\n   *\n   * @param {string} field - Defines the column field name to remove sort.\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Grid.prototype.removeSortColumn = function (field) {\n    if (this.sortModule) {\n      this.sortModule.removeSortColumn(field);\n    }\n  };\n  /**\n  * @hidden\n  * @returns {void}\n  */\n\n\n  Grid.prototype.clearGridActions = function () {\n    this.setProperties({\n      sortSettings: {\n        columns: []\n      }\n    }, true);\n    this.setProperties({\n      filterSettings: {\n        columns: []\n      }\n    }, true);\n    this.setProperties({\n      searchSettings: {\n        key: ''\n      }\n    }, true);\n\n    if (this.allowGrouping) {\n      this.setProperties({\n        groupSettings: {\n          columns: []\n        }\n      }, false);\n    } else {\n      this.freezeRefresh();\n    }\n  };\n  /**\n   * Filters grid row by column name with the given options.\n   *\n   * @param  {string} fieldName - Defines the field name of the column.\n   * @param  {string} filterOperator - Defines the operator to filter records.\n   * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n   * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n   * @param  {boolean} matchCase - If match case is set to true, the grid filters the records with exact match. if false, it filters case\n   * insensitive records (uppercase and lowercase letters treated the same).\n   * @param  {boolean} ignoreAccent - If ignoreAccent set to true,\n   * then filter ignores the diacritic characters or accents while filtering.\n   * @param  {string} actualFilterValue - Defines the actual filter value for the filter column.\n   * @param  {string} actualOperator - Defines the actual filter operator for the filter column.\n   * @returns {void}\n   */\n\n\n  Grid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n    if (this.filterModule) {\n      this.filterModule.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    }\n  };\n  /**\n   * Clears all the filtered rows of the Grid.\n   *\n   * @param {string[]} fields - Defines the Fields\n   * @returns {void}\n   */\n\n\n  Grid.prototype.clearFiltering = function (fields) {\n    if (this.filterModule) {\n      this.filterModule.clearFiltering(fields);\n    }\n  };\n  /**\n   * Removes filtered column by field name.\n   *\n   * @param  {string} field - Defines column field name to remove filter.\n   * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Grid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n    if (this.filterModule) {\n      this.filterModule.removeFilteredColsByField(field, isClearFilterBar);\n    }\n  };\n  /**\n   * Selects a row by given index.\n   *\n   * @param  {number} index - Defines the row index.\n   * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n   * @returns {void}\n   */\n\n\n  Grid.prototype.selectRow = function (index, isToggle) {\n    if (this.selectionModule) {\n      this.selectionModule.selectRow(index, isToggle);\n    }\n  };\n  /**\n   * Selects a collection of rows by indexes.\n   *\n   * @param  {number[]} rowIndexes - Specifies the row indexes.\n   * @returns {void}\n   */\n\n\n  Grid.prototype.selectRows = function (rowIndexes) {\n    if (this.selectionModule) {\n      this.selectionModule.selectRows(rowIndexes);\n    }\n  };\n  /**\n   * Deselects the current selected rows and cells.\n   *\n   * @returns {void}\n   */\n\n\n  Grid.prototype.clearSelection = function () {\n    if (this.selectionModule) {\n      this.selectionModule.clearSelection();\n    }\n  };\n  /**\n   * Selects a cell by the given index.\n   *\n   * @param  {IIndex} cellIndex - Defines the row and column indexes.\n   * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n   * @returns {void}\n   */\n\n\n  Grid.prototype.selectCell = function (cellIndex, isToggle) {\n    if (this.selectionModule) {\n      this.selectionModule.selectCell(cellIndex, isToggle);\n    }\n  };\n  /**\n   * Selects a range of cells from start and end indexes.\n   *\n   * @param  {IIndex} startIndex - Specifies the row and column's start index.\n   * @param  {IIndex} endIndex - Specifies the row and column's end index.\n   * @returns {void}\n   */\n\n\n  Grid.prototype.selectCellsByRange = function (startIndex, endIndex) {\n    this.selectionModule.selectCellsByRange(startIndex, endIndex);\n  };\n  /**\n   * Searches Grid records using the given key.\n   * You can customize the default search option by using the\n   * [`searchSettings`](./#searchsettings/).\n   *\n   * @param  {string} searchString - Defines the key.\n   * @returns {void}\n   */\n\n\n  Grid.prototype.search = function (searchString) {\n    if (this.searchModule) {\n      this.searchModule.search(searchString);\n    }\n  };\n  /**\n   * By default, prints all the pages of the Grid and hides the pager.\n   * > You can customize print options using the\n   * [`printMode`](./#printmode).\n   *\n   * @returns {void}\n   */\n\n\n  Grid.prototype.print = function () {\n    if (this.printModule) {\n      this.printModule.print();\n    }\n  };\n  /**\n   * Delete a record with Given options. If fieldname and data is not given then grid will delete the selected record.\n   * > `editSettings.allowDeleting` should be true.\n   *\n   * @param {string} fieldname - Defines the primary key field, 'Name of the column'.\n   * @param {Object} data - Defines the JSON data of the record to be deleted.\n   * @returns {void}\n   */\n\n\n  Grid.prototype.deleteRecord = function (fieldname, data) {\n    if (this.editModule) {\n      this.editModule.deleteRecord(fieldname, data);\n    }\n  };\n  /**\n   * Starts edit the selected row. At least one row must be selected before invoking this method.\n   * `editSettings.allowEditing` should be true.\n   * {% codeBlock src='grid/startEdit/index.md' %}{% endcodeBlock %}\n   *\n   * @returns {void}\n   */\n\n\n  Grid.prototype.startEdit = function () {\n    if (this.editModule) {\n      this.editModule.startEdit();\n    }\n  };\n  /**\n   * If Grid is in editable state, you can save a record by invoking endEdit.\n   *\n   * @returns {void}\n   */\n\n\n  Grid.prototype.endEdit = function () {\n    if (this.editModule) {\n      this.editModule.endEdit();\n    }\n  };\n  /**\n   * Cancels edited state.\n   *\n   * @returns {void}\n   */\n\n\n  Grid.prototype.closeEdit = function () {\n    if (this.editModule) {\n      this.editModule.closeEdit();\n    }\n  };\n  /**\n   * Adds a new record to the Grid. Without passing parameters, it adds empty rows.\n   * > `editSettings.allowEditing` should be true.\n   *\n   * @param {Object} data - Defines the new add record data.\n   * @param {number} index - Defines the row index to be added\n   * @returns {void}\n   */\n\n\n  Grid.prototype.addRecord = function (data, index) {\n    if (this.editModule) {\n      this.editModule.addRecord(data, index);\n    }\n  };\n  /**\n   * Delete any visible row by TR element.\n   *\n   * @param {HTMLTableRowElement} tr - Defines the table row element.\n   * @returns {void}\n   */\n\n\n  Grid.prototype.deleteRow = function (tr) {\n    if (this.editModule) {\n      this.editModule.deleteRow(tr);\n    }\n  };\n  /**\n   * Changes a particular cell into edited state based on the row index and field name provided in the `batch` mode.\n   *\n   * @param {number} index - Defines row index to edit a particular cell.\n   * @param {string} field - Defines the field name of the column to perform batch edit.\n   * @returns {void}\n   */\n\n\n  Grid.prototype.editCell = function (index, field) {\n    if (this.editModule) {\n      this.editModule.editCell(index, field);\n    }\n  };\n  /**\n   * Saves the cell that is currently edited. It does not save the value to the DataSource.\n   *\n   * @returns {void}\n   * {% codeBlock src='grid/saveCell/index.md' %}{% endcodeBlock %}\n   */\n\n\n  Grid.prototype.saveCell = function () {\n    if (this.editModule) {\n      this.editModule.saveCell();\n    }\n  };\n  /**\n   * To update the specified cell by given value without changing into edited state.\n   *\n   * @param {number} rowIndex Defines the row index.\n   * @param {string} field Defines the column field.\n   * @param {string | number | boolean | Date} value - Defines the value to be changed.\n   * @returns {void}\n   */\n\n\n  Grid.prototype.updateCell = function (rowIndex, field, value) {\n    if (this.editModule) {\n      this.editModule.updateCell(rowIndex, field, value);\n    }\n  };\n  /**\n   * To update the specified row by given values without changing into edited state.\n   *\n   * @param {number} index Defines the row index.\n   * @param {Object} data Defines the data object to be updated.\n   * @returns {void}\n   * {% codeBlock src='grid/updateRow/index.md' %}{% endcodeBlock %}\n   */\n\n\n  Grid.prototype.updateRow = function (index, data) {\n    if (this.editModule) {\n      this.editModule.updateRow(index, data);\n    }\n  };\n  /**\n   * Gets the added, edited,and deleted data before bulk save to the DataSource in batch mode.\n   *\n   * @returns {Object} Returns the batch changes\n   */\n\n\n  Grid.prototype.getBatchChanges = function () {\n    if (this.editModule) {\n      return this.editModule.getBatchChanges();\n    }\n\n    return {};\n  };\n  /**\n   * Enables or disables ToolBar items.\n   *\n   * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n   * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n   * @returns {void}\n   */\n\n\n  Grid.prototype.enableToolbarItems = function (items, isEnable) {\n    if (this.toolbarModule) {\n      this.toolbarModule.enableItems(items, isEnable);\n    }\n  };\n  /**\n   * Copy the selected rows or cells data into clipboard.\n   *\n   * @param {boolean} withHeader - Specifies whether the column header text needs to be copied along with rows or cells.\n   * @returns {void}\n   */\n\n\n  Grid.prototype.copy = function (withHeader) {\n    if (this.clipboardModule) {\n      this.clipboardModule.copy(withHeader);\n    }\n  };\n  /**\n   * @hidden\n   * @returns {void}\n   */\n\n\n  Grid.prototype.recalcIndentWidth = function () {\n    var _this = this;\n\n    if (!this.getHeaderTable().querySelector('.e-emptycell')) {\n      return;\n    }\n\n    if (!this.groupSettings.columns.length && !this.isDetail() && !this.isRowDragable() || this.getHeaderTable().querySelector('.e-emptycell').getAttribute('indentRefreshed') || !this.getContentTable()) {\n      return;\n    }\n\n    var indentWidth = this.getHeaderTable().querySelector('.e-emptycell').parentElement.offsetWidth;\n    var headerCol = [].slice.call(this.getHeaderTable().querySelector(literals.colGroup).childNodes);\n    var contentCol = [].slice.call(this.getContentTable().querySelector(literals.colGroup).childNodes);\n    var perPixel = indentWidth / 30;\n    var i = this.getFrozenMode() === 'Right' ? this.frozenRightCount : 0;\n    var parentOffset = this.element.offsetWidth;\n\n    var applyWidth = function (index, width) {\n      if (ispercentageWidth(_this)) {\n        var newWidth = (width / parentOffset * 100).toFixed(1) + '%';\n        headerCol[index].style.width = newWidth;\n        contentCol[index].style.width = newWidth;\n      } else {\n        headerCol[index].style.width = width + 'px';\n        contentCol[index].style.width = width + 'px';\n      }\n\n      _this.notify(events.columnWidthChanged, {\n        index: index,\n        width: width\n      });\n    };\n\n    if (perPixel >= 1) {\n      indentWidth = 30 / perPixel;\n    }\n\n    if (indentWidth < 1) {\n      indentWidth = 1;\n    }\n\n    if (this.enableColumnVirtualization || this.isAutoGen) {\n      indentWidth = 30;\n    }\n\n    while (i < this.groupSettings.columns.length) {\n      applyWidth(i, indentWidth);\n      i++;\n    }\n\n    if (this.isDetail()) {\n      applyWidth(i, indentWidth);\n      i++;\n    }\n\n    if (this.isRowDragable()) {\n      applyWidth(i, indentWidth);\n    }\n\n    this.isAutoGen = false;\n    this.getHeaderTable().querySelector('.e-emptycell').setAttribute('indentRefreshed', 'true');\n  };\n  /**\n   * @hidden\n   * @returns {void}\n   */\n\n\n  Grid.prototype.resetIndentWidth = function () {\n    if (ispercentageWidth(this)) {\n      this.getHeaderTable().querySelector('.e-emptycell').removeAttribute('indentRefreshed');\n      this.widthService.setWidthToColumns();\n      this.recalcIndentWidth();\n    }\n\n    if ((this.width === 'auto' || typeof this.width === 'string' && this.width.indexOf('%') !== -1) && this.getColumns().filter(function (col) {\n      return (!col.width || col.width === 'auto') && col.minWidth;\n    }).length > 0) {\n      var tgridWidth = this.widthService.getTableWidth(this.getColumns());\n      this.widthService.setMinwidthBycalculation(tgridWidth);\n    }\n\n    if (this.isFrozenGrid() && this.widthService) {\n      this.widthService.refreshFrozenScrollbar();\n    }\n\n    if (this.allowTextWrap && this.textWrapSettings.wrapMode !== 'Content') {\n      this.notify(events.refreshHandlers, {});\n    }\n  };\n  /**\n   * @hidden\n   * @returns {boolean} Returns isRowDragable\n   */\n\n\n  Grid.prototype.isRowDragable = function () {\n    return this.allowRowDragAndDrop && !this.rowDropSettings.targetID;\n  };\n  /**\n   * Changes the Grid column positions by field names.\n   *\n   * @param  {string} fromFName - Defines the origin field name.\n   * @param  {string} toFName - Defines the destination field name.\n   * @returns {void}\n   */\n\n\n  Grid.prototype.reorderColumns = function (fromFName, toFName) {\n    if (this.reorderModule) {\n      this.reorderModule.reorderColumns(fromFName, toFName);\n    }\n  };\n  /**\n   * Changes the Grid column positions by field index. If you invoke reorderColumnByIndex multiple times,\n   * then you won't get the same results every time.\n   *\n   * @param  {number} fromIndex - Defines the origin field index.\n   * @param  {number} toIndex - Defines the destination field index.\n   * @returns {void}\n   */\n\n\n  Grid.prototype.reorderColumnByIndex = function (fromIndex, toIndex) {\n    if (this.reorderModule) {\n      this.reorderModule.reorderColumnByIndex(fromIndex, toIndex);\n    }\n  };\n  /**\n   * Changes the Grid column positions by field index. If you invoke reorderColumnByTargetIndex multiple times,\n   * then you will get the same results every time.\n   *\n   * @param  {string} fieldName - Defines the field name.\n   * @param  {number} toIndex - Defines the destination field index.\n   * @returns {void}\n   */\n\n\n  Grid.prototype.reorderColumnByTargetIndex = function (fieldName, toIndex) {\n    if (this.reorderModule) {\n      this.reorderModule.reorderColumnByTargetIndex(fieldName, toIndex);\n    }\n  };\n  /**\n   * Changes the Grid Row position with given indexes.\n   *\n   * @param  {number} fromIndexes - Defines the origin Indexes.\n   * @param  {number} toIndex - Defines the destination Index.\n   * @returns {void}\n   */\n\n\n  Grid.prototype.reorderRows = function (fromIndexes, toIndex) {\n    if (this.rowDragAndDropModule) {\n      this.rowDragAndDropModule.reorderRows(fromIndexes, toIndex);\n    }\n  };\n  /**\n   * @param {ReturnType} e - Defines the Return type\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Grid.prototype.refreshDataSource = function (e) {\n    this.notify('refreshdataSource', e);\n  };\n  /**\n   * @param {boolean} enable -Defines the enable\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Grid.prototype.disableRowDD = function (enable) {\n    var headerTable = this.getHeaderTable();\n    var contentTable = this.getContentTable();\n    var headerRows = headerTable.querySelectorAll('th.e-rowdragheader, th.e-mastercell');\n    var rows = this.getRows();\n    var disValue = enable ? 'none' : '';\n    setStyleAttribute(headerTable.querySelector(literals.colGroup).childNodes[0], {\n      'display': disValue\n    });\n    setStyleAttribute(contentTable.querySelector(literals.colGroup).childNodes[0], {\n      'display': disValue\n    });\n\n    for (var i = 0; i < this.getRows().length; i++) {\n      var ele = rows[i].firstElementChild;\n\n      if (enable) {\n        addClass([ele], 'e-hide');\n      } else {\n        removeClass([ele], ['e-hide']);\n      }\n    }\n\n    for (var j = 0; j < headerTable.querySelectorAll('th.e-rowdragheader, th.e-mastercell').length; j++) {\n      var ele = headerRows[j];\n\n      if (enable) {\n        addClass([ele], 'e-hide');\n      } else {\n        removeClass([ele], ['e-hide']);\n      }\n    }\n  };\n  /**\n   * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n   * > * This method ignores the hidden columns.\n   * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n   *\n   * @param  {string |string[]} fieldNames - Defines the column names.\n   * @returns {void}\n   *\n   *\n   * ```typescript\n   * <div id=\"Grid\"></div>\n   * <script>\n   * let gridObj: Grid = new Grid({\n   *     dataSource: employeeData,\n   *     columns: [\n   *         { field: 'OrderID', headerText: 'Order ID', width:100 },\n   *         { field: 'EmployeeID', headerText: 'Employee ID' }],\n   *     dataBound: () => gridObj.autoFitColumns('EmployeeID')\n   * });\n   * gridObj.appendTo('#Grid');\n   * </script>\n   * ```\n   *\n   */\n\n\n  Grid.prototype.autoFitColumns = function (fieldNames) {\n    if (this.resizeModule) {\n      this.resizeModule.autoFitColumns(fieldNames);\n    }\n  };\n  /**\n   * @param {number} x - Defines the number\n   * @param {number} y - Defines the number\n   * @param {Element} target - Defines the Element\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Grid.prototype.createColumnchooser = function (x, y, target) {\n    if (this.columnChooserModule) {\n      this.columnChooserModule.renderColumnChooser(x, y, target);\n    }\n  };\n\n  Grid.prototype.initializeServices = function () {\n    this.serviceLocator.register('widthService', this.widthService = new ColumnWidthService(this));\n    this.serviceLocator.register('cellRendererFactory', new CellRendererFactory());\n    this.serviceLocator.register('rendererFactory', new RendererFactory());\n    this.serviceLocator.register('localization', this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale));\n    this.serviceLocator.register('valueFormatter', this.valueFormatterService = new ValueFormatter(this.locale));\n    this.serviceLocator.register('showHideService', this.showHider = new ShowHide(this));\n    this.serviceLocator.register('ariaService', this.ariaService = new AriaService());\n    this.serviceLocator.register('focus', this.focusModule = new FocusStrategy(this));\n  };\n\n  Grid.prototype.processModel = function () {\n    var gCols = this.groupSettings.columns;\n    var sCols = this.sortSettings.columns;\n    var flag;\n    var j;\n\n    if (this.allowGrouping) {\n      var _loop_1 = function (i, len) {\n        j = 0;\n\n        for (var sLen = sCols.length; j < sLen; j++) {\n          if (sCols[j].field === gCols[i]) {\n            flag = true;\n            break;\n          }\n        }\n\n        if (!flag) {\n          sCols.push({\n            field: gCols[i],\n            direction: 'Ascending',\n            isFromGroup: true\n          });\n        } else {\n          if (this_1.allowSorting) {\n            this_1.sortedColumns.push(sCols[j].field);\n          } else {\n            sCols[j].direction = 'Ascending';\n          }\n        }\n\n        if (!this_1.groupSettings.showGroupedColumn) {\n          var column = this_1.enableColumnVirtualization ? this_1.columns.filter(function (c) {\n            return c.field === gCols[i];\n          })[0] : this_1.getColumnByField(gCols[i]);\n\n          if (column) {\n            column.visible = false;\n          } else {\n            this_1.log('initial_action', {\n              moduleName: 'group',\n              columnName: gCols[i]\n            });\n          }\n        }\n      };\n\n      var this_1 = this;\n\n      for (var i = 0, len = gCols.length; i < len; i++) {\n        _loop_1(i, len);\n      }\n    }\n\n    if (!gCols.length) {\n      for (var i = 0; i < sCols.length; i++) {\n        this.sortedColumns.push(sCols[i].field);\n      }\n    }\n\n    this.rowTemplateFn = templateCompiler(this.rowTemplate);\n    this.detailTemplateFn = templateCompiler(this.detailTemplate);\n    this.editTemplateFn = templateCompiler(this.editSettings.template);\n    this.editHeaderTemplateFn = templateCompiler(this.editSettings.headerTemplate);\n    this.editFooterTemplateFn = templateCompiler(this.editSettings.footerTemplate);\n\n    if (!isNullOrUndefined(this.parentDetails)) {\n      var value = isNullOrUndefined(this.parentDetails.parentKeyFieldValue) ? 'undefined' : this.parentDetails.parentKeyFieldValue;\n      this.query.where(this.queryString, 'equal', value, true);\n    }\n\n    this.initForeignColumn();\n  };\n\n  Grid.prototype.initForeignColumn = function () {\n    if (this.isForeignKeyEnabled(this.getColumns())) {\n      this.notify(events.initForeignKeyColumn, this.getForeignKeyColumns());\n    }\n  };\n\n  Grid.prototype.enableVerticalRendering = function () {\n    if (this.rowRenderingMode === 'Vertical') {\n      this.element.classList.add('e-row-responsive');\n    } else {\n      this.element.classList.remove('e-row-responsive');\n    }\n  };\n\n  Grid.prototype.gridRender = function () {\n    this.updateRTL();\n\n    if (this.rowRenderingMode === 'Vertical') {\n      this.element.classList.add('e-row-responsive');\n    }\n\n    if (this.enableHover) {\n      this.element.classList.add('e-gridhover');\n    }\n\n    if (Browser.isDevice) {\n      this.element.classList.add('e-device');\n    }\n\n    if (this.rowHeight) {\n      this.element.classList.add('e-grid-min-height');\n    }\n\n    classList(this.element, ['e-responsive', 'e-default'], []);\n    var rendererFactory = this.serviceLocator.getService('rendererFactory');\n    this.headerModule = rendererFactory.getRenderer(RenderType.Header);\n    this.contentModule = rendererFactory.getRenderer(RenderType.Content);\n    this.printModule = new Print(this, this.scrollModule);\n    this.clipboardModule = new Clipboard(this);\n    this.renderModule.render();\n    this.eventInitializer();\n    this.createGridPopUpElement();\n    this.widthService.setWidthToColumns();\n    this.updateGridLines();\n    this.applyTextWrap();\n    this.createTooltip(); //for clip mode ellipsis\n\n    this.enableBoxSelection();\n  };\n\n  Grid.prototype.dataReady = function () {\n    this.scrollModule.setWidth();\n    this.scrollModule.setHeight();\n\n    if (this.height !== 'auto') {\n      this.scrollModule.setPadding();\n    }\n  };\n\n  Grid.prototype.updateRTL = function () {\n    if (this.enableRtl) {\n      this.element.classList.add('e-rtl');\n    } else {\n      this.element.classList.remove('e-rtl');\n    }\n  };\n\n  Grid.prototype.createGridPopUpElement = function () {\n    var popup = this.createElement('div', {\n      className: 'e-gridpopup',\n      styles: 'display:none;'\n    });\n    var content = this.createElement('div', {\n      className: literals.content,\n      attrs: {\n        tabIndex: '-1'\n      }\n    });\n    append([content, this.createElement('div', {\n      className: 'e-uptail e-tail'\n    })], popup);\n    content.appendChild(this.createElement('span'));\n    append([content, this.createElement('div', {\n      className: 'e-downtail e-tail'\n    })], popup);\n    this.element.appendChild(popup);\n  };\n\n  Grid.prototype.updateGridLines = function () {\n    classList(this.element, [], ['e-verticallines', 'e-horizontallines', 'e-hidelines', 'e-bothlines']);\n\n    switch (this.gridLines) {\n      case 'Horizontal':\n        this.element.classList.add('e-horizontallines');\n        break;\n\n      case 'Vertical':\n        this.element.classList.add('e-verticallines');\n        break;\n\n      case 'None':\n        this.element.classList.add('e-hidelines');\n        break;\n\n      case 'Both':\n        this.element.classList.add('e-bothlines');\n        break;\n    }\n\n    this.updateResizeLines();\n  };\n\n  Grid.prototype.updateResizeLines = function () {\n    if (this.allowResizing && !(this.gridLines === 'Vertical' || this.gridLines === 'Both')) {\n      this.element.classList.add('e-resize-lines');\n    } else {\n      this.element.classList.remove('e-resize-lines');\n    }\n  };\n  /**\n   * The function is used to apply text wrap\n   *\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Grid.prototype.applyTextWrap = function () {\n    if (this.allowTextWrap) {\n      var headerRows = [].slice.call(this.element.getElementsByClassName('e-columnheader'));\n\n      switch (this.textWrapSettings.wrapMode) {\n        case 'Header':\n          wrap(this.element, false);\n          wrap(this.getContent(), false);\n          wrap(headerRows, true);\n          break;\n\n        case 'Content':\n          wrap(this.getContent(), true);\n          wrap(this.element, false);\n          wrap(headerRows, false);\n          break;\n\n        default:\n          wrap(this.element, true);\n          wrap(this.getContent(), false);\n          wrap(headerRows, false);\n      }\n\n      if (this.textWrapSettings.wrapMode !== 'Content') {\n        this.notify(events.refreshHandlers, {});\n      }\n    }\n  };\n  /**\n   * The function is used to remove text wrap\n   *\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Grid.prototype.removeTextWrap = function () {\n    wrap(this.element, false);\n    var headerRows = [].slice.call(this.element.getElementsByClassName('e-columnheader'));\n    wrap(headerRows, false);\n    wrap(this.getContent(), false);\n\n    if (this.textWrapSettings.wrapMode !== 'Content') {\n      this.notify(events.refreshHandlers, {});\n    }\n  };\n  /**\n   * The function is used to add Tooltip to the grid cell that has ellipsiswithtooltip clip mode.\n   *\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Grid.prototype.createTooltip = function () {\n    this.toolTipObj = new Tooltip({\n      opensOn: 'custom',\n      content: ''\n    }, this.element);\n  };\n  /** @hidden\n   * @returns {void}\n   */\n\n\n  Grid.prototype.freezeRefresh = function () {\n    this.isFreezeRefresh = true;\n\n    if (this.enableVirtualization) {\n      this.pageSettings.currentPage = 1;\n    }\n\n    this.componentRefresh();\n  };\n\n  Grid.prototype.getTooltipStatus = function (element) {\n    var headerTable = this.getHeaderTable();\n    var headerDivTag = 'e-gridheader';\n    var htable = this.createTable(headerTable, headerDivTag, 'header');\n    var ctable = this.createTable(headerTable, headerDivTag, 'content');\n    var table = element.classList.contains('e-headercell') ? htable : ctable;\n    var ele = element.classList.contains('e-headercell') ? 'th' : 'tr';\n    table.querySelector(ele).className = element.className;\n    table.querySelector(ele).innerHTML = element.innerHTML;\n    var width = table.querySelector(ele).getBoundingClientRect().width;\n    document.body.removeChild(htable);\n    document.body.removeChild(ctable);\n\n    if (width > element.getBoundingClientRect().width) {\n      return true;\n    }\n\n    return false;\n  };\n\n  Grid.prototype.mouseMoveHandler = function (e) {\n    if (this.isEllipsisTooltip()) {\n      var element = parentsUntil(e.target, 'e-ellipsistooltip');\n\n      if (this.prevElement !== element || e.type === 'mouseout') {\n        this.toolTipObj.close();\n      }\n\n      var tagName = e.target.tagName;\n      var elemNames = ['A', 'BUTTON', 'INPUT'];\n\n      if (element && e.type !== 'mouseout' && !(Browser.isDevice && elemNames.indexOf(tagName) !== -1)) {\n        if (element.getAttribute('aria-describedby')) {\n          return;\n        }\n\n        if (this.getTooltipStatus(element)) {\n          if (element.getElementsByClassName('e-headertext').length) {\n            this.toolTipObj.content = element.getElementsByClassName('e-headertext')[0].innerText;\n          } else {\n            this.toolTipObj.content = element.innerText;\n          }\n\n          this.prevElement = element;\n          var col = this.getColumns()[parseInt(element.getAttribute(literals.ariaColIndex), 10)];\n\n          if (col.disableHtmlEncode) {\n            this.toolTipObj.enableHtmlParse = false;\n          }\n\n          this.toolTipObj.open(element);\n        }\n      }\n    }\n\n    this.hoverFrozenRows(e);\n  };\n  /**\n   * @param {MouseEvent} e - Defines the mouse event\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Grid.prototype.hoverFrozenRows = function (e) {\n    if (this.isFrozenGrid()) {\n      var row = parentsUntil(e.target, literals.row);\n\n      if ([].slice.call(this.element.getElementsByClassName('e-frozenhover')).length && e.type === 'mouseout') {\n        var rows = [].slice.call(this.element.getElementsByClassName('e-frozenhover'));\n\n        for (var i = 0; i < rows.length; i++) {\n          rows[i].classList.remove('e-frozenhover');\n        }\n      } else if (row) {\n        var rows = [].slice.call(this.element.querySelectorAll('tr[aria-rowindex=\"' + row.getAttribute(literals.ariaRowIndex) + '\"]'));\n        rows.splice(rows.indexOf(row), 1);\n\n        for (var i = 0; i < rows.length; i++) {\n          if (row.getAttribute('aria-selected') !== 'true' && rows[i]) {\n            rows[i].classList.add('e-frozenhover');\n          } else if (rows[i]) {\n            rows[i].classList.remove('e-frozenhover');\n          }\n        }\n      }\n    }\n  };\n\n  Grid.prototype.isEllipsisTooltip = function () {\n    var cols = this.getColumns();\n\n    if (this.clipMode === 'EllipsisWithTooltip') {\n      return true;\n    }\n\n    for (var i = 0; i < cols.length; i++) {\n      if (cols[i].clipMode === 'EllipsisWithTooltip') {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  Grid.prototype.scrollHandler = function () {\n    if (this.isEllipsisTooltip()) {\n      this.toolTipObj.close();\n    }\n  };\n  /**\n   * To create table for ellipsiswithtooltip\n   *\n   * @param {Element} table - Defines the table\n   * @param {string} tag - Defines the tag\n   * @param {string} type - Defines the type\n   * @returns {HTMLDivElement} Returns the HTML div ELement\n   * @hidden\n   */\n\n\n  Grid.prototype.createTable = function (table, tag, type) {\n    var myTableDiv = this.createElement('div');\n    myTableDiv.className = this.element.className;\n    myTableDiv.style.cssText = 'display: inline-block;visibility:hidden;position:absolute';\n    var mySubDiv = this.createElement('div');\n    mySubDiv.className = tag;\n    var myTable = this.createElement('table');\n    myTable.className = table.className;\n    myTable.style.cssText = 'table-layout: auto;width: auto';\n    var ele = type === 'header' ? 'th' : 'td';\n    var myTr = this.createElement('tr');\n    var mytd = this.createElement(ele);\n    myTr.appendChild(mytd);\n    myTable.appendChild(myTr);\n    mySubDiv.appendChild(myTable);\n    myTableDiv.appendChild(mySubDiv);\n    document.body.appendChild(myTableDiv);\n    return myTableDiv;\n  };\n\n  Grid.prototype.onKeyPressed = function (e) {\n    if (e.action === 'tab' || e.action === 'shiftTab') {\n      this.toolTipObj.close();\n    }\n  };\n  /**\n   * Binding events to the element while component creation.\n   *\n   * @hidden\n   * @returns {void}\n   */\n\n\n  Grid.prototype.wireEvents = function () {\n    EventHandler.add(this.element, 'click', this.mouseClickHandler, this);\n    EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n    EventHandler.add(this.element, 'focusout', this.focusOutHandler, this);\n    EventHandler.add(this.element, 'dblclick', this.dblClickHandler, this);\n    EventHandler.add(this.element, 'keydown', this.keyPressHandler, this); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n    EventHandler.add(window, 'resize', this.resetIndentWidth, this);\n\n    if (this.allowKeyboard) {\n      this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n    }\n\n    this.keyboardModule = new KeyboardEvents(this.element, {\n      keyAction: this.keyActionHandler.bind(this),\n      keyConfigs: this.keyConfigs,\n      eventName: 'keydown'\n    });\n    EventHandler.add(this.getContent().firstElementChild, 'scroll', this.scrollHandler, this);\n    EventHandler.add(this.element, 'mousemove', this.mouseMoveHandler, this);\n    EventHandler.add(this.element, 'mouseout', this.mouseMoveHandler, this);\n    EventHandler.add(this.getContent(), 'touchstart', this.tapEvent, this);\n    EventHandler.add(document.body, 'keydown', this.keyDownHandler, this);\n  };\n  /**\n   * Unbinding events from the element while component destroy.\n   *\n   * @hidden\n   * @returns {void}\n   */\n\n\n  Grid.prototype.unwireEvents = function () {\n    EventHandler.remove(this.element, 'click', this.mouseClickHandler);\n    EventHandler.remove(this.element, 'touchend', this.mouseClickHandler);\n    EventHandler.remove(this.element, 'focusout', this.focusOutHandler);\n    EventHandler.remove(this.element, 'dblclick', this.dblClickHandler);\n    EventHandler.remove(this.getContent().firstElementChild, 'scroll', this.scrollHandler);\n    EventHandler.remove(this.element, 'mousemove', this.mouseMoveHandler);\n    EventHandler.remove(this.element, 'mouseout', this.mouseMoveHandler);\n    EventHandler.remove(this.element, 'keydown', this.keyPressHandler);\n    EventHandler.remove(this.getContent(), 'touchstart', this.tapEvent);\n    EventHandler.remove(document.body, 'keydown', this.keyDownHandler); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n    EventHandler.remove(window, 'resize', this.resetIndentWidth);\n  };\n  /**\n   * @hidden\n   * @returns {void}\n   */\n\n\n  Grid.prototype.addListener = function () {\n    if (this.isDestroyed) {\n      return;\n    }\n\n    this.on(events.dataReady, this.dataReady, this);\n    this.on(events.contentReady, this.recalcIndentWidth, this);\n    this.on(events.headerRefreshed, this.recalcIndentWidth, this);\n    this.dataBoundFunction = this.refreshMediaCol.bind(this);\n    this.addEventListener(events.dataBound, this.dataBoundFunction);\n    this.on(events.keyPressed, this.onKeyPressed, this);\n  };\n  /**\n   * @hidden\n   * @returns {void}\n   */\n\n\n  Grid.prototype.removeListener = function () {\n    if (this.isDestroyed) {\n      return;\n    }\n\n    this.off(events.dataReady, this.dataReady);\n    this.off(events.contentReady, this.recalcIndentWidth);\n    this.off(events.headerRefreshed, this.recalcIndentWidth);\n    this.removeEventListener(events.dataBound, this.dataBoundFunction);\n    this.off(events.keyPressed, this.onKeyPressed);\n  };\n  /**\n   * Get current visible data of grid.\n   *\n   * @returns {Object[]} Returns the current view records\n   * @isGenericType true\n   */\n\n\n  Grid.prototype.getCurrentViewRecords = function () {\n    if (isGroupAdaptive(this)) {\n      return isNullOrUndefined(this.currentViewData.records) ? this.currentViewData : this.currentViewData.records;\n    }\n\n    if (this.groupSettings.enableLazyLoading) {\n      return this.currentViewData;\n    }\n\n    return this.allowGrouping && this.groupSettings.columns.length && this.currentViewData.length && this.currentViewData.records ? this.currentViewData.records : this.currentViewData;\n  };\n\n  Grid.prototype.mouseClickHandler = function (e) {\n    if (this.isChildGrid(e) || parentsUntil(e.target, 'e-gridpopup') && e.touches || this.element.getElementsByClassName('e-cloneproperties').length || this.checkEdit(e)) {\n      return;\n    }\n\n    if ((!this.allowRowDragAndDrop && (parentsUntil(e.target, literals.gridContent) || e.target.tagName === 'TD') || !(this.allowGrouping || this.allowReordering) && parentsUntil(e.target, 'e-gridheader')) && e.touches) {\n      return;\n    }\n\n    if (parentsUntil(e.target, 'e-gridheader') && this.allowRowDragAndDrop && !parentsUntil(e.target, 'e-filterbarcell')) {\n      e.preventDefault();\n    }\n\n    var args = this.getRowInfo(e.target);\n    var cancel = 'cancel';\n    args[cancel] = false;\n    var isDataRow = false;\n    var tr = closest(e.target, 'tr');\n\n    if (tr && tr.getAttribute('data-uid')) {\n      var rowObj = this.getRowObjectFromUID(tr.getAttribute('data-uid'));\n      isDataRow = rowObj ? rowObj.isDataRow : false;\n    }\n\n    if (isDataRow) {\n      this.trigger(events.recordClick, args);\n    }\n\n    this.notify(events.click, e);\n  };\n\n  Grid.prototype.checkEdit = function (e) {\n    var tr = parentsUntil(e.target, literals.row);\n    var isEdit = this.editSettings.mode !== 'Batch' && this.isEdit && tr && (tr.classList.contains(literals.editedRow) || tr.classList.contains(literals.addedRow));\n    return !parentsUntil(e.target, 'e-unboundcelldiv') && (isEdit || parentsUntil(e.target, literals.rowCell) && parentsUntil(e.target, literals.rowCell).classList.contains('e-editedbatchcell'));\n  };\n\n  Grid.prototype.dblClickHandler = function (e) {\n    var grid = parentsUntil(e.target, 'e-grid');\n\n    if (isNullOrUndefined(grid) || grid.id !== this.element.id || closest(e.target, '.e-unboundcelldiv')) {\n      return;\n    }\n\n    var dataRow = false;\n    var tr = closest(e.target, 'tr');\n\n    if (tr && tr.getAttribute('data-uid')) {\n      var rowObj = this.getRowObjectFromUID(tr.getAttribute('data-uid'));\n      dataRow = rowObj ? rowObj.isDataRow : false;\n    }\n\n    var args = this.getRowInfo(e.target);\n    args.target = e.target;\n\n    if (dataRow) {\n      this.trigger(events.recordDoubleClick, args);\n    }\n\n    this.notify(events.dblclick, e);\n  };\n\n  Grid.prototype.focusOutHandler = function (e) {\n    if (this.isChildGrid(e)) {\n      return;\n    }\n\n    if (!parentsUntil(e.target, 'e-grid')) {\n      this.element.querySelector('.e-gridpopup').style.display = 'None';\n    }\n\n    var filterClear = this.element.querySelector('.e-cancel:not(.e-hide)');\n\n    if (filterClear) {\n      filterClear.classList.add('e-hide');\n    }\n\n    var relatedTarget = e.relatedTarget;\n    var ariaOwns = relatedTarget ? relatedTarget.getAttribute('aria-owns') : null;\n\n    if ((!relatedTarget || !parentsUntil(relatedTarget, 'e-grid') && (!isNullOrUndefined(ariaOwns) && ariaOwns) !== e.target.getAttribute('aria-owns')) && !this.keyPress && this.isEdit && !Browser.isDevice) {\n      if (this.editSettings.mode === 'Batch' && !((parentsUntil(relatedTarget, 'e-ddl') || parentsUntil(relatedTarget, 'e-ddt')) && parentsUntil(relatedTarget, 'e-input-group'))) {\n        this.editModule.saveCell();\n        this.notify(events.editNextValCell, {});\n      }\n\n      if (this.editSettings.mode === 'Normal') {\n        this.editModule.editFormValidate();\n      }\n    }\n\n    this.keyPress = false;\n  };\n\n  Grid.prototype.isChildGrid = function (e) {\n    var gridElement = parentsUntil(e.target, 'e-grid');\n\n    if (gridElement && gridElement.id !== this.element.id) {\n      return true;\n    }\n\n    return false;\n  };\n  /**\n   * @param {Object} persistedData - Defines the persisted data\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Grid.prototype.mergePersistGridData = function (persistedData) {\n    var data = this.getLocalData();\n\n    if (!(isNullOrUndefined(data) || data === '') || !isNullOrUndefined(persistedData)) {\n      var dataObj = !isNullOrUndefined(persistedData) ? persistedData : JSON.parse(data);\n\n      if (this.enableVirtualization) {\n        dataObj.pageSettings.currentPage = 1;\n      }\n\n      var keys = Object.keys(dataObj);\n      this.isProtectedOnChange = true;\n\n      for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n        var key = keys_1[_i];\n\n        if (typeof this[key] === 'object' && !isNullOrUndefined(this[key])) {\n          if (Array.isArray(this[key]) && key === 'columns') {\n            setColumnIndex(this[key]);\n            this.mergeColumns(dataObj[key], this[key]);\n            this[key] = dataObj[key];\n          } else {\n            extend(this[key], dataObj[key]);\n          }\n        } else {\n          this[key] = dataObj[key];\n        }\n      }\n\n      this.isProtectedOnChange = false;\n    }\n  };\n\n  Grid.prototype.mergeColumns = function (storedColumn, columns) {\n    var storedColumns = storedColumn;\n\n    var _loop_2 = function (i) {\n      var localCol = columns.filter(function (tCol) {\n        return tCol.index === storedColumns[i].index;\n      })[0];\n\n      if (!isNullOrUndefined(localCol)) {\n        if (localCol.columns && localCol.columns.length) {\n          this_2.mergeColumns(storedColumns[i].columns, localCol.columns);\n          storedColumns[i] = extend(localCol, storedColumns[i], {}, true);\n        } else {\n          storedColumns[i] = extend(localCol, storedColumns[i], {}, true);\n        }\n      }\n    };\n\n    var this_2 = this;\n\n    for (var i = 0; i < storedColumns.length; i++) {\n      _loop_2(i);\n    }\n  };\n  /**\n   * @hidden\n   * @returns {boolean} Returns the isDetail\n   */\n\n\n  Grid.prototype.isDetail = function () {\n    return !isNullOrUndefined(this.detailTemplate) || !isNullOrUndefined(this.childGrid);\n  };\n\n  Grid.prototype.isCommandColumn = function (columns) {\n    var _this = this;\n\n    return columns.some(function (col) {\n      if (col.columns) {\n        return _this.isCommandColumn(col.columns);\n      }\n\n      return !!(col.commands || col.commandsTemplate);\n    });\n  };\n\n  Grid.prototype.isForeignKeyEnabled = function (columns) {\n    var _this = this;\n\n    return columns.some(function (col) {\n      if (col.columns) {\n        return _this.isForeignKeyEnabled(col.columns);\n      }\n\n      return !!(col.dataSource && col.foreignKeyValue);\n    });\n  };\n\n  Grid.prototype.keyPressHandler = function (e) {\n    var presskey = extend(e, {\n      cancel: false\n    });\n    this.trigger('keyPressed', presskey);\n\n    if (presskey.cancel === true) {\n      e.stopImmediatePropagation();\n    }\n  };\n\n  Grid.prototype.keyDownHandler = function (e) {\n    if (e.altKey) {\n      if (e.keyCode === 74) {\n        //alt j\n        if (this.keyA) {\n          //alt A J\n          this.notify(events.groupCollapse, {\n            target: e.target,\n            collapse: false\n          });\n          this.keyA = false;\n        } else {\n          this.focusModule.focusHeader();\n          this.focusModule.addOutline();\n        }\n      }\n\n      if (e.keyCode === 87) {\n        //alt w\n        this.focusModule.focusContent();\n        this.focusModule.addOutline();\n      }\n\n      if (e.keyCode === 65) {\n        //alt A\n        this.keyA = true;\n      }\n\n      if (e.keyCode === 72 && this.keyA) {\n        //alt A H\n        this.notify(events.groupCollapse, {\n          target: e.target,\n          collapse: true\n        });\n        this.keyA = false;\n      }\n    }\n\n    if (e.keyCode === 13) {\n      this.notify(events.enterKeyHandler, e);\n    }\n  };\n\n  Grid.prototype.keyActionHandler = function (e) {\n    if (this.isChildGrid(e) || this.isEdit && e.action !== 'escape' && e.action !== 'enter' && e.action !== 'shiftEnter' && e.action !== 'tab' && e.action !== 'shiftTab') {\n      return;\n    } else {\n      this.keyPress = true;\n    }\n\n    if (this.allowKeyboard) {\n      if (e.action === 'ctrlPlusP') {\n        e.preventDefault();\n        this.print();\n      }\n\n      this.notify(events.keyPressed, e);\n    }\n  };\n  /**\n   * @param {Function[]} modules - Defines the modules\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Grid.prototype.setInjectedModules = function (modules) {\n    this.injectedModules = modules;\n  };\n\n  Grid.prototype.updateColumnObject = function () {\n    prepareColumns(this.columns, this.enableColumnVirtualization, this);\n    setColumnIndex(this.columns);\n    this.initForeignColumn();\n    this.notify(events.autoCol, {});\n  };\n  /**\n   * Gets the foreign columns from Grid.\n   *\n   * @returns {Column[]} Returns Foreign key column\n   */\n\n\n  Grid.prototype.getForeignKeyColumns = function () {\n    return this.getColumns().filter(function (col) {\n      return col.isForeignColumn();\n    });\n  };\n  /**\n   * @hidden\n   * @returns {number} Returns row height\n   */\n\n\n  Grid.prototype.getRowHeight = function () {\n    return this.rowHeight ? this.rowHeight : getRowHeight(this.element);\n  };\n  /**\n   * Refreshes the Grid column changes.\n   *\n   * @returns {void}\n   */\n\n\n  Grid.prototype.refreshColumns = function () {\n    this.setFrozenCount();\n    var fCnt = this.getContent().querySelector('.e-frozen-left-content');\n    var frCnt = this.getContent().querySelector('.e-frozen-right-content');\n    var isColFrozen = !this.frozenRightCount && !this.frozenLeftCount;\n    var isFrozen = this.getFrozenColumns() !== 0;\n\n    if (!isFrozen && (!fCnt && this.frozenLeftCount || !frCnt && this.frozenRightCount || fCnt && !this.frozenLeftCount || frCnt && !this.frozenRightCount)) {\n      this.tableIndex = 0;\n      this.tablesCount = 1;\n\n      if (this.enableColumnVirtualization) {\n        this.columnModel = [];\n        this.updateColumnModel(this.columns);\n      }\n\n      this.freezeRefresh();\n    } else if (isColFrozen && (this.getFrozenColumns() === 1 && !fCnt || this.getFrozenColumns() === 0 && fCnt)) {\n      this.tableIndex = 0;\n      this.tablesCount = 1;\n\n      if (this.enableColumnVirtualization) {\n        this.columnModel = [];\n        this.updateColumnModel(this.columns);\n      }\n\n      this.freezeRefresh();\n    } else {\n      this.isPreventScrollEvent = true;\n      this.updateColumnObject();\n      this.checkLockColumns(this.getColumns());\n      this.refresh();\n\n      if (this.isFrozenGrid()) {\n        var mTbl = this.contentModule.getMovableContent().querySelector('.' + literals.table);\n        remove(mTbl.querySelector(literals.colGroup));\n        var colGroup = this.getHeaderContent().querySelector('.' + literals.movableHeader).querySelector(literals.colGroup).cloneNode(true);\n        mTbl.insertBefore(colGroup, mTbl.querySelector(literals.tbody));\n\n        if (this.getFrozenMode() === 'Left-Right') {\n          var frTbl = this.contentModule.getFrozenRightContent().querySelector('.' + literals.table);\n          remove(frTbl.querySelector(literals.colGroup));\n          var colGrp = this.getHeaderContent().querySelector('.e-frozen-right-header').querySelector(literals.colGroup).cloneNode(true);\n          frTbl.insertBefore(colGrp, frTbl.querySelector(literals.tbody));\n        }\n      }\n    }\n\n    if (this.isFrozenGrid()) {\n      var left = this.getContent().querySelector('.e-movablescrollbar').scrollLeft;\n      this.headerModule.getMovableHeader().scrollLeft = left;\n      this.contentModule.getMovableContent().scrollLeft = left;\n    }\n  };\n  /**\n   * Export Grid data to Excel file(.xlsx).\n   *\n   * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the Grid.\n   * @param  {boolean} isMultipleExport - Define to enable multiple export.\n   * @param  {Workbook} workbook - Defines the Workbook if multiple export is enabled.\n   * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n   * @returns {Promise<any>} Returns the excelexport\n   */\n\n\n  Grid.prototype.excelExport = function (excelExportProperties, isMultipleExport, // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  workbook, isBlob) {\n    return this.excelExportModule ? this.excelExportModule.Map(this, excelExportProperties, isMultipleExport, workbook, false, isBlob) : null;\n  };\n  /**\n   * Export Grid data to CSV file.\n   *\n   * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the Grid.\n   * @param  {boolean} isMultipleExport - Define to enable multiple export.\n   * @param  {Workbook} workbook - Defines the Workbook if multiple export is enabled.\n   * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n   * @returns {Promise<any>} Returns csv export\n   */\n\n\n  Grid.prototype.csvExport = function (excelExportProperties, // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  isMultipleExport, workbook, isBlob) {\n    return this.excelExportModule ? this.excelExportModule.Map(this, excelExportProperties, isMultipleExport, workbook, true, isBlob) : null;\n  };\n  /**\n   * Export Grid data to PDF document.\n   *\n   * @param {pdfExportProperties} pdfExportProperties - Defines the export properties of the Grid.\n   * @param {isMultipleExport} isMultipleExport - Define to enable multiple export.\n   * @param {pdfDoc} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n   * @param {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n   * @returns {Promise<any>} Returns pdfexport\n   */\n\n\n  Grid.prototype.pdfExport = function (pdfExportProperties, isMultipleExport, pdfDoc, isBlob) {\n    return this.pdfExportModule ? this.pdfExportModule.Map(this, pdfExportProperties, isMultipleExport, pdfDoc, isBlob) : null;\n  };\n  /**\n   * Groups a column by column name.\n   *\n   * @param  {string} columnName - Defines the column name to group.\n   * @returns {void}\n   */\n\n\n  Grid.prototype.groupColumn = function (columnName) {\n    if (this.groupModule) {\n      this.groupModule.groupColumn(columnName);\n    }\n  };\n  /**\n   * Expands all the grouped rows of the Grid.\n   *\n   * @returns {void}\n   */\n\n\n  Grid.prototype.groupExpandAll = function () {\n    if (this.groupModule) {\n      this.groupModule.expandAll();\n    }\n  };\n  /**\n   * Collapses all the grouped rows of the Grid.\n   *\n   * @returns {void}\n   */\n\n\n  Grid.prototype.groupCollapseAll = function () {\n    if (this.groupModule) {\n      this.groupModule.collapseAll();\n    }\n  };\n  /**\n   * Expands or collapses grouped rows by target element.\n   *\n   * @param  {Element} target - Defines the target element of the grouped row.\n   * @returns {void}\n   */\n  // public expandCollapseRows(target: Element): void {\n  //     if (this.groupModule) {\n  //         this.groupModule.expandCollapseRows(target);\n  //     }\n  // }\n\n  /**\n   * Clears all the grouped columns of the Grid.\n   *\n   * @returns {void}\n   */\n\n\n  Grid.prototype.clearGrouping = function () {\n    if (this.groupModule) {\n      this.groupModule.clearGrouping();\n    }\n  };\n  /**\n   * Ungroups a column by column name.\n   *\n   * @param  {string} columnName - Defines the column name to ungroup.\n   * {% codeBlock src='grid/ungroupColumn/index.md' %}{% endcodeBlock %}\n   * @returns {void}\n   */\n\n\n  Grid.prototype.ungroupColumn = function (columnName) {\n    if (this.groupModule) {\n      this.groupModule.ungroupColumn(columnName);\n    }\n  };\n  /**\n   * Column chooser can be displayed on screen by given position(X and Y axis).\n   *\n   * @param {number} x - Defines the X axis.\n   * @param {number} y - Defines the Y axis.\n   * @returns {void}\n   */\n\n\n  Grid.prototype.openColumnChooser = function (x, y) {\n    if (this.columnChooserModule) {\n      this.columnChooserModule.openColumnChooser(x, y);\n    }\n  };\n\n  Grid.prototype.scrollRefresh = function () {\n    var _this = this;\n\n    var refresh = function () {\n      _this.scrollModule.refresh();\n\n      _this.off(events.contentReady, refresh);\n    };\n\n    this.on(events.contentReady, refresh, this);\n  };\n  /**\n   * Collapses a detail row with the given target.\n   *\n   * @param  {Element} target - Defines the expanded element to collapse.\n   * @returns {void}\n   */\n  // public detailCollapse(target: number | Element): void {\n  //     if (this.detailRowModule) {\n  //         this.detailRowModule.collapse(target);\n  //     }\n  // }\n\n  /**\n   * Collapses all the detail rows of the Grid.\n   *\n   * @returns {void}\n   */\n\n\n  Grid.prototype.detailCollapseAll = function () {\n    if (this.detailRowModule) {\n      this.detailRowModule.collapseAll();\n    }\n  };\n  /**\n   * Expands a detail row with the given target.\n   *\n   * @param  {Element} target - Defines the collapsed element to expand.\n   * @returns {void}\n   */\n  // public detailExpand(target: number | Element): void {\n  //     if (this.detailRowModule) {\n  //         this.detailRowModule.expand(target);\n  //     }\n  // }\n\n  /**\n   * Expands all the detail rows of the Grid.\n   *\n   * @returns {void}\n   */\n\n\n  Grid.prototype.detailExpandAll = function () {\n    if (this.detailRowModule) {\n      this.detailRowModule.expandAll();\n    }\n  };\n  /**\n   * Deselects the currently selected cells.\n   *\n   * @returns {void}\n   */\n\n\n  Grid.prototype.clearCellSelection = function () {\n    if (this.selectionModule) {\n      this.selectionModule.clearCellSelection();\n    }\n  };\n  /**\n   * Deselects the currently selected rows.\n   *\n   * @returns {void}\n   */\n\n\n  Grid.prototype.clearRowSelection = function () {\n    if (this.selectionModule) {\n      this.selectionModule.clearRowSelection();\n    }\n  };\n  /**\n   * Selects a collection of cells by row and column indexes.\n   *\n   * @param  {ISelectedCell[]} rowCellIndexes - Specifies the row and column indexes.\n   * @returns {void}\n   */\n\n\n  Grid.prototype.selectCells = function (rowCellIndexes) {\n    if (this.selectionModule) {\n      this.selectionModule.selectCells(rowCellIndexes);\n    }\n  };\n  /**\n   * Selects a range of rows from start and end row indexes.\n   *\n   * @param  {number} startIndex - Specifies the start row index.\n   * @param  {number} endIndex - Specifies the end row index.\n   * @returns {void}\n   */\n\n\n  Grid.prototype.selectRowsByRange = function (startIndex, endIndex) {\n    if (this.selectionModule) {\n      this.selectionModule.selectRowsByRange(startIndex, endIndex);\n    }\n  };\n  /**\n   * @hidden\n   * @returns {boolean} Returns whether context menu is open or not\n   */\n\n\n  Grid.prototype.isContextMenuOpen = function () {\n    return this.contextMenuModule && this.contextMenuModule.isOpen;\n  };\n  /**\n   * @param {Function} module - Defines the module\n   * @returns {boolean} return the injected modules\n   * @hidden\n   */\n\n\n  Grid.prototype.ensureModuleInjected = function (module) {\n    return this.getInjectedModules().indexOf(module) >= 0;\n  };\n  /**\n   * Destroys the given template reference.\n   *\n   * @param {string[]} propertyNames - Defines the collection of template name.\n   * @param {any} index - specifies the index\n   */\n  // eslint-disable-next-line\n\n\n  Grid.prototype.destroyTemplate = function (propertyNames, index) {\n    this.clearTemplate(propertyNames, index);\n  };\n  /**\n   * @param {string | string[]} type - Defines the type\n   * @param {Object} args - Defines the arguments\n   * @returns {void}\n   * @hidden\n   * @private\n   */\n\n\n  Grid.prototype.log = function (type, args) {\n    // eslint-disable-next-line\n    this.loggerModule ? this.loggerModule.log(type, args) : function () {\n      return 0;\n    }();\n  };\n  /**\n   * @param {Element} element - Defines the element\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Grid.prototype.applyBiggerTheme = function (element) {\n    if (this.element.classList.contains('e-bigger')) {\n      element.classList.add('e-bigger');\n    }\n  };\n  /**\n   * @hidden\n   * @returns {Object} Returns the previous row data\n   */\n\n\n  Grid.prototype.getPreviousRowData = function () {\n    var previousRowData = this.getRowsObject()[this.getRows().length - 1].data;\n    return previousRowData;\n  };\n  /**\n   * Hides the scrollbar placeholder of Grid content when grid content is not overflown.\n   *\n   * @returns {void}\n   */\n\n\n  Grid.prototype.hideScroll = function () {\n    var content = this.getContent().querySelector('.' + literals.content);\n    var scrollBar = this.getContent().querySelector('.e-scrollbar');\n\n    if (content.scrollHeight <= content.clientHeight) {\n      this.scrollModule.removePadding();\n      content.style.overflowY = 'auto';\n    }\n\n    if (this.isFrozenGrid() && scrollBar) {\n      var mvblScrollBar = this.getContent().querySelector('.e-movablescrollbar');\n      var mvblChild = this.getContent().querySelector('.e-movablechild');\n      scrollBar.style.display = 'flex';\n\n      if (mvblScrollBar.offsetWidth >= mvblChild.offsetWidth) {\n        scrollBar.style.display = 'none';\n        this.notify(events.frozenHeight, 0);\n      }\n    }\n  };\n  /**\n   * Get row index by primary key or row data.\n   *\n   * @param  {string | Object} value - Defines the primary key value.\n   * @returns {number} Returns the index\n   */\n\n\n  Grid.prototype.getRowIndexByPrimaryKey = function (value) {\n    var pkName = this.getPrimaryKeyFieldNames()[0];\n    value = typeof value === 'object' ? value[pkName] : value;\n    var rows = this.getRowsObject();\n\n    for (var i = 0; i < rows.length; i++) {\n      if (rows[i].isDetailRow || rows[i].isCaptionRow) {\n        continue;\n      }\n\n      var pKvalue = rows[i].data[pkName];\n\n      if (pkName.split('.').length > 1) {\n        pKvalue = performComplexDataOperation(pkName, rows[i].data);\n      }\n\n      if (pKvalue === value) {\n        return rows[i].index;\n      }\n    }\n\n    return -1;\n  };\n  /**\n   * @param {string} field - Defines the field name\n   * @returns {Column} returns the column\n   * @hidden\n   */\n  // Need to have all columns while filtering with ColumnVirtualization.\n\n\n  Grid.prototype.grabColumnByFieldFromAllCols = function (field) {\n    var column;\n    this.columnModel = [];\n    this.updateColumnModel(this.columns);\n    var gCols = this.columnModel;\n\n    for (var i = 0; i < gCols.length; i++) {\n      if (field === gCols[i].field) {\n        column = gCols[i];\n      }\n    }\n\n    return column;\n  };\n  /**\n   * @param {string} uid - Defines the uid\n   * @returns {Column} returns the column\n   * @hidden\n   */\n  // Need to have all columns while filtering with ColumnVirtualization.\n\n\n  Grid.prototype.grabColumnByUidFromAllCols = function (uid) {\n    var column;\n    this.columnModel = [];\n    this.updateColumnModel(this.columns);\n    var gCols = this.columnModel;\n\n    for (var i = 0; i < gCols.length; i++) {\n      if (uid === gCols[i].uid) {\n        column = gCols[i];\n      }\n    }\n\n    return column;\n  };\n  /**\n   * Get all filtered records from the Grid and it returns array of objects for the local dataSource, returns a promise object if the Grid has remote data.\n   *\n   * @returns {Object[] | Promise<Object>} Returns the filtered records\n   */\n\n\n  Grid.prototype.getFilteredRecords = function () {\n    if (this.allowFiltering && this.filterSettings.columns.length) {\n      var query = this.renderModule.data.generateQuery(true);\n\n      if (this.dataSource && this.renderModule.data.isRemote() && this.dataSource instanceof DataManager) {\n        return this.renderModule.data.getData(this.dataSource, query);\n      } else {\n        if (this.dataSource instanceof DataManager) {\n          return this.dataSource.executeLocal(query);\n        } else {\n          return new DataManager(this.dataSource, query).executeLocal(query);\n        }\n      }\n    }\n\n    return [];\n  };\n\n  Grid.prototype.getUserAgent = function () {\n    var userAgent = Browser.userAgent.toLowerCase();\n    return /iphone|ipod|ipad/.test(userAgent);\n  };\n  /**\n   * @param {TouchEventArgs} e - Defines the TouchEventArgs\n   * @returns {void}\n   * @hidden\n   */\n  // Need to have all columns while filtering with ColumnVirtualization.\n  // eslint-disable-next-line\n\n\n  Grid.prototype.tapEvent = function (e) {\n    if (this.getUserAgent()) {\n      if (!Global.timer) {\n        Global.timer = setTimeout(function () {\n          Global.timer = null;\n        }, 300);\n      } else {\n        clearTimeout(Global.timer);\n        Global.timer = null;\n        this.dblClickHandler(e);\n        this.notify(events.doubleTap, e);\n      }\n    }\n  };\n  /**\n   * @param {string} prefix - specifies the prefix\n   * @returns {string} returns the row uid\n   * @hidden\n   */\n\n\n  Grid.prototype.getRowUid = function (prefix) {\n    return \"\" + prefix + this.rowUid++;\n  };\n  /**\n   * @hidden\n   * @returns {Element} returns the element\n   */\n\n\n  Grid.prototype.getMovableVirtualContent = function () {\n    return this.getContent().querySelector('.' + literals.movableContent);\n  };\n  /**\n   * @hidden\n   * @returns {Element} returns the element\n   */\n\n\n  Grid.prototype.getFrozenVirtualContent = function () {\n    return this.getContent().querySelector('.' + literals.frozenContent);\n  };\n  /**\n   * @hidden\n   * @returns {Element} returns the element\n   */\n\n\n  Grid.prototype.getMovableVirtualHeader = function () {\n    return this.getHeaderContent().querySelector('.' + literals.movableHeader);\n  };\n  /**\n   * @hidden\n   * @returns {Element} returns the element\n   */\n\n\n  Grid.prototype.getFrozenVirtualHeader = function () {\n    return this.getHeaderContent().querySelector('.' + literals.frozenHeader);\n  };\n  /**\n   * @param {string} uid - specifies the uid\n   * @returns {Element} returns the element\n   * @hidden\n   */\n\n\n  Grid.prototype.getRowElementByUID = function (uid) {\n    var rowEle;\n    var rows = [];\n\n    if (this.isFrozenGrid()) {\n      var fRows = [].slice.call(this.getFrozenVirtualContent().querySelector(literals.tbody).children);\n      var mRows = [].slice.call(this.getMovableVirtualContent().querySelector(literals.tbody).children);\n      var frozenRigtRows = [];\n\n      if (this.tablesCount === 3) {\n        frozenRigtRows = [].slice.call(this.getContent().querySelector('.e-frozen-right-content').querySelector(literals.tbody).children);\n      }\n\n      if (this.frozenRows) {\n        rows = [].slice.call(this.getFrozenVirtualHeader().querySelector(literals.tbody).children);\n        rows = rows.concat([].slice.call(this.getMovableVirtualHeader().querySelector(literals.tbody).children));\n\n        if (this.tablesCount === 3) {\n          var frHdr = this.getHeaderContent().querySelector('.e-frozen-right-header');\n          rows = rows.concat([].slice.call(frHdr.querySelector(literals.tbody).children)).concat(frozenRigtRows);\n        }\n\n        rows = rows.concat(fRows).concat(mRows);\n      } else {\n        rows = fRows.concat(mRows).concat(frozenRigtRows);\n      }\n    } else {\n      var cntRows = [].slice.call(this.getContent().querySelector(literals.tbody).children);\n\n      if (this.frozenRows) {\n        rows = [].slice.call(this.getHeaderContent().querySelector(literals.tbody).children);\n        rows = rows.concat(cntRows);\n      } else {\n        rows = cntRows;\n      }\n    }\n\n    for (var _i = 0, rows_2 = rows; _i < rows_2.length; _i++) {\n      var row = rows_2[_i];\n\n      if (row.getAttribute('data-uid') === uid) {\n        rowEle = row;\n        break;\n      }\n    }\n\n    return rowEle;\n  };\n  /**\n   * Gets the hidden columns from the Grid.\n   *\n   * @returns {Column[]} Returns the Column\n   */\n\n\n  Grid.prototype.getHiddenColumns = function () {\n    var cols = [];\n\n    for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n      var col = _a[_i];\n\n      if (col.visible === false) {\n        cols.push(col);\n      }\n    }\n\n    return cols;\n  };\n  /**\n   * calculatePageSizeByParentHeight\n   *\n   * @param {number | string } containerHeight - specifies the container height\n   * @returns {number} returns the page size\n   */\n\n\n  Grid.prototype.calculatePageSizeByParentHeight = function (containerHeight) {\n    if (this.allowPaging) {\n      if (this.allowTextWrap && this.textWrapSettings.wrapMode === 'Header' || !this.allowTextWrap) {\n        var pagesize = 0;\n\n        if (containerHeight.indexOf('%') !== -1) {\n          containerHeight = parseInt(containerHeight, 10) / 100 * this.element.clientHeight;\n        }\n\n        var nonContentHeight = this.getNoncontentHeight() + this.getRowHeight();\n\n        if (containerHeight > nonContentHeight) {\n          var contentHeight = 0;\n          contentHeight = containerHeight - this.getNoncontentHeight();\n          pagesize = contentHeight / this.getRowHeight();\n        }\n\n        if (pagesize > 0) {\n          return Math.floor(pagesize);\n        }\n      }\n    }\n\n    return 0;\n  };\n\n  Grid.prototype.getNoncontentHeight = function () {\n    var height = 0;\n\n    if (!isNullOrUndefined(this.getHeaderContent().clientHeight)) {\n      height += this.getHeaderContent().clientHeight;\n    }\n\n    if (this.toolbar && !isNullOrUndefined(this.element.querySelector('.e-toolbar').clientHeight)) {\n      height += this.element.querySelector('.e-toolbar').clientHeight;\n    }\n\n    if (this.allowPaging && !isNullOrUndefined(this.element.querySelector('.e-gridpager').clientHeight)) {\n      height += this.element.querySelector('.e-gridpager').clientHeight;\n    }\n\n    if (this.showColumnChooser && !isNullOrUndefined(this.element.querySelector('.e-columnheader').clientHeight)) {\n      height += this.element.querySelector('.e-columnheader').clientHeight;\n    }\n\n    if (this.allowGrouping && this.groupSettings.showDropArea && !isNullOrUndefined(this.element.querySelector('.e-groupdroparea').clientHeight)) {\n      height += this.element.querySelector('.e-groupdroparea').clientHeight;\n    }\n\n    if (this.aggregates.length > 0 && !isNullOrUndefined(this.element.querySelector('.e-summaryrow').clientHeight)) {\n      for (var i = 0; i < this.element.getElementsByClassName('e-summaryrow').length; i++) {\n        height += this.element.getElementsByClassName('e-summaryrow')[i].clientHeight;\n      }\n    }\n\n    return height;\n  };\n  /**\n   *To perform aggregate operation on a column.\n   *\n   * @param  {AggregateColumnModel} summaryCol - Pass Aggregate Column details.\n   * @param  {Object} summaryData - Pass JSON Array for which its field values to be calculated.\n   * @returns {number} returns the summary values\n   */\n\n\n  Grid.prototype.getSummaryValues = function (summaryCol, summaryData) {\n    return DataUtil.aggregates[summaryCol.type.toLowerCase()](summaryData, summaryCol.field);\n  };\n  /**\n   * Sends a Post request to export Grid to Excel file in server side.\n   *\n   * @param  {string} url - Pass Url for server side excel export action.\n   * @returns {void}\n   */\n\n\n  Grid.prototype.serverExcelExport = function (url) {\n    this.isExcel = true;\n    this.exportGrid(url);\n  };\n  /**\n   * Sends a Post request to export Grid to Pdf file in server side.\n   *\n   * @param  {string} url - Pass Url for server side pdf export action.\n   * @returns {void}\n   */\n\n\n  Grid.prototype.serverPdfExport = function (url) {\n    this.isExcel = false;\n    this.exportGrid(url);\n  };\n  /**\n   * Sends a Post request to export Grid to CSV file in server side.\n   *\n   * @param  {string} url - Pass Url for server side pdf export action.\n   * @returns {void}\n   */\n\n\n  Grid.prototype.serverCsvExport = function (url) {\n    this.isExcel = true;\n    this.exportGrid(url);\n  };\n  /**\n   * @param {string} url - Defines exporting url\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Grid.prototype.exportGrid = function (url) {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    var grid = this;\n    var query = grid.getDataModule().generateQuery(true);\n    var state = new UrlAdaptor().processQuery(new DataManager({\n      url: ''\n    }), query);\n    var queries = JSON.parse(state.data); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n    var gridModel = JSON.parse(this.addOnPersist(['allowGrouping', 'allowPaging', 'pageSettings', 'sortSettings', 'allowPdfExport', 'allowExcelExport', 'aggregates', 'filterSettings', 'groupSettings', 'columns', 'locale', 'searchSettings']));\n    var include = ['field', 'headerText', 'type', 'format', 'visible', 'foreignKeyValue', 'foreignKeyField', 'template', 'index', 'width', 'textAlign', 'headerTextAlign', 'columns'];\n    gridModel.filterSettings.columns = queries.where;\n    gridModel.searchSettings.fields = queries.search && queries.search[0]['fields'] || [];\n    gridModel.sortSettings.columns = queries.sorted;\n    gridModel.columns = this.setHeaderText(gridModel.columns, include);\n    var form = this.createElement('form', {\n      id: 'ExportForm',\n      styles: 'display:none;'\n    });\n    var gridInput = this.createElement('input', {\n      id: 'gridInput',\n      attrs: {\n        name: 'gridModel'\n      }\n    });\n    gridInput.value = JSON.stringify(gridModel);\n    form.method = 'POST';\n    form.action = url;\n    form.appendChild(gridInput);\n    document.body.appendChild(form);\n    form.submit();\n    form.remove();\n  };\n  /**\n   * @param {Column[]} columns - Defines array of columns\n   * @param {string[]} include - Defines array of sting\n   * @returns {Column[]} returns array of columns\n   * @hidden\n   */\n\n\n  Grid.prototype.setHeaderText = function (columns, include) {\n    for (var i = 0; i < columns.length; i++) {\n      var column = this.getColumnByUid(columns[i].uid);\n      columns[i].headerText = column.headerText;\n\n      if (!isNullOrUndefined(column.template)) {\n        columns[i].template = 'true';\n      }\n\n      if (columns[i].format) {\n        columns[i].format = getNumberFormat(this.getFormat(columns[i].format), columns[i].type, this.isExcel);\n      }\n\n      if (columns[i].columns) {\n        this.setHeaderText(columns[i].columns, include);\n      }\n\n      var keys = Object.keys(columns[i]);\n\n      for (var j = 0; j < keys.length; j++) {\n        if (include.indexOf(keys[j]) < 0) {\n          delete columns[i][keys[j]];\n        }\n      }\n    }\n\n    return columns;\n  };\n\n  Grid.prototype.getFormat = function (format) {\n    return typeof format === 'object' ? !isNullOrUndefined(format.format) ? format.format : format.skeleton : format;\n  };\n  /**\n   * @hidden\n   * @returns {boolean} returns the isCollapseStateEnabled\n   */\n\n\n  Grid.prototype.isCollapseStateEnabled = function () {\n    var isExpanded = 'isExpanded';\n    return this[isExpanded] === false;\n  };\n  /**\n   * @param {number} key - Defines the primary key value.\n   * @param {Object} rowData - Defines the rowData\n   * @returns {void}\n   */\n\n\n  Grid.prototype.updateRowValue = function (key, rowData) {\n    var args = {\n      requestType: 'save',\n      data: rowData\n    };\n    this.showSpinner();\n    this.notify(events.updateData, args);\n    this.refresh();\n  };\n  /**\n   * @hidden\n   * @returns {void}\n   */\n\n\n  Grid.prototype.setForeignKeyData = function () {\n    this.dataBind();\n    var colpending = this.getDataModule().getForeignKeyDataState();\n\n    if (colpending.isPending) {\n      this.getDataModule().setForeignKeyDataState({});\n      colpending.resolver();\n    } else {\n      this.getDataModule().setForeignKeyDataState({\n        isDataChanged: false\n      });\n\n      if (this.contentModule || this.headerModule) {\n        this.renderModule.render();\n      }\n    }\n  };\n  /**\n   * @param {string} field - specifies the field\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Grid.prototype.resetFilterDlgPosition = function (field) {\n    var header = this.getColumnHeaderByField(field);\n\n    if (header) {\n      var target = header.querySelector('.e-filtermenudiv');\n      var filterDlg = this.element.querySelector('.e-filter-popup');\n\n      if (target && filterDlg) {\n        var gClient = this.element.getBoundingClientRect();\n        var fClient = target.getBoundingClientRect();\n\n        if (filterDlg) {\n          filterDlg.style.left = (fClient.right - gClient.left).toString() + 'px';\n        }\n      }\n    }\n  };\n  /**\n   * @hidden\n   * @returns {void}\n   */\n\n\n  Grid.prototype.renderTemplates = function () {\n    var portals = 'portals';\n    this.notify('reactTemplateRender', this[portals]);\n    this.renderReactTemplates();\n  };\n  /**\n   * Apply the changes to the Grid without refreshing the rows.\n   *\n   * @param  {BatchChanges} changes - Defines changes to be updated.\n   * @returns {void}\n   */\n\n\n  Grid.prototype.batchUpdate = function (changes) {\n    this.processRowChanges(changes);\n  };\n  /**\n   * Apply the changes to the Grid in one batch after 50ms without refreshing the rows.\n   *\n   * @param  {BatchChanges} changes - Defines changes to be updated.\n   * @returns {void}\n   */\n\n\n  Grid.prototype.batchAsyncUpdate = function (changes) {\n    this.processBulkRowChanges(changes);\n  };\n\n  Grid.prototype.processBulkRowChanges = function (changes) {\n    var _this = this;\n\n    if (!this.dataToBeUpdated) {\n      this.dataToBeUpdated = Object.assign({\n        addedRecords: [],\n        changedRecords: [],\n        deletedRecords: []\n      }, changes);\n      setTimeout(function () {\n        _this.processRowChanges(_this.dataToBeUpdated);\n\n        _this.dataToBeUpdated = null;\n      }, this.asyncTimeOut);\n    } else {\n      var loopstring = [literals.addedRecords, literals.changedRecords, literals.deletedRecords];\n      var keyField = this.getPrimaryKeyFieldNames()[0];\n\n      for (var i = 0; i < loopstring.length; i++) {\n        if (changes[loopstring[i]]) {\n          compareChanges(this, changes, loopstring[i], keyField);\n        }\n      }\n    }\n  };\n\n  Grid.prototype.processRowChanges = function (changes) {\n    var _this = this;\n\n    var keyField = this.getPrimaryKeyFieldNames()[0];\n    changes = Object.assign({\n      addedRecords: [],\n      changedRecords: [],\n      deletedRecords: []\n    }, changes);\n    var promise = this.getDataModule().saveChanges(changes, keyField, {}, this.getDataModule().generateQuery().requiresCount());\n\n    if (this.getDataModule().isRemote()) {\n      promise.then(function () {\n        _this.setNewData();\n      });\n    } else {\n      this.setNewData();\n    }\n  };\n\n  Grid.prototype.setNewData = function () {\n    var _this = this;\n\n    var oldValues = JSON.parse(JSON.stringify(this.getCurrentViewRecords()));\n    var getData = this.getDataModule().getData({}, this.getDataModule().generateQuery().requiresCount());\n    getData.then(function (e) {\n      _this.bulkRefresh(e.result, oldValues, e.count);\n    });\n  };\n\n  Grid.prototype.deleteRowElement = function (row) {\n    var tr = this.getRowElementByUID(row.uid);\n    var index = parseInt(tr.getAttribute(literals.ariaRowIndex), 10);\n    remove(tr);\n\n    if (this.getFrozenColumns()) {\n      var mtr = this.getMovableRows()[index];\n      remove(mtr);\n    }\n  };\n\n  Grid.prototype.bulkRefresh = function (result, oldValues, count) {\n    var _this = this;\n\n    var rowObj = this.getRowsObject();\n    var keyField = this.getPrimaryKeyFieldNames()[0];\n\n    var _loop_3 = function (i) {\n      if (!result.filter(function (e) {\n        return e[keyField] === rowObj[i].data[keyField];\n      }).length) {\n        this_3.deleteRowElement(rowObj[i]);\n        rowObj.splice(i, 1);\n        i--;\n      }\n\n      out_i_1 = i;\n    };\n\n    var this_3 = this,\n        out_i_1;\n\n    for (var i = 0; i < rowObj.length; i++) {\n      _loop_3(i);\n\n      i = out_i_1;\n    }\n\n    var _loop_4 = function (i) {\n      var isRowExist;\n      oldValues.filter(function (e) {\n        if (e[keyField] === result[i][keyField]) {\n          if (e !== result[i]) {\n            _this.setRowData(result[i][keyField], result[i]);\n          }\n\n          isRowExist = true;\n        }\n      });\n\n      if (!isRowExist) {\n        this_4.renderRowElement(result[i], i);\n      }\n    };\n\n    var this_4 = this;\n\n    for (var i = 0; i < result.length; i++) {\n      _loop_4(i);\n    }\n\n    this.currentViewData = result;\n    var rows = [].slice.call(this.getContentTable().getElementsByClassName(literals.row));\n    resetRowIndex(this, this.getRowsObject(), rows);\n    setRowElements(this);\n\n    if (this.allowPaging) {\n      this.notify(events.inBoundModelChanged, {\n        module: 'pager',\n        properties: {\n          totalRecordsCount: count\n        }\n      });\n    }\n  };\n\n  Grid.prototype.renderRowElement = function (data, index) {\n    var row = new RowRenderer(this.serviceLocator, null, this);\n    var model = new RowModelGenerator(this);\n    var modelData = model.generateRows([data]);\n    var tr = row.render(modelData[0], this.getColumns());\n    var mTr;\n    var mTbody;\n    this.addRowObject(modelData[0], index);\n    var tbody = this.getContentTable().querySelector(literals.tbody);\n\n    if (tbody.querySelector('.e-emptyrow')) {\n      var emptyRow = tbody.querySelector('.e-emptyrow');\n      emptyRow.parentNode.removeChild(emptyRow);\n\n      if (this.getFrozenColumns()) {\n        var moveTbody = this.getContent().querySelector('.' + literals.movableContent).querySelector(literals.tbody);\n        moveTbody.firstElementChild.parentNode.removeChild(moveTbody.firstElementChild);\n      }\n    }\n\n    if (this.getFrozenColumns()) {\n      mTr = renderMovable(tr, this.getFrozenColumns(), this);\n\n      if (this.frozenRows && index < this.frozenRows) {\n        mTbody = this.getHeaderContent().querySelector('.' + literals.movableHeader).querySelector(literals.tbody);\n      } else {\n        mTbody = this.getContent().querySelector('.' + literals.movableContent).querySelector(literals.tbody);\n      }\n\n      mTbody.appendChild(mTr);\n\n      if (this.height === 'auto') {\n        this.notify(events.frozenHeight, {});\n      }\n    }\n\n    if (this.frozenRows && index < this.frozenRows) {\n      tbody = this.getHeaderContent().querySelector(literals.tbody);\n    } else {\n      tbody = this.getContent().querySelector(literals.tbody);\n    }\n\n    tbody = this.getContent().querySelector(literals.tbody);\n    tbody.appendChild(tr);\n  };\n\n  Grid.prototype.addRowObject = function (row, index) {\n    var frzCols = this.getFrozenColumns();\n\n    if (frzCols) {\n      var mRows = this.getMovableRowsObject();\n      var mRow = row.clone();\n      mRow.cells = mRow.cells.slice(frzCols);\n      row.cells = row.cells.slice(0, frzCols);\n      mRows.splice(index, 1, mRow);\n    }\n\n    this.getRowsObject().splice(index, 1, row);\n  };\n  /**\n   * @hidden\n   * @returns {void}\n   */\n\n\n  Grid.prototype.updateVisibleExpandCollapseRows = function () {\n    var rows = this.getRowsObject();\n\n    for (var i = 0, len = rows.length; i < len; i++) {\n      if (rows[i].isDataRow && this.getRowElementByUID(rows[i].uid).style.display === 'none') {\n        rows[i].visible = false;\n      } else {\n        rows[i].visible = true;\n      }\n    }\n  };\n  /**\n   * @param {string | number} height - specifies the height\n   * @returns {number | string} - specifies the height number\n   * @hidden\n   */\n\n\n  Grid.prototype.getHeight = function (height) {\n    if (!Number.isInteger(height) && height.indexOf('%') !== -1) {\n      height = parseInt(height, 10) / 100 * this.element.clientHeight;\n    } else if (!Number.isInteger(height) && this.height !== 'auto') {\n      height = parseInt(height, 10);\n    } else {\n      height = this.height;\n    }\n\n    return height;\n  };\n  /**\n   * @hidden\n   * @returns {Element} - returns frozen right content\n   */\n\n\n  Grid.prototype.getFrozenRightContent = function () {\n    return this.getContent().querySelector('.e-frozen-right-content');\n  };\n  /**\n   * @hidden\n   * @returns {Element} - returns frozen right header\n   */\n\n\n  Grid.prototype.getFrozenRightHeader = function () {\n    return this.getHeaderContent().querySelector('.e-frozen-right-header');\n  };\n  /**\n   * @hidden\n   * @returns {Element} - returns movable header tbody\n   */\n\n\n  Grid.prototype.getMovableHeaderTbody = function () {\n    return this.getMovableVirtualHeader().querySelector(literals.tbody);\n  };\n  /**\n   * @hidden\n   * @returns {Element} - returns movable content tbody\n   */\n\n\n  Grid.prototype.getMovableContentTbody = function () {\n    return this.getMovableVirtualContent().querySelector(literals.tbody);\n  };\n  /**\n   * @hidden\n   * @returns {Element} - returns frozen header tbody\n   */\n\n\n  Grid.prototype.getFrozenHeaderTbody = function () {\n    return this.getFrozenVirtualHeader().querySelector(literals.tbody);\n  };\n  /**\n   * @hidden\n   * @returns {Element} - returns frozen left content tbody\n   */\n\n\n  Grid.prototype.getFrozenLeftContentTbody = function () {\n    return this.getFrozenVirtualContent().querySelector(literals.tbody);\n  };\n  /**\n   * @hidden\n   * @returns {Element} - returns frozen right header tbody\n   */\n\n\n  Grid.prototype.getFrozenRightHeaderTbody = function () {\n    return this.getFrozenRightHeader().querySelector(literals.tbody);\n  };\n  /**\n   * @returns {Element} returns frozen right content tbody\n   * @hidden\n   */\n\n\n  Grid.prototype.getFrozenRightContentTbody = function () {\n    var cnt = this.getFrozenRightContent();\n    var tbody;\n\n    if (cnt) {\n      tbody = this.getFrozenRightContent().querySelector(literals.tbody);\n    }\n\n    return tbody;\n  };\n  /**\n   * @param {boolean} isCustom - Defines custom filter dialog open\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Grid.prototype.showResponsiveCustomFilter = function (isCustom) {\n    if (this.filterModule) {\n      this.filterModule.showCustomFilter(isCustom || this.rowRenderingMode === 'Vertical');\n    }\n  };\n  /**\n   * @param {boolean} isCustom - Defines custom sort dialog open\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Grid.prototype.showResponsiveCustomSort = function (isCustom) {\n    if (this.sortModule) {\n      this.sortModule.showCustomSort(isCustom || this.rowRenderingMode === 'Vertical');\n    }\n  };\n  /**\n   * To manually show the vertical row mode filter dialog\n   *\n   * @returns {void}\n   */\n\n\n  Grid.prototype.showAdaptiveFilterDialog = function () {\n    if (this.enableAdaptiveUI) {\n      this.showResponsiveCustomFilter(true);\n    }\n  };\n  /**\n   * To manually show the vertical row sort filter dialog\n   *\n   * @returns {void}\n   */\n\n\n  Grid.prototype.showAdaptiveSortDialog = function () {\n    if (this.enableAdaptiveUI) {\n      this.showResponsiveCustomSort(true);\n    }\n  };\n  /**\n   * @param {boolean} isColVirtualization - Defines column virtualization\n   * @returns {Column[]} returns array of column models\n   * @hidden\n   */\n\n\n  Grid.prototype.getCurrentVisibleColumns = function (isColVirtualization) {\n    var cols = [];\n    var gridCols = isColVirtualization ? this.getColumns() : this.columnModel;\n\n    for (var _i = 0, gridCols_1 = gridCols; _i < gridCols_1.length; _i++) {\n      var col = gridCols_1[_i];\n\n      if (col.visible) {\n        cols.push(col);\n      }\n    }\n\n    return cols;\n  };\n\n  Grid.prototype.enableInfiniteAggrgate = function () {\n    if (this.enableInfiniteScrolling && this.groupSettings.columns.length && !this.groupSettings.disablePageWiseAggregates) {\n      this.setProperties({\n        groupSettings: {\n          disablePageWiseAggregates: true\n        }\n      }, true);\n    }\n  };\n\n  var Grid_1;\n\n  __decorate([Property()], Grid.prototype, \"parentDetails\", void 0);\n\n  __decorate([Property([])], Grid.prototype, \"columns\", void 0);\n\n  __decorate([Property(true)], Grid.prototype, \"enableAltRow\", void 0);\n\n  __decorate([Property(true)], Grid.prototype, \"enableHover\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"enableAutoFill\", void 0);\n\n  __decorate([Property(true)], Grid.prototype, \"allowKeyboard\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"enableStickyHeader\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"allowTextWrap\", void 0);\n\n  __decorate([Complex({}, TextWrapSettings)], Grid.prototype, \"textWrapSettings\", void 0);\n\n  __decorate([Complex({}, ResizeSettings)], Grid.prototype, \"resizeSettings\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"allowPaging\", void 0);\n\n  __decorate([Complex({}, PageSettings)], Grid.prototype, \"pageSettings\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"enableVirtualization\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"enableColumnVirtualization\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"enableInfiniteScrolling\", void 0);\n\n  __decorate([Complex({}, SearchSettings)], Grid.prototype, \"searchSettings\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"allowSorting\", void 0);\n\n  __decorate([Property('Ellipsis')], Grid.prototype, \"clipMode\", void 0);\n\n  __decorate([Property(true)], Grid.prototype, \"allowMultiSorting\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"allowExcelExport\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"allowPdfExport\", void 0);\n\n  __decorate([Complex({}, SortSettings)], Grid.prototype, \"sortSettings\", void 0);\n\n  __decorate([Complex({}, InfiniteScrollSettings)], Grid.prototype, \"infiniteScrollSettings\", void 0);\n\n  __decorate([Property(true)], Grid.prototype, \"allowSelection\", void 0);\n\n  __decorate([Property(-1)], Grid.prototype, \"selectedRowIndex\", void 0);\n\n  __decorate([Complex({}, SelectionSettings)], Grid.prototype, \"selectionSettings\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"allowFiltering\", void 0);\n\n  __decorate([Property('Horizontal')], Grid.prototype, \"rowRenderingMode\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"enableAdaptiveUI\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"allowReordering\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"allowResizing\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"allowRowDragAndDrop\", void 0);\n\n  __decorate([Complex({}, RowDropSettings)], Grid.prototype, \"rowDropSettings\", void 0);\n\n  __decorate([Complex({}, FilterSettings)], Grid.prototype, \"filterSettings\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"allowGrouping\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"enableImmutableMode\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"showColumnMenu\", void 0);\n\n  __decorate([Complex({}, GroupSettings)], Grid.prototype, \"groupSettings\", void 0);\n\n  __decorate([Complex({}, EditSettings)], Grid.prototype, \"editSettings\", void 0);\n\n  __decorate([Collection([], AggregateRow)], Grid.prototype, \"aggregates\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"showColumnChooser\", void 0);\n\n  __decorate([Complex({}, ColumnChooserSettings)], Grid.prototype, \"columnChooserSettings\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"enableHeaderFocus\", void 0);\n\n  __decorate([Property('auto')], Grid.prototype, \"height\", void 0);\n\n  __decorate([Property('auto')], Grid.prototype, \"width\", void 0);\n\n  __decorate([Property('Default')], Grid.prototype, \"gridLines\", void 0);\n\n  __decorate([Property()], Grid.prototype, \"rowTemplate\", void 0);\n\n  __decorate([Property()], Grid.prototype, \"detailTemplate\", void 0);\n\n  __decorate([Property()], Grid.prototype, \"childGrid\", void 0);\n\n  __decorate([Property()], Grid.prototype, \"queryString\", void 0);\n\n  __decorate([Property('AllPages')], Grid.prototype, \"printMode\", void 0);\n\n  __decorate([Property('Expanded')], Grid.prototype, \"hierarchyPrintMode\", void 0);\n\n  __decorate([Property([])], Grid.prototype, \"dataSource\", void 0);\n\n  __decorate([Property(null)], Grid.prototype, \"rowHeight\", void 0);\n\n  __decorate([Property()], Grid.prototype, \"query\", void 0);\n\n  __decorate([Property('USD')], Grid.prototype, \"currencyCode\", void 0);\n\n  __decorate([Property()], Grid.prototype, \"toolbar\", void 0);\n\n  __decorate([Property()], Grid.prototype, \"contextMenuItems\", void 0);\n\n  __decorate([Property()], Grid.prototype, \"columnMenuItems\", void 0);\n\n  __decorate([Property()], Grid.prototype, \"toolbarTemplate\", void 0);\n\n  __decorate([Property()], Grid.prototype, \"pagerTemplate\", void 0);\n\n  __decorate([Property(0)], Grid.prototype, \"frozenRows\", void 0);\n\n  __decorate([Property(0)], Grid.prototype, \"frozenColumns\", void 0);\n\n  __decorate([Property('All')], Grid.prototype, \"columnQueryMode\", void 0);\n\n  __decorate([Property({})], Grid.prototype, \"currentAction\", void 0);\n\n  __decorate([Property('19.3.54')], Grid.prototype, \"ej2StatePersistenceVersion\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"created\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"destroyed\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"load\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"rowDataBound\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"queryCellInfo\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"headerCellInfo\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"actionBegin\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"actionComplete\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"actionFailure\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"dataBound\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"recordDoubleClick\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"recordClick\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"rowSelecting\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"rowSelected\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"rowDeselecting\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"rowDeselected\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"cellSelecting\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"cellSelected\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"cellDeselecting\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"cellDeselected\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"columnSelecting\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"columnSelected\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"columnDeselecting\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"columnDeselected\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"columnDragStart\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"columnDrag\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"columnDrop\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"printComplete\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"beforePrint\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"pdfQueryCellInfo\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"pdfAggregateQueryCellInfo\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"excelAggregateQueryCellInfo\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"exportDetailDataBound\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"excelQueryCellInfo\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"beforeExcelExport\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"excelExportComplete\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"beforePdfExport\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"pdfExportComplete\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"rowDragStartHelper\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"detailDataBound\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"rowDragStart\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"rowDrag\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"rowDrop\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"toolbarClick\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"beforeOpenColumnChooser\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"beforeOpenAdaptiveDialog\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"batchAdd\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"batchDelete\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"batchCancel\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"beforeBatchAdd\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"beforeBatchDelete\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"beforeBatchSave\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"beginEdit\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"commandClick\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"cellEdit\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"cellSave\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"cellSaved\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"resizeStart\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"resizing\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"resizeStop\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"keyPressed\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"beforeDataBound\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"contextMenuOpen\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"contextMenuClick\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"columnMenuOpen\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"columnMenuClick\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"checkBoxChange\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"beforeCopy\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"beforePaste\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"beforeAutoFill\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"columnDataStateChange\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"dataStateChange\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"dataSourceChanged\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"exportGroupCaption\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"lazyLoadGroupExpand\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"lazyLoadGroupCollapse\", void 0);\n\n  Grid = Grid_1 = __decorate([NotifyPropertyChanges], Grid);\n  return Grid;\n}(Component);\n\nexport { Grid };","map":{"version":3,"sources":["/Users/tristanbilot/Desktop/Design4green/design4green/node_modules/@syncfusion/ej2-grids/src/grid/base/grid.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","isNullOrUndefined","setValue","getValue","Component","ChildProperty","Browser","closest","extend","addClass","removeClass","append","remove","classList","setStyleAttribute","Property","Collection","Complex","Event","NotifyPropertyChanges","L10n","EventHandler","KeyboardEvents","DataManager","DataUtil","UrlAdaptor","createSpinner","hideSpinner","showSpinner","Tooltip","iterateArrayOrObject","prepareColumns","parentsUntil","wrap","templateCompiler","isGroupAdaptive","refreshForeignData","getRowHeight","setColumnIndex","Global","ispercentageWidth","renderMovable","getNumberFormat","setRowElements","resetRowIndex","compareChanges","getCellByColAndRowIndex","performComplexDataOperation","events","Render","RenderType","RowRenderer","CellRenderer","CellRendererFactory","ServiceLocator","ValueFormatter","RendererFactory","ColumnWidthService","AriaService","FocusStrategy","PageSettings","ColumnChooserSettings","Selection","Search","ShowHide","Scroll","Print","AggregateRow","Clipboard","RowModelGenerator","literals","SortDescriptor","_super","apply","SortSettings","Predicate","InfiniteScrollSettings","FilterSettings","SelectionSettings","SearchSettings","RowDropSettings","TextWrapSettings","ResizeSettings","GroupSettings","EditSettings","Grid","options","element","_this","call","isPreventScrollEvent","inViewIndexes","keyA","frozenRightCount","frozenLeftCount","tablesCount","movableCount","visibleFrozenLeft","visibleFrozenRight","visibleMovable","frozenLeftColumns","frozenRightColumns","movableColumns","media","isFreezeRefresh","tableIndex","componentRefresh","refresh","isVirtualAdaptive","vRows","vcRows","vGroupOffsets","rowUid","currentViewData","isManualRefresh","enableDeepCompare","lockcolPositionCount","prevPageMoving","pageTemplateChange","isAutoGen","mediaBindInstance","commandDelIndex","undefined","asyncTimeOut","isExportGrid","enableLogger","needsID","Grid_1","Inject","mergePersistGridData","getPersistData","keyEntity","ignoreOnPersist","pageSettings","filterSettings","groupSettings","searchSettings","sortSettings","columns","selectedRowIndex","scrollPosition","currentObject","_i","_a","val","temp","template","settings","assign","setProperties","isAngular","pagerTemplate","persistData","addOnPersist","requiredModules","setFrozenCount","enableInfiniteAggrgate","modules","isDestroyed","allowFiltering","push","member","args","serviceLocator","allowExcelExport","allowPdfExport","allowSorting","sortedColumns","allowPaging","allowSelection","selectionSettings","allowReordering","allowRowDragAndDrop","allowGrouping","aggregates","isDetail","toolbar","toolbarTemplate","enableVirtualization","enableColumnVirtualization","getFrozenColumns","frozenRows","isCommandColumn","editSettings","allowAdding","allowDeleting","allowEditing","extendRequiredModules","enableInfiniteScrolling","enableLazyLoading","contextMenuItems","showColumnMenu","showColumnChooser","isForeignKeyEnabled","preRender","initProperties","initializeServices","isInitial","mediaCol","isInitialLoad","allowServerDataBinding","ignoreCollectionWatch","mergeCells","isEdit","checkAllRows","isCheckBoxSelection","isPersistSelection","filterOperators","contains","endsWith","equal","greaterThan","greaterThanOrEqual","lessThan","lessThanOrEqual","notEqual","startsWith","defaultLocale","EmptyRecord","True","False","InvalidFilterMessage","GroupDropArea","UnGroup","UnGroupButton","GroupDisable","FilterbarTitle","EmptyDataSourceError","Add","Edit","Cancel","Update","Delete","Pdfexport","Excelexport","Wordexport","Csvexport","Columnchooser","Save","Item","Items","EditOperationAlert","DeleteOperationAlert","SaveButton","OKButton","CancelButton","EditFormTitle","AddFormTitle","BatchSaveConfirm","BatchSaveLostChanges","ConfirmDelete","CancelEdit","ChooseColumns","SearchColumns","Matchs","FilterButton","ClearButton","StartsWith","EndsWith","Contains","Equal","NotEqual","LessThan","LessThanOrEqual","GreaterThan","GreaterThanOrEqual","ChooseDate","EnterValue","Copy","Group","Ungroup","autoFitAll","autoFit","AutoFitAll","AutoFit","Export","FirstPage","LastPage","PreviousPage","NextPage","SortAscending","SortDescending","EditRecord","DeleteRecord","FilterMenu","SelectAll","Blanks","FilterTrue","FilterFalse","NoResult","ClearFilter","Clear","NumberFilter","TextFilter","DateFilter","DateTimeFilter","MatchCase","Between","CustomFilter","CustomFilterPlaceHolder","CustomFilterDatePlaceHolder","AND","OR","ShowRowsWhere","FilterMenuDialogARIA","ExcelFilterDialogARIA","DialogEditARIA","ColumnChooserDialogARIA","ColumnMenuDialogARIA","CustomFilterDialogARIA","SortAtoZ","SortZtoA","SortByOldest","SortByNewest","SortSmallestToLargest","SortLargestToSmallest","Sort","keyConfigs","downArrow","upArrow","rightArrow","leftArrow","shiftDown","shiftUp","shiftRight","shiftLeft","home","end","escape","ctrlHome","ctrlEnd","pageUp","pageDown","ctrlAltPageUp","ctrlAltPageDown","altPageUp","altPageDown","altDownArrow","altUpArrow","ctrlDownArrow","ctrlUpArrow","ctrlPlusA","ctrlPlusP","insert","delete","f2","enter","ctrlEnter","shiftEnter","tab","shiftTab","space","ctrlPlusC","ctrlShiftPlusH","ctrlSpace","ctrlLeftArrow","ctrlRightArrow","render","log","ariaService","setOptions","role","createElement","renderModule","searchModule","scrollModule","notify","initialLoad","getDataModule","dataManager","dataSource","offline","url","trigger","load","enablePersistence","columnsPrepared","getMediaColumns","checkLockColumns","getColumns","processModel","gridRender","wireEvents","addListener","updateDefaultCursor","updateStackedFilter","initialEnd","type","getHeaderContent","getElementsByClassName","add","gcol","getShowHideService","getService","index","hideAtMedia","visible","pushMediaColumn","col","uid","window","matchMedia","mediaQueryUpdate","bind","updateMediaColumns","getColumnIndexByUid","splice","columnIndex","e","some","mediaColumn","matches","invokedFromMedia","showHider","show","headerText","hide","refreshMediaCol","footerContent","querySelector","gridFooter","scrollHeight","height","checkboxColumn","filter","checkboxMode","rowRenderingMode","enableHover","enableAdaptiveUI","removeMediaListener","removeListener","eventInitializer","destroy","gridElement","hasGridChild","gridHeader","gridContent","unwireEvents","destroyDependentModules","destroyTemplate","toolTipObj","innerHTML","keyboardModule","focusModule","clipboardModule","printModule","getModuleName","enableBoxSelection","enableAutoFill","cellSelectionMode","onPropertyChanged","newProp","oldProp","requireRefresh","requireGridRefresh","freezeRefresh","checkCursor","requestType","isEllipsisTooltip","close","properties","keys","indexOf","columnModel","updateColumnObject","properties_1","prop","uiUpdate","module","enable","inBoundModelChanged","currentPage","pageSize","totalRecordsCount","refreshHeader","width","headerModule","refreshUI","selectionModule","updateAutoFillPosition","rowTemplateFn","rowTemplate","detailTemplateFn","detailTemplate","oldProperties","isQueryInvokedFromData","extendedPropertyChange","modelChanged","maintainSelection","updateRTL","ej2_instances","enableRtl","dataBind","removePadding","setPadding","toolbarModule","getToolbar","contextMenuModule","getContextMenu","columnMenuModule","getColumnMenu","showFilterBarOperator","rtlUpdated","updateResizeLines","rowHeight","updateGridLines","columnMenuItems","allowTextWrap","applyTextWrap","removeTextWrap","freezeRender","case","isModeChg","pending_1","getState","getPrototypeOf","deepWatch","pKeyField","getPrimaryKeyFieldNames","props","setRowData","isPending","gResult","result","names","group","count","setState","resolver","isDataChanged","dataSourceModified","beforeRefreshOnDataChange","scrollRefresh","action","isSelectedRowIndexUpdating","selectRow","widthService","setWidthToTable","setFullScreenDialog","enableVerticalRendering","rowModeChange","addStickyListener","enableStickyHeader","fn_1","off","contentReady","on","muteOnChange","filterModule","refreshFilter","setTablesCount","frozenCols","frozenLeft","getFrozenLeftColumnsCount","frozenRight","getFrozenRightColumnsCount","getTablesCount","headerCells","slice","querySelectorAll","stdHdrCell","cols","cells","contentModule","getHeaderCells","cell","updateColumnModel","len","updateColumnLevelFrozen","updateFrozenColumns","updateLockableColumns","leftCols","rightCols","movableCols","freeze","freezeTable","concat","directFrozenCount","frozenColumns","totalFrozenCount","isFrozen","getFrozenLeftCount","isFrozenGrid","getFrozenMode","frozenName","frozenCount","lockColumn","isRefresh","inview","map","v","vLen","ensureFrozenCols","getStackedHeaderColumnByHeaderText","stackedHeader","individualColumn","field","stackedColumn","getColumnIndexesInView","getQuery","query","getLocaleConstants","setColumnIndexesInView","indexes","getVisibleColumns","getCurrentVisibleColumns","getPanel","setGridHeaderContent","setPanel","getContentTable","getTable","setGridContentTable","setTable","getContent","setGridContent","getHeaderTable","setGridHeaderTable","getFooterContent","footerElement","getFooterContentTable","firstChild","getPager","gridPager","setGridPager","getRowByIndex","getMovableRowByIndex","getFrozenRowByIndex","getFrozenDataRows","getRows","getRowElements","getFrozenRightRowByIndex","getRowInfo","ele","rowCell","row","rowObj","getRowObjectFromUID","getAttribute","rowIndex","parseInt","ariaRowIndex","rowData","data","cellIndex","ariaColIndex","isNaN","row_1","frzCols","tableName","getFreezeTableName","rows","getIndentCount","getMovableRows","getFrozenRightRows","rowsObject","column","getMovableRowElements","getFrozenRightRowElements","getDataRows","getAllDataRows","includeAdd","tbody","getFrozenLeftContentTbody","children","hdrTbody","frozenHeader","freezeRows","addMovableRows","dataRows","generateDataRows","fRows","mrows","includAdd","dRows","isCollapseStateEnabled","getMovableDataRows","getAllMovableDataRows","movableContent","movableHeader","getAllFrozenDataRows","frozenContent","getFrozenRightDataRows","getAllFrozenRightDataRows","setCellValue","value","rowIdx","rowuID","isRight","pkName","fieldIdx","getColumnIndexByField","getColumnByField","rowObjects","getFrozenRightRowsObject","selectedRow","tr","left","movable","getMovableColumnsCount","isRowDragable","frIdx","td","getCellFromIndex","Idx","childGrid","sRow","refreshTD","refreshFooterRenderer","groupAggregates","queryCellInfo","refreshReactColumnTemplateByUid","columnUid","isReact","clearTemplate","rowsObj","getRowsObject","indent","getNormalizedColumnIndex","j","isDataRow","cellRenderer","rowRenderer","changes","getForeignKeyColumns","getColumnByIndex","getMovableCellFromIndex","getFrozenRightCellFromIndex","getColumnHeaderByIndex","getMovableColumnHeaderByIndex","getMovableVirtualHeader","getFrozenRightColumnHeaderByIndex","getFrozenRightHeader","getFrozenLeftColumnHeaderByIndex","getFrozenVirtualHeader","isMovable","isFrozenRight","rowObject","rows_1","getMovableRowsObject","getColumnHeaderByField","getColumnHeaderByUid","parentElement","item","getColumnByUid","getStackedColumns","columns_1","getUidByColumnField","rowDropSettings","targetID","getColumnFieldNames","columnNames","getRowTemplate","getDetailTemplate","getEditTemplate","editTemplateFn","getEditHeaderTemplate","editHeaderTemplateFn","getEditFooterTemplate","editFooterTemplateFn","k","isPrimaryKey","getSelectedRows","selectedRecords","getSelectedRowIndexes","selectedRowIndexes","getSelectedRowCellIndexes","selectedRowCellIndexes","getSelectedRecords","getSelectedColumnsUid","selectedColumnsIndexes","showColumns","showBy","hideColumns","hideBy","getFrozenCount","splitFrozenCount","getVisibleFrozenLeftCount","getVisibleFrozenRightCount","getVisibleMovableCount","getFrozenRightColumns","getFrozenLeftColumns","getMovableColumns","getVisibleFrozenColumns","getVisibleFrozenColumnsCount","getVisibleFrozenCount","getFilterUIInfo","visibleFrozenColumns","cnt","goToPage","pageNo","pagerModule","updateExternalMessage","message","sortColumn","columnName","direction","isMultiSort","sortModule","clearSorting","removeSortColumn","clearGridActions","filterByColumn","fieldName","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","fields","removeFilteredColsByField","isClearFilterBar","isToggle","selectRows","rowIndexes","clearSelection","selectCell","selectCellsByRange","startIndex","endIndex","search","searchString","print","deleteRecord","fieldname","editModule","startEdit","endEdit","closeEdit","addRecord","deleteRow","editCell","saveCell","updateCell","updateRow","getBatchChanges","enableToolbarItems","items","isEnable","enableItems","copy","withHeader","recalcIndentWidth","indentWidth","offsetWidth","headerCol","colGroup","childNodes","contentCol","perPixel","parentOffset","applyWidth","newWidth","toFixed","style","columnWidthChanged","setAttribute","resetIndentWidth","removeAttribute","setWidthToColumns","minWidth","tgridWidth","getTableWidth","setMinwidthBycalculation","refreshFrozenScrollbar","textWrapSettings","wrapMode","refreshHandlers","reorderColumns","fromFName","toFName","reorderModule","reorderColumnByIndex","fromIndex","toIndex","reorderColumnByTargetIndex","reorderRows","fromIndexes","rowDragAndDropModule","refreshDataSource","disableRowDD","headerTable","contentTable","headerRows","disValue","firstElementChild","autoFitColumns","fieldNames","resizeModule","createColumnchooser","x","y","columnChooserModule","renderColumnChooser","register","localeObj","locale","valueFormatterService","gCols","sCols","flag","_loop_1","sLen","isFromGroup","this_1","showGroupedColumn","moduleName","headerTemplate","footerTemplate","parentDetails","parentKeyFieldValue","where","queryString","initForeignColumn","initForeignKeyColumn","isDevice","rendererFactory","getRenderer","Header","Content","createGridPopUpElement","createTooltip","dataReady","setWidth","setHeight","popup","className","styles","content","attrs","tabIndex","appendChild","gridLines","allowResizing","opensOn","getTooltipStatus","headerDivTag","htable","createTable","ctable","table","getBoundingClientRect","document","body","removeChild","mouseMoveHandler","prevElement","tagName","elemNames","innerText","disableHtmlEncode","enableHtmlParse","open","hoverFrozenRows","clipMode","scrollHandler","tag","myTableDiv","cssText","mySubDiv","myTable","myTr","mytd","onKeyPressed","mouseClickHandler","focusOutHandler","dblClickHandler","keyPressHandler","allowKeyboard","keyAction","keyActionHandler","eventName","tapEvent","keyDownHandler","headerRefreshed","dataBoundFunction","addEventListener","dataBound","keyPressed","removeEventListener","getCurrentViewRecords","records","isChildGrid","touches","checkEdit","preventDefault","cancel","recordClick","click","mode","editedRow","addedRow","grid","id","dataRow","recordDoubleClick","dblclick","display","filterClear","relatedTarget","ariaOwns","keyPress","editNextValCell","editFormValidate","persistedData","getLocalData","dataObj","JSON","parse","isProtectedOnChange","keys_1","isArray","mergeColumns","storedColumn","storedColumns","_loop_2","localCol","tCol","this_2","commands","commandsTemplate","foreignKeyValue","presskey","stopImmediatePropagation","altKey","keyCode","groupCollapse","collapse","focusHeader","addOutline","focusContent","enterKeyHandler","setInjectedModules","injectedModules","autoCol","isForeignColumn","refreshColumns","fCnt","frCnt","isColFrozen","mTbl","getMovableContent","cloneNode","insertBefore","frTbl","getFrozenRightContent","colGrp","scrollLeft","getMovableHeader","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","pdfExportModule","groupColumn","groupModule","groupExpandAll","expandAll","groupCollapseAll","collapseAll","clearGrouping","ungroupColumn","openColumnChooser","detailCollapseAll","detailRowModule","detailExpandAll","clearCellSelection","clearRowSelection","selectCells","rowCellIndexes","selectRowsByRange","isContextMenuOpen","isOpen","ensureModuleInjected","getInjectedModules","propertyNames","loggerModule","applyBiggerTheme","getPreviousRowData","previousRowData","hideScroll","scrollBar","clientHeight","overflowY","mvblScrollBar","mvblChild","frozenHeight","getRowIndexByPrimaryKey","isDetailRow","isCaptionRow","pKvalue","split","grabColumnByFieldFromAllCols","grabColumnByUidFromAllCols","getFilteredRecords","generateQuery","isRemote","getData","executeLocal","getUserAgent","userAgent","toLowerCase","test","timer","setTimeout","clearTimeout","doubleTap","getRowUid","prefix","getMovableVirtualContent","getFrozenVirtualContent","getRowElementByUID","rowEle","mRows","frozenRigtRows","frHdr","cntRows","rows_2","getHiddenColumns","calculatePageSizeByParentHeight","containerHeight","pagesize","nonContentHeight","getNoncontentHeight","contentHeight","Math","floor","showDropArea","getSummaryValues","summaryCol","summaryData","serverExcelExport","isExcel","exportGrid","serverPdfExport","serverCsvExport","state","processQuery","queries","gridModel","include","sorted","setHeaderText","form","gridInput","name","stringify","method","submit","format","getFormat","skeleton","isExpanded","updateRowValue","updateData","setForeignKeyData","colpending","getForeignKeyDataState","setForeignKeyDataState","resetFilterDlgPosition","header","filterDlg","gClient","fClient","right","toString","renderTemplates","portals","renderReactTemplates","batchUpdate","processRowChanges","batchAsyncUpdate","processBulkRowChanges","dataToBeUpdated","addedRecords","changedRecords","deletedRecords","loopstring","keyField","promise","saveChanges","requiresCount","then","setNewData","oldValues","bulkRefresh","deleteRowElement","mtr","_loop_3","this_3","out_i_1","_loop_4","isRowExist","this_4","renderRowElement","model","modelData","generateRows","mTr","mTbody","addRowObject","emptyRow","parentNode","moveTbody","mRow","clone","updateVisibleExpandCollapseRows","getHeight","Number","isInteger","getMovableHeaderTbody","getMovableContentTbody","getFrozenHeaderTbody","getFrozenRightHeaderTbody","getFrozenRightContentTbody","showResponsiveCustomFilter","isCustom","showCustomFilter","showResponsiveCustomSort","showCustomSort","showAdaptiveFilterDialog","showAdaptiveSortDialog","isColVirtualization","gridCols","gridCols_1","disablePageWiseAggregates"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { Component, ChildProperty, Browser, closest, extend } from '@syncfusion/ej2-base';\nimport { addClass, removeClass, append, remove, classList, setStyleAttribute } from '@syncfusion/ej2-base';\nimport { Property, Collection, Complex, Event, NotifyPropertyChanges, L10n } from '@syncfusion/ej2-base';\nimport { EventHandler, KeyboardEvents } from '@syncfusion/ej2-base';\nimport { DataManager, DataUtil, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner, Tooltip } from '@syncfusion/ej2-popups';\nimport { iterateArrayOrObject, prepareColumns, parentsUntil, wrap, templateCompiler, isGroupAdaptive, refreshForeignData } from './util';\nimport { getRowHeight, setColumnIndex, Global, ispercentageWidth, renderMovable, getNumberFormat } from './util';\nimport { setRowElements, resetRowIndex, compareChanges, getCellByColAndRowIndex, performComplexDataOperation } from './util';\nimport * as events from '../base/constant';\nimport { Render } from '../renderer/render';\nimport { RenderType } from './enum';\nimport { RowRenderer } from '../renderer/row-renderer';\nimport { CellRenderer } from '../renderer/cell-renderer';\nimport { CellRendererFactory } from '../services/cell-render-factory';\nimport { ServiceLocator } from '../services/service-locator';\nimport { ValueFormatter } from '../services/value-formatter';\nimport { RendererFactory } from '../services/renderer-factory';\nimport { ColumnWidthService } from '../services/width-controller';\nimport { AriaService } from '../services/aria-service';\nimport { FocusStrategy } from '../services/focus-strategy';\nimport { PageSettings } from '../models/page-settings';\nimport { ColumnChooserSettings } from '../models/column-chooser-settings';\nimport { Selection } from '../actions/selection';\nimport { Search } from '../actions/search';\nimport { ShowHide } from '../actions/show-hide';\nimport { Scroll } from '../actions/scroll';\nimport { Print } from '../actions/print';\nimport { AggregateRow } from '../models/aggregate';\nimport { Clipboard } from '../actions/clipboard';\nimport { RowModelGenerator } from '../services/row-model-generator';\nimport * as literals from '../base/string-literals';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    __decorate([\n        Property(false)\n    ], SortDescriptor.prototype, \"isFromGroup\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of Grid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n/**\n * Represents the predicate for the filter column.\n */\nvar Predicate = /** @class */ (function (_super) {\n    __extends(Predicate, _super);\n    function Predicate() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"value\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"matchCase\", void 0);\n    __decorate([\n        Property(false)\n    ], Predicate.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"predicate\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualFilterValue\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualOperator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ejpredicate\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"uid\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"isForeignKey\", void 0);\n    return Predicate;\n}(ChildProperty));\nexport { Predicate };\n/**\n * Configures the infinite scroll behavior of Grid.\n */\nvar InfiniteScrollSettings = /** @class */ (function (_super) {\n    __extends(InfiniteScrollSettings, _super);\n    function InfiniteScrollSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], InfiniteScrollSettings.prototype, \"enableCache\", void 0);\n    __decorate([\n        Property(3)\n    ], InfiniteScrollSettings.prototype, \"maxBlocks\", void 0);\n    __decorate([\n        Property(3)\n    ], InfiniteScrollSettings.prototype, \"initialBlocks\", void 0);\n    return InfiniteScrollSettings;\n}(ChildProperty));\nexport { InfiniteScrollSettings };\n/**\n * Configures the filtering behavior of the Grid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"enableCaseSensitivity\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"showFilterBarOperator\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n/**\n * Configures the selection behavior of the Grid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        Property('Default')\n    ], SelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"enableSimpleMultiRowSelection\", void 0);\n    __decorate([\n        Property(true)\n    ], SelectionSettings.prototype, \"enableToggle\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"allowColumnSelection\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n/**\n * Configures the search behavior of the Grid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property([])\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property('')\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property('contains')\n    ], SearchSettings.prototype, \"operator\", void 0);\n    __decorate([\n        Property(true)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreAccent\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n/**\n * Configures the row drop settings of the Grid.\n */\nvar RowDropSettings = /** @class */ (function (_super) {\n    __extends(RowDropSettings, _super);\n    function RowDropSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], RowDropSettings.prototype, \"targetID\", void 0);\n    return RowDropSettings;\n}(ChildProperty));\nexport { RowDropSettings };\n/**\n * Configures the text wrap settings of the Grid.\n */\nvar TextWrapSettings = /** @class */ (function (_super) {\n    __extends(TextWrapSettings, _super);\n    function TextWrapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Both')\n    ], TextWrapSettings.prototype, \"wrapMode\", void 0);\n    return TextWrapSettings;\n}(ChildProperty));\nexport { TextWrapSettings };\n/**\n * Configures the resize behavior of the Grid.\n */\nvar ResizeSettings = /** @class */ (function (_super) {\n    __extends(ResizeSettings, _super);\n    function ResizeSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Normal')\n    ], ResizeSettings.prototype, \"mode\", void 0);\n    return ResizeSettings;\n}(ChildProperty));\nexport { ResizeSettings };\n/**\n * Configures the group behavior of the Grid.\n */\nvar GroupSettings = /** @class */ (function (_super) {\n    __extends(GroupSettings, _super);\n    function GroupSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], GroupSettings.prototype, \"showDropArea\", void 0);\n    __decorate([\n        Property(false)\n    ], GroupSettings.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], GroupSettings.prototype, \"showToggleButton\", void 0);\n    __decorate([\n        Property(false)\n    ], GroupSettings.prototype, \"showGroupedColumn\", void 0);\n    __decorate([\n        Property(true)\n    ], GroupSettings.prototype, \"showUngroupButton\", void 0);\n    __decorate([\n        Property(false)\n    ], GroupSettings.prototype, \"disablePageWiseAggregates\", void 0);\n    __decorate([\n        Property([])\n    ], GroupSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property()\n    ], GroupSettings.prototype, \"captionTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], GroupSettings.prototype, \"enableLazyLoading\", void 0);\n    return GroupSettings;\n}(ChildProperty));\nexport { GroupSettings };\n/**\n * Configures the edit behavior of the Grid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Normal')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"headerTemplate\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property({})\n    ], EditSettings.prototype, \"dialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowNextRowEdit\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n/**\n * Represents the Grid component.\n * ```html\n * <div id=\"grid\"></div>\n * <script>\n *  var gridObj = new Grid({ allowPaging: true });\n *  gridObj.appendTo(\"#grid\");\n * </script>\n * ```\n */\nvar Grid = /** @class */ (function (_super) {\n    __extends(Grid, _super);\n    /**\n     * Constructor for creating the component\n     *\n     * @param {GridModel} options - specifies the options\n     * @param {string | HTMLElement} element - specifies the element\n     * @hidden\n     */\n    function Grid(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.isPreventScrollEvent = false;\n        _this.inViewIndexes = [];\n        _this.keyA = false;\n        _this.frozenRightCount = 0;\n        _this.frozenLeftCount = 0;\n        _this.tablesCount = 1;\n        _this.movableCount = 0;\n        _this.visibleFrozenLeft = 0;\n        _this.visibleFrozenRight = 0;\n        _this.visibleMovable = 0;\n        _this.frozenLeftColumns = [];\n        _this.frozenRightColumns = [];\n        _this.movableColumns = [];\n        _this.media = {};\n        _this.isFreezeRefresh = false;\n        /** @hidden */\n        _this.tableIndex = 0;\n        _this.componentRefresh = Component.prototype.refresh;\n        /** @hidden */\n        _this.isVirtualAdaptive = false;\n        /** @hidden */\n        _this.vRows = [];\n        /** @hidden */\n        _this.vcRows = [];\n        /** @hidden */\n        _this.vGroupOffsets = {};\n        /** @hidden */\n        _this.rowUid = 0;\n        /**\n         * Gets the currently visible records of the Grid.\n         */\n        _this.currentViewData = [];\n        /** @hidden */\n        _this.isManualRefresh = false;\n        /** @hidden */\n        _this.enableDeepCompare = false;\n        /** @hidden */\n        _this.lockcolPositionCount = 0;\n        /** @hidden */\n        _this.prevPageMoving = false;\n        /** @hidden */\n        _this.pageTemplateChange = false;\n        /** @hidden */\n        _this.isAutoGen = false;\n        _this.mediaBindInstance = {};\n        /** @hidden */\n        _this.commandDelIndex = undefined;\n        /** @hidden */\n        _this.asyncTimeOut = 50;\n        /** @hidden */\n        _this.isExportGrid = false;\n        // enable/disable logger for MVC & Core\n        _this.enableLogger = true;\n        _this.needsID = true;\n        Grid_1.Inject(Selection);\n        setValue('mergePersistData', _this.mergePersistGridData, _this);\n        return _this;\n    }\n    Grid_1 = Grid;\n    /**\n     * Get the properties to be maintained in the persisted state.\n     *\n     * @returns {string} returns the persist data\n     */\n    Grid.prototype.getPersistData = function () {\n        var keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'groupSettings', 'columns', 'searchSettings', 'selectedRowIndex', 'scrollPosition'];\n        var ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent'],\n            groupSettings: ['showDropArea', 'showToggleButton', 'showGroupedColumn', 'showUngroupButton',\n                'disablePageWiseAggregates', 'hideCaptionCount'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: [], scrollPosition: []\n        };\n        for (var i = 0; i < keyEntity.length; i++) {\n            var currentObject = this[keyEntity[i]];\n            for (var _i = 0, _a = ignoreOnPersist[keyEntity[i]]; _i < _a.length; _i++) {\n                var val = _a[_i];\n                delete currentObject[val];\n            }\n        }\n        var temp = this.pageSettings.template;\n        var settings = Object.assign({ template: undefined }, this.pageSettings);\n        this.setProperties({ pageSettings: settings }, true);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        if (this.isAngular) {\n            delete this.groupSettings['properties']['captionTemplate'];\n        }\n        this.pageTemplateChange = !isNullOrUndefined(this.pagerTemplate);\n        var persistData = this.addOnPersist(keyEntity);\n        settings.template = temp;\n        this.setProperties({ pageSettings: settings }, true);\n        return persistData;\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     *\n     * @returns {ModuleDeclaration[]} Returns the module Declaration\n     * @hidden\n     */\n    Grid.prototype.requiredModules = function () {\n        this.setFrozenCount();\n        this.enableInfiniteAggrgate();\n        var modules = [];\n        if (this.isDestroyed) {\n            return modules;\n        }\n        if (this.allowFiltering) {\n            modules.push({\n                member: 'filter',\n                args: [this, this.filterSettings, this.serviceLocator]\n            });\n        }\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport',\n                args: [this]\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this, this.sortSettings, this.sortedColumns, this.serviceLocator]\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings]\n            });\n        }\n        if (this.allowSelection) {\n            modules.push({\n                member: 'selection',\n                args: [this, this.selectionSettings, this.serviceLocator]\n            });\n        }\n        modules.push({\n            member: 'resize',\n            args: [this]\n        });\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowRowDragAndDrop) {\n            modules.push({\n                member: 'rowDragAndDrop',\n                args: [this]\n            });\n        }\n        if (this.allowGrouping) {\n            modules.push({\n                member: 'group',\n                args: [this, this.groupSettings, this.sortedColumns, this.serviceLocator]\n            });\n        }\n        if (this.aggregates.length) {\n            modules.push({ member: 'aggregate', args: [this, this.serviceLocator] });\n        }\n        if (this.isDetail()) {\n            modules.push({\n                member: 'detailRow',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.toolbar || this.toolbarTemplate) {\n            modules.push({\n                member: 'toolbar',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.enableVirtualization || this.enableColumnVirtualization) {\n            modules.push({\n                member: 'virtualscroll',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.getFrozenColumns() || this.frozenRows || this.frozenRightCount || this.frozenLeftCount) {\n            modules.push({ member: 'freeze', args: [this, this.serviceLocator] });\n        }\n        if (this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this, this.serviceLocator]\n            });\n        }\n        this.extendRequiredModules(modules);\n        return modules;\n    };\n    Grid.prototype.extendRequiredModules = function (modules) {\n        if (this.enableInfiniteScrolling) {\n            modules.push({\n                member: 'infiniteScroll',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.groupSettings.enableLazyLoading) {\n            modules.push({\n                member: 'lazyLoadGroup',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.showColumnChooser) {\n            modules.push({\n                member: 'columnChooser',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.isForeignKeyEnabled(this.columns)) {\n            modules.push({ member: 'foreignKey', args: [this, this.serviceLocator] });\n        }\n        if (this.enableLogger) {\n            modules.push({ member: 'logger', args: [this] });\n        }\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     *\n     * @returns {void}\n     * @private\n     */\n    Grid.prototype.preRender = function () {\n        this.serviceLocator = new ServiceLocator;\n        this.initProperties();\n        this.initializeServices();\n    };\n    Grid.prototype.initProperties = function () {\n        this.isInitial = true;\n        this.sortedColumns = [];\n        this.inViewIndexes = [];\n        this.mediaCol = [];\n        this.isInitialLoad = false;\n        this.allowServerDataBinding = false;\n        this.ignoreCollectionWatch = true;\n        this.mergeCells = {};\n        this.isEdit = false;\n        this.checkAllRows = 'None';\n        this.isCheckBoxSelection = false;\n        this.isPersistSelection = false;\n        this.componentRefresh = Component.prototype.refresh;\n        this.filterOperators = {\n            contains: 'contains', endsWith: 'endswith', equal: 'equal', greaterThan: 'greaterthan', greaterThanOrEqual: 'greaterthanorequal',\n            lessThan: 'lessthan', lessThanOrEqual: 'lessthanorequal', notEqual: 'notequal', startsWith: 'startswith'\n        };\n        this.defaultLocale = {\n            EmptyRecord: 'No records to display',\n            True: 'true',\n            False: 'false',\n            InvalidFilterMessage: 'Invalid Filter Data',\n            GroupDropArea: 'Drag a column header here to group its column',\n            UnGroup: 'Click here to ungroup',\n            UnGroupButton: 'Click here to ungroup',\n            GroupDisable: 'Grouping is disabled for this column',\n            FilterbarTitle: '\\'s filter bar cell',\n            EmptyDataSourceError: 'DataSource must not be empty at initial load since columns are generated from dataSource in AutoGenerate Column Grid',\n            // Toolbar Items\n            Add: 'Add',\n            Edit: 'Edit',\n            Cancel: 'Cancel',\n            Update: 'Update',\n            Delete: 'Delete',\n            Print: 'Print',\n            Pdfexport: 'PDF Export',\n            Excelexport: 'Excel Export',\n            Wordexport: 'Word Export',\n            Csvexport: 'CSV Export',\n            Search: 'Search',\n            Columnchooser: 'Columns',\n            Save: 'Save',\n            Item: 'item',\n            Items: 'items',\n            EditOperationAlert: 'No records selected for edit operation',\n            DeleteOperationAlert: 'No records selected for delete operation',\n            SaveButton: 'Save',\n            OKButton: 'OK',\n            CancelButton: 'Cancel',\n            EditFormTitle: 'Details of ',\n            AddFormTitle: 'Add New Record',\n            BatchSaveConfirm: 'Are you sure you want to save changes?',\n            BatchSaveLostChanges: 'Unsaved changes will be lost. Are you sure you want to continue?',\n            ConfirmDelete: 'Are you sure you want to Delete Record?',\n            CancelEdit: 'Are you sure you want to Cancel the changes?',\n            ChooseColumns: 'Choose Column',\n            SearchColumns: 'search columns',\n            Matchs: 'No matches found',\n            FilterButton: 'Filter',\n            ClearButton: 'Clear',\n            StartsWith: 'Starts With',\n            EndsWith: 'Ends With',\n            Contains: 'Contains',\n            Equal: 'Equal',\n            NotEqual: 'Not Equal',\n            LessThan: 'Less Than',\n            LessThanOrEqual: 'Less Than Or Equal',\n            GreaterThan: 'Greater Than',\n            GreaterThanOrEqual: 'Greater Than Or Equal',\n            ChooseDate: 'Choose a Date',\n            EnterValue: 'Enter the value',\n            Copy: 'Copy',\n            Group: 'Group by this column',\n            Ungroup: 'Ungroup by this column',\n            autoFitAll: 'Autofit all columns',\n            autoFit: 'Autofit this column',\n            AutoFitAll: 'Autofit all columns',\n            AutoFit: 'Autofit this column',\n            Export: 'Export',\n            FirstPage: 'First Page',\n            LastPage: 'Last Page',\n            PreviousPage: 'Previous Page',\n            NextPage: 'Next Page',\n            SortAscending: 'Sort Ascending',\n            SortDescending: 'Sort Descending',\n            EditRecord: 'Edit Record',\n            DeleteRecord: 'Delete Record',\n            FilterMenu: 'Filter',\n            SelectAll: 'Select All',\n            Blanks: 'Blanks',\n            FilterTrue: 'True',\n            FilterFalse: 'False',\n            NoResult: 'No matches found',\n            ClearFilter: 'Clear Filter',\n            Clear: 'Clear',\n            NumberFilter: 'Number Filters',\n            TextFilter: 'Text Filters',\n            DateFilter: 'Date Filters',\n            DateTimeFilter: 'DateTime Filters',\n            MatchCase: 'Match Case',\n            Between: 'Between',\n            CustomFilter: 'Custom Filter',\n            CustomFilterPlaceHolder: 'Enter the value',\n            CustomFilterDatePlaceHolder: 'Choose a date',\n            AND: 'AND',\n            OR: 'OR',\n            ShowRowsWhere: 'Show rows where:',\n            FilterMenuDialogARIA: 'Filter menu dialog',\n            ExcelFilterDialogARIA: 'Excel filter dialog',\n            DialogEditARIA: 'Edit dialog',\n            ColumnChooserDialogARIA: 'Column chooser dialog',\n            ColumnMenuDialogARIA: 'Column menu dialog',\n            CustomFilterDialogARIA: 'Customer filter dialog',\n            SortAtoZ: 'Sort A to Z',\n            SortZtoA: 'Sort Z to A',\n            SortByOldest: 'Sort by Oldest',\n            SortByNewest: 'Sort by Newest',\n            SortSmallestToLargest: 'Sort Smallest to Largest',\n            SortLargestToSmallest: 'Sort Largest to Smallest',\n            Sort: 'Sort'\n        };\n        this.keyConfigs = {\n            downArrow: 'downarrow',\n            upArrow: 'uparrow',\n            rightArrow: 'rightarrow',\n            leftArrow: 'leftarrow',\n            shiftDown: 'shift+downarrow',\n            shiftUp: 'shift+uparrow',\n            shiftRight: 'shift+rightarrow',\n            shiftLeft: 'shift+leftarrow',\n            home: 'home',\n            end: 'end',\n            escape: 'escape',\n            ctrlHome: 'ctrl+home',\n            ctrlEnd: 'ctrl+end',\n            pageUp: 'pageup',\n            pageDown: 'pagedown',\n            ctrlAltPageUp: 'ctrl+alt+pageup',\n            ctrlAltPageDown: 'ctrl+alt+pagedown',\n            altPageUp: 'alt+pageup',\n            altPageDown: 'alt+pagedown',\n            altDownArrow: 'alt+downarrow',\n            altUpArrow: 'alt+uparrow',\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlPlusA: 'ctrl+A',\n            ctrlPlusP: 'ctrl+P',\n            insert: 'insert',\n            delete: 'delete',\n            f2: 'f2',\n            enter: 'enter',\n            ctrlEnter: 'ctrl+enter',\n            shiftEnter: 'shift+enter',\n            tab: 'tab',\n            shiftTab: 'shift+tab',\n            space: 'space',\n            ctrlPlusC: 'ctrl+C',\n            ctrlShiftPlusH: 'ctrl+shift+H',\n            ctrlSpace: 'ctrl+space',\n            ctrlLeftArrow: 'ctrl+leftarrow',\n            ctrlRightArrow: 'ctrl+rightarrow'\n        };\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     *\n     * @returns {void}\n     * @private\n     */\n    Grid.prototype.render = function () {\n        this.log(['module_missing', 'promise_enabled', 'locale_missing', 'check_datasource_columns']);\n        this.ariaService.setOptions(this.element, { role: 'grid' });\n        createSpinner({ target: this.element }, this.createElement);\n        this.renderModule = new Render(this, this.serviceLocator);\n        this.searchModule = new Search(this);\n        this.scrollModule = new Scroll(this);\n        this.notify(events.initialLoad, {});\n        if (this.getDataModule().dataManager.dataSource.offline === true || this.getDataModule().dataManager.dataSource.url === undefined) {\n            this.isVirtualAdaptive = true;\n        }\n        this.trigger(events.load);\n        prepareColumns(this.columns, this.enableColumnVirtualization, this);\n        if (this.enablePersistence) {\n            this.notify(events.columnsPrepared, {});\n        }\n        this.getMediaColumns();\n        setColumnIndex(this.columns);\n        this.checkLockColumns(this.columns);\n        this.getColumns();\n        this.processModel();\n        this.gridRender();\n        this.wireEvents();\n        this.addListener();\n        this.updateDefaultCursor();\n        this.updateStackedFilter();\n        this.showSpinner();\n        this.notify(events.initialEnd, {});\n    };\n    /**\n     * By default, grid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.showSpinner = function () {\n        if (!this.isExportGrid) {\n            showSpinner(this.element);\n        }\n    };\n    /**\n     * By default, grid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.hideSpinner = function () {\n        if (!this.isExportGrid) {\n            hideSpinner(this.element);\n        }\n    };\n    Grid.prototype.updateStackedFilter = function () {\n        if (this.allowFiltering && this.filterSettings.type === 'FilterBar' &&\n            this.getHeaderContent().getElementsByClassName('e-stackedheadercell').length) {\n            this.getHeaderContent().classList.add('e-stackedfilter');\n        }\n        else {\n            this.getHeaderContent().classList.remove('e-stackedfilter');\n        }\n    };\n    Grid.prototype.getMediaColumns = function () {\n        if (!this.enableColumnVirtualization) {\n            var gcol = this.getColumns();\n            this.getShowHideService = this.serviceLocator.getService('showHideService');\n            if (!isNullOrUndefined(gcol)) {\n                for (var index = 0; index < gcol.length; index++) {\n                    if (!isNullOrUndefined(gcol[index].hideAtMedia) && (isNullOrUndefined(gcol[index].visible) || gcol[index].visible)) {\n                        this.pushMediaColumn(gcol[index], index);\n                    }\n                }\n            }\n        }\n    };\n    Grid.prototype.pushMediaColumn = function (col, index) {\n        this.mediaCol.push(col);\n        this.media[col.uid] = window.matchMedia(col.hideAtMedia);\n        this.mediaQueryUpdate(index, this.media[col.uid]);\n        this.mediaBindInstance[index] = this.mediaQueryUpdate.bind(this, index);\n        this.media[col.uid].addListener(this.mediaBindInstance[index]);\n    };\n    /**\n     * @param {Column} col - specifies the column\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.updateMediaColumns = function (col) {\n        if (!this.enableColumnVirtualization) {\n            var index = this.getColumnIndexByUid(col.uid);\n            for (var i = 0; i < this.mediaCol.length; i++) {\n                if (col.uid === this.mediaCol[i].uid) {\n                    this.mediaCol.splice(i, 1);\n                    return;\n                }\n            }\n            this.pushMediaColumn(col, index);\n        }\n    };\n    /**\n     * @param {number} columnIndex - specifies the column index\n     * @param {MediaQueryList} e - specifies the MediaQueryList\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.mediaQueryUpdate = function (columnIndex, e) {\n        var col = this.getColumns()[columnIndex];\n        if (this.mediaCol.some(function (mediaColumn) { return mediaColumn.uid === col.uid; })) {\n            col.visible = e.matches;\n            if (this.isInitialLoad) {\n                this.invokedFromMedia = true;\n                if (col.visible) {\n                    this.showHider.show(col.headerText, 'headerText');\n                }\n                else {\n                    this.showHider.hide(col.headerText, 'headerText');\n                }\n            }\n        }\n    };\n    Grid.prototype.refreshMediaCol = function () {\n        this.isInitialLoad = true;\n        var footerContent = this.element.querySelector('.' + literals.gridFooter);\n        if (this.aggregates.length && this.element.scrollHeight > this.height && footerContent) {\n            addClass([footerContent], ['e-footerpadding']);\n        }\n        var checkboxColumn = this.getColumns().filter(function (col) { return col.type === 'checkbox'; });\n        if (checkboxColumn.length && this.selectionSettings.checkboxMode === 'ResetOnRowClick') {\n            this.isCheckBoxSelection = false;\n        }\n        if (this.rowRenderingMode === 'Vertical') {\n            if (this.enableHover) {\n                this.setProperties({ enableAdaptiveUI: true, enableHover: false }, true);\n                removeClass([this.element], 'e-gridhover');\n            }\n        }\n        if (this.enableAdaptiveUI && this.scrollModule) {\n            this.scrollModule.refresh();\n        }\n    };\n    Grid.prototype.removeMediaListener = function () {\n        for (var i = 0; i < this.mediaCol.length; i++) {\n            this.media[this.mediaCol[i].uid].removeListener(this.mediaBindInstance[this.mediaCol[i].index]);\n        }\n    };\n    /**\n     * For internal use only - Initialize the event handler\n     *\n     * @returns {void}\n     * @private\n     */\n    Grid.prototype.eventInitializer = function () {\n        //eventInitializer\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    Grid.prototype.destroy = function () {\n        var gridElement = this.element;\n        if (!gridElement) {\n            return;\n        }\n        var hasGridChild = gridElement.querySelector('.' + literals.gridHeader) &&\n            gridElement.querySelector('.' + literals.gridContent) ? true : false;\n        if (hasGridChild) {\n            this.unwireEvents();\n        }\n        this.removeListener();\n        this.removeMediaListener();\n        this.notify(events.destroy, {});\n        this.destroyDependentModules();\n        this.destroyTemplate(['template']);\n        if (hasGridChild) {\n            _super.prototype.destroy.call(this);\n        }\n        this.toolTipObj.destroy();\n        var modules = ['renderModule', 'headerModule', 'contentModule', 'valueFormatterService',\n            'serviceLocator', 'ariaService', 'keyboardModule', 'widthService', 'searchModule', 'showHider',\n            'scrollModule', 'printModule', 'clipboardModule', 'focusModule'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[i]]) {\n                this[modules[i]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        classList(this.element, [], ['e-rtl', 'e-gridhover', 'e-responsive', 'e-default', 'e-device', 'e-grid-min-height']);\n        this.isFreezeRefresh = false;\n    };\n    Grid.prototype.destroyDependentModules = function () {\n        var gridElement = this.element;\n        if (!gridElement || (!gridElement.querySelector('.' + literals.gridHeader) && !gridElement.querySelector('.' + literals.gridContent))) {\n            return;\n        }\n        this.scrollModule.destroy();\n        this.keyboardModule.destroy();\n        this.focusModule.destroy();\n        this.clipboardModule.destroy();\n        this.printModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @returns {string} returns the module name\n     * @private\n     */\n    Grid.prototype.getModuleName = function () {\n        return 'grid';\n    };\n    Grid.prototype.enableBoxSelection = function () {\n        if (this.enableAutoFill) {\n            this.selectionSettings.cellSelectionMode = 'BoxWithBorder';\n            this.element.classList.add('e-afenabled');\n        }\n        else {\n            this.element.classList.remove('e-afenabled');\n        }\n    };\n    /**\n     * Called internally if any of the property value changed.\n     *\n     * @param {GridModel} newProp - Defines new properties\n     * @param {GridModel} oldProp - Defines old properties\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var requireRefresh = false;\n        var requireGridRefresh = false;\n        var freezeRefresh = false;\n        var checkCursor;\n        var args = { requestType: 'refresh' };\n        if (this.isDestroyed) {\n            return;\n        }\n        this.log('module_missing');\n        if (this.isEllipsisTooltip()) {\n            this.toolTipObj.close();\n        }\n        var properties = Object.keys(newProp);\n        if (properties.indexOf('columns') > -1) {\n            if (this.enableColumnVirtualization) {\n                this.columnModel = [];\n            }\n            this.updateColumnObject();\n            requireGridRefresh = true;\n        }\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'allowPaging':\n                    this.notify(events.uiUpdate, { module: 'pager', enable: this.allowPaging });\n                    requireRefresh = true;\n                    break;\n                case 'pageSettings':\n                    if (this.pageTemplateChange) {\n                        this.pageTemplateChange = false;\n                        this.notify(events.inBoundModelChanged, { module: 'pager', properties: newProp.pageSettings });\n                        break;\n                    }\n                    this.notify(events.inBoundModelChanged, { module: 'pager', properties: newProp.pageSettings });\n                    if (isNullOrUndefined(newProp.pageSettings.currentPage) && isNullOrUndefined(newProp.pageSettings.pageSize)\n                        && isNullOrUndefined(newProp.pageSettings.totalRecordsCount)\n                        || !isNullOrUndefined(oldProp.pageSettings) &&\n                            ((newProp.pageSettings.currentPage !== oldProp.pageSettings.currentPage)\n                                && !this.enableColumnVirtualization && !this.enableVirtualization\n                                && this.pageSettings.totalRecordsCount <= this.pageSettings.pageSize)) {\n                        requireRefresh = true;\n                    }\n                    break;\n                case 'allowSorting':\n                    this.notify(events.uiUpdate, { module: 'sort', enable: this.allowSorting });\n                    requireRefresh = true;\n                    checkCursor = true;\n                    break;\n                case 'allowFiltering':\n                    this.updateStackedFilter();\n                    this.notify(events.uiUpdate, { module: 'filter', enable: this.allowFiltering });\n                    requireRefresh = true;\n                    if (this.filterSettings.type !== 'FilterBar') {\n                        this.refreshHeader();\n                    }\n                    break;\n                case 'height':\n                case 'width':\n                    this.notify(events.uiUpdate, { module: 'scroll', properties: { width: newProp.width, height: newProp.height } });\n                    break;\n                case 'allowReordering':\n                    this.headerModule.refreshUI();\n                    checkCursor = true;\n                    break;\n                case 'allowRowDragAndDrop':\n                    this.notify(events.uiUpdate, { module: 'rowDragAndDrop', enable: this.allowRowDragAndDrop });\n                    this.renderModule.refresh();\n                    this.headerModule.refreshUI();\n                    break;\n                case 'allowSelection':\n                    this.notify(events.uiUpdate, { module: 'selection', enable: this.allowSelection });\n                    break;\n                case 'enableAutoFill':\n                    if (this.selectionModule) {\n                        this.enableBoxSelection();\n                        this.selectionModule.updateAutoFillPosition();\n                    }\n                    break;\n                case 'rowTemplate':\n                    this.rowTemplateFn = templateCompiler(this.rowTemplate);\n                    requireRefresh = true;\n                    break;\n                case 'detailTemplate':\n                    this.detailTemplateFn = templateCompiler(this.detailTemplate);\n                    requireRefresh = true;\n                    break;\n                case 'allowGrouping':\n                    this.notify(events.uiUpdate, { module: 'group', enable: this.allowGrouping });\n                    this.headerModule.refreshUI();\n                    requireRefresh = true;\n                    checkCursor = true;\n                    break;\n                case 'enableInfiniteScrolling':\n                case 'childGrid':\n                    requireRefresh = true;\n                    break;\n                case 'toolbar':\n                    this.notify(events.uiUpdate, { module: 'toolbar' });\n                    break;\n                case 'groupSettings':\n                    this.notify(events.inBoundModelChanged, {\n                        module: 'group', properties: newProp.groupSettings,\n                        oldProperties: oldProp.groupSettings\n                    });\n                    break;\n                case 'aggregates':\n                    if (!this.aggregates.length && this.allowGrouping && this.groupSettings.columns.length) {\n                        requireRefresh = true;\n                    }\n                    this.notify(events.uiUpdate, { module: 'aggregate', properties: newProp });\n                    break;\n                case 'frozenColumns':\n                case 'frozenRows':\n                case 'enableVirtualization':\n                case 'currencyCode':\n                case 'locale':\n                    this.log('frozen_rows_columns');\n                    freezeRefresh = true;\n                    requireGridRefresh = true;\n                    break;\n                case 'query':\n                    if (!this.getDataModule().isQueryInvokedFromData) {\n                        requireRefresh = true;\n                    }\n                    this.getDataModule().isQueryInvokedFromData = false;\n                    break;\n                default:\n                    this.extendedPropertyChange(prop, newProp, requireGridRefresh);\n            }\n        }\n        if (checkCursor) {\n            this.updateDefaultCursor();\n        }\n        if (requireGridRefresh) {\n            if (freezeRefresh || this.getFrozenColumns() || this.frozenRows) {\n                this.freezeRefresh();\n            }\n            else {\n                this.refresh();\n            }\n        }\n        else if (requireRefresh) {\n            this.notify(events.modelChanged, args);\n            requireRefresh = false;\n            this.maintainSelection(newProp.selectedRowIndex);\n        }\n    };\n    Grid.prototype.extendedPropertyChange = function (prop, newProp, requireGridRefresh) {\n        switch (prop) {\n            case 'enableRtl':\n                this.updateRTL();\n                if (this.allowPaging) {\n                    this.element.querySelector('.e-gridpager').ej2_instances[0].enableRtl = newProp.enableRtl;\n                    this.element.querySelector('.e-gridpager').ej2_instances[0].dataBind();\n                }\n                if (this.height !== 'auto') {\n                    this.scrollModule.removePadding(!newProp.enableRtl);\n                    this.scrollModule.setPadding();\n                }\n                if (this.toolbar && this.toolbarModule) {\n                    this.toolbarModule.getToolbar().ej2_instances[0].enableRtl = newProp.enableRtl;\n                    this.toolbarModule.getToolbar().ej2_instances[0].dataBind();\n                }\n                if (this.contextMenuItems && this.contextMenuModule) {\n                    this.contextMenuModule.getContextMenu().ej2_instances[0].enableRtl = newProp.enableRtl;\n                    this.contextMenuModule.getContextMenu().ej2_instances[0].dataBind();\n                }\n                if (this.showColumnMenu && this.columnMenuModule) {\n                    this.columnMenuModule.getColumnMenu().ej2_instances[0].enableRtl = newProp.enableRtl;\n                    this.columnMenuModule.getColumnMenu().ej2_instances[0].dataBind();\n                }\n                if (this.filterSettings.type === 'FilterBar' && this.filterSettings.showFilterBarOperator) {\n                    this.refreshHeader();\n                }\n                this.notify(events.rtlUpdated, {});\n                break;\n            case 'enableAltRow':\n                this.renderModule.refresh();\n                break;\n            case 'allowResizing':\n                this.headerModule.refreshUI();\n                this.updateResizeLines();\n                break;\n            case 'rowHeight':\n                if (this.rowHeight) {\n                    addClass([this.element], 'e-grid-min-height');\n                }\n                else {\n                    removeClass([this.element], 'e-grid-min-height');\n                }\n                this.renderModule.refresh();\n                this.headerModule.refreshUI();\n                break;\n            case 'gridLines':\n                this.updateGridLines();\n                break;\n            case 'showColumnMenu':\n                this.headerModule.refreshUI();\n                this.notify(events.uiUpdate, { module: 'columnMenu', enable: true });\n                break;\n            case 'columnMenuItems':\n                this.notify(events.uiUpdate, { module: 'columnMenu', enable: this.columnMenuItems });\n                break;\n            case 'contextMenuItems':\n                this.notify(events.uiUpdate, { module: 'contextMenu', enable: this.contextMenuItems });\n                break;\n            case 'showColumnChooser':\n                this.notify(events.uiUpdate, { module: 'columnChooser', enable: this.showColumnChooser });\n                break;\n            case 'filterSettings':\n                this.updateStackedFilter();\n                this.notify(events.inBoundModelChanged, { module: 'filter', properties: newProp.filterSettings });\n                break;\n            case 'searchSettings':\n                this.notify(events.inBoundModelChanged, { module: 'search', properties: newProp.searchSettings });\n                break;\n            case 'sortSettings':\n                this.notify(events.inBoundModelChanged, { module: 'sort' });\n                break;\n            case 'selectionSettings':\n                this.notify(events.inBoundModelChanged, { module: 'selection', properties: newProp.selectionSettings });\n                break;\n            case 'editSettings':\n                this.notify(events.inBoundModelChanged, { module: 'edit', properties: newProp.editSettings });\n                break;\n            case 'allowTextWrap':\n            case 'textWrapSettings':\n                if (this.allowTextWrap) {\n                    this.applyTextWrap();\n                }\n                else {\n                    this.removeTextWrap();\n                }\n                this.notify(events.freezeRender, { case: 'textwrap', isModeChg: (prop === 'textWrapSettings') });\n                break;\n            case 'dataSource':\n                // eslint-disable-next-line no-case-declarations\n                var pending_1 = this.getDataModule().getState();\n                if (Object.getPrototypeOf(newProp).deepWatch) {\n                    var pKeyField = this.getPrimaryKeyFieldNames()[0];\n                    for (var i = 0, props = Object.keys(newProp.dataSource); i < props.length; i++) {\n                        this.setRowData(getValue(pKeyField, this.dataSource[props[i]]), this.dataSource[props[i]]);\n                    }\n                }\n                else if (pending_1.isPending) {\n                    var gResult = !isNullOrUndefined(this.dataSource) ? this.dataSource.result : [];\n                    var names = (pending_1.group || []);\n                    for (var i = 0; i < names.length; i++) {\n                        gResult = DataUtil.group(gResult, names[i], pending_1.aggregates || []);\n                    }\n                    this.dataSource = {\n                        result: gResult, count: this.dataSource.count,\n                        aggregates: this.dataSource.aggregates\n                    };\n                    this.getDataModule().setState({});\n                    pending_1.resolver(this.dataSource);\n                }\n                else {\n                    this.getDataModule().setState({ isDataChanged: false });\n                    this.notify(events.dataSourceModified, {});\n                    if (!requireGridRefresh) {\n                        this.renderModule.refresh();\n                        if (this.isCheckBoxSelection) {\n                            this.notify(events.beforeRefreshOnDataChange, {});\n                        }\n                    }\n                }\n                this.scrollRefresh();\n                break;\n            case 'enableHover':\n                // eslint-disable-next-line no-case-declarations\n                var action = newProp.enableHover ? addClass : removeClass;\n                action([this.element], 'e-gridhover');\n                break;\n            case 'selectedRowIndex':\n                if (!this.isSelectedRowIndexUpdating) {\n                    this.selectRow(newProp.selectedRowIndex);\n                }\n                this.isSelectedRowIndexUpdating = false;\n                break;\n            case 'resizeSettings':\n                this.widthService.setWidthToTable();\n                break;\n            case 'enableAdaptiveUI':\n                this.notify(events.setFullScreenDialog, {});\n                break;\n            case 'rowRenderingMode':\n                this.enableVerticalRendering();\n                this.notify(events.rowModeChange, {});\n                this.refresh();\n                break;\n            case 'enableStickyHeader':\n                this.scrollModule.addStickyListener(newProp.enableStickyHeader);\n                break;\n        }\n    };\n    Grid.prototype.maintainSelection = function (index) {\n        var _this = this;\n        if (index !== -1) {\n            var fn_1 = function () {\n                _this.selectRow(index);\n                _this.off(events.contentReady, fn_1);\n            };\n            this.on(events.contentReady, fn_1, this);\n        }\n    };\n    /**\n     * @param {Object} prop - Defines the property\n     * @param {boolean} muteOnChange - Defines the mute on change\n     * @returns {void}\n     * @private\n     */\n    Grid.prototype.setProperties = function (prop, muteOnChange) {\n        _super.prototype.setProperties.call(this, prop, muteOnChange);\n        var filterSettings = 'filterSettings';\n        if (prop[filterSettings] && this.filterModule && muteOnChange) {\n            this.filterModule.refreshFilter();\n        }\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Grid.prototype.setTablesCount = function () {\n        var frozenCols = this.getFrozenColumns();\n        var frozenLeft = this.getFrozenLeftColumnsCount();\n        var frozenRight = this.getFrozenRightColumnsCount();\n        if (frozenCols && !frozenLeft && !frozenRight) {\n            this.tablesCount = 2;\n        }\n        else if (!frozenCols && (frozenLeft || frozenRight)) {\n            if ((frozenLeft && !frozenRight) || (frozenRight && !frozenLeft)) {\n                this.tablesCount = 2;\n            }\n            else if (frozenLeft && frozenRight) {\n                this.tablesCount = 3;\n            }\n        }\n    };\n    /**\n     * @hidden\n     * @returns {number} - Returns the tables count\n     */\n    Grid.prototype.getTablesCount = function () {\n        return this.tablesCount;\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Grid.prototype.updateDefaultCursor = function () {\n        var headerCells = [].slice.call(this.getHeaderContent().querySelectorAll('.e-headercell:not(.e-stackedheadercell)'));\n        var stdHdrCell = [].slice.call(this.getHeaderContent().getElementsByClassName('e-stackedheadercell'));\n        var cols = this.getColumns();\n        if (this.enableColumnVirtualization && this.getFrozenColumns()) {\n            var cells = this.contentModule.getHeaderCells();\n            headerCells = cells.length ? cells : headerCells;\n        }\n        for (var i = 0; i < headerCells.length; i++) {\n            var cell = headerCells[i];\n            if (this.allowGrouping || this.allowReordering || this.allowSorting) {\n                if (!cols[i].allowReordering || !cols[i].allowSorting || !cols[i].allowGrouping) {\n                    cell.classList.add('e-defaultcursor');\n                }\n                else {\n                    cell.classList.add('e-mousepointer');\n                }\n            }\n        }\n        for (var count = 0; count < stdHdrCell.length; count++) {\n            if (this.allowReordering) {\n                stdHdrCell[count].classList.add('e-mousepointer');\n            }\n        }\n    };\n    Grid.prototype.updateColumnModel = function (columns) {\n        for (var i = 0, len = columns.length; i < len; i++) {\n            if (columns[i].columns) {\n                this.updateColumnModel(columns[i].columns);\n            }\n            else {\n                this.columnModel.push(columns[i]);\n            }\n        }\n        this.updateColumnLevelFrozen();\n        this.updateFrozenColumns();\n        this.updateLockableColumns();\n    };\n    Grid.prototype.updateColumnLevelFrozen = function () {\n        var cols = this.columnModel;\n        var leftCols = [];\n        var rightCols = [];\n        var movableCols = [];\n        if (this.frozenLeftCount || this.frozenRightCount) {\n            for (var i = 0, len = cols.length; i < len; i++) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var col = cols[i];\n                if (col.freeze === 'Left') {\n                    col.freezeTable = literals.frozenLeft;\n                    leftCols.push(col);\n                }\n                else if (col.freeze === 'Right') {\n                    col.freezeTable = literals.frozenRight;\n                    rightCols.push(col);\n                }\n                else {\n                    col.freezeTable = 'movable';\n                    movableCols.push(col);\n                }\n            }\n            this.columnModel = leftCols.concat(movableCols).concat(rightCols);\n        }\n    };\n    Grid.prototype.updateFrozenColumns = function () {\n        if (this.frozenLeftCount || this.frozenRightCount) {\n            return;\n        }\n        var cols = this.columnModel;\n        var directFrozenCount = this.frozenColumns;\n        var totalFrozenCount = this.getFrozenColumns();\n        var count = 0;\n        for (var i = 0, len = cols.length; i < len; i++) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var col = cols[i];\n            if (directFrozenCount) {\n                if (i < directFrozenCount) {\n                    col.freezeTable = literals.frozenLeft;\n                }\n                else {\n                    col.freezeTable = 'movable';\n                }\n            }\n            if (col.isFrozen && i >= directFrozenCount) {\n                col.freezeTable = literals.frozenLeft;\n                cols.splice(this.frozenColumns + count, 0, cols.splice(i, 1)[0]);\n                count++;\n            }\n            else if (totalFrozenCount && !directFrozenCount) {\n                col.freezeTable = 'movable';\n            }\n        }\n    };\n    Grid.prototype.getFrozenLeftCount = function () {\n        return this.getFrozenColumns() || this.getFrozenLeftColumnsCount();\n    };\n    Grid.prototype.isFrozenGrid = function () {\n        return this.getFrozenColumns() !== 0 || this.getFrozenLeftColumnsCount() !== 0 || this.getFrozenRightColumnsCount() !== 0;\n    };\n    Grid.prototype.getFrozenMode = function () {\n        return this.frozenName;\n    };\n    Grid.prototype.updateLockableColumns = function () {\n        var cols = this.columnModel;\n        var frozenCount = 0;\n        var movableCount = 0;\n        var frozenColumns = this.getFrozenColumns();\n        for (var i = 0; i < cols.length; i++) {\n            if (cols[i].lockColumn) {\n                if (i < frozenColumns) {\n                    cols.splice(frozenCount, 0, cols.splice(i, 1)[0]);\n                    frozenCount++;\n                }\n                else {\n                    cols.splice(frozenColumns + movableCount, 0, cols.splice(i, 1)[0]);\n                    movableCount++;\n                }\n            }\n        }\n    };\n    Grid.prototype.checkLockColumns = function (cols) {\n        for (var i = 0; i < cols.length; i++) {\n            if (cols[i].columns) {\n                this.checkLockColumns(cols[i].columns);\n            }\n            else if (cols[i].lockColumn) {\n                this.lockcolPositionCount++;\n            }\n        }\n    };\n    /**\n     * Gets the columns from the Grid.\n     *\n     * @param {boolean} isRefresh - Defines the boolean whether to refresh\n     * @returns {Column[]} - returns the column\n     */\n    Grid.prototype.getColumns = function (isRefresh) {\n        var _this = this;\n        var inview = this.inViewIndexes.map(function (v) { return v - _this.groupSettings.columns.length; }).filter(function (v) { return v > -1; });\n        var vLen = inview.length;\n        if (!this.enableColumnVirtualization || isNullOrUndefined(this.columnModel) || this.columnModel.length === 0 || isRefresh) {\n            this.columnModel = [];\n            this.updateColumnModel(this.columns);\n        }\n        var columns = vLen === 0 ? this.columnModel :\n            this.columnModel.slice(inview[0], inview[vLen - 1] + 1);\n        if (this.contentModule && this.enableColumnVirtualization && this.isFrozenGrid() && inview.length\n            && inview[0] > 0) {\n            var frozenCols = this.contentModule.ensureFrozenCols(columns);\n            columns = frozenCols;\n        }\n        return columns;\n    };\n    /**\n     * @private\n     * @param {string} stackedHeader - Defines the stacked header\n     * @param {Column[]} col - Defines the column\n     * @returns {Column} Returns the Column\n     */\n    Grid.prototype.getStackedHeaderColumnByHeaderText = function (stackedHeader, col) {\n        for (var i = 0; i < col.length; i++) {\n            var individualColumn = col[i];\n            if (individualColumn.field === stackedHeader || individualColumn.headerText === stackedHeader) {\n                this.stackedColumn = individualColumn;\n                break;\n            }\n            else if (individualColumn.columns) {\n                this.getStackedHeaderColumnByHeaderText(stackedHeader, individualColumn.columns);\n            }\n        }\n        return this.stackedColumn;\n    };\n    /**\n     * @private\n     * @returns {number[]} Returns the column indexes\n     */\n    Grid.prototype.getColumnIndexesInView = function () {\n        return this.inViewIndexes;\n    };\n    /**\n     * @private\n     * @returns {Query} - returns the query\n     */\n    Grid.prototype.getQuery = function () {\n        return this.query;\n    };\n    /**\n     * @private\n     * @returns {object} - returns the locale constants\n     */\n    Grid.prototype.getLocaleConstants = function () {\n        return this.defaultLocale;\n    };\n    /**\n     * @param {number[]} indexes - specifies the indexes\n     * @returns {void}\n     * @private\n     */\n    Grid.prototype.setColumnIndexesInView = function (indexes) {\n        this.inViewIndexes = indexes;\n    };\n    /**\n     * Gets the visible columns from the Grid.\n     *\n     * @returns {Column[]} returns the column\n     */\n    Grid.prototype.getVisibleColumns = function () {\n        return this.getCurrentVisibleColumns();\n    };\n    /**\n     * Gets the header div of the Grid.\n     *\n     * @returns {Element} - Returns the element\n     */\n    Grid.prototype.getHeaderContent = function () {\n        return this.headerModule.getPanel();\n    };\n    /**\n     * Sets the header div of the Grid to replace the old header.\n     *\n     * @param  {Element} element - Specifies the Grid header.\n     * @returns {void}\n     */\n    Grid.prototype.setGridHeaderContent = function (element) {\n        this.headerModule.setPanel(element);\n    };\n    /**\n     * Gets the content table of the Grid.\n     *\n     * @returns {Element} - Returns the element\n     */\n    Grid.prototype.getContentTable = function () {\n        return this.contentModule.getTable();\n    };\n    /**\n     * Sets the content table of the Grid to replace the old content table.\n     *\n     * @param  {Element} element - Specifies the Grid content table.\n     * @returns {void}\n     */\n    Grid.prototype.setGridContentTable = function (element) {\n        this.contentModule.setTable(element);\n    };\n    /**\n     * Gets the content div of the Grid.\n     *\n     * @returns {Element} Returns the element\n     */\n    Grid.prototype.getContent = function () {\n        return this.contentModule.getPanel();\n    };\n    /**\n     * Sets the content div of the Grid to replace the old Grid content.\n     *\n     * @param  {Element} element - Specifies the Grid content.\n     * @returns {void}\n     */\n    Grid.prototype.setGridContent = function (element) {\n        this.contentModule.setPanel(element);\n    };\n    /**\n     * Gets the header table element of the Grid.\n     *\n     * @returns {Element} returns the element\n     */\n    Grid.prototype.getHeaderTable = function () {\n        return this.headerModule.getTable();\n    };\n    /**\n     * Sets the header table of the Grid to replace the old one.\n     *\n     * @param  {Element} element - Specifies the Grid header table.\n     * @returns {void}\n     */\n    Grid.prototype.setGridHeaderTable = function (element) {\n        this.headerModule.setTable(element);\n    };\n    /**\n     * Gets the footer div of the Grid.\n     *\n     * @returns {Element} returns the element\n     */\n    Grid.prototype.getFooterContent = function () {\n        this.footerElement = this.element.getElementsByClassName(literals.gridFooter)[0];\n        return this.footerElement;\n    };\n    /**\n     * Gets the footer table element of the Grid.\n     *\n     * @returns {Element} returns the element\n     */\n    Grid.prototype.getFooterContentTable = function () {\n        this.footerElement = this.element.getElementsByClassName(literals.gridFooter)[0];\n        return this.footerElement.firstChild.firstChild;\n    };\n    /**\n     * Gets the pager of the Grid.\n     *\n     * @returns {Element} returns the element\n     */\n    Grid.prototype.getPager = function () {\n        return this.gridPager; //get element from pager\n    };\n    /**\n     * Sets the pager of the Grid to replace the old pager.\n     *\n     * @param  {Element} element - Specifies the Grid pager.\n     * @returns {void}\n     */\n    Grid.prototype.setGridPager = function (element) {\n        this.gridPager = element;\n    };\n    /**\n     * Gets a row by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} returns the element\n     */\n    Grid.prototype.getRowByIndex = function (index) {\n        return this.contentModule.getRowByIndex(index);\n    };\n    /**\n     * Gets a movable tables row by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} returns the element\n     */\n    Grid.prototype.getMovableRowByIndex = function (index) {\n        return this.contentModule.getMovableRowByIndex(index);\n    };\n    /**\n     * Gets a frozen tables row by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} returns the element\n     */\n    Grid.prototype.getFrozenRowByIndex = function (index) {\n        return this.getFrozenDataRows()[index];\n    };\n    /**\n     * Gets all the data rows of the Grid.\n     *\n     * @returns {Element[]} returns the element\n     */\n    Grid.prototype.getRows = function () {\n        return this.contentModule.getRowElements();\n    };\n    /**\n     * Gets a frozen right tables row element by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} returns the element\n     */\n    Grid.prototype.getFrozenRightRowByIndex = function (index) {\n        return this.contentModule.getFrozenRightRowByIndex(index);\n    };\n    /**\n     * Get a row information based on cell\n     *\n     * @param {Element | EventTarget} target - specifies the element\n     * @returns {RowInfo} returns the row info\n     */\n    Grid.prototype.getRowInfo = function (target) {\n        var ele = target;\n        var args = { target: target };\n        if (!isNullOrUndefined(target) && isNullOrUndefined(parentsUntil(ele, 'e-detailrowcollapse')\n            && isNullOrUndefined(parentsUntil(ele, 'e-recordplusexpand')))) {\n            var cell = closest(ele, '.' + literals.rowCell);\n            if (!cell) {\n                var row = closest(ele, '.' + literals.row);\n                if (!isNullOrUndefined(row) && !row.classList.contains('e-addedrow')) {\n                    var rowObj = this.getRowObjectFromUID(row.getAttribute('data-uid'));\n                    var rowIndex = parseInt(row.getAttribute(literals.ariaRowIndex), 10);\n                    args = { row: row, rowData: rowObj.data, rowIndex: rowIndex };\n                }\n                return args;\n            }\n            var cellIndex = parseInt(cell.getAttribute(literals.ariaColIndex), 10);\n            if (!isNullOrUndefined(cell) && !isNaN(cellIndex)) {\n                var row_1 = closest(cell, '.' + literals.row);\n                var rowIndex = parseInt(row_1.getAttribute(literals.ariaRowIndex), 10);\n                var frzCols = this.getFrozenColumns();\n                var tableName = this.columnModel[cellIndex].getFreezeTableName();\n                var rows = this.contentModule.getRows();\n                var index = cellIndex + this.getIndentCount();\n                if (this.isFrozenGrid()) {\n                    if (tableName === literals.frozenLeft) {\n                        rows = this.contentModule.getRows();\n                    }\n                    else if (tableName === 'movable') {\n                        index = cellIndex - frzCols - this.frozenLeftCount;\n                        rows = this.contentModule.getMovableRows();\n                    }\n                    else if (tableName === literals.frozenRight) {\n                        index = cellIndex - (this.frozenLeftCount + this.movableCount);\n                        rows = this.contentModule.getFrozenRightRows();\n                    }\n                }\n                var rowsObject = rows.filter(function (r) { return r.uid === row_1.getAttribute('data-uid'); });\n                var rowData = {};\n                var column = void 0;\n                if (Object.keys(rowsObject).length) {\n                    rowData = rowsObject[0].data;\n                    column = rowsObject[0].cells[index].column;\n                }\n                args = { cell: cell, cellIndex: cellIndex, row: row_1, rowIndex: rowIndex, rowData: rowData, column: column, target: target };\n            }\n        }\n        return args;\n    };\n    /**\n     * Gets the Grid's movable content rows from frozen grid.\n     *\n     * @returns {Element[]} returns the element\n     */\n    Grid.prototype.getMovableRows = function () {\n        return this.contentModule.getMovableRowElements();\n    };\n    /**\n     * Gets the Grid's frozen right content rows from frozen grid.\n     *\n     * @returns {Element[]} returns the element\n     */\n    Grid.prototype.getFrozenRightRows = function () {\n        return this.contentModule.getFrozenRightRowElements();\n    };\n    /**\n     * Gets all the Grid's data rows.\n     *\n     * @returns {Element[]} returns the element\n     */\n    Grid.prototype.getDataRows = function () {\n        return this.getAllDataRows();\n    };\n    /**\n     * @param {boolean} includeAdd - specifies includeAdd\n     * @returns {Element[]} returns the element\n     * @hidden\n     */\n    Grid.prototype.getAllDataRows = function (includeAdd) {\n        if (isNullOrUndefined(this.getContentTable().querySelector(literals.tbody))) {\n            return [];\n        }\n        var tbody = this.isFrozenGrid() ? this.getFrozenLeftContentTbody()\n            : this.getContentTable().querySelector(literals.tbody);\n        var rows = [].slice.call(tbody.children);\n        if (this.frozenRows) {\n            var hdrTbody = this.isFrozenGrid() ? this.getHeaderContent().querySelector('.' + literals.frozenHeader).querySelector(literals.tbody)\n                : this.getHeaderTable().querySelector(literals.tbody);\n            var freezeRows = [].slice.call(hdrTbody.children);\n            rows = this.addMovableRows(freezeRows, rows);\n        }\n        var dataRows = this.generateDataRows(rows, includeAdd);\n        return dataRows;\n    };\n    /**\n     * @param {HTMLElement[]} fRows - Defines the frozen Rows\n     * @param {HTMLElement[]} mrows - Defines the movable Rows\n     * @returns {HTMLElement[]} Returns the element\n     * @hidden\n     */\n    Grid.prototype.addMovableRows = function (fRows, mrows) {\n        for (var i = 0, len = mrows.length; i < len; i++) {\n            fRows.push(mrows[i]);\n        }\n        return fRows;\n    };\n    Grid.prototype.generateDataRows = function (rows, includAdd) {\n        var dRows = [];\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (rows[i].classList.contains(literals.row) && (!rows[i].classList.contains('e-hiddenrow') || includAdd)) {\n                if (this.isCollapseStateEnabled()) {\n                    dRows[parseInt(rows[i].getAttribute('aria-rowindex'), 10)] = rows[i];\n                }\n                else {\n                    dRows.push(rows[i]);\n                }\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Gets all the Grid's movable table data rows.\n     *\n     * @returns {Element[]} Returns the element\n     */\n    Grid.prototype.getMovableDataRows = function () {\n        return this.getAllMovableDataRows();\n    };\n    /**\n     * @param {boolean} includeAdd Defines the include add in boolean\n     * @returns {Element[]} Returns the element\n     * @hidden\n     */\n    Grid.prototype.getAllMovableDataRows = function (includeAdd) {\n        if (!this.isFrozenGrid()) {\n            return [];\n        }\n        var rows = [].slice.call(this.getContent().querySelector('.' + literals.movableContent).querySelector(literals.tbody).children);\n        if (this.frozenRows) {\n            var freezeRows = [].slice.call(this.getHeaderContent().querySelector('.' + literals.movableHeader).querySelector(literals.tbody).children);\n            rows = this.addMovableRows(freezeRows, rows);\n        }\n        var dataRows = this.generateDataRows(rows, includeAdd);\n        return dataRows;\n    };\n    /**\n     * Gets all the Grid's frozen table data rows.\n     *\n     * @returns {Element[]} returns the element\n     */\n    Grid.prototype.getFrozenDataRows = function () {\n        return this.getAllFrozenDataRows();\n    };\n    /**\n     * @param {boolean} includeAdd Defines the include add in boolean\n     * @returns {Element[]} Returns the element\n     * @hidden\n     */\n    Grid.prototype.getAllFrozenDataRows = function (includeAdd) {\n        var rows = [].slice.call(this.getContent().querySelector('.' + literals.frozenContent).querySelector(literals.tbody).children);\n        if (this.frozenRows) {\n            var freezeRows = [].slice.call(this.getHeaderContent().querySelector('.' + literals.frozenHeader).querySelector(literals.tbody).children);\n            rows = this.addMovableRows(freezeRows, rows);\n        }\n        var dataRows = this.generateDataRows(rows, includeAdd);\n        return dataRows;\n    };\n    /**\n     * Gets all the Grid's frozen right table data rows.\n     *\n     * @returns {Element[]} Returns the Element\n     */\n    Grid.prototype.getFrozenRightDataRows = function () {\n        return this.getAllFrozenRightDataRows();\n    };\n    /**\n     * @param {boolean} includeAdd Defines the include add in boolean\n     * @returns {Element[]} Returns the element\n     * @hidden\n     */\n    Grid.prototype.getAllFrozenRightDataRows = function (includeAdd) {\n        if (this.getFrozenMode() !== 'Right' && this.getFrozenMode() !== 'Left-Right') {\n            return [];\n        }\n        var rows = [].slice.call(this.getContent().querySelector('.e-frozen-right-content').querySelector(literals.tbody).children);\n        if (this.frozenRows) {\n            var freezeRows = [].slice.call(this.getHeaderContent().querySelector('.e-frozen-right-header').querySelector(literals.tbody).children);\n            rows = this.addMovableRows(freezeRows, rows);\n        }\n        var dataRows = this.generateDataRows(rows, includeAdd);\n        return dataRows;\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     * @returns {void}\n     */\n    Grid.prototype.setCellValue = function (key, field, value) {\n        var cells = 'cells';\n        var rowData = 'data';\n        var rowIdx = 'index';\n        var rowuID = 'uid';\n        var isRight = this.getFrozenMode() === 'Right';\n        var pkName = this.getPrimaryKeyFieldNames()[0];\n        var cell = new CellRenderer(this, this.serviceLocator);\n        var fieldIdx = this.getColumnIndexByField(field);\n        var col = this.getColumnByField(field);\n        var rowObjects = col.getFreezeTableName() === 'movable' ? this.contentModule.getMovableRows() :\n            col.getFreezeTableName() === 'frozen-right' ? this.getFrozenRightRowsObject() : this.contentModule.getRows();\n        var selectedRow = rowObjects.filter(function (r) {\n            return getValue(pkName, r.data) === key;\n        })[0];\n        var tr = selectedRow ? this.element.querySelector('[data-uid=' + selectedRow[rowuID] + ']') : null;\n        if (!isNullOrUndefined(tr)) {\n            setValue(field, value, selectedRow[rowData]);\n            var left = this.getFrozenLeftColumnsCount() || this.getFrozenColumns();\n            var movable = this.getMovableColumnsCount();\n            if (this.isRowDragable() && !isRight) {\n                left++;\n            }\n            var frIdx = left + movable;\n            var td = this.getCellFromIndex(selectedRow[rowIdx], fieldIdx);\n            if (!isNullOrUndefined(td)) {\n                var Idx = col.getFreezeTableName() === 'movable' ? left : col.getFreezeTableName() === 'frozen-right' ? frIdx : 0;\n                if (this.groupSettings.columns.length) {\n                    fieldIdx = fieldIdx + this.groupSettings.columns.length;\n                }\n                if (this.childGrid || this.detailTemplate) {\n                    fieldIdx++;\n                }\n                if (this.isRowDragable() && !isRight) {\n                    fieldIdx++;\n                }\n                var sRow = selectedRow[cells][fieldIdx - Idx];\n                cell.refreshTD(td, sRow, selectedRow[rowData], { index: selectedRow[rowIdx] });\n                if (this.aggregates.length > 0) {\n                    this.notify(events.refreshFooterRenderer, {});\n                    if (this.groupSettings.columns.length > 0) {\n                        this.notify(events.groupAggregates, {});\n                    }\n                }\n                /* tslint:disable:no-string-literal */\n                if (!isNullOrUndefined(selectedRow) && !isNullOrUndefined(selectedRow['changes'])) {\n                    selectedRow['changes'][field] = value;\n                }\n                /* tslint:disable:no-string-literal */\n                this.trigger(events.queryCellInfo, {\n                    cell: td, column: col, data: selectedRow[rowData]\n                });\n            }\n        }\n        else {\n            return;\n        }\n    };\n    /**\n     * @param {string} columnUid - Defines column uid\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.refreshReactColumnTemplateByUid = function (columnUid) {\n        var _this = this;\n        if (this.isReact) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.clearTemplate(['columnTemplate'], undefined, function () {\n                var cells = 'cells';\n                var rowIdx = 'index';\n                var rowsObj = _this.getRowsObject();\n                var indent = _this.getIndentCount();\n                var cellIndex = _this.getNormalizedColumnIndex(columnUid);\n                for (var j = 0; j < rowsObj.length; j++) {\n                    if (rowsObj[j].isDataRow && !isNullOrUndefined(rowsObj[j].index)) {\n                        var cell = rowsObj[j][cells][cellIndex];\n                        var cellRenderer = new CellRenderer(_this, _this.serviceLocator);\n                        var td = _this.getCellFromIndex(rowsObj[j].index, cellIndex - indent);\n                        cellRenderer.refreshTD(td, cell, rowsObj[j].data, { index: rowsObj[j][rowIdx] });\n                    }\n                }\n            });\n        }\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {Object} rowData - To update new data for the particular row.\n     * @returns {void}\n     */\n    Grid.prototype.setRowData = function (key, rowData) {\n        var rowuID = 'uid';\n        var rowObjects = this.contentModule.getRows();\n        var pkName = this.getPrimaryKeyFieldNames()[0];\n        var rowRenderer = new RowRenderer(this.serviceLocator, null, this);\n        if (this.groupSettings.columns.length > 0 && this.aggregates.length > 0) {\n            rowObjects = rowObjects.filter(function (row) { return row.isDataRow; });\n        }\n        var selectedRow = rowObjects.filter(function (r) {\n            return getValue(pkName, r.data) === key;\n        })[0];\n        if (!isNullOrUndefined(selectedRow) && this.element.querySelectorAll('[data-uid=' + selectedRow[rowuID] + ']').length) {\n            selectedRow.changes = rowData;\n            refreshForeignData(selectedRow, this.getForeignKeyColumns(), selectedRow.changes);\n            rowRenderer.refresh(selectedRow, this.getColumns(), true);\n            if (this.aggregates.length > 0) {\n                this.notify(events.refreshFooterRenderer, {});\n                if (this.groupSettings.columns.length > 0) {\n                    this.notify(events.groupAggregates, {});\n                }\n            }\n        }\n        else {\n            return;\n        }\n    };\n    /**\n     * Gets a cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @returns {Element} Returns the Element\n     */\n    Grid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        var col = this.getColumnByIndex(columnIndex);\n        return getCellByColAndRowIndex(this, col, rowIndex, columnIndex);\n    };\n    /**\n     * Gets a movable table cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @returns {Element} Returns the Element\n     */\n    Grid.prototype.getMovableCellFromIndex = function (rowIndex, columnIndex) {\n        if (this.frozenName === 'Left-Right' && columnIndex >= this.movableCount) {\n            return undefined;\n        }\n        var index = this.getFrozenColumns() || this.getFrozenLeftColumnsCount();\n        return this.getMovableDataRows()[rowIndex] &&\n            this.getMovableDataRows()[rowIndex].getElementsByClassName(literals.rowCell)[columnIndex - index];\n    };\n    /**\n     * Gets a frozen right table cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @returns {Element} Returns the Element\n     */\n    Grid.prototype.getFrozenRightCellFromIndex = function (rowIndex, columnIndex) {\n        var index = this.getFrozenLeftColumnsCount() + this.getMovableColumnsCount();\n        var rows = this.getFrozenRightDataRows();\n        return rows[rowIndex] && rows[rowIndex].getElementsByClassName(literals.rowCell)[columnIndex - index];\n    };\n    /**\n     * Gets a column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} Returns the Element\n     */\n    Grid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.getHeaderTable().getElementsByClassName('e-headercell')[index];\n    };\n    /**\n     * Gets a movable column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} Returns the Element\n     */\n    Grid.prototype.getMovableColumnHeaderByIndex = function (index) {\n        var left = this.getFrozenColumns() || this.getFrozenLeftColumnsCount();\n        return this.getMovableVirtualHeader().getElementsByClassName('e-headercell')[index - left];\n    };\n    /**\n     * Gets a frozen right column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} Returns the Element\n     */\n    Grid.prototype.getFrozenRightColumnHeaderByIndex = function (index) {\n        var left = this.getFrozenLeftColumnsCount() + this.getMovableColumnsCount();\n        return this.getFrozenRightHeader().getElementsByClassName('e-headercell')[index - left];\n    };\n    /**\n     * Gets a frozen left column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} Returns the Element\n     */\n    Grid.prototype.getFrozenLeftColumnHeaderByIndex = function (index) {\n        return this.getFrozenVirtualHeader().getElementsByClassName('e-headercell')[index];\n    };\n    /**\n     * @param {string} uid - Defines the uid\n     * @param {boolean} isMovable - Defines isMovable\n     * @param {boolean} isFrozenRight - Defines isFrozenRight\n     * @returns {Row<Column>} Returns the row object\n     * @hidden\n     */\n    Grid.prototype.getRowObjectFromUID = function (uid, isMovable, isFrozenRight) {\n        var rows = this.contentModule.getRows();\n        var row = this.rowObject(rows, uid);\n        if (this.isFrozenGrid()) {\n            if (!row || isMovable || isFrozenRight) {\n                row = this.rowObject(this.contentModule.getMovableRows(), uid);\n                if ((!row && this.getFrozenMode() === 'Left-Right') || isFrozenRight) {\n                    row = this.rowObject(this.contentModule.getFrozenRightRows(), uid);\n                }\n                return row;\n            }\n        }\n        if (isNullOrUndefined(row) && this.enableVirtualization && this.groupSettings.columns.length > 0) {\n            row = this.rowObject(this.vRows, uid);\n            return row;\n        }\n        return row;\n    };\n    Grid.prototype.rowObject = function (rows, uid) {\n        for (var _i = 0, rows_1 = rows; _i < rows_1.length; _i++) {\n            var row = rows_1[_i];\n            if (row.uid === uid) {\n                return row;\n            }\n        }\n        return null;\n    };\n    /**\n     * @hidden\n     * @returns {Row<Column>[]} Returns the Row object\n     */\n    Grid.prototype.getRowsObject = function () {\n        return this.contentModule.getRows();\n    };\n    /**\n     * @hidden\n     * @returns {Row<Column>[]} Returns the Row object\n     */\n    Grid.prototype.getMovableRowsObject = function () {\n        var rows = [];\n        if (this.isFrozenGrid()) {\n            rows = this.contentModule.getMovableRows();\n        }\n        return rows;\n    };\n    /**\n     * @hidden\n     * @returns {Row<Column>[]} Returns the Row object\n     */\n    Grid.prototype.getFrozenRightRowsObject = function () {\n        var rows = [];\n        if (this.getFrozenMode() === 'Right' || this.getFrozenMode() === 'Left-Right') {\n            rows = this.contentModule.getFrozenRightRows();\n        }\n        return rows;\n    };\n    /**\n     * Gets a column header by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {Element} - Returns the element\n     */\n    Grid.prototype.getColumnHeaderByField = function (field) {\n        var column = this.getColumnByField(field);\n        return column ? this.getColumnHeaderByUid(column.uid) : undefined;\n    };\n    /**\n     * Gets a column header by UID.\n     *\n     * @param {string} uid - Specifies the column uid.\n     * @returns {Element} - Returns the element\n     */\n    Grid.prototype.getColumnHeaderByUid = function (uid) {\n        var element = this.getHeaderContent().querySelector('[e-mappinguid=' + uid + ']');\n        return element ? element.parentElement : undefined;\n    };\n    /**\n     * @hidden\n     * @param {number} index - Defines the index\n     * @returns {Column} Returns the column\n     */\n    Grid.prototype.getColumnByIndex = function (index) {\n        var column;\n        this.getColumns().some(function (col, i) {\n            column = col;\n            return i === index;\n        });\n        return column;\n    };\n    /**\n     * Gets a Column by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {Column} Returns the column\n     */\n    Grid.prototype.getColumnByField = function (field) {\n        return iterateArrayOrObject(this.getColumns(), function (item) {\n            if (item.field === field) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets a column index by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {number} Returns the index by field\n     */\n    Grid.prototype.getColumnIndexByField = function (field) {\n        var cols = this.getColumns();\n        for (var i = 0; i < cols.length; i++) {\n            if (cols[i].field === field) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    /**\n     * Gets a column by UID.\n     *\n     * @param  {string} uid - Specifies the column UID.\n     * @returns {Column} Returns the column\n     */\n    Grid.prototype.getColumnByUid = function (uid) {\n        return iterateArrayOrObject(this.getColumns().concat(this.getStackedColumns(this.columns)), function (item) {\n            if (item.uid === uid) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * @param {Column[]} columns - Defines the columns\n     * @param {Column[]} stackedColumn - Defines the stacked columns\n     * @returns {Column[]} Returns the columns\n     * @hidden\n     */\n    Grid.prototype.getStackedColumns = function (columns, stackedColumn) {\n        if (stackedColumn === void 0) { stackedColumn = []; }\n        for (var _i = 0, columns_1 = columns; _i < columns_1.length; _i++) {\n            var column = columns_1[_i];\n            if (column.columns) {\n                stackedColumn.push(column);\n                this.getStackedColumns(column.columns, stackedColumn);\n            }\n        }\n        return stackedColumn;\n    };\n    /**\n     * Gets a column index by UID.\n     *\n     * @param  {string} uid - Specifies the column UID.\n     * @returns {number} Returns the column by index\n     */\n    Grid.prototype.getColumnIndexByUid = function (uid) {\n        var index = iterateArrayOrObject(this.getColumns(), function (item, index) {\n            if (item.uid === uid) {\n                return index;\n            }\n            return undefined;\n        })[0];\n        return !isNullOrUndefined(index) ? index : -1;\n    };\n    /**\n     * Gets UID by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {string} Returns the column by field\n     */\n    Grid.prototype.getUidByColumnField = function (field) {\n        return iterateArrayOrObject(this.getColumns(), function (item) {\n            if (item.field === field) {\n                return item.uid;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets column index by column uid value.\n     *\n     * @private\n     * @param  {string} uid - Specifies the column uid.\n     * @returns {number} Returns the column by field\n     */\n    Grid.prototype.getNormalizedColumnIndex = function (uid) {\n        var index = this.getColumnIndexByUid(uid);\n        return index + this.getIndentCount();\n    };\n    /**\n     * Gets indent cell count.\n     *\n     * @private\n     * @returns {number} Returns the indent count\n     */\n    Grid.prototype.getIndentCount = function () {\n        var index = 0;\n        if (this.allowGrouping) {\n            index += this.groupSettings.columns.length;\n        }\n        if (this.isDetail()) {\n            index++;\n        }\n        if (this.isRowDragable() && isNullOrUndefined(this.rowDropSettings.targetID)) {\n            index++;\n        }\n        /**\n         * TODO: index normalization based on the stacked header, grouping and detailTemplate\n         * and frozen should be handled here\n         */\n        return index;\n    };\n    /**\n     * Gets the collection of column fields.\n     *\n     * @returns {string[]} Returns the Field names\n     */\n    Grid.prototype.getColumnFieldNames = function () {\n        var columnNames = [];\n        var column;\n        for (var i = 0, len = this.getColumns().length; i < len; i++) {\n            column = this.getColumns()[i];\n            if (column.visible) {\n                columnNames.push(column.field);\n            }\n        }\n        return columnNames;\n    };\n    /**\n     * Gets a compiled row template.\n     *\n     * @returns {Function} Returns the row TEmplate\n     * @private\n     */\n    Grid.prototype.getRowTemplate = function () {\n        return this.rowTemplateFn;\n    };\n    /**\n     * Gets a compiled detail row template.\n     *\n     * @private\n     * @returns {Function} Returns the Detail template\n     */\n    Grid.prototype.getDetailTemplate = function () {\n        return this.detailTemplateFn;\n    };\n    /**\n     * Gets a compiled detail row template.\n     *\n     * @private\n     * @returns {Function}Returns the Edit template\n     */\n    Grid.prototype.getEditTemplate = function () {\n        return this.editTemplateFn;\n    };\n    /**\n     * Gets a compiled dialog edit header template.\n     *\n     * @private\n     * @returns {Function} returns template function\n     */\n    Grid.prototype.getEditHeaderTemplate = function () {\n        return this.editHeaderTemplateFn;\n    };\n    /**\n     * Gets a compiled dialog edit footer template.\n     *\n     * @private\n     * @returns {Function} Returns the Footer template\n     */\n    Grid.prototype.getEditFooterTemplate = function () {\n        return this.editFooterTemplateFn;\n    };\n    /**\n     * Get the names of the primary key columns of the Grid.\n     *\n     * @returns {string[]} Returns the field names\n     */\n    Grid.prototype.getPrimaryKeyFieldNames = function () {\n        var keys = [];\n        for (var k = 0; k < this.columnModel.length; k++) {\n            if (this.columnModel[k].isPrimaryKey) {\n                keys.push(this.columnModel[k].field);\n            }\n        }\n        return keys;\n    };\n    /**\n     * Refreshes the Grid header and content.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.refresh = function () {\n        if (!this.isDestroyed) {\n            this.isManualRefresh = true;\n            this.headerModule.refreshUI();\n            this.updateStackedFilter();\n            this.renderModule.refresh();\n        }\n    };\n    /**\n     * Refreshes the Grid header.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.refreshHeader = function () {\n        this.headerModule.refreshUI();\n    };\n    /**\n     * Gets the collection of selected rows.\n     *\n     * @returns {Element[]} Returns the element\n     */\n    Grid.prototype.getSelectedRows = function () {\n        return this.selectionModule ? this.selectionModule.selectedRecords : [];\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     *\n     * @returns {number[]} Returns the Selected row indexes\n     */\n    Grid.prototype.getSelectedRowIndexes = function () {\n        return this.selectionModule ? this.selectionModule.selectedRowIndexes : [];\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     *\n     * @returns {number[]} Returns the Selected row cell indexes\n     */\n    Grid.prototype.getSelectedRowCellIndexes = function () {\n        return this.selectionModule ? this.selectionModule.selectedRowCellIndexes : [];\n    };\n    /**\n     * Gets the collection of selected records.\n     *\n     * @returns {Object[]} Returns the selected records\n     * @isGenericType true\n     */\n    Grid.prototype.getSelectedRecords = function () {\n        return this.selectionModule ? this.selectionModule.getSelectedRecords() : [];\n    };\n    /**\n     * Gets the collection of selected columns uid.\n     *\n     * @returns {string[]} Returns the selected column uid\n     * @isGenericType true\n     */\n    Grid.prototype.getSelectedColumnsUid = function () {\n        var _this = this;\n        var uid = [];\n        if (this.selectionModule) {\n            this.selectionModule.selectedColumnsIndexes.filter(function (i) { return uid.push(_this.getColumns()[i].uid); });\n        }\n        return uid;\n    };\n    /**\n     * Gets the data module.\n     *\n     * @returns {Data} Returns the data\n     */\n    Grid.prototype.getDataModule = function () {\n        return this.renderModule.data;\n    };\n    /**\n     * Shows a column by its column name.\n     *\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @returns {void}\n     */\n    Grid.prototype.showColumns = function (keys, showBy) {\n        showBy = showBy ? showBy : 'headerText';\n        this.showHider.show(keys, showBy);\n    };\n    /**\n     * Hides a column by column name.\n     *\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @returns {void}\n     */\n    Grid.prototype.hideColumns = function (keys, hideBy) {\n        hideBy = hideBy ? hideBy : 'headerText';\n        this.showHider.hide(keys, hideBy);\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the Frozen column\n     */\n    Grid.prototype.getFrozenColumns = function () {\n        return this.frozenColumns + this.getFrozenCount(this.columns, 0, 0);\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the Frozen Right column count\n     */\n    Grid.prototype.getFrozenRightColumnsCount = function () {\n        return this.frozenRightCount;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the Frozen Left column\n     */\n    Grid.prototype.getFrozenLeftColumnsCount = function () {\n        return this.frozenLeftCount;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the movable column count\n     */\n    Grid.prototype.getMovableColumnsCount = function () {\n        return this.movableCount;\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Grid.prototype.setFrozenCount = function () {\n        this.frozenLeftCount = this.frozenRightCount = this.movableCount = 0;\n        this.visibleFrozenLeft = this.visibleFrozenRight = this.visibleMovable = 0;\n        this.frozenLeftColumns = [];\n        this.frozenRightColumns = [];\n        this.movableColumns = [];\n        this.splitFrozenCount(this.columns);\n        if (this.frozenColumns && (this.frozenLeftCount || this.frozenRightCount)) {\n            this.setProperties({ frozenColumns: 0 }, true);\n        }\n        this.setTablesCount();\n        if (this.frozenLeftCount && !this.frozenRightCount) {\n            this.frozenName = 'Left';\n        }\n        else if (this.frozenRightCount && !this.frozenLeftCount) {\n            this.frozenName = 'Right';\n        }\n        else if (this.frozenLeftCount && this.frozenRightCount) {\n            this.frozenName = 'Left-Right';\n        }\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the visible Frozen left count\n     */\n    Grid.prototype.getVisibleFrozenLeftCount = function () {\n        return this.visibleFrozenLeft;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the visible Frozen Right count\n     */\n    Grid.prototype.getVisibleFrozenRightCount = function () {\n        return this.visibleFrozenRight;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the visible movable count\n     */\n    Grid.prototype.getVisibleMovableCount = function () {\n        return this.visibleMovable;\n    };\n    /**\n     * @hidden\n     * @returns {Column[]} Returns the column\n     */\n    Grid.prototype.getFrozenRightColumns = function () {\n        return this.frozenRightColumns;\n    };\n    /**\n     * @hidden\n     * @returns {Column[]} Returns the column\n     */\n    Grid.prototype.getFrozenLeftColumns = function () {\n        return this.frozenLeftColumns;\n    };\n    /**\n     * @hidden\n     * @returns {Column[]} Returns the column\n     */\n    Grid.prototype.getMovableColumns = function () {\n        return this.movableColumns;\n    };\n    Grid.prototype.splitFrozenCount = function (columns) {\n        for (var i = 0; i < columns.length; i++) {\n            if (columns[i].columns) {\n                this.splitFrozenCount(columns[i].columns);\n            }\n            else {\n                if (columns[i].freeze === 'Right') {\n                    if (columns[i].visible !== false) {\n                        this.visibleFrozenRight++;\n                    }\n                    this.frozenRightColumns.push(columns[i]);\n                    this.frozenRightCount++;\n                }\n                else if (columns[i].freeze === 'Left') {\n                    if (columns[i].visible !== false) {\n                        this.visibleFrozenLeft++;\n                    }\n                    this.frozenLeftColumns.push(columns[i]);\n                    this.frozenLeftCount++;\n                }\n                else {\n                    if (columns[i].visible !== false) {\n                        this.visibleMovable++;\n                    }\n                    this.movableColumns.push(columns[i]);\n                    this.movableCount++;\n                }\n            }\n        }\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the visible frozen columns count\n     */\n    Grid.prototype.getVisibleFrozenColumns = function () {\n        return this.getVisibleFrozenColumnsCount() + this.getVisibleFrozenCount(this.columns, 0);\n    };\n    /**\n     * Get the current Filter operator and field.\n     *\n     * @returns {FilterUI} Returns the filter UI\n     */\n    Grid.prototype.getFilterUIInfo = function () {\n        return this.filterModule ? this.filterModule.getFilterUIInfo() : {};\n    };\n    Grid.prototype.getVisibleFrozenColumnsCount = function () {\n        var visibleFrozenColumns = 0;\n        var columns = this.columnModel;\n        for (var i = 0; i < this.frozenColumns; i++) {\n            if (columns[i].visible) {\n                visibleFrozenColumns++;\n            }\n        }\n        if (this.frozenLeftCount || this.frozenRightCount) {\n            for (var i = 0; i < columns.length; i++) {\n                if (columns[i].visible && (columns[i].freeze === 'Left' || columns[i].freeze === 'Right')) {\n                    visibleFrozenColumns++;\n                }\n            }\n        }\n        return visibleFrozenColumns;\n    };\n    Grid.prototype.getVisibleFrozenCount = function (cols, cnt) {\n        if (!this.frozenLeftCount && !this.frozenRightCount) {\n            for (var i = 0, len = cols.length; i < len; i++) {\n                if (cols[i].columns) {\n                    cnt = this.getVisibleFrozenCount(cols[i].columns, cnt);\n                }\n                else {\n                    if (cols[i].isFrozen && cols[i].visible) {\n                        cnt++;\n                    }\n                }\n            }\n        }\n        return cnt;\n    };\n    Grid.prototype.getFrozenCount = function (cols, cnt, index) {\n        for (var i = 0, len = cols.length; i < len; i++) {\n            if (cols[i].columns) {\n                cnt = this.getFrozenCount(cols[i].columns, cnt, index);\n            }\n            else {\n                if (cols[i].isFrozen && index > this.frozenColumns - 1) {\n                    cnt++;\n                }\n                index++;\n            }\n        }\n        return cnt;\n    };\n    /**\n     * Navigates to the specified target page.\n     *\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @returns {void}\n     */\n    Grid.prototype.goToPage = function (pageNo) {\n        if (this.pagerModule) {\n            this.pagerModule.goToPage(pageNo);\n        }\n    };\n    /**\n     * Defines the text of external message.\n     *\n     * @param  {string} message - Defines the message to update.\n     * @returns {void}\n     */\n    Grid.prototype.updateExternalMessage = function (message) {\n        if (this.pagerModule) {\n            this.pagerModule.updateExternalMessage(message);\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     *\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @returns {void}\n     */\n    Grid.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        if (this.sortModule) {\n            this.sortModule.sortColumn(columnName, direction, isMultiSort);\n        }\n    };\n    /**\n     * Clears all the sorted columns of the Grid.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.clearSorting = function () {\n        if (this.sortModule) {\n            this.sortModule.clearSorting();\n        }\n    };\n    /**\n     * Remove sorted column by field name.\n     *\n     * @param {string} field - Defines the column field name to remove sort.\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.removeSortColumn = function (field) {\n        if (this.sortModule) {\n            this.sortModule.removeSortColumn(field);\n        }\n    };\n    /**\n    * @hidden\n    * @returns {void}\n    */\n    Grid.prototype.clearGridActions = function () {\n        this.setProperties({ sortSettings: { columns: [] } }, true);\n        this.setProperties({ filterSettings: { columns: [] } }, true);\n        this.setProperties({ searchSettings: { key: '' } }, true);\n        if (this.allowGrouping) {\n            this.setProperties({ groupSettings: { columns: [] } }, false);\n        }\n        else {\n            this.freezeRefresh();\n        }\n    };\n    /**\n     * Filters grid row by column name with the given options.\n     *\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, the grid filters the records with exact match. if false, it filters case\n     * insensitive records (uppercase and lowercase letters treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent set to true,\n     * then filter ignores the diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for the filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for the filter column.\n     * @returns {void}\n     */\n    Grid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        if (this.filterModule) {\n            this.filterModule.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n        }\n    };\n    /**\n     * Clears all the filtered rows of the Grid.\n     *\n     * @param {string[]} fields - Defines the Fields\n     * @returns {void}\n     */\n    Grid.prototype.clearFiltering = function (fields) {\n        if (this.filterModule) {\n            this.filterModule.clearFiltering(fields);\n        }\n    };\n    /**\n     * Removes filtered column by field name.\n     *\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        if (this.filterModule) {\n            this.filterModule.removeFilteredColsByField(field, isClearFilterBar);\n        }\n    };\n    /**\n     * Selects a row by given index.\n     *\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @returns {void}\n     */\n    Grid.prototype.selectRow = function (index, isToggle) {\n        if (this.selectionModule) {\n            this.selectionModule.selectRow(index, isToggle);\n        }\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     *\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @returns {void}\n     */\n    Grid.prototype.selectRows = function (rowIndexes) {\n        if (this.selectionModule) {\n            this.selectionModule.selectRows(rowIndexes);\n        }\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.clearSelection = function () {\n        if (this.selectionModule) {\n            this.selectionModule.clearSelection();\n        }\n    };\n    /**\n     * Selects a cell by the given index.\n     *\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @returns {void}\n     */\n    Grid.prototype.selectCell = function (cellIndex, isToggle) {\n        if (this.selectionModule) {\n            this.selectionModule.selectCell(cellIndex, isToggle);\n        }\n    };\n    /**\n     * Selects a range of cells from start and end indexes.\n     *\n     * @param  {IIndex} startIndex - Specifies the row and column's start index.\n     * @param  {IIndex} endIndex - Specifies the row and column's end index.\n     * @returns {void}\n     */\n    Grid.prototype.selectCellsByRange = function (startIndex, endIndex) {\n        this.selectionModule.selectCellsByRange(startIndex, endIndex);\n    };\n    /**\n     * Searches Grid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./#searchsettings/).\n     *\n     * @param  {string} searchString - Defines the key.\n     * @returns {void}\n     */\n    Grid.prototype.search = function (searchString) {\n        if (this.searchModule) {\n            this.searchModule.search(searchString);\n        }\n    };\n    /**\n     * By default, prints all the pages of the Grid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./#printmode).\n     *\n     * @returns {void}\n     */\n    Grid.prototype.print = function () {\n        if (this.printModule) {\n            this.printModule.print();\n        }\n    };\n    /**\n     * Delete a record with Given options. If fieldname and data is not given then grid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     *\n     * @param {string} fieldname - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     * @returns {void}\n     */\n    Grid.prototype.deleteRecord = function (fieldname, data) {\n        if (this.editModule) {\n            this.editModule.deleteRecord(fieldname, data);\n        }\n    };\n    /**\n     * Starts edit the selected row. At least one row must be selected before invoking this method.\n     * `editSettings.allowEditing` should be true.\n     * {% codeBlock src='grid/startEdit/index.md' %}{% endcodeBlock %}\n     *\n     * @returns {void}\n     */\n    Grid.prototype.startEdit = function () {\n        if (this.editModule) {\n            this.editModule.startEdit();\n        }\n    };\n    /**\n     * If Grid is in editable state, you can save a record by invoking endEdit.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.endEdit = function () {\n        if (this.editModule) {\n            this.editModule.endEdit();\n        }\n    };\n    /**\n     * Cancels edited state.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.closeEdit = function () {\n        if (this.editModule) {\n            this.editModule.closeEdit();\n        }\n    };\n    /**\n     * Adds a new record to the Grid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     *\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added\n     * @returns {void}\n     */\n    Grid.prototype.addRecord = function (data, index) {\n        if (this.editModule) {\n            this.editModule.addRecord(data, index);\n        }\n    };\n    /**\n     * Delete any visible row by TR element.\n     *\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     * @returns {void}\n     */\n    Grid.prototype.deleteRow = function (tr) {\n        if (this.editModule) {\n            this.editModule.deleteRow(tr);\n        }\n    };\n    /**\n     * Changes a particular cell into edited state based on the row index and field name provided in the `batch` mode.\n     *\n     * @param {number} index - Defines row index to edit a particular cell.\n     * @param {string} field - Defines the field name of the column to perform batch edit.\n     * @returns {void}\n     */\n    Grid.prototype.editCell = function (index, field) {\n        if (this.editModule) {\n            this.editModule.editCell(index, field);\n        }\n    };\n    /**\n     * Saves the cell that is currently edited. It does not save the value to the DataSource.\n     *\n     * @returns {void}\n     * {% codeBlock src='grid/saveCell/index.md' %}{% endcodeBlock %}\n     */\n    Grid.prototype.saveCell = function () {\n        if (this.editModule) {\n            this.editModule.saveCell();\n        }\n    };\n    /**\n     * To update the specified cell by given value without changing into edited state.\n     *\n     * @param {number} rowIndex Defines the row index.\n     * @param {string} field Defines the column field.\n     * @param {string | number | boolean | Date} value - Defines the value to be changed.\n     * @returns {void}\n     */\n    Grid.prototype.updateCell = function (rowIndex, field, value) {\n        if (this.editModule) {\n            this.editModule.updateCell(rowIndex, field, value);\n        }\n    };\n    /**\n     * To update the specified row by given values without changing into edited state.\n     *\n     * @param {number} index Defines the row index.\n     * @param {Object} data Defines the data object to be updated.\n     * @returns {void}\n     * {% codeBlock src='grid/updateRow/index.md' %}{% endcodeBlock %}\n     */\n    Grid.prototype.updateRow = function (index, data) {\n        if (this.editModule) {\n            this.editModule.updateRow(index, data);\n        }\n    };\n    /**\n     * Gets the added, edited,and deleted data before bulk save to the DataSource in batch mode.\n     *\n     * @returns {Object} Returns the batch changes\n     */\n    Grid.prototype.getBatchChanges = function () {\n        if (this.editModule) {\n            return this.editModule.getBatchChanges();\n        }\n        return {};\n    };\n    /**\n     * Enables or disables ToolBar items.\n     *\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @returns {void}\n     */\n    Grid.prototype.enableToolbarItems = function (items, isEnable) {\n        if (this.toolbarModule) {\n            this.toolbarModule.enableItems(items, isEnable);\n        }\n    };\n    /**\n     * Copy the selected rows or cells data into clipboard.\n     *\n     * @param {boolean} withHeader - Specifies whether the column header text needs to be copied along with rows or cells.\n     * @returns {void}\n     */\n    Grid.prototype.copy = function (withHeader) {\n        if (this.clipboardModule) {\n            this.clipboardModule.copy(withHeader);\n        }\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Grid.prototype.recalcIndentWidth = function () {\n        var _this = this;\n        if (!this.getHeaderTable().querySelector('.e-emptycell')) {\n            return;\n        }\n        if ((!this.groupSettings.columns.length && !this.isDetail() && !this.isRowDragable()) ||\n            this.getHeaderTable().querySelector('.e-emptycell').getAttribute('indentRefreshed') ||\n            !this.getContentTable()) {\n            return;\n        }\n        var indentWidth = this.getHeaderTable().querySelector('.e-emptycell').parentElement.offsetWidth;\n        var headerCol = [].slice.call(this.getHeaderTable().querySelector(literals.colGroup).childNodes);\n        var contentCol = [].slice.call(this.getContentTable().querySelector(literals.colGroup).childNodes);\n        var perPixel = indentWidth / 30;\n        var i = this.getFrozenMode() === 'Right' ? this.frozenRightCount : 0;\n        var parentOffset = this.element.offsetWidth;\n        var applyWidth = function (index, width) {\n            if (ispercentageWidth(_this)) {\n                var newWidth = (width / parentOffset * 100).toFixed(1) + '%';\n                headerCol[index].style.width = newWidth;\n                contentCol[index].style.width = newWidth;\n            }\n            else {\n                headerCol[index].style.width = width + 'px';\n                contentCol[index].style.width = width + 'px';\n            }\n            _this.notify(events.columnWidthChanged, { index: index, width: width });\n        };\n        if (perPixel >= 1) {\n            indentWidth = (30 / perPixel);\n        }\n        if (indentWidth < 1) {\n            indentWidth = 1;\n        }\n        if (this.enableColumnVirtualization || this.isAutoGen) {\n            indentWidth = 30;\n        }\n        while (i < this.groupSettings.columns.length) {\n            applyWidth(i, indentWidth);\n            i++;\n        }\n        if (this.isDetail()) {\n            applyWidth(i, indentWidth);\n            i++;\n        }\n        if (this.isRowDragable()) {\n            applyWidth(i, indentWidth);\n        }\n        this.isAutoGen = false;\n        this.getHeaderTable().querySelector('.e-emptycell').setAttribute('indentRefreshed', 'true');\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Grid.prototype.resetIndentWidth = function () {\n        if (ispercentageWidth(this)) {\n            this.getHeaderTable().querySelector('.e-emptycell').removeAttribute('indentRefreshed');\n            this.widthService.setWidthToColumns();\n            this.recalcIndentWidth();\n        }\n        if ((this.width === 'auto' || typeof (this.width) === 'string' && this.width.indexOf('%') !== -1)\n            && this.getColumns().filter(function (col) { return (!col.width || col.width === 'auto') && col.minWidth; }).length > 0) {\n            var tgridWidth = this.widthService.getTableWidth(this.getColumns());\n            this.widthService.setMinwidthBycalculation(tgridWidth);\n        }\n        if (this.isFrozenGrid() && this.widthService) {\n            this.widthService.refreshFrozenScrollbar();\n        }\n        if (this.allowTextWrap && this.textWrapSettings.wrapMode !== 'Content') {\n            this.notify(events.refreshHandlers, {});\n        }\n    };\n    /**\n     * @hidden\n     * @returns {boolean} Returns isRowDragable\n     */\n    Grid.prototype.isRowDragable = function () {\n        return this.allowRowDragAndDrop && !this.rowDropSettings.targetID;\n    };\n    /**\n     * Changes the Grid column positions by field names.\n     *\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @returns {void}\n     */\n    Grid.prototype.reorderColumns = function (fromFName, toFName) {\n        if (this.reorderModule) {\n            this.reorderModule.reorderColumns(fromFName, toFName);\n        }\n    };\n    /**\n     * Changes the Grid column positions by field index. If you invoke reorderColumnByIndex multiple times,\n     * then you won't get the same results every time.\n     *\n     * @param  {number} fromIndex - Defines the origin field index.\n     * @param  {number} toIndex - Defines the destination field index.\n     * @returns {void}\n     */\n    Grid.prototype.reorderColumnByIndex = function (fromIndex, toIndex) {\n        if (this.reorderModule) {\n            this.reorderModule.reorderColumnByIndex(fromIndex, toIndex);\n        }\n    };\n    /**\n     * Changes the Grid column positions by field index. If you invoke reorderColumnByTargetIndex multiple times,\n     * then you will get the same results every time.\n     *\n     * @param  {string} fieldName - Defines the field name.\n     * @param  {number} toIndex - Defines the destination field index.\n     * @returns {void}\n     */\n    Grid.prototype.reorderColumnByTargetIndex = function (fieldName, toIndex) {\n        if (this.reorderModule) {\n            this.reorderModule.reorderColumnByTargetIndex(fieldName, toIndex);\n        }\n    };\n    /**\n     * Changes the Grid Row position with given indexes.\n     *\n     * @param  {number} fromIndexes - Defines the origin Indexes.\n     * @param  {number} toIndex - Defines the destination Index.\n     * @returns {void}\n     */\n    Grid.prototype.reorderRows = function (fromIndexes, toIndex) {\n        if (this.rowDragAndDropModule) {\n            this.rowDragAndDropModule.reorderRows(fromIndexes, toIndex);\n        }\n    };\n    /**\n     * @param {ReturnType} e - Defines the Return type\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.refreshDataSource = function (e) {\n        this.notify('refreshdataSource', e);\n    };\n    /**\n     * @param {boolean} enable -Defines the enable\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.disableRowDD = function (enable) {\n        var headerTable = this.getHeaderTable();\n        var contentTable = this.getContentTable();\n        var headerRows = headerTable.querySelectorAll('th.e-rowdragheader, th.e-mastercell');\n        var rows = this.getRows();\n        var disValue = enable ? 'none' : '';\n        setStyleAttribute(headerTable.querySelector(literals.colGroup).childNodes[0], { 'display': disValue });\n        setStyleAttribute(contentTable.querySelector(literals.colGroup).childNodes[0], { 'display': disValue });\n        for (var i = 0; i < this.getRows().length; i++) {\n            var ele = rows[i].firstElementChild;\n            if (enable) {\n                addClass([ele], 'e-hide');\n            }\n            else {\n                removeClass([ele], ['e-hide']);\n            }\n        }\n        for (var j = 0; j < headerTable.querySelectorAll('th.e-rowdragheader, th.e-mastercell').length; j++) {\n            var ele = headerRows[j];\n            if (enable) {\n                addClass([ele], 'e-hide');\n            }\n            else {\n                removeClass([ele], ['e-hide']);\n            }\n        }\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     *\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @returns {void}\n     *\n     *\n     * ```typescript\n     * <div id=\"Grid\"></div>\n     * <script>\n     * let gridObj: Grid = new Grid({\n     *     dataSource: employeeData,\n     *     columns: [\n     *         { field: 'OrderID', headerText: 'Order ID', width:100 },\n     *         { field: 'EmployeeID', headerText: 'Employee ID' }],\n     *     dataBound: () => gridObj.autoFitColumns('EmployeeID')\n     * });\n     * gridObj.appendTo('#Grid');\n     * </script>\n     * ```\n     *\n     */\n    Grid.prototype.autoFitColumns = function (fieldNames) {\n        if (this.resizeModule) {\n            this.resizeModule.autoFitColumns(fieldNames);\n        }\n    };\n    /**\n     * @param {number} x - Defines the number\n     * @param {number} y - Defines the number\n     * @param {Element} target - Defines the Element\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.createColumnchooser = function (x, y, target) {\n        if (this.columnChooserModule) {\n            this.columnChooserModule.renderColumnChooser(x, y, target);\n        }\n    };\n    Grid.prototype.initializeServices = function () {\n        this.serviceLocator.register('widthService', this.widthService = new ColumnWidthService(this));\n        this.serviceLocator.register('cellRendererFactory', new CellRendererFactory);\n        this.serviceLocator.register('rendererFactory', new RendererFactory);\n        this.serviceLocator.register('localization', this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale));\n        this.serviceLocator.register('valueFormatter', this.valueFormatterService = new ValueFormatter(this.locale));\n        this.serviceLocator.register('showHideService', this.showHider = new ShowHide(this));\n        this.serviceLocator.register('ariaService', this.ariaService = new AriaService());\n        this.serviceLocator.register('focus', this.focusModule = new FocusStrategy(this));\n    };\n    Grid.prototype.processModel = function () {\n        var gCols = this.groupSettings.columns;\n        var sCols = this.sortSettings.columns;\n        var flag;\n        var j;\n        if (this.allowGrouping) {\n            var _loop_1 = function (i, len) {\n                j = 0;\n                for (var sLen = sCols.length; j < sLen; j++) {\n                    if (sCols[j].field === gCols[i]) {\n                        flag = true;\n                        break;\n                    }\n                }\n                if (!flag) {\n                    sCols.push({ field: gCols[i], direction: 'Ascending', isFromGroup: true });\n                }\n                else {\n                    if (this_1.allowSorting) {\n                        this_1.sortedColumns.push(sCols[j].field);\n                    }\n                    else {\n                        sCols[j].direction = 'Ascending';\n                    }\n                }\n                if (!this_1.groupSettings.showGroupedColumn) {\n                    var column = this_1.enableColumnVirtualization ?\n                        this_1.columns.filter(function (c) { return c.field === gCols[i]; })[0] : this_1.getColumnByField(gCols[i]);\n                    if (column) {\n                        column.visible = false;\n                    }\n                    else {\n                        this_1.log('initial_action', { moduleName: 'group', columnName: gCols[i] });\n                    }\n                }\n            };\n            var this_1 = this;\n            for (var i = 0, len = gCols.length; i < len; i++) {\n                _loop_1(i, len);\n            }\n        }\n        if (!gCols.length) {\n            for (var i = 0; i < sCols.length; i++) {\n                this.sortedColumns.push(sCols[i].field);\n            }\n        }\n        this.rowTemplateFn = templateCompiler(this.rowTemplate);\n        this.detailTemplateFn = templateCompiler(this.detailTemplate);\n        this.editTemplateFn = templateCompiler(this.editSettings.template);\n        this.editHeaderTemplateFn = templateCompiler(this.editSettings.headerTemplate);\n        this.editFooterTemplateFn = templateCompiler(this.editSettings.footerTemplate);\n        if (!isNullOrUndefined(this.parentDetails)) {\n            var value = isNullOrUndefined(this.parentDetails.parentKeyFieldValue) ? 'undefined' :\n                this.parentDetails.parentKeyFieldValue;\n            this.query.where(this.queryString, 'equal', value, true);\n        }\n        this.initForeignColumn();\n    };\n    Grid.prototype.initForeignColumn = function () {\n        if (this.isForeignKeyEnabled(this.getColumns())) {\n            this.notify(events.initForeignKeyColumn, this.getForeignKeyColumns());\n        }\n    };\n    Grid.prototype.enableVerticalRendering = function () {\n        if (this.rowRenderingMode === 'Vertical') {\n            this.element.classList.add('e-row-responsive');\n        }\n        else {\n            this.element.classList.remove('e-row-responsive');\n        }\n    };\n    Grid.prototype.gridRender = function () {\n        this.updateRTL();\n        if (this.rowRenderingMode === 'Vertical') {\n            this.element.classList.add('e-row-responsive');\n        }\n        if (this.enableHover) {\n            this.element.classList.add('e-gridhover');\n        }\n        if (Browser.isDevice) {\n            this.element.classList.add('e-device');\n        }\n        if (this.rowHeight) {\n            this.element.classList.add('e-grid-min-height');\n        }\n        classList(this.element, ['e-responsive', 'e-default'], []);\n        var rendererFactory = this.serviceLocator.getService('rendererFactory');\n        this.headerModule = rendererFactory.getRenderer(RenderType.Header);\n        this.contentModule = rendererFactory.getRenderer(RenderType.Content);\n        this.printModule = new Print(this, this.scrollModule);\n        this.clipboardModule = new Clipboard(this);\n        this.renderModule.render();\n        this.eventInitializer();\n        this.createGridPopUpElement();\n        this.widthService.setWidthToColumns();\n        this.updateGridLines();\n        this.applyTextWrap();\n        this.createTooltip(); //for clip mode ellipsis\n        this.enableBoxSelection();\n    };\n    Grid.prototype.dataReady = function () {\n        this.scrollModule.setWidth();\n        this.scrollModule.setHeight();\n        if (this.height !== 'auto') {\n            this.scrollModule.setPadding();\n        }\n    };\n    Grid.prototype.updateRTL = function () {\n        if (this.enableRtl) {\n            this.element.classList.add('e-rtl');\n        }\n        else {\n            this.element.classList.remove('e-rtl');\n        }\n    };\n    Grid.prototype.createGridPopUpElement = function () {\n        var popup = this.createElement('div', { className: 'e-gridpopup', styles: 'display:none;' });\n        var content = this.createElement('div', { className: literals.content, attrs: { tabIndex: '-1' } });\n        append([content, this.createElement('div', { className: 'e-uptail e-tail' })], popup);\n        content.appendChild(this.createElement('span'));\n        append([content, this.createElement('div', { className: 'e-downtail e-tail' })], popup);\n        this.element.appendChild(popup);\n    };\n    Grid.prototype.updateGridLines = function () {\n        classList(this.element, [], ['e-verticallines', 'e-horizontallines', 'e-hidelines', 'e-bothlines']);\n        switch (this.gridLines) {\n            case 'Horizontal':\n                this.element.classList.add('e-horizontallines');\n                break;\n            case 'Vertical':\n                this.element.classList.add('e-verticallines');\n                break;\n            case 'None':\n                this.element.classList.add('e-hidelines');\n                break;\n            case 'Both':\n                this.element.classList.add('e-bothlines');\n                break;\n        }\n        this.updateResizeLines();\n    };\n    Grid.prototype.updateResizeLines = function () {\n        if (this.allowResizing &&\n            !(this.gridLines === 'Vertical' || this.gridLines === 'Both')) {\n            this.element.classList.add('e-resize-lines');\n        }\n        else {\n            this.element.classList.remove('e-resize-lines');\n        }\n    };\n    /**\n     * The function is used to apply text wrap\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.applyTextWrap = function () {\n        if (this.allowTextWrap) {\n            var headerRows = [].slice.call(this.element.getElementsByClassName('e-columnheader'));\n            switch (this.textWrapSettings.wrapMode) {\n                case 'Header':\n                    wrap(this.element, false);\n                    wrap(this.getContent(), false);\n                    wrap(headerRows, true);\n                    break;\n                case 'Content':\n                    wrap(this.getContent(), true);\n                    wrap(this.element, false);\n                    wrap(headerRows, false);\n                    break;\n                default:\n                    wrap(this.element, true);\n                    wrap(this.getContent(), false);\n                    wrap(headerRows, false);\n            }\n            if (this.textWrapSettings.wrapMode !== 'Content') {\n                this.notify(events.refreshHandlers, {});\n            }\n        }\n    };\n    /**\n     * The function is used to remove text wrap\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.removeTextWrap = function () {\n        wrap(this.element, false);\n        var headerRows = [].slice.call(this.element.getElementsByClassName('e-columnheader'));\n        wrap(headerRows, false);\n        wrap(this.getContent(), false);\n        if (this.textWrapSettings.wrapMode !== 'Content') {\n            this.notify(events.refreshHandlers, {});\n        }\n    };\n    /**\n     * The function is used to add Tooltip to the grid cell that has ellipsiswithtooltip clip mode.\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.createTooltip = function () {\n        this.toolTipObj = new Tooltip({ opensOn: 'custom', content: '' }, this.element);\n    };\n    /** @hidden\n     * @returns {void}\n     */\n    Grid.prototype.freezeRefresh = function () {\n        this.isFreezeRefresh = true;\n        if (this.enableVirtualization) {\n            this.pageSettings.currentPage = 1;\n        }\n        this.componentRefresh();\n    };\n    Grid.prototype.getTooltipStatus = function (element) {\n        var headerTable = this.getHeaderTable();\n        var headerDivTag = 'e-gridheader';\n        var htable = this.createTable(headerTable, headerDivTag, 'header');\n        var ctable = this.createTable(headerTable, headerDivTag, 'content');\n        var table = element.classList.contains('e-headercell') ? htable : ctable;\n        var ele = element.classList.contains('e-headercell') ? 'th' : 'tr';\n        table.querySelector(ele).className = element.className;\n        table.querySelector(ele).innerHTML = element.innerHTML;\n        var width = table.querySelector(ele).getBoundingClientRect().width;\n        document.body.removeChild(htable);\n        document.body.removeChild(ctable);\n        if (width > element.getBoundingClientRect().width) {\n            return true;\n        }\n        return false;\n    };\n    Grid.prototype.mouseMoveHandler = function (e) {\n        if (this.isEllipsisTooltip()) {\n            var element = parentsUntil(e.target, 'e-ellipsistooltip');\n            if (this.prevElement !== element || e.type === 'mouseout') {\n                this.toolTipObj.close();\n            }\n            var tagName = e.target.tagName;\n            var elemNames = ['A', 'BUTTON', 'INPUT'];\n            if (element && e.type !== 'mouseout' && !(Browser.isDevice && elemNames.indexOf(tagName) !== -1)) {\n                if (element.getAttribute('aria-describedby')) {\n                    return;\n                }\n                if (this.getTooltipStatus(element)) {\n                    if (element.getElementsByClassName('e-headertext').length) {\n                        this.toolTipObj.content = element.getElementsByClassName('e-headertext')[0].innerText;\n                    }\n                    else {\n                        this.toolTipObj.content = element.innerText;\n                    }\n                    this.prevElement = element;\n                    var col = this.getColumns()[parseInt(element.getAttribute(literals.ariaColIndex), 10)];\n                    if (col.disableHtmlEncode) {\n                        this.toolTipObj.enableHtmlParse = false;\n                    }\n                    this.toolTipObj.open(element);\n                }\n            }\n        }\n        this.hoverFrozenRows(e);\n    };\n    /**\n     * @param {MouseEvent} e - Defines the mouse event\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.hoverFrozenRows = function (e) {\n        if (this.isFrozenGrid()) {\n            var row = parentsUntil(e.target, literals.row);\n            if ([].slice.call(this.element.getElementsByClassName('e-frozenhover')).length && e.type === 'mouseout') {\n                var rows = [].slice.call(this.element.getElementsByClassName('e-frozenhover'));\n                for (var i = 0; i < rows.length; i++) {\n                    rows[i].classList.remove('e-frozenhover');\n                }\n            }\n            else if (row) {\n                var rows = [].slice.call(this.element.querySelectorAll('tr[aria-rowindex=\"' + row.getAttribute(literals.ariaRowIndex) + '\"]'));\n                rows.splice(rows.indexOf(row), 1);\n                for (var i = 0; i < rows.length; i++) {\n                    if (row.getAttribute('aria-selected') !== 'true' && rows[i]) {\n                        rows[i].classList.add('e-frozenhover');\n                    }\n                    else if (rows[i]) {\n                        rows[i].classList.remove('e-frozenhover');\n                    }\n                }\n            }\n        }\n    };\n    Grid.prototype.isEllipsisTooltip = function () {\n        var cols = this.getColumns();\n        if (this.clipMode === 'EllipsisWithTooltip') {\n            return true;\n        }\n        for (var i = 0; i < cols.length; i++) {\n            if (cols[i].clipMode === 'EllipsisWithTooltip') {\n                return true;\n            }\n        }\n        return false;\n    };\n    Grid.prototype.scrollHandler = function () {\n        if (this.isEllipsisTooltip()) {\n            this.toolTipObj.close();\n        }\n    };\n    /**\n     * To create table for ellipsiswithtooltip\n     *\n     * @param {Element} table - Defines the table\n     * @param {string} tag - Defines the tag\n     * @param {string} type - Defines the type\n     * @returns {HTMLDivElement} Returns the HTML div ELement\n     * @hidden\n     */\n    Grid.prototype.createTable = function (table, tag, type) {\n        var myTableDiv = this.createElement('div');\n        myTableDiv.className = this.element.className;\n        myTableDiv.style.cssText = 'display: inline-block;visibility:hidden;position:absolute';\n        var mySubDiv = this.createElement('div');\n        mySubDiv.className = tag;\n        var myTable = this.createElement('table');\n        myTable.className = table.className;\n        myTable.style.cssText = 'table-layout: auto;width: auto';\n        var ele = (type === 'header') ? 'th' : 'td';\n        var myTr = this.createElement('tr');\n        var mytd = this.createElement(ele);\n        myTr.appendChild(mytd);\n        myTable.appendChild(myTr);\n        mySubDiv.appendChild(myTable);\n        myTableDiv.appendChild(mySubDiv);\n        document.body.appendChild(myTableDiv);\n        return myTableDiv;\n    };\n    Grid.prototype.onKeyPressed = function (e) {\n        if (e.action === 'tab' || e.action === 'shiftTab') {\n            this.toolTipObj.close();\n        }\n    };\n    /**\n     * Binding events to the element while component creation.\n     *\n     * @hidden\n     * @returns {void}\n     */\n    Grid.prototype.wireEvents = function () {\n        EventHandler.add(this.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'focusout', this.focusOutHandler, this);\n        EventHandler.add(this.element, 'dblclick', this.dblClickHandler, this);\n        EventHandler.add(this.element, 'keydown', this.keyPressHandler, this);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        EventHandler.add(window, 'resize', this.resetIndentWidth, this);\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.keyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        EventHandler.add(this.getContent().firstElementChild, 'scroll', this.scrollHandler, this);\n        EventHandler.add(this.element, 'mousemove', this.mouseMoveHandler, this);\n        EventHandler.add(this.element, 'mouseout', this.mouseMoveHandler, this);\n        EventHandler.add(this.getContent(), 'touchstart', this.tapEvent, this);\n        EventHandler.add(document.body, 'keydown', this.keyDownHandler, this);\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     *\n     * @hidden\n     * @returns {void}\n     */\n    Grid.prototype.unwireEvents = function () {\n        EventHandler.remove(this.element, 'click', this.mouseClickHandler);\n        EventHandler.remove(this.element, 'touchend', this.mouseClickHandler);\n        EventHandler.remove(this.element, 'focusout', this.focusOutHandler);\n        EventHandler.remove(this.element, 'dblclick', this.dblClickHandler);\n        EventHandler.remove(this.getContent().firstElementChild, 'scroll', this.scrollHandler);\n        EventHandler.remove(this.element, 'mousemove', this.mouseMoveHandler);\n        EventHandler.remove(this.element, 'mouseout', this.mouseMoveHandler);\n        EventHandler.remove(this.element, 'keydown', this.keyPressHandler);\n        EventHandler.remove(this.getContent(), 'touchstart', this.tapEvent);\n        EventHandler.remove(document.body, 'keydown', this.keyDownHandler);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        EventHandler.remove(window, 'resize', this.resetIndentWidth);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Grid.prototype.addListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.on(events.dataReady, this.dataReady, this);\n        this.on(events.contentReady, this.recalcIndentWidth, this);\n        this.on(events.headerRefreshed, this.recalcIndentWidth, this);\n        this.dataBoundFunction = this.refreshMediaCol.bind(this);\n        this.addEventListener(events.dataBound, this.dataBoundFunction);\n        this.on(events.keyPressed, this.onKeyPressed, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Grid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off(events.dataReady, this.dataReady);\n        this.off(events.contentReady, this.recalcIndentWidth);\n        this.off(events.headerRefreshed, this.recalcIndentWidth);\n        this.removeEventListener(events.dataBound, this.dataBoundFunction);\n        this.off(events.keyPressed, this.onKeyPressed);\n    };\n    /**\n     * Get current visible data of grid.\n     *\n     * @returns {Object[]} Returns the current view records\n     * @isGenericType true\n     */\n    Grid.prototype.getCurrentViewRecords = function () {\n        if (isGroupAdaptive(this)) {\n            return isNullOrUndefined(this.currentViewData.records) ?\n                this.currentViewData : this.currentViewData.records;\n        }\n        if (this.groupSettings.enableLazyLoading) {\n            return this.currentViewData;\n        }\n        return (this.allowGrouping && this.groupSettings.columns.length && this.currentViewData.length\n            && this.currentViewData.records) ? this.currentViewData.records\n            : this.currentViewData;\n    };\n    Grid.prototype.mouseClickHandler = function (e) {\n        if (this.isChildGrid(e) || (parentsUntil(e.target, 'e-gridpopup') && e.touches) ||\n            this.element.getElementsByClassName('e-cloneproperties').length || this.checkEdit(e)) {\n            return;\n        }\n        if (((!this.allowRowDragAndDrop && (parentsUntil(e.target, literals.gridContent) ||\n            e.target.tagName === 'TD')) || (!(this.allowGrouping || this.allowReordering) &&\n            parentsUntil(e.target, 'e-gridheader'))) && e.touches) {\n            return;\n        }\n        if (parentsUntil(e.target, 'e-gridheader') && this.allowRowDragAndDrop &&\n            !(parentsUntil(e.target, 'e-filterbarcell'))) {\n            e.preventDefault();\n        }\n        var args = this.getRowInfo(e.target);\n        var cancel = 'cancel';\n        args[cancel] = false;\n        var isDataRow = false;\n        var tr = closest(e.target, 'tr');\n        if (tr && tr.getAttribute('data-uid')) {\n            var rowObj = this.getRowObjectFromUID(tr.getAttribute('data-uid'));\n            isDataRow = rowObj ? rowObj.isDataRow : false;\n        }\n        if (isDataRow) {\n            this.trigger(events.recordClick, args);\n        }\n        this.notify(events.click, e);\n    };\n    Grid.prototype.checkEdit = function (e) {\n        var tr = parentsUntil(e.target, literals.row);\n        var isEdit = this.editSettings.mode !== 'Batch' &&\n            this.isEdit && tr && (tr.classList.contains(literals.editedRow) || tr.classList.contains(literals.addedRow));\n        return !parentsUntil(e.target, 'e-unboundcelldiv') && (isEdit || (parentsUntil(e.target, literals.rowCell) &&\n            parentsUntil(e.target, literals.rowCell).classList.contains('e-editedbatchcell')));\n    };\n    Grid.prototype.dblClickHandler = function (e) {\n        var grid = parentsUntil(e.target, 'e-grid');\n        if (isNullOrUndefined(grid) || grid.id !== this.element.id || closest(e.target, '.e-unboundcelldiv')) {\n            return;\n        }\n        var dataRow = false;\n        var tr = closest(e.target, 'tr');\n        if (tr && tr.getAttribute('data-uid')) {\n            var rowObj = this.getRowObjectFromUID(tr.getAttribute('data-uid'));\n            dataRow = rowObj ? rowObj.isDataRow : false;\n        }\n        var args = this.getRowInfo(e.target);\n        args.target = e.target;\n        if (dataRow) {\n            this.trigger(events.recordDoubleClick, args);\n        }\n        this.notify(events.dblclick, e);\n    };\n    Grid.prototype.focusOutHandler = function (e) {\n        if (this.isChildGrid(e)) {\n            return;\n        }\n        if (!parentsUntil(e.target, 'e-grid')) {\n            this.element.querySelector('.e-gridpopup').style.display = 'None';\n        }\n        var filterClear = this.element.querySelector('.e-cancel:not(.e-hide)');\n        if (filterClear) {\n            filterClear.classList.add('e-hide');\n        }\n        var relatedTarget = e.relatedTarget;\n        var ariaOwns = relatedTarget ? relatedTarget.getAttribute('aria-owns') : null;\n        if ((!relatedTarget || (!parentsUntil(relatedTarget, 'e-grid') &&\n            (!isNullOrUndefined(ariaOwns) &&\n                (ariaOwns)) !== e.target.getAttribute('aria-owns')))\n            && !this.keyPress && this.isEdit && !Browser.isDevice) {\n            if (this.editSettings.mode === 'Batch' && !((parentsUntil(relatedTarget, 'e-ddl') || parentsUntil(relatedTarget, 'e-ddt')) &&\n                parentsUntil(relatedTarget, 'e-input-group'))) {\n                this.editModule.saveCell();\n                this.notify(events.editNextValCell, {});\n            }\n            if (this.editSettings.mode === 'Normal') {\n                this.editModule.editFormValidate();\n            }\n        }\n        this.keyPress = false;\n    };\n    Grid.prototype.isChildGrid = function (e) {\n        var gridElement = parentsUntil(e.target, 'e-grid');\n        if (gridElement && gridElement.id !== this.element.id) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {Object} persistedData - Defines the persisted data\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.mergePersistGridData = function (persistedData) {\n        var data = this.getLocalData();\n        if (!(isNullOrUndefined(data) || (data === '')) || !isNullOrUndefined(persistedData)) {\n            var dataObj = !isNullOrUndefined(persistedData) ? persistedData : JSON.parse(data);\n            if (this.enableVirtualization) {\n                dataObj.pageSettings.currentPage = 1;\n            }\n            var keys = Object.keys(dataObj);\n            this.isProtectedOnChange = true;\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if ((typeof this[key] === 'object') && !isNullOrUndefined(this[key])) {\n                    if (Array.isArray(this[key]) && key === 'columns') {\n                        setColumnIndex(this[key]);\n                        this.mergeColumns(dataObj[key], this[key]);\n                        this[key] = dataObj[key];\n                    }\n                    else {\n                        extend(this[key], dataObj[key]);\n                    }\n                }\n                else {\n                    this[key] = dataObj[key];\n                }\n            }\n            this.isProtectedOnChange = false;\n        }\n    };\n    Grid.prototype.mergeColumns = function (storedColumn, columns) {\n        var storedColumns = storedColumn;\n        var _loop_2 = function (i) {\n            var localCol = columns.filter(function (tCol) { return tCol.index === storedColumns[i].index; })[0];\n            if (!isNullOrUndefined(localCol)) {\n                if (localCol.columns && localCol.columns.length) {\n                    this_2.mergeColumns(storedColumns[i].columns, localCol.columns);\n                    storedColumns[i] = extend(localCol, storedColumns[i], {}, true);\n                }\n                else {\n                    storedColumns[i] = extend(localCol, storedColumns[i], {}, true);\n                }\n            }\n        };\n        var this_2 = this;\n        for (var i = 0; i < storedColumns.length; i++) {\n            _loop_2(i);\n        }\n    };\n    /**\n     * @hidden\n     * @returns {boolean} Returns the isDetail\n     */\n    Grid.prototype.isDetail = function () {\n        return !isNullOrUndefined(this.detailTemplate) || !isNullOrUndefined(this.childGrid);\n    };\n    Grid.prototype.isCommandColumn = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    Grid.prototype.isForeignKeyEnabled = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isForeignKeyEnabled(col.columns);\n            }\n            return !!(col.dataSource && col.foreignKeyValue);\n        });\n    };\n    Grid.prototype.keyPressHandler = function (e) {\n        var presskey = extend(e, { cancel: false });\n        this.trigger('keyPressed', presskey);\n        if (presskey.cancel === true) {\n            e.stopImmediatePropagation();\n        }\n    };\n    Grid.prototype.keyDownHandler = function (e) {\n        if (e.altKey) {\n            if (e.keyCode === 74) { //alt j\n                if (this.keyA) { //alt A J\n                    this.notify(events.groupCollapse, { target: e.target, collapse: false });\n                    this.keyA = false;\n                }\n                else {\n                    this.focusModule.focusHeader();\n                    this.focusModule.addOutline();\n                }\n            }\n            if (e.keyCode === 87) { //alt w\n                this.focusModule.focusContent();\n                this.focusModule.addOutline();\n            }\n            if (e.keyCode === 65) { //alt A\n                this.keyA = true;\n            }\n            if (e.keyCode === 72 && this.keyA) { //alt A H\n                this.notify(events.groupCollapse, { target: e.target, collapse: true });\n                this.keyA = false;\n            }\n        }\n        if (e.keyCode === 13) {\n            this.notify(events.enterKeyHandler, e);\n        }\n    };\n    Grid.prototype.keyActionHandler = function (e) {\n        if (this.isChildGrid(e) ||\n            (this.isEdit && e.action !== 'escape' && e.action !== 'enter' && e.action !== 'shiftEnter'\n                && e.action !== 'tab' && e.action !== 'shiftTab')) {\n            return;\n        }\n        else {\n            this.keyPress = true;\n        }\n        if (this.allowKeyboard) {\n            if (e.action === 'ctrlPlusP') {\n                e.preventDefault();\n                this.print();\n            }\n            this.notify(events.keyPressed, e);\n        }\n    };\n    /**\n     * @param {Function[]} modules - Defines the modules\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.setInjectedModules = function (modules) {\n        this.injectedModules = modules;\n    };\n    Grid.prototype.updateColumnObject = function () {\n        prepareColumns(this.columns, this.enableColumnVirtualization, this);\n        setColumnIndex(this.columns);\n        this.initForeignColumn();\n        this.notify(events.autoCol, {});\n    };\n    /**\n     * Gets the foreign columns from Grid.\n     *\n     * @returns {Column[]} Returns Foreign key column\n     */\n    Grid.prototype.getForeignKeyColumns = function () {\n        return this.getColumns().filter(function (col) {\n            return col.isForeignColumn();\n        });\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns row height\n     */\n    Grid.prototype.getRowHeight = function () {\n        return this.rowHeight ? this.rowHeight : getRowHeight(this.element);\n    };\n    /**\n     * Refreshes the Grid column changes.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.refreshColumns = function () {\n        this.setFrozenCount();\n        var fCnt = this.getContent().querySelector('.e-frozen-left-content');\n        var frCnt = this.getContent().querySelector('.e-frozen-right-content');\n        var isColFrozen = !this.frozenRightCount && !this.frozenLeftCount;\n        var isFrozen = this.getFrozenColumns() !== 0;\n        if (!isFrozen && ((!fCnt && this.frozenLeftCount) || (!frCnt && this.frozenRightCount) || (fCnt && !this.frozenLeftCount)\n            || (frCnt && !this.frozenRightCount))) {\n            this.tableIndex = 0;\n            this.tablesCount = 1;\n            if (this.enableColumnVirtualization) {\n                this.columnModel = [];\n                this.updateColumnModel(this.columns);\n            }\n            this.freezeRefresh();\n        }\n        else if (isColFrozen && ((this.getFrozenColumns() === 1 && !fCnt) || (this.getFrozenColumns() === 0 && fCnt))) {\n            this.tableIndex = 0;\n            this.tablesCount = 1;\n            if (this.enableColumnVirtualization) {\n                this.columnModel = [];\n                this.updateColumnModel(this.columns);\n            }\n            this.freezeRefresh();\n        }\n        else {\n            this.isPreventScrollEvent = true;\n            this.updateColumnObject();\n            this.checkLockColumns(this.getColumns());\n            this.refresh();\n            if (this.isFrozenGrid()) {\n                var mTbl = this.contentModule.getMovableContent().querySelector('.' + literals.table);\n                remove(mTbl.querySelector(literals.colGroup));\n                var colGroup = ((this.getHeaderContent()\n                    .querySelector('.' + literals.movableHeader).querySelector(literals.colGroup)).cloneNode(true));\n                mTbl.insertBefore(colGroup, mTbl.querySelector(literals.tbody));\n                if (this.getFrozenMode() === 'Left-Right') {\n                    var frTbl = this.contentModule.getFrozenRightContent().querySelector('.' + literals.table);\n                    remove(frTbl.querySelector(literals.colGroup));\n                    var colGrp = ((this.getHeaderContent()\n                        .querySelector('.e-frozen-right-header').querySelector(literals.colGroup)).cloneNode(true));\n                    frTbl.insertBefore(colGrp, frTbl.querySelector(literals.tbody));\n                }\n            }\n        }\n        if (this.isFrozenGrid()) {\n            var left = this.getContent().querySelector('.e-movablescrollbar').scrollLeft;\n            this.headerModule.getMovableHeader().scrollLeft = left;\n            this.contentModule.getMovableContent().scrollLeft = left;\n        }\n    };\n    /**\n     * Export Grid data to Excel file(.xlsx).\n     *\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the Grid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {Workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<any>} Returns the excelexport\n     */\n    Grid.prototype.excelExport = function (excelExportProperties, isMultipleExport, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    workbook, isBlob) {\n        return this.excelExportModule ?\n            this.excelExportModule.Map(this, excelExportProperties, isMultipleExport, workbook, false, isBlob) : null;\n    };\n    /**\n     * Export Grid data to CSV file.\n     *\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the Grid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {Workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<any>} Returns csv export\n     */\n    Grid.prototype.csvExport = function (excelExportProperties, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    isMultipleExport, workbook, isBlob) {\n        return this.excelExportModule ?\n            this.excelExportModule.Map(this, excelExportProperties, isMultipleExport, workbook, true, isBlob) : null;\n    };\n    /**\n     * Export Grid data to PDF document.\n     *\n     * @param {pdfExportProperties} pdfExportProperties - Defines the export properties of the Grid.\n     * @param {isMultipleExport} isMultipleExport - Define to enable multiple export.\n     * @param {pdfDoc} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<any>} Returns pdfexport\n     */\n    Grid.prototype.pdfExport = function (pdfExportProperties, isMultipleExport, pdfDoc, isBlob) {\n        return this.pdfExportModule ? this.pdfExportModule.Map(this, pdfExportProperties, isMultipleExport, pdfDoc, isBlob) : null;\n    };\n    /**\n     * Groups a column by column name.\n     *\n     * @param  {string} columnName - Defines the column name to group.\n     * @returns {void}\n     */\n    Grid.prototype.groupColumn = function (columnName) {\n        if (this.groupModule) {\n            this.groupModule.groupColumn(columnName);\n        }\n    };\n    /**\n     * Expands all the grouped rows of the Grid.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.groupExpandAll = function () {\n        if (this.groupModule) {\n            this.groupModule.expandAll();\n        }\n    };\n    /**\n     * Collapses all the grouped rows of the Grid.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.groupCollapseAll = function () {\n        if (this.groupModule) {\n            this.groupModule.collapseAll();\n        }\n    };\n    /**\n     * Expands or collapses grouped rows by target element.\n     *\n     * @param  {Element} target - Defines the target element of the grouped row.\n     * @returns {void}\n     */\n    // public expandCollapseRows(target: Element): void {\n    //     if (this.groupModule) {\n    //         this.groupModule.expandCollapseRows(target);\n    //     }\n    // }\n    /**\n     * Clears all the grouped columns of the Grid.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.clearGrouping = function () {\n        if (this.groupModule) {\n            this.groupModule.clearGrouping();\n        }\n    };\n    /**\n     * Ungroups a column by column name.\n     *\n     * @param  {string} columnName - Defines the column name to ungroup.\n     * {% codeBlock src='grid/ungroupColumn/index.md' %}{% endcodeBlock %}\n     * @returns {void}\n     */\n    Grid.prototype.ungroupColumn = function (columnName) {\n        if (this.groupModule) {\n            this.groupModule.ungroupColumn(columnName);\n        }\n    };\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     *\n     * @param {number} x - Defines the X axis.\n     * @param {number} y - Defines the Y axis.\n     * @returns {void}\n     */\n    Grid.prototype.openColumnChooser = function (x, y) {\n        if (this.columnChooserModule) {\n            this.columnChooserModule.openColumnChooser(x, y);\n        }\n    };\n    Grid.prototype.scrollRefresh = function () {\n        var _this = this;\n        var refresh = function () {\n            _this.scrollModule.refresh();\n            _this.off(events.contentReady, refresh);\n        };\n        this.on(events.contentReady, refresh, this);\n    };\n    /**\n     * Collapses a detail row with the given target.\n     *\n     * @param  {Element} target - Defines the expanded element to collapse.\n     * @returns {void}\n     */\n    // public detailCollapse(target: number | Element): void {\n    //     if (this.detailRowModule) {\n    //         this.detailRowModule.collapse(target);\n    //     }\n    // }\n    /**\n     * Collapses all the detail rows of the Grid.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.detailCollapseAll = function () {\n        if (this.detailRowModule) {\n            this.detailRowModule.collapseAll();\n        }\n    };\n    /**\n     * Expands a detail row with the given target.\n     *\n     * @param  {Element} target - Defines the collapsed element to expand.\n     * @returns {void}\n     */\n    // public detailExpand(target: number | Element): void {\n    //     if (this.detailRowModule) {\n    //         this.detailRowModule.expand(target);\n    //     }\n    // }\n    /**\n     * Expands all the detail rows of the Grid.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.detailExpandAll = function () {\n        if (this.detailRowModule) {\n            this.detailRowModule.expandAll();\n        }\n    };\n    /**\n     * Deselects the currently selected cells.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.clearCellSelection = function () {\n        if (this.selectionModule) {\n            this.selectionModule.clearCellSelection();\n        }\n    };\n    /**\n     * Deselects the currently selected rows.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.clearRowSelection = function () {\n        if (this.selectionModule) {\n            this.selectionModule.clearRowSelection();\n        }\n    };\n    /**\n     * Selects a collection of cells by row and column indexes.\n     *\n     * @param  {ISelectedCell[]} rowCellIndexes - Specifies the row and column indexes.\n     * @returns {void}\n     */\n    Grid.prototype.selectCells = function (rowCellIndexes) {\n        if (this.selectionModule) {\n            this.selectionModule.selectCells(rowCellIndexes);\n        }\n    };\n    /**\n     * Selects a range of rows from start and end row indexes.\n     *\n     * @param  {number} startIndex - Specifies the start row index.\n     * @param  {number} endIndex - Specifies the end row index.\n     * @returns {void}\n     */\n    Grid.prototype.selectRowsByRange = function (startIndex, endIndex) {\n        if (this.selectionModule) {\n            this.selectionModule.selectRowsByRange(startIndex, endIndex);\n        }\n    };\n    /**\n     * @hidden\n     * @returns {boolean} Returns whether context menu is open or not\n     */\n    Grid.prototype.isContextMenuOpen = function () {\n        return this.contextMenuModule && this.contextMenuModule.isOpen;\n    };\n    /**\n     * @param {Function} module - Defines the module\n     * @returns {boolean} return the injected modules\n     * @hidden\n     */\n    Grid.prototype.ensureModuleInjected = function (module) {\n        return this.getInjectedModules().indexOf(module) >= 0;\n    };\n    /**\n     * Destroys the given template reference.\n     *\n     * @param {string[]} propertyNames - Defines the collection of template name.\n     * @param {any} index - specifies the index\n     */\n    // eslint-disable-next-line\n    Grid.prototype.destroyTemplate = function (propertyNames, index) {\n        this.clearTemplate(propertyNames, index);\n    };\n    /**\n     * @param {string | string[]} type - Defines the type\n     * @param {Object} args - Defines the arguments\n     * @returns {void}\n     * @hidden\n     * @private\n     */\n    Grid.prototype.log = function (type, args) {\n        // eslint-disable-next-line\n        this.loggerModule ? this.loggerModule.log(type, args) : (function () { return 0; })();\n    };\n    /**\n     * @param {Element} element - Defines the element\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.applyBiggerTheme = function (element) {\n        if (this.element.classList.contains('e-bigger')) {\n            element.classList.add('e-bigger');\n        }\n    };\n    /**\n     * @hidden\n     * @returns {Object} Returns the previous row data\n     */\n    Grid.prototype.getPreviousRowData = function () {\n        var previousRowData = this.getRowsObject()[this.getRows().length - 1].data;\n        return previousRowData;\n    };\n    /**\n     * Hides the scrollbar placeholder of Grid content when grid content is not overflown.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.hideScroll = function () {\n        var content = this.getContent().querySelector('.' + literals.content);\n        var scrollBar = this.getContent().querySelector('.e-scrollbar');\n        if (content.scrollHeight <= content.clientHeight) {\n            this.scrollModule.removePadding();\n            content.style.overflowY = 'auto';\n        }\n        if (this.isFrozenGrid() && scrollBar) {\n            var mvblScrollBar = this.getContent().querySelector('.e-movablescrollbar');\n            var mvblChild = this.getContent().querySelector('.e-movablechild');\n            scrollBar.style.display = 'flex';\n            if (mvblScrollBar.offsetWidth >= mvblChild.offsetWidth) {\n                scrollBar.style.display = 'none';\n                this.notify(events.frozenHeight, 0);\n            }\n        }\n    };\n    /**\n     * Get row index by primary key or row data.\n     *\n     * @param  {string | Object} value - Defines the primary key value.\n     * @returns {number} Returns the index\n     */\n    Grid.prototype.getRowIndexByPrimaryKey = function (value) {\n        var pkName = this.getPrimaryKeyFieldNames()[0];\n        value = typeof value === 'object' ? value[pkName] : value;\n        var rows = this.getRowsObject();\n        for (var i = 0; i < rows.length; i++) {\n            if (rows[i].isDetailRow || rows[i].isCaptionRow) {\n                continue;\n            }\n            var pKvalue = rows[i].data[pkName];\n            if (pkName.split('.').length > 1) {\n                pKvalue = performComplexDataOperation(pkName, rows[i].data);\n            }\n            if (pKvalue === value) {\n                return rows[i].index;\n            }\n        }\n        return -1;\n    };\n    /**\n     * @param {string} field - Defines the field name\n     * @returns {Column} returns the column\n     * @hidden\n     */\n    // Need to have all columns while filtering with ColumnVirtualization.\n    Grid.prototype.grabColumnByFieldFromAllCols = function (field) {\n        var column;\n        this.columnModel = [];\n        this.updateColumnModel(this.columns);\n        var gCols = this.columnModel;\n        for (var i = 0; i < gCols.length; i++) {\n            if (field === gCols[i].field) {\n                column = gCols[i];\n            }\n        }\n        return column;\n    };\n    /**\n     * @param {string} uid - Defines the uid\n     * @returns {Column} returns the column\n     * @hidden\n     */\n    // Need to have all columns while filtering with ColumnVirtualization.\n    Grid.prototype.grabColumnByUidFromAllCols = function (uid) {\n        var column;\n        this.columnModel = [];\n        this.updateColumnModel(this.columns);\n        var gCols = this.columnModel;\n        for (var i = 0; i < gCols.length; i++) {\n            if (uid === gCols[i].uid) {\n                column = gCols[i];\n            }\n        }\n        return column;\n    };\n    /**\n     * Get all filtered records from the Grid and it returns array of objects for the local dataSource, returns a promise object if the Grid has remote data.\n     *\n     * @returns {Object[] | Promise<Object>} Returns the filtered records\n     */\n    Grid.prototype.getFilteredRecords = function () {\n        if (this.allowFiltering && this.filterSettings.columns.length) {\n            var query = this.renderModule.data.generateQuery(true);\n            if (this.dataSource && this.renderModule.data.isRemote() && this.dataSource instanceof DataManager) {\n                return this.renderModule.data.getData(this.dataSource, query);\n            }\n            else {\n                if (this.dataSource instanceof DataManager) {\n                    return this.dataSource.executeLocal(query);\n                }\n                else {\n                    return new DataManager(this.dataSource, query).executeLocal(query);\n                }\n            }\n        }\n        return [];\n    };\n    Grid.prototype.getUserAgent = function () {\n        var userAgent = Browser.userAgent.toLowerCase();\n        return /iphone|ipod|ipad/.test(userAgent);\n    };\n    /**\n     * @param {TouchEventArgs} e - Defines the TouchEventArgs\n     * @returns {void}\n     * @hidden\n     */\n    // Need to have all columns while filtering with ColumnVirtualization.\n    // eslint-disable-next-line\n    Grid.prototype.tapEvent = function (e) {\n        if (this.getUserAgent()) {\n            if (!Global.timer) {\n                Global.timer = setTimeout(function () {\n                    Global.timer = null;\n                }, 300);\n            }\n            else {\n                clearTimeout(Global.timer);\n                Global.timer = null;\n                this.dblClickHandler(e);\n                this.notify(events.doubleTap, e);\n            }\n        }\n    };\n    /**\n     * @param {string} prefix - specifies the prefix\n     * @returns {string} returns the row uid\n     * @hidden\n     */\n    Grid.prototype.getRowUid = function (prefix) {\n        return \"\" + prefix + this.rowUid++;\n    };\n    /**\n     * @hidden\n     * @returns {Element} returns the element\n     */\n    Grid.prototype.getMovableVirtualContent = function () {\n        return this.getContent().querySelector('.' + literals.movableContent);\n    };\n    /**\n     * @hidden\n     * @returns {Element} returns the element\n     */\n    Grid.prototype.getFrozenVirtualContent = function () {\n        return this.getContent().querySelector('.' + literals.frozenContent);\n    };\n    /**\n     * @hidden\n     * @returns {Element} returns the element\n     */\n    Grid.prototype.getMovableVirtualHeader = function () {\n        return this.getHeaderContent().querySelector('.' + literals.movableHeader);\n    };\n    /**\n     * @hidden\n     * @returns {Element} returns the element\n     */\n    Grid.prototype.getFrozenVirtualHeader = function () {\n        return this.getHeaderContent().querySelector('.' + literals.frozenHeader);\n    };\n    /**\n     * @param {string} uid - specifies the uid\n     * @returns {Element} returns the element\n     * @hidden\n     */\n    Grid.prototype.getRowElementByUID = function (uid) {\n        var rowEle;\n        var rows = [];\n        if (this.isFrozenGrid()) {\n            var fRows = [].slice.call(this.getFrozenVirtualContent().querySelector(literals.tbody).children);\n            var mRows = [].slice.call(this.getMovableVirtualContent().querySelector(literals.tbody).children);\n            var frozenRigtRows = [];\n            if (this.tablesCount === 3) {\n                frozenRigtRows = [].slice.call(this.getContent().querySelector('.e-frozen-right-content').querySelector(literals.tbody).children);\n            }\n            if (this.frozenRows) {\n                rows = [].slice.call(this.getFrozenVirtualHeader().querySelector(literals.tbody).children);\n                rows = rows.concat([].slice.call(this.getMovableVirtualHeader().querySelector(literals.tbody).children));\n                if (this.tablesCount === 3) {\n                    var frHdr = this.getHeaderContent().querySelector('.e-frozen-right-header');\n                    rows = rows.concat([].slice.call(frHdr.querySelector(literals.tbody).children)).concat(frozenRigtRows);\n                }\n                rows = rows.concat(fRows).concat(mRows);\n            }\n            else {\n                rows = fRows.concat(mRows).concat(frozenRigtRows);\n            }\n        }\n        else {\n            var cntRows = [].slice.call(this.getContent().querySelector(literals.tbody).children);\n            if (this.frozenRows) {\n                rows = [].slice.call(this.getHeaderContent().querySelector(literals.tbody).children);\n                rows = rows.concat(cntRows);\n            }\n            else {\n                rows = cntRows;\n            }\n        }\n        for (var _i = 0, rows_2 = rows; _i < rows_2.length; _i++) {\n            var row = rows_2[_i];\n            if (row.getAttribute('data-uid') === uid) {\n                rowEle = row;\n                break;\n            }\n        }\n        return rowEle;\n    };\n    /**\n     * Gets the hidden columns from the Grid.\n     *\n     * @returns {Column[]} Returns the Column\n     */\n    Grid.prototype.getHiddenColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible === false) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * calculatePageSizeByParentHeight\n     *\n     * @param {number | string } containerHeight - specifies the container height\n     * @returns {number} returns the page size\n     */\n    Grid.prototype.calculatePageSizeByParentHeight = function (containerHeight) {\n        if (this.allowPaging) {\n            if ((this.allowTextWrap && this.textWrapSettings.wrapMode === 'Header') || (!this.allowTextWrap)) {\n                var pagesize = 0;\n                if (containerHeight.indexOf('%') !== -1) {\n                    containerHeight = parseInt(containerHeight, 10) / 100 * this.element.clientHeight;\n                }\n                var nonContentHeight = this.getNoncontentHeight() + this.getRowHeight();\n                if (containerHeight > nonContentHeight) {\n                    var contentHeight = 0;\n                    contentHeight = containerHeight - this.getNoncontentHeight();\n                    pagesize = (contentHeight / this.getRowHeight());\n                }\n                if (pagesize > 0) {\n                    return Math.floor(pagesize);\n                }\n            }\n        }\n        return 0;\n    };\n    Grid.prototype.getNoncontentHeight = function () {\n        var height = 0;\n        if (!isNullOrUndefined(this.getHeaderContent().clientHeight)) {\n            height += this.getHeaderContent().clientHeight;\n        }\n        if (this.toolbar && !isNullOrUndefined(this.element.querySelector('.e-toolbar').clientHeight)) {\n            height += this.element.querySelector('.e-toolbar').clientHeight;\n        }\n        if (this.allowPaging && !isNullOrUndefined(this.element.querySelector('.e-gridpager').clientHeight)) {\n            height += this.element.querySelector('.e-gridpager').clientHeight;\n        }\n        if (this.showColumnChooser && !isNullOrUndefined(this.element.querySelector('.e-columnheader').clientHeight)) {\n            height += this.element.querySelector('.e-columnheader').clientHeight;\n        }\n        if (this.allowGrouping && this.groupSettings.showDropArea && !isNullOrUndefined(this.element.querySelector('.e-groupdroparea').clientHeight)) {\n            height += this.element.querySelector('.e-groupdroparea').clientHeight;\n        }\n        if (this.aggregates.length > 0 && !isNullOrUndefined(this.element.querySelector('.e-summaryrow').clientHeight)) {\n            for (var i = 0; i < this.element.getElementsByClassName('e-summaryrow').length; i++) {\n                height += this.element.getElementsByClassName('e-summaryrow')[i].clientHeight;\n            }\n        }\n        return height;\n    };\n    /**\n     *To perform aggregate operation on a column.\n     *\n     * @param  {AggregateColumnModel} summaryCol - Pass Aggregate Column details.\n     * @param  {Object} summaryData - Pass JSON Array for which its field values to be calculated.\n     * @returns {number} returns the summary values\n     */\n    Grid.prototype.getSummaryValues = function (summaryCol, summaryData) {\n        return DataUtil.aggregates[summaryCol.type.toLowerCase()](summaryData, summaryCol.field);\n    };\n    /**\n     * Sends a Post request to export Grid to Excel file in server side.\n     *\n     * @param  {string} url - Pass Url for server side excel export action.\n     * @returns {void}\n     */\n    Grid.prototype.serverExcelExport = function (url) {\n        this.isExcel = true;\n        this.exportGrid(url);\n    };\n    /**\n     * Sends a Post request to export Grid to Pdf file in server side.\n     *\n     * @param  {string} url - Pass Url for server side pdf export action.\n     * @returns {void}\n     */\n    Grid.prototype.serverPdfExport = function (url) {\n        this.isExcel = false;\n        this.exportGrid(url);\n    };\n    /**\n     * Sends a Post request to export Grid to CSV file in server side.\n     *\n     * @param  {string} url - Pass Url for server side pdf export action.\n     * @returns {void}\n     */\n    Grid.prototype.serverCsvExport = function (url) {\n        this.isExcel = true;\n        this.exportGrid(url);\n    };\n    /**\n     * @param {string} url - Defines exporting url\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.exportGrid = function (url) {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        var grid = this;\n        var query = grid.getDataModule().generateQuery(true);\n        var state = new UrlAdaptor().processQuery(new DataManager({ url: '' }), query);\n        var queries = JSON.parse(state.data);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var gridModel = JSON.parse(this.addOnPersist(['allowGrouping', 'allowPaging', 'pageSettings', 'sortSettings', 'allowPdfExport', 'allowExcelExport', 'aggregates',\n            'filterSettings', 'groupSettings', 'columns', 'locale', 'searchSettings']));\n        var include = ['field', 'headerText', 'type', 'format', 'visible', 'foreignKeyValue', 'foreignKeyField',\n            'template', 'index', 'width', 'textAlign', 'headerTextAlign', 'columns'];\n        gridModel.filterSettings.columns = queries.where;\n        gridModel.searchSettings.fields = queries.search && queries.search[0]['fields'] || [];\n        gridModel.sortSettings.columns = queries.sorted;\n        gridModel.columns = this.setHeaderText(gridModel.columns, include);\n        var form = this.createElement('form', { id: 'ExportForm', styles: 'display:none;' });\n        var gridInput = this.createElement('input', { id: 'gridInput', attrs: { name: 'gridModel' } });\n        gridInput.value = JSON.stringify(gridModel);\n        form.method = 'POST';\n        form.action = url;\n        form.appendChild(gridInput);\n        document.body.appendChild(form);\n        form.submit();\n        form.remove();\n    };\n    /**\n     * @param {Column[]} columns - Defines array of columns\n     * @param {string[]} include - Defines array of sting\n     * @returns {Column[]} returns array of columns\n     * @hidden\n     */\n    Grid.prototype.setHeaderText = function (columns, include) {\n        for (var i = 0; i < columns.length; i++) {\n            var column = this.getColumnByUid(columns[i].uid);\n            columns[i].headerText = column.headerText;\n            if (!isNullOrUndefined(column.template)) {\n                columns[i].template = 'true';\n            }\n            if (columns[i].format) {\n                columns[i].format = getNumberFormat(this.getFormat(columns[i].format), columns[i].type, this.isExcel);\n            }\n            if (columns[i].columns) {\n                this.setHeaderText(columns[i].columns, include);\n            }\n            var keys = Object.keys(columns[i]);\n            for (var j = 0; j < keys.length; j++) {\n                if (include.indexOf(keys[j]) < 0) {\n                    delete columns[i][keys[j]];\n                }\n            }\n        }\n        return columns;\n    };\n    Grid.prototype.getFormat = function (format) {\n        return typeof (format) === 'object' ? !isNullOrUndefined(format.format) ?\n            format.format : format.skeleton : format;\n    };\n    /**\n     * @hidden\n     * @returns {boolean} returns the isCollapseStateEnabled\n     */\n    Grid.prototype.isCollapseStateEnabled = function () {\n        var isExpanded = 'isExpanded';\n        return this[isExpanded] === false;\n    };\n    /**\n     * @param {number} key - Defines the primary key value.\n     * @param {Object} rowData - Defines the rowData\n     * @returns {void}\n     */\n    Grid.prototype.updateRowValue = function (key, rowData) {\n        var args = {\n            requestType: 'save', data: rowData\n        };\n        this.showSpinner();\n        this.notify(events.updateData, args);\n        this.refresh();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Grid.prototype.setForeignKeyData = function () {\n        this.dataBind();\n        var colpending = this.getDataModule().getForeignKeyDataState();\n        if (colpending.isPending) {\n            this.getDataModule().setForeignKeyDataState({});\n            colpending.resolver();\n        }\n        else {\n            this.getDataModule().setForeignKeyDataState({ isDataChanged: false });\n            if (this.contentModule || this.headerModule) {\n                this.renderModule.render();\n            }\n        }\n    };\n    /**\n     * @param {string} field - specifies the field\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.resetFilterDlgPosition = function (field) {\n        var header = this.getColumnHeaderByField(field);\n        if (header) {\n            var target = header.querySelector('.e-filtermenudiv');\n            var filterDlg = this.element.querySelector('.e-filter-popup');\n            if (target && filterDlg) {\n                var gClient = this.element.getBoundingClientRect();\n                var fClient = target.getBoundingClientRect();\n                if (filterDlg) {\n                    filterDlg.style.left = (fClient.right - gClient.left).toString() + 'px';\n                }\n            }\n        }\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Grid.prototype.renderTemplates = function () {\n        var portals = 'portals';\n        this.notify('reactTemplateRender', this[portals]);\n        this.renderReactTemplates();\n    };\n    /**\n     * Apply the changes to the Grid without refreshing the rows.\n     *\n     * @param  {BatchChanges} changes - Defines changes to be updated.\n     * @returns {void}\n     */\n    Grid.prototype.batchUpdate = function (changes) {\n        this.processRowChanges(changes);\n    };\n    /**\n     * Apply the changes to the Grid in one batch after 50ms without refreshing the rows.\n     *\n     * @param  {BatchChanges} changes - Defines changes to be updated.\n     * @returns {void}\n     */\n    Grid.prototype.batchAsyncUpdate = function (changes) {\n        this.processBulkRowChanges(changes);\n    };\n    Grid.prototype.processBulkRowChanges = function (changes) {\n        var _this = this;\n        if (!this.dataToBeUpdated) {\n            this.dataToBeUpdated = Object.assign({ addedRecords: [], changedRecords: [], deletedRecords: [] }, changes);\n            setTimeout(function () {\n                _this.processRowChanges(_this.dataToBeUpdated);\n                _this.dataToBeUpdated = null;\n            }, this.asyncTimeOut);\n        }\n        else {\n            var loopstring = [literals.addedRecords, literals.changedRecords, literals.deletedRecords];\n            var keyField = this.getPrimaryKeyFieldNames()[0];\n            for (var i = 0; i < loopstring.length; i++) {\n                if (changes[loopstring[i]]) {\n                    compareChanges(this, changes, loopstring[i], keyField);\n                }\n            }\n        }\n    };\n    Grid.prototype.processRowChanges = function (changes) {\n        var _this = this;\n        var keyField = this.getPrimaryKeyFieldNames()[0];\n        changes = Object.assign({ addedRecords: [], changedRecords: [], deletedRecords: [] }, changes);\n        var promise = this.getDataModule().saveChanges(changes, keyField, {}, this.getDataModule().generateQuery().requiresCount());\n        if (this.getDataModule().isRemote()) {\n            promise.then(function () {\n                _this.setNewData();\n            });\n        }\n        else {\n            this.setNewData();\n        }\n    };\n    Grid.prototype.setNewData = function () {\n        var _this = this;\n        var oldValues = JSON.parse(JSON.stringify(this.getCurrentViewRecords()));\n        var getData = this.getDataModule().getData({}, this.getDataModule().generateQuery().requiresCount());\n        getData.then(function (e) {\n            _this.bulkRefresh(e.result, oldValues, e.count);\n        });\n    };\n    Grid.prototype.deleteRowElement = function (row) {\n        var tr = this.getRowElementByUID(row.uid);\n        var index = parseInt(tr.getAttribute(literals.ariaRowIndex), 10);\n        remove(tr);\n        if (this.getFrozenColumns()) {\n            var mtr = this.getMovableRows()[index];\n            remove(mtr);\n        }\n    };\n    Grid.prototype.bulkRefresh = function (result, oldValues, count) {\n        var _this = this;\n        var rowObj = this.getRowsObject();\n        var keyField = this.getPrimaryKeyFieldNames()[0];\n        var _loop_3 = function (i) {\n            if (!result.filter(function (e) { return e[keyField] === rowObj[i].data[keyField]; }).length) {\n                this_3.deleteRowElement(rowObj[i]);\n                rowObj.splice(i, 1);\n                i--;\n            }\n            out_i_1 = i;\n        };\n        var this_3 = this, out_i_1;\n        for (var i = 0; i < rowObj.length; i++) {\n            _loop_3(i);\n            i = out_i_1;\n        }\n        var _loop_4 = function (i) {\n            var isRowExist;\n            oldValues.filter(function (e) {\n                if (e[keyField] === result[i][keyField]) {\n                    if (e !== result[i]) {\n                        _this.setRowData(result[i][keyField], result[i]);\n                    }\n                    isRowExist = true;\n                }\n            });\n            if (!isRowExist) {\n                this_4.renderRowElement(result[i], i);\n            }\n        };\n        var this_4 = this;\n        for (var i = 0; i < result.length; i++) {\n            _loop_4(i);\n        }\n        this.currentViewData = result;\n        var rows = [].slice.call(this.getContentTable().getElementsByClassName(literals.row));\n        resetRowIndex(this, this.getRowsObject(), rows);\n        setRowElements(this);\n        if (this.allowPaging) {\n            this.notify(events.inBoundModelChanged, { module: 'pager', properties: { totalRecordsCount: count } });\n        }\n    };\n    Grid.prototype.renderRowElement = function (data, index) {\n        var row = new RowRenderer(this.serviceLocator, null, this);\n        var model = new RowModelGenerator(this);\n        var modelData = model.generateRows([data]);\n        var tr = row.render(modelData[0], this.getColumns());\n        var mTr;\n        var mTbody;\n        this.addRowObject(modelData[0], index);\n        var tbody = this.getContentTable().querySelector(literals.tbody);\n        if (tbody.querySelector('.e-emptyrow')) {\n            var emptyRow = tbody.querySelector('.e-emptyrow');\n            emptyRow.parentNode.removeChild(emptyRow);\n            if (this.getFrozenColumns()) {\n                var moveTbody = this.getContent().querySelector('.' + literals.movableContent).querySelector(literals.tbody);\n                (moveTbody.firstElementChild).parentNode.removeChild(moveTbody.firstElementChild);\n            }\n        }\n        if (this.getFrozenColumns()) {\n            mTr = renderMovable(tr, this.getFrozenColumns(), this);\n            if (this.frozenRows && index < this.frozenRows) {\n                mTbody = this.getHeaderContent().querySelector('.' + literals.movableHeader).querySelector(literals.tbody);\n            }\n            else {\n                mTbody = this.getContent().querySelector('.' + literals.movableContent).querySelector(literals.tbody);\n            }\n            mTbody.appendChild(mTr);\n            if (this.height === 'auto') {\n                this.notify(events.frozenHeight, {});\n            }\n        }\n        if (this.frozenRows && index < this.frozenRows) {\n            tbody = this.getHeaderContent().querySelector(literals.tbody);\n        }\n        else {\n            tbody = this.getContent().querySelector(literals.tbody);\n        }\n        tbody = this.getContent().querySelector(literals.tbody);\n        tbody.appendChild(tr);\n    };\n    Grid.prototype.addRowObject = function (row, index) {\n        var frzCols = this.getFrozenColumns();\n        if (frzCols) {\n            var mRows = this.getMovableRowsObject();\n            var mRow = row.clone();\n            mRow.cells = mRow.cells.slice(frzCols);\n            row.cells = row.cells.slice(0, frzCols);\n            mRows.splice(index, 1, mRow);\n        }\n        this.getRowsObject().splice(index, 1, row);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Grid.prototype.updateVisibleExpandCollapseRows = function () {\n        var rows = this.getRowsObject();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (rows[i].isDataRow && this.getRowElementByUID(rows[i].uid).style.display === 'none') {\n                rows[i].visible = false;\n            }\n            else {\n                rows[i].visible = true;\n            }\n        }\n    };\n    /**\n     * @param {string | number} height - specifies the height\n     * @returns {number | string} - specifies the height number\n     * @hidden\n     */\n    Grid.prototype.getHeight = function (height) {\n        if (!Number.isInteger(height) && height.indexOf('%') !== -1) {\n            height = parseInt(height, 10) / 100 * this.element.clientHeight;\n        }\n        else if (!Number.isInteger(height) && this.height !== 'auto') {\n            height = parseInt(height, 10);\n        }\n        else {\n            height = this.height;\n        }\n        return height;\n    };\n    /**\n     * @hidden\n     * @returns {Element} - returns frozen right content\n     */\n    Grid.prototype.getFrozenRightContent = function () {\n        return this.getContent().querySelector('.e-frozen-right-content');\n    };\n    /**\n     * @hidden\n     * @returns {Element} - returns frozen right header\n     */\n    Grid.prototype.getFrozenRightHeader = function () {\n        return this.getHeaderContent().querySelector('.e-frozen-right-header');\n    };\n    /**\n     * @hidden\n     * @returns {Element} - returns movable header tbody\n     */\n    Grid.prototype.getMovableHeaderTbody = function () {\n        return this.getMovableVirtualHeader().querySelector(literals.tbody);\n    };\n    /**\n     * @hidden\n     * @returns {Element} - returns movable content tbody\n     */\n    Grid.prototype.getMovableContentTbody = function () {\n        return this.getMovableVirtualContent().querySelector(literals.tbody);\n    };\n    /**\n     * @hidden\n     * @returns {Element} - returns frozen header tbody\n     */\n    Grid.prototype.getFrozenHeaderTbody = function () {\n        return this.getFrozenVirtualHeader().querySelector(literals.tbody);\n    };\n    /**\n     * @hidden\n     * @returns {Element} - returns frozen left content tbody\n     */\n    Grid.prototype.getFrozenLeftContentTbody = function () {\n        return this.getFrozenVirtualContent().querySelector(literals.tbody);\n    };\n    /**\n     * @hidden\n     * @returns {Element} - returns frozen right header tbody\n     */\n    Grid.prototype.getFrozenRightHeaderTbody = function () {\n        return this.getFrozenRightHeader().querySelector(literals.tbody);\n    };\n    /**\n     * @returns {Element} returns frozen right content tbody\n     * @hidden\n     */\n    Grid.prototype.getFrozenRightContentTbody = function () {\n        var cnt = this.getFrozenRightContent();\n        var tbody;\n        if (cnt) {\n            tbody = this.getFrozenRightContent().querySelector(literals.tbody);\n        }\n        return tbody;\n    };\n    /**\n     * @param {boolean} isCustom - Defines custom filter dialog open\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.showResponsiveCustomFilter = function (isCustom) {\n        if (this.filterModule) {\n            this.filterModule.showCustomFilter(isCustom || this.rowRenderingMode === 'Vertical');\n        }\n    };\n    /**\n     * @param {boolean} isCustom - Defines custom sort dialog open\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.showResponsiveCustomSort = function (isCustom) {\n        if (this.sortModule) {\n            this.sortModule.showCustomSort(isCustom || this.rowRenderingMode === 'Vertical');\n        }\n    };\n    /**\n     * To manually show the vertical row mode filter dialog\n     *\n     * @returns {void}\n     */\n    Grid.prototype.showAdaptiveFilterDialog = function () {\n        if (this.enableAdaptiveUI) {\n            this.showResponsiveCustomFilter(true);\n        }\n    };\n    /**\n     * To manually show the vertical row sort filter dialog\n     *\n     * @returns {void}\n     */\n    Grid.prototype.showAdaptiveSortDialog = function () {\n        if (this.enableAdaptiveUI) {\n            this.showResponsiveCustomSort(true);\n        }\n    };\n    /**\n     * @param {boolean} isColVirtualization - Defines column virtualization\n     * @returns {Column[]} returns array of column models\n     * @hidden\n     */\n    Grid.prototype.getCurrentVisibleColumns = function (isColVirtualization) {\n        var cols = [];\n        var gridCols = isColVirtualization ? this.getColumns() : this.columnModel;\n        for (var _i = 0, gridCols_1 = gridCols; _i < gridCols_1.length; _i++) {\n            var col = gridCols_1[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    Grid.prototype.enableInfiniteAggrgate = function () {\n        if (this.enableInfiniteScrolling && this.groupSettings.columns.length && !this.groupSettings.disablePageWiseAggregates) {\n            this.setProperties({ groupSettings: { disablePageWiseAggregates: true } }, true);\n        }\n    };\n    var Grid_1;\n    __decorate([\n        Property()\n    ], Grid.prototype, \"parentDetails\", void 0);\n    __decorate([\n        Property([])\n    ], Grid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], Grid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], Grid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"enableAutoFill\", void 0);\n    __decorate([\n        Property(true)\n    ], Grid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"enableStickyHeader\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], Grid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Complex({}, ResizeSettings)\n    ], Grid.prototype, \"resizeSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], Grid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"enableColumnVirtualization\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"enableInfiniteScrolling\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], Grid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property('Ellipsis')\n    ], Grid.prototype, \"clipMode\", void 0);\n    __decorate([\n        Property(true)\n    ], Grid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], Grid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Complex({}, InfiniteScrollSettings)\n    ], Grid.prototype, \"infiniteScrollSettings\", void 0);\n    __decorate([\n        Property(true)\n    ], Grid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Property(-1)\n    ], Grid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], Grid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Grid.prototype, \"rowRenderingMode\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"enableAdaptiveUI\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"allowRowDragAndDrop\", void 0);\n    __decorate([\n        Complex({}, RowDropSettings)\n    ], Grid.prototype, \"rowDropSettings\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], Grid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"allowGrouping\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"enableImmutableMode\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Complex({}, GroupSettings)\n    ], Grid.prototype, \"groupSettings\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], Grid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], Grid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"showColumnChooser\", void 0);\n    __decorate([\n        Complex({}, ColumnChooserSettings)\n    ], Grid.prototype, \"columnChooserSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"enableHeaderFocus\", void 0);\n    __decorate([\n        Property('auto')\n    ], Grid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], Grid.prototype, \"width\", void 0);\n    __decorate([\n        Property('Default')\n    ], Grid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"rowTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"detailTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"childGrid\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"queryString\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], Grid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property('Expanded')\n    ], Grid.prototype, \"hierarchyPrintMode\", void 0);\n    __decorate([\n        Property([])\n    ], Grid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property(null)\n    ], Grid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"query\", void 0);\n    __decorate([\n        Property('USD')\n    ], Grid.prototype, \"currencyCode\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"columnMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(0)\n    ], Grid.prototype, \"frozenRows\", void 0);\n    __decorate([\n        Property(0)\n    ], Grid.prototype, \"frozenColumns\", void 0);\n    __decorate([\n        Property('All')\n    ], Grid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Property({})\n    ], Grid.prototype, \"currentAction\", void 0);\n    __decorate([\n        Property('19.3.54')\n    ], Grid.prototype, \"ej2StatePersistenceVersion\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"destroyed\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"recordClick\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"columnSelecting\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"columnSelected\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"columnDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"columnDeselected\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"pdfAggregateQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"excelAggregateQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"exportDetailDataBound\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"pdfExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"rowDragStartHelper\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"detailDataBound\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"rowDragStart\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"rowDrag\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"rowDrop\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforeOpenColumnChooser\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforeOpenAdaptiveDialog\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"batchAdd\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"batchDelete\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"batchCancel\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforeBatchAdd\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforeBatchDelete\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforeBatchSave\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"commandClick\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"cellSave\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"cellSaved\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"keyPressed\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"columnMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"columnMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"checkBoxChange\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforeCopy\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforePaste\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforeAutoFill\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"columnDataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"exportGroupCaption\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"lazyLoadGroupExpand\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"lazyLoadGroupCollapse\", void 0);\n    Grid = Grid_1 = __decorate([\n        NotifyPropertyChanges\n    ], Grid);\n    return Grid;\n}(Component));\nexport { Grid };\n"]},"metadata":{},"sourceType":"module"}