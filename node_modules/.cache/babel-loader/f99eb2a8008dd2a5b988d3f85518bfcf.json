{"ast":null,"code":"var _jsxFileName = \"/Users/tristanbilot/Desktop/Design4green/design4green/src/Components/SchemaPage.js\";\nimport React, { Component } from 'react';\nimport Chart from \"react-google-charts\";\nimport '../Styles/articles.scss';\nimport csvFile from '../INR.csv';\nimport DataFrame from \"dataframe-js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Papa = require('papaparse'); // const puppeteer = require('puppeteer');\n\n\nclass SchemaPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dataframe: null,\n      columns: []\n    };\n  }\n\n  async componentWillMount() {\n    await this.loadCsv(); // await this.take_screen()\n  }\n\n  async loadCsv() {\n    if (this.state.dataframe == null) {\n      var binded = this.loadCsvBinded.bind(this);\n      Papa.parse(csvFile, {\n        download: true,\n        complete: binded,\n        encoding: 'UTF-8'\n      });\n    }\n  }\n\n  loadCsvBinded(input) {\n    let csv = input.data;\n    let columns = csv[0];\n    let data = csv.slice(1);\n    let df = new DataFrame(data, columns);\n    this.state.columns = columns;\n    this.state.dataframe = df;\n    this.getGanttGraph([\"L'entreprise est-elle ouverte à une démarche NR qui pourrait fédérer les énergies autour d'un projet novateur ?\", \"Le besoin métier est-il exprimé ?\"]);\n  }\n  /* dataframe getters */\n\n\n  getGanttGraph(criterions) {\n    let dfs = [];\n    criterions.forEach(criterion => {\n      let df = this.state.dataframe.filter(row => row.get(\"CRITERES\") === criterion).select(\"CRITERES\", \"Etape Cycle de Vie\", \"incontournables\", \"Use Case\", \"JUSTIFICATIONS\");\n      dfs.push(df);\n    });\n    let totalDf = new DataFrame([]);\n    dfs.forEach(df => {\n      totalDf = totalDf.union(df);\n    });\n    console.log(totalDf);\n  } // get() {\n  //   let cols = this.state.dataframe.filter(row => row\n  //     .get(\"Etape Cycle de Vie\") === \"Conception\")\n  //     .select(\"JUSTIFICATIONS\");\n  // }\n  // async take_screen() {\n  //   const browser = await puppeteer.launch();\n  //   const page = await browser.newPage();\n  //   await page.goto('/');\n  //   await page.screenshot({ path: 'example.png' });\n  //   await browser.close();\n  // } \n  // timeout(delay) {\n  //     return new Promise( res => setTimeout(res, delay) );\n  // }\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-sm-2 col-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-sm-8 col-10\",\n            children: /*#__PURE__*/_jsxDEV(Chart, {\n              width: '100%',\n              height: '400px',\n              chartType: \"Gantt\",\n              loader: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Loading Chart\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 11\n              }, this),\n              data: [[{\n                type: 'string',\n                label: 'Task ID'\n              }, {\n                type: 'string',\n                label: 'Task Name'\n              }, {\n                type: 'string',\n                label: 'Resource'\n              }, {\n                type: 'date',\n                label: 'Start Date'\n              }, {\n                type: 'date',\n                label: 'End Date'\n              }, {\n                type: 'number',\n                label: 'Duration'\n              }, {\n                type: 'number',\n                label: 'Percent Complete'\n              }, {\n                type: 'string',\n                label: 'Dependencies'\n              }], ['2014Spring', 'Spring 2014', 'spring', new Date(2014, 2, 22), new Date(2014, 5, 20), null, 100, null], ['2014Summer', 'Summer 2014', 'summer', new Date(2014, 5, 21), new Date(2014, 8, 20), null, 100, null], ['2014Autumn', 'Autumn 2014', 'autumn', new Date(2014, 8, 21), new Date(2014, 11, 20), null, 100, null], ['2014Winter', 'Winter 2014', 'winter', new Date(2014, 11, 21), new Date(2015, 2, 21), null, 100, null], ['2015Spring', 'Spring 2015', 'spring', new Date(2015, 2, 22), new Date(2015, 5, 20), null, 50, null], ['2015Summer', 'Summer 2015', 'summer', new Date(2015, 5, 21), new Date(2015, 8, 20), null, 0, null], ['2015Autumn', 'Autumn 2015', 'autumn', new Date(2015, 8, 21), new Date(2015, 11, 20), null, 0, null], ['2015Winter', 'Winter 2015', 'winter', new Date(2015, 11, 21), new Date(2016, 2, 21), null, 0, null], ['Football', 'Football Season', 'sports', new Date(2014, 8, 4), new Date(2015, 1, 1), null, 100, null], ['Baseball', 'Baseball Season', 'sports', new Date(2015, 2, 31), new Date(2015, 9, 20), null, 14, null], ['Basketball', 'Basketball Season', 'sports', new Date(2014, 9, 28), new Date(2015, 5, 20), null, 86, null], ['Hockey', 'Hockey Season', 'sports', new Date(2014, 9, 8), new Date(2015, 5, 21), null, 89, null]],\n              options: {\n                height: 400,\n                gantt: {\n                  trackHeight: 30\n                }\n              },\n              rootProps: {\n                'data-testid': '2'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-sm-2 col-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default SchemaPage;","map":{"version":3,"sources":["/Users/tristanbilot/Desktop/Design4green/design4green/src/Components/SchemaPage.js"],"names":["React","Component","Chart","csvFile","DataFrame","Papa","require","SchemaPage","constructor","props","state","dataframe","columns","componentWillMount","loadCsv","binded","loadCsvBinded","bind","parse","download","complete","encoding","input","csv","data","slice","df","getGanttGraph","criterions","dfs","forEach","criterion","filter","row","get","select","push","totalDf","union","console","log","render","type","label","Date","height","gantt","trackHeight"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Chart from \"react-google-charts\";\nimport '../Styles/articles.scss';\nimport csvFile from '../INR.csv'\nimport DataFrame from \"dataframe-js\";\nconst Papa = require('papaparse');\n// const puppeteer = require('puppeteer');\n\n\nclass SchemaPage extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      dataframe: null,\n      columns: [],\n    }\n  }\n\n  async componentWillMount() {\n      await this.loadCsv()\n      // await this.take_screen()\n  }\n\n  async loadCsv() {\n    if (this.state.dataframe == null) {\n        var binded = this.loadCsvBinded.bind(this)\n        Papa.parse(csvFile, {\n          download: true,\n          complete: binded,\n          encoding: 'UTF-8'\n      });\n    }\n  }\n\n  loadCsvBinded(input) {\n    let csv = input.data\n    let columns = csv[0]\n    let data = csv.slice(1)\n    let df = new DataFrame(data, columns)\n\n    this.state.columns = columns\n    this.state.dataframe = df\n\n    this.getGanttGraph([\n      \"L'entreprise est-elle ouverte à une démarche NR qui pourrait fédérer les énergies autour d'un projet novateur ?\",\n      \"Le besoin métier est-il exprimé ?\"\n    ])\n  }\n\n  /* dataframe getters */\n\n  getGanttGraph(criterions) {\n    let dfs = []\n    criterions.forEach(criterion => {\n      let df = this.state.dataframe.filter(row => row\n        .get(\"CRITERES\") === criterion)\n        .select(\"CRITERES\", \"Etape Cycle de Vie\", \"incontournables\", \"Use Case\", \"JUSTIFICATIONS\");\n      dfs.push(df)\n    })\n    \n    let totalDf = new DataFrame([]);\n    dfs.forEach(df => {\n      totalDf =  totalDf.union(df)\n    })\n    console.log(totalDf)\n  }\n\n  // get() {\n  //   let cols = this.state.dataframe.filter(row => row\n  //     .get(\"Etape Cycle de Vie\") === \"Conception\")\n  //     .select(\"JUSTIFICATIONS\");\n  // }\n\n  // async take_screen() {\n  //   const browser = await puppeteer.launch();\n  //   const page = await browser.newPage();\n  //   await page.goto('/');\n  //   await page.screenshot({ path: 'example.png' });\n  \n  //   await browser.close();\n  // } \n\n  // timeout(delay) {\n  //     return new Promise( res => setTimeout(res, delay) );\n  // }\n\n  render() {\n    return (\n      <div className=\"header\">\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-sm-2 col-1\"></div>\n            <div className=\"col-sm-8 col-10\">\n                \n            <Chart\n  width={'100%'}\n  height={'400px'}\n  chartType=\"Gantt\"\n  loader={<div>Loading Chart</div>}\n  data={[\n    [\n      { type: 'string', label: 'Task ID' },\n      { type: 'string', label: 'Task Name' },\n      { type: 'string', label: 'Resource' },\n      { type: 'date', label: 'Start Date' },\n      { type: 'date', label: 'End Date' },\n      { type: 'number', label: 'Duration' },\n      { type: 'number', label: 'Percent Complete' },\n      { type: 'string', label: 'Dependencies' },\n    ],\n    [\n      '2014Spring',\n      'Spring 2014',\n      'spring',\n      new Date(2014, 2, 22),\n      new Date(2014, 5, 20),\n      null,\n      100,\n      null,\n    ],\n    [\n      '2014Summer',\n      'Summer 2014',\n      'summer',\n      new Date(2014, 5, 21),\n      new Date(2014, 8, 20),\n      null,\n      100,\n      null,\n    ],\n    [\n      '2014Autumn',\n      'Autumn 2014',\n      'autumn',\n      new Date(2014, 8, 21),\n      new Date(2014, 11, 20),\n      null,\n      100,\n      null,\n    ],\n    [\n      '2014Winter',\n      'Winter 2014',\n      'winter',\n      new Date(2014, 11, 21),\n      new Date(2015, 2, 21),\n      null,\n      100,\n      null,\n    ],\n    [\n      '2015Spring',\n      'Spring 2015',\n      'spring',\n      new Date(2015, 2, 22),\n      new Date(2015, 5, 20),\n      null,\n      50,\n      null,\n    ],\n    [\n      '2015Summer',\n      'Summer 2015',\n      'summer',\n      new Date(2015, 5, 21),\n      new Date(2015, 8, 20),\n      null,\n      0,\n      null,\n    ],\n    [\n      '2015Autumn',\n      'Autumn 2015',\n      'autumn',\n      new Date(2015, 8, 21),\n      new Date(2015, 11, 20),\n      null,\n      0,\n      null,\n    ],\n    [\n      '2015Winter',\n      'Winter 2015',\n      'winter',\n      new Date(2015, 11, 21),\n      new Date(2016, 2, 21),\n      null,\n      0,\n      null,\n    ],\n    [\n      'Football',\n      'Football Season',\n      'sports',\n      new Date(2014, 8, 4),\n      new Date(2015, 1, 1),\n      null,\n      100,\n      null,\n    ],\n    [\n      'Baseball',\n      'Baseball Season',\n      'sports',\n      new Date(2015, 2, 31),\n      new Date(2015, 9, 20),\n      null,\n      14,\n      null,\n    ],\n    [\n      'Basketball',\n      'Basketball Season',\n      'sports',\n      new Date(2014, 9, 28),\n      new Date(2015, 5, 20),\n      null,\n      86,\n      null,\n    ],\n    [\n      'Hockey',\n      'Hockey Season',\n      'sports',\n      new Date(2014, 9, 8),\n      new Date(2015, 5, 21),\n      null,\n      89,\n      null,\n    ],\n  ]}\n  options={{\n    height: 400,\n    gantt: {\n      trackHeight: 30,\n    },\n  }}\n  rootProps={{ 'data-testid': '2' }}\n/>\n            </div>\n            <div className=\"col-sm-2 col-1\"></div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SchemaPage;\n"]},"metadata":{},"sourceType":"module"}