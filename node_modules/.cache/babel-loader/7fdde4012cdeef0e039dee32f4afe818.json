{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/web.url.to-json\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toDSV = toDSV;\nexports.toCSV = toCSV;\nexports.toTSV = toTSV;\nexports.toPSV = toPSV;\nexports.toText = toText;\nexports.toJSON = toJSON;\nexports.fromDSV = fromDSV;\nexports.fromCSV = fromCSV;\nexports.fromTSV = fromTSV;\nexports.fromPSV = fromPSV;\nexports.fromText = fromText;\nexports.fromJSON = fromJSON;\n\nvar _d3Request = require(\"d3-request\");\n\nvar _d3Dsv = require(\"d3-dsv\");\n\nvar _symbol = require(\"./symbol\");\n\nvar _errors = require(\"./errors\");\n\nvar FILE_PATTERN = /^(?:[/]|[./]|(?:[a-zA-z]:\\/)).*$/;\n\nfunction saveFile(path, content) {\n  try {\n    require(\"fs\").writeFileSync(path, content);\n  } catch (e) {\n    console.warn(\"File system module is not available.\");\n  }\n}\n\nfunction loadTextFile(file, func) {\n  if (FileReader && File) {\n    var reader = new FileReader();\n\n    reader.onload = function (event) {\n      return func(event.target.result);\n    };\n\n    reader.readAsText(file);\n  }\n}\n\nfunction addFileProtocol(path) {\n  var isValidFilePath = String(path).match(FILE_PATTERN);\n\n  if (isValidFilePath) {\n    return \"file://\".concat(path);\n  }\n\n  return path;\n}\n\nfunction toDSV(df) {\n  var sep = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \";\";\n  var header = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  var path = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : undefined;\n  var parser = (0, _d3Dsv.dsvFormat)(sep);\n  var csvContent = header ? parser.format(df.toCollection(), df[_symbol.__columns__]) : parser.formatRows(df.toArray());\n\n  if (path) {\n    saveFile(df._cleanSavePath(path), csvContent);\n  }\n\n  return csvContent;\n}\n\nfunction toText(df) {\n  var sep = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \";\";\n  var header = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  var path = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : undefined;\n  return df.toDSV(sep, header, path);\n}\n\nfunction toCSV(df) {\n  var header = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  var path = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n  return df.toDSV(\",\", header, path);\n}\n\nfunction toTSV(df) {\n  var header = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  var path = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n  return df.toDSV(\"\\t\", header, path);\n}\n\nfunction toPSV(df) {\n  var header = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  var path = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n  return df.toDSV(\"|\", header, path);\n}\n\nfunction toJSON(df) {\n  var asCollection = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var path = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n  var jsonContent = JSON.stringify(asCollection ? df.toCollection() : df.toDict());\n\n  if (path) {\n    saveFile(df._cleanSavePath(path), jsonContent);\n  }\n\n  return jsonContent;\n}\n\nfunction fromDSV(pathOrFile) {\n  var sep = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \";\";\n  var header = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  var parser = (0, _d3Dsv.dsvFormat)(sep);\n  return new Promise(function (resolve) {\n    var parseText = function parseText(fileContent) {\n      if (fileContent.includes(\"Error: ENOENT\")) return resolve(null);\n      var data = header ? parser.parse(fileContent) : parser.parseRows(fileContent);\n      return resolve(data);\n    };\n\n    return typeof pathOrFile === \"string\" ? (0, _d3Request.text)(addFileProtocol(pathOrFile), parseText) : loadTextFile(pathOrFile, parseText);\n  }).then(function (fileContent) {\n    if (fileContent === null) {\n      throw new _errors.FileNotFoundError(pathOrFile);\n    }\n\n    return fileContent;\n  });\n}\n\nfunction fromText(pathOrFile) {\n  var sep = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \";\";\n  var header = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  return fromDSV(pathOrFile, sep, header);\n}\n\nfunction fromCSV(pathOrFile) {\n  var header = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  return fromDSV(pathOrFile, \",\", header);\n}\n\nfunction fromTSV(pathOrFile) {\n  var header = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  return fromDSV(pathOrFile, \"\\t\", header);\n}\n\nfunction fromPSV(pathOrFile) {\n  var header = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  return fromDSV(pathOrFile, \"|\", header);\n}\n\nfunction fromJSON(pathOrFile) {\n  return new Promise(function (resolve) {\n    return typeof pathOrFile === \"string\" ? (0, _d3Request.json)(addFileProtocol(pathOrFile), resolve) : loadTextFile(pathOrFile, function (txt) {\n      return resolve(JSON.parse(txt));\n    });\n  }).then(function (fileContent) {\n    if (fileContent === null) {\n      throw new _errors.FileNotFoundError(pathOrFile);\n    }\n\n    return fileContent;\n  });\n}","map":{"version":3,"sources":["/Users/tristanbilot/Desktop/Design4green/design4green/node_modules/dataframe-js/lib/io.js"],"names":["require","Object","defineProperty","exports","value","toDSV","toCSV","toTSV","toPSV","toText","toJSON","fromDSV","fromCSV","fromTSV","fromPSV","fromText","fromJSON","_d3Request","_d3Dsv","_symbol","_errors","FILE_PATTERN","saveFile","path","content","writeFileSync","e","console","warn","loadTextFile","file","func","FileReader","File","reader","onload","event","target","result","readAsText","addFileProtocol","isValidFilePath","String","match","concat","df","sep","arguments","length","undefined","header","parser","dsvFormat","csvContent","format","toCollection","__columns__","formatRows","toArray","_cleanSavePath","asCollection","jsonContent","JSON","stringify","toDict","pathOrFile","Promise","resolve","parseText","fileContent","includes","data","parse","parseRows","text","then","FileNotFoundError","json","txt"],"mappings":"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","sourcesContent":["\"use strict\";\n\nrequire(\"core-js/modules/es.array.includes\");\n\nrequire(\"core-js/modules/es.date.to-json\");\n\nrequire(\"core-js/modules/es.object.to-string\");\n\nrequire(\"core-js/modules/es.promise\");\n\nrequire(\"core-js/modules/es.regexp.exec\");\n\nrequire(\"core-js/modules/es.string.includes\");\n\nrequire(\"core-js/modules/es.string.match\");\n\nrequire(\"core-js/modules/web.url.to-json\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toDSV = toDSV;\nexports.toCSV = toCSV;\nexports.toTSV = toTSV;\nexports.toPSV = toPSV;\nexports.toText = toText;\nexports.toJSON = toJSON;\nexports.fromDSV = fromDSV;\nexports.fromCSV = fromCSV;\nexports.fromTSV = fromTSV;\nexports.fromPSV = fromPSV;\nexports.fromText = fromText;\nexports.fromJSON = fromJSON;\n\nvar _d3Request = require(\"d3-request\");\n\nvar _d3Dsv = require(\"d3-dsv\");\n\nvar _symbol = require(\"./symbol\");\n\nvar _errors = require(\"./errors\");\n\nvar FILE_PATTERN = /^(?:[/]|[./]|(?:[a-zA-z]:\\/)).*$/;\n\nfunction saveFile(path, content) {\n  try {\n    require(\"fs\").writeFileSync(path, content);\n  } catch (e) {\n    console.warn(\"File system module is not available.\");\n  }\n}\n\nfunction loadTextFile(file, func) {\n  if (FileReader && File) {\n    var reader = new FileReader();\n\n    reader.onload = function (event) {\n      return func(event.target.result);\n    };\n\n    reader.readAsText(file);\n  }\n}\n\nfunction addFileProtocol(path) {\n  var isValidFilePath = String(path).match(FILE_PATTERN);\n\n  if (isValidFilePath) {\n    return \"file://\".concat(path);\n  }\n\n  return path;\n}\n\nfunction toDSV(df) {\n  var sep = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \";\";\n  var header = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  var path = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : undefined;\n  var parser = (0, _d3Dsv.dsvFormat)(sep);\n  var csvContent = header ? parser.format(df.toCollection(), df[_symbol.__columns__]) : parser.formatRows(df.toArray());\n\n  if (path) {\n    saveFile(df._cleanSavePath(path), csvContent);\n  }\n\n  return csvContent;\n}\n\nfunction toText(df) {\n  var sep = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \";\";\n  var header = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  var path = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : undefined;\n  return df.toDSV(sep, header, path);\n}\n\nfunction toCSV(df) {\n  var header = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  var path = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n  return df.toDSV(\",\", header, path);\n}\n\nfunction toTSV(df) {\n  var header = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  var path = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n  return df.toDSV(\"\\t\", header, path);\n}\n\nfunction toPSV(df) {\n  var header = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  var path = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n  return df.toDSV(\"|\", header, path);\n}\n\nfunction toJSON(df) {\n  var asCollection = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var path = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n  var jsonContent = JSON.stringify(asCollection ? df.toCollection() : df.toDict());\n\n  if (path) {\n    saveFile(df._cleanSavePath(path), jsonContent);\n  }\n\n  return jsonContent;\n}\n\nfunction fromDSV(pathOrFile) {\n  var sep = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \";\";\n  var header = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  var parser = (0, _d3Dsv.dsvFormat)(sep);\n  return new Promise(function (resolve) {\n    var parseText = function parseText(fileContent) {\n      if (fileContent.includes(\"Error: ENOENT\")) return resolve(null);\n      var data = header ? parser.parse(fileContent) : parser.parseRows(fileContent);\n      return resolve(data);\n    };\n\n    return typeof pathOrFile === \"string\" ? (0, _d3Request.text)(addFileProtocol(pathOrFile), parseText) : loadTextFile(pathOrFile, parseText);\n  }).then(function (fileContent) {\n    if (fileContent === null) {\n      throw new _errors.FileNotFoundError(pathOrFile);\n    }\n\n    return fileContent;\n  });\n}\n\nfunction fromText(pathOrFile) {\n  var sep = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \";\";\n  var header = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  return fromDSV(pathOrFile, sep, header);\n}\n\nfunction fromCSV(pathOrFile) {\n  var header = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  return fromDSV(pathOrFile, \",\", header);\n}\n\nfunction fromTSV(pathOrFile) {\n  var header = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  return fromDSV(pathOrFile, \"\\t\", header);\n}\n\nfunction fromPSV(pathOrFile) {\n  var header = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  return fromDSV(pathOrFile, \"|\", header);\n}\n\nfunction fromJSON(pathOrFile) {\n  return new Promise(function (resolve) {\n    return typeof pathOrFile === \"string\" ? (0, _d3Request.json)(addFileProtocol(pathOrFile), resolve) : loadTextFile(pathOrFile, function (txt) {\n      return resolve(JSON.parse(txt));\n    });\n  }).then(function (fileContent) {\n    if (fileContent === null) {\n      throw new _errors.FileNotFoundError(pathOrFile);\n    }\n\n    return fileContent;\n  });\n}"]},"metadata":{},"sourceType":"script"}