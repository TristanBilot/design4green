{"ast":null,"code":"var _jsxFileName = \"/Users/tristanbilot/Desktop/Design4green/design4green/src/Components/SelectionPage.js\";\nimport React, { Component } from 'react';\nimport SelectionList from \"./SelectionList\";\nimport csvFile from '../INR.csv';\nimport DataFrame from \"dataframe-js\";\nimport './css/mainPage.css';\nimport './css/basketPage.scss';\nimport BasketPage from './BasketPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Papa = require('papaparse');\n\nclass SelectionPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dataframe: null,\n      columns: [],\n      categories: [],\n      isDisplayed: true,\n      basket: []\n    };\n    this.diplayModalBinded = this.diplayModal.bind(this);\n  }\n\n  async componentWillMount() {\n    await this.loadCsv();\n    await this.timeout(200);\n    await this.loadCategories();\n  }\n\n  async loadCsv() {\n    if (this.state.dataframe == null) {\n      var binded = this.loadCsvBinded.bind(this);\n      Papa.parse(csvFile, {\n        download: true,\n        complete: binded,\n        encoding: 'UTF-8'\n      });\n    }\n  }\n\n  formatBasketItem(row) {\n    let family = row.get(\"Famille d'origine\");\n    let recommandation = row.get(\"RECOMMANDATION\");\n    let criterion = row.get(\"CRITERES\");\n    let justifs = row.get(\"JUSTIFICATIONS\");\n    let cycle = row.get(\"Etape Cycle de Vie\");\n    let mandatory = row.get(\"incontournables\");\n    let useCase = row.get(\"Use Case\");\n    return {\n      family: family,\n      recommandation: recommandation,\n      criterion: criterion,\n      justifs: justifs,\n      cycle: cycle,\n      mandatory: mandatory,\n      useCase: useCase\n    };\n  }\n\n  loadCsvBinded(input) {\n    let csv = input.data;\n    let columns = csv[0];\n    let data = csv.slice(1);\n    let df = new DataFrame(data, columns); // df = df.chain(row => row.get(\"Etape Cycle de Vie\") != \"N/A\")\n\n    let mandatoryCriterions = df.filter(row => row.get(\"incontournables\") === \"INCONTOURNABLE\").select(\"CRITERES\", \"Famille d'origine\", \"RECOMMANDATION\", \"CRITERES\", \"JUSTIFICATIONS\", \"Etape Cycle de Vie\", \"incontournables\", \"Use Case\");\n    let basketItems = [];\n    mandatoryCriterions.map(row => basketItems.push(this.formatBasketItem(row)));\n    console.log(\"MANDATOR\");\n    console.log(basketItems);\n    this.setState({\n      columns: columns,\n      dataframe: df,\n      basket: mandatoryCriterions\n    });\n  }\n\n  translateCycleLifeToInteger(row) {\n    let cycleLife = row.get(\"Etape Cycle de Vie\");\n    let priorities = ['Acquisition', 'Conception', 'Réalisation', 'Déploiement', 'Administration', 'Utilisation', 'Maintenance', 'Fin de Vie', 'Revalorisation'];\n    row = row.set(\"Cycle life priority\", priorities.indexOf(cycleLife));\n    return row;\n  }\n\n  sortDataframe(df) {\n    // add a new colum with an integer representing the priority based on cycle life\n    df = df.withColumn(\"Cycle life priority\");\n    df = df.chain(this.translateCycleLifeToInteger); // sort first by priority and then by cycle life to make groups\n\n    df = df.sortBy(\"Priorité\");\n    df = df.sortBy(\"Cycle life priority\");\n    return df;\n  }\n\n  translatePriorityToInteger(row) {\n    let priority = row.get(\"Priorité\");\n    let priorities = {\n      \"Low\": 1,\n      \"Medium\": 2,\n      \"High\": 3,\n      \"\": 4\n    };\n    row = row.set(\"Priorité\", priorities[priority]);\n    return row;\n  }\n\n  translateCycleLifeToInteger(row) {\n    let cycleLife = row.get(\"Etape Cycle de Vie\");\n    let priorities = ['Acquisition', 'Conception', 'Réalisation', 'Déploiement', 'Administration', 'Utilisation', 'Maintenance', 'Fin de Vie', 'Revalorisation'];\n    row = row.set(\"Cycle life priority\", priorities.indexOf(cycleLife));\n    return row;\n  }\n\n  async loadCategories() {\n    let categories = this.state.dataframe.distinct(\"Famille d'origine\");\n    let categoryDivs = [];\n    var i = 0;\n    categories.chain(category => {\n      let cat = category.get(\"Famille d'origine\");\n\n      if (cat !== \"\") {\n        let recommandationsWithCategories = this.state.dataframe.filter(row => row.get(\"Famille d'origine\") === cat).select(\"Famille d'origine\", \"RECOMMANDATION\");\n        let distinctRecommandations = recommandationsWithCategories.distinct(\"RECOMMANDATION\");\n        categoryDivs.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(SelectionList, {\n            recommandations: distinctRecommandations,\n            category: cat,\n            basketMethod: this.diplayModalBinded\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this)\n        }, i++, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this));\n      }\n    });\n    this.setState({\n      categories: categoryDivs\n    });\n  }\n\n  timeout(delay) {\n    return new Promise(res => setTimeout(res, delay));\n  }\n\n  diplayModal() {\n    this.setState({\n      isDisplayed: !this.state.isDisplayed\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"two\",\n        class: \"link-button button\",\n        children: \"Basket\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this), this.state.categories, /*#__PURE__*/_jsxDEV(BasketPage, {\n        id: \"modal-container\",\n        basket: this.state.basket\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default SelectionPage;","map":{"version":3,"sources":["/Users/tristanbilot/Desktop/Design4green/design4green/src/Components/SelectionPage.js"],"names":["React","Component","SelectionList","csvFile","DataFrame","BasketPage","Papa","require","SelectionPage","constructor","props","state","dataframe","columns","categories","isDisplayed","basket","diplayModalBinded","diplayModal","bind","componentWillMount","loadCsv","timeout","loadCategories","binded","loadCsvBinded","parse","download","complete","encoding","formatBasketItem","row","family","get","recommandation","criterion","justifs","cycle","mandatory","useCase","input","csv","data","slice","df","mandatoryCriterions","filter","select","basketItems","map","push","console","log","setState","translateCycleLifeToInteger","cycleLife","priorities","set","indexOf","sortDataframe","withColumn","chain","sortBy","translatePriorityToInteger","priority","distinct","categoryDivs","i","category","cat","recommandationsWithCategories","distinctRecommandations","delay","Promise","res","setTimeout","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport SelectionList from \"./SelectionList\";\nimport csvFile from '../INR.csv'\nimport DataFrame from \"dataframe-js\";\nimport './css/mainPage.css'\nimport './css/basketPage.scss'\nimport BasketPage from './BasketPage';\n\nconst Papa = require('papaparse');\n\nclass SelectionPage extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state =  {\n            dataframe: null,\n            columns: [],\n            categories: [],\n            isDisplayed: true,\n            basket: [],\n        }\n        this.diplayModalBinded = this.diplayModal.bind(this)\n    }\n\n    async componentWillMount() {\n        await this.loadCsv()\n        await this.timeout(200)\n        await this.loadCategories()\n    }\n\n    async loadCsv() {\n        if (this.state.dataframe == null) {\n            var binded = this.loadCsvBinded.bind(this)\n            Papa.parse(csvFile, {\n              download: true,\n              complete: binded,\n              encoding: 'UTF-8'\n          });\n        }\n    }\n\n    formatBasketItem(row) {\n        let family = row.get(\"Famille d'origine\")\n        let recommandation = row.get(\"RECOMMANDATION\")\n        let criterion = row.get(\"CRITERES\")\n        let justifs = row.get(\"JUSTIFICATIONS\")\n        let cycle = row.get(\"Etape Cycle de Vie\")\n        let mandatory = row.get(\"incontournables\")\n        let useCase = row.get(\"Use Case\")\n\n        return {\n            family: family,\n            recommandation: recommandation,\n            criterion: criterion,\n            justifs: justifs,\n            cycle: cycle,\n            mandatory: mandatory,\n            useCase: useCase,\n        }\n    }\n    \n    loadCsvBinded(input) {\n        let csv = input.data\n        let columns = csv[0]\n        let data = csv.slice(1)\n        let df = new DataFrame(data, columns)\n    \n        // df = df.chain(row => row.get(\"Etape Cycle de Vie\") != \"N/A\")\n\n        let mandatoryCriterions = df.filter(row => \n            row.get(\"incontournables\") === \"INCONTOURNABLE\").select(\n                \"CRITERES\", \"Famille d'origine\", \"RECOMMANDATION\", \"CRITERES\", \"JUSTIFICATIONS\", \n                \"Etape Cycle de Vie\", \"incontournables\", \"Use Case\"\n            )\n        let basketItems = []\n        mandatoryCriterions.map(row => \n            basketItems.push(this.formatBasketItem(row))\n        )\n            \n        console.log(\"MANDATOR\")\n        console.log(basketItems)\n\n        this.setState({\n          columns: columns,\n          dataframe: df,\n          basket: mandatoryCriterions\n        })\n    }\n\n    translateCycleLifeToInteger(row) {\n        let cycleLife = row.get(\"Etape Cycle de Vie\")\n        let priorities = [ 'Acquisition', 'Conception', 'Réalisation', 'Déploiement', 'Administration', \n         'Utilisation', 'Maintenance', 'Fin de Vie', 'Revalorisation' ]\n    \n         row = row.set(\"Cycle life priority\", priorities.indexOf(cycleLife))\n         return row\n      }\n    sortDataframe(df) {\n        // add a new colum with an integer representing the priority based on cycle life\n        df = df.withColumn(\"Cycle life priority\")\n        df = df.chain(this.translateCycleLifeToInteger)\n    \n        // sort first by priority and then by cycle life to make groups\n        df = df.sortBy(\"Priorité\")\n        df = df.sortBy(\"Cycle life priority\")\n        return df\n    }\n    translatePriorityToInteger(row) {\n        let priority = row.get(\"Priorité\")\n        let priorities = {\n          \"Low\": 1,\n          \"Medium\": 2,\n          \"High\": 3,\n          \"\": 4,\n        }\n        row = row.set(\"Priorité\", priorities[priority])\n        return row\n    }\n    translateCycleLifeToInteger(row) {\n        let cycleLife = row.get(\"Etape Cycle de Vie\")\n        let priorities = [ 'Acquisition', 'Conception', 'Réalisation', 'Déploiement', 'Administration', \n         'Utilisation', 'Maintenance', 'Fin de Vie', 'Revalorisation' ]\n    \n         row = row.set(\"Cycle life priority\", priorities.indexOf(cycleLife))\n         return row\n      }\n\n    async loadCategories() {\n        let categories = this.state.dataframe.distinct(\"Famille d'origine\")\n        let categoryDivs = []\n        var i = 0\n        categories.chain(category => {\n            let cat = category.get(\"Famille d'origine\")\n            if (cat !== \"\") {\n                let recommandationsWithCategories = this.state.dataframe.filter(row => row.get(\"Famille d'origine\") === cat).select(\"Famille d'origine\", \"RECOMMANDATION\")\n                let distinctRecommandations = recommandationsWithCategories.distinct(\"RECOMMANDATION\")\n                \n                categoryDivs.push(\n                    <div key={i++}>\n                        <SelectionList recommandations={distinctRecommandations} category={cat} basketMethod={this.diplayModalBinded} />\n                    </div>\n                )\n            }\n        })\n\n        this.setState({\n            categories: categoryDivs\n        })\n    }\n\n    timeout(delay) {\n        return new Promise( res => setTimeout(res, delay) );\n    }\n\n    diplayModal() {\n        this.setState({\n            isDisplayed: !this.state.isDisplayed\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                {/* <div className={\"modal-background\" + (this.state.isDisplayed ? \"visible\": \"hidden\")}></div> */}\n                <button id=\"two\" class=\"link-button button\">Basket</button>\n                { this.state.categories }\n                <BasketPage id=\"modal-container\" basket={this.state.basket}></BasketPage>\n            </div>\n        );\n    }\n}\n\nexport default SelectionPage;\n"]},"metadata":{},"sourceType":"module"}